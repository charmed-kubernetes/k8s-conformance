  I1021 12:21:58.042199      19 e2e.go:117] Starting e2e run "7d7a92f8-d48a-4491-a070-3e4a900a55a3" on Ginkgo node 1
  Oct 21 12:21:58.059: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1697890917 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Oct 21 12:21:58.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:21:58.200: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Oct 21 12:21:58.232: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Oct 21 12:21:58.236: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Oct 21 12:21:58.236: INFO: e2e test version: v1.28.3
  Oct 21 12:21:58.237: INFO: kube-apiserver version: v1.28.3
  Oct 21 12:21:58.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:21:58.241: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.042 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/21/23 12:21:58.653
  Oct 21 12:21:58.654: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename hostport @ 10/21/23 12:21:58.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:21:58.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:21:58.671
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/21/23 12:21:58.678
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.83.52 on the node which pod1 resides and expect scheduled @ 10/21/23 12:22:02.698
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.83.52 but use UDP protocol on the node which pod2 resides @ 10/21/23 12:22:14.735
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/21/23 12:22:20.77
  Oct 21 12:22:20.770: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.83.52 http://127.0.0.1:54323/hostname] Namespace:hostport-5209 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:22:20.770: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:22:20.770: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:22:20.770: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5209/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.83.52+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.83.52, port: 54323 @ 10/21/23 12:22:20.845
  Oct 21 12:22:20.845: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.83.52:54323/hostname] Namespace:hostport-5209 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:22:20.845: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:22:20.846: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:22:20.846: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5209/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.83.52%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.83.52, port: 54323 UDP @ 10/21/23 12:22:20.921
  Oct 21 12:22:20.921: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.83.52 54323] Namespace:hostport-5209 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:22:20.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:22:20.922: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:22:20.922: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5209/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.83.52+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Oct 21 12:22:25.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5209" for this suite. @ 10/21/23 12:22:25.991
• [27.344 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 10/21/23 12:22:25.998
  Oct 21 12:22:25.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 12:22:25.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:26.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:26.02
  STEP: Setting up server cert @ 10/21/23 12:22:26.05
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 12:22:26.294
  STEP: Deploying the webhook pod @ 10/21/23 12:22:26.301
  STEP: Wait for the deployment to be ready @ 10/21/23 12:22:26.314
  Oct 21 12:22:26.323: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Oct 21 12:22:28.334: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 12, 22, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 22, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 22, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 22, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/21/23 12:22:30.342
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 12:22:30.353
  Oct 21 12:22:31.353: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/21/23 12:22:31.36
  STEP: create a namespace for the webhook @ 10/21/23 12:22:31.375
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/21/23 12:22:31.393
  Oct 21 12:22:31.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2182" for this suite. @ 10/21/23 12:22:31.493
  STEP: Destroying namespace "webhook-markers-7069" for this suite. @ 10/21/23 12:22:31.499
  STEP: Destroying namespace "fail-closed-namespace-6023" for this suite. @ 10/21/23 12:22:31.509
• [5.517 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 10/21/23 12:22:31.515
  Oct 21 12:22:31.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 12:22:31.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:31.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:31.534
  STEP: Counting existing ResourceQuota @ 10/21/23 12:22:31.537
  STEP: Creating a ResourceQuota @ 10/21/23 12:22:36.543
  STEP: Ensuring resource quota status is calculated @ 10/21/23 12:22:36.549
  STEP: Creating a ReplicaSet @ 10/21/23 12:22:38.553
  STEP: Ensuring resource quota status captures replicaset creation @ 10/21/23 12:22:38.564
  STEP: Deleting a ReplicaSet @ 10/21/23 12:22:40.569
  STEP: Ensuring resource quota status released usage @ 10/21/23 12:22:40.574
  Oct 21 12:22:42.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8133" for this suite. @ 10/21/23 12:22:42.582
• [11.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 10/21/23 12:22:42.589
  Oct 21 12:22:42.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svcaccounts @ 10/21/23 12:22:42.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:42.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:42.614
  STEP: Creating ServiceAccount "e2e-sa-qlr4x"  @ 10/21/23 12:22:42.617
  Oct 21 12:22:42.620: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-qlr4x"  @ 10/21/23 12:22:42.62
  Oct 21 12:22:42.630: INFO: AutomountServiceAccountToken: true
  Oct 21 12:22:42.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4179" for this suite. @ 10/21/23 12:22:42.633
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/21/23 12:22:42.641
  Oct 21 12:22:42.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 12:22:42.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:42.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:42.659
  STEP: creating the pod @ 10/21/23 12:22:42.662
  STEP: submitting the pod to kubernetes @ 10/21/23 12:22:42.662
  STEP: verifying QOS class is set on the pod @ 10/21/23 12:22:42.67
  Oct 21 12:22:42.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7221" for this suite. @ 10/21/23 12:22:42.679
• [0.045 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/21/23 12:22:42.686
  Oct 21 12:22:42.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/21/23 12:22:42.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:42.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:42.707
  Oct 21 12:22:44.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 10/21/23 12:22:44.744
  STEP: Cleaning up the configmap @ 10/21/23 12:22:44.751
  STEP: Cleaning up the pod @ 10/21/23 12:22:44.756
  STEP: Destroying namespace "emptydir-wrapper-5612" for this suite. @ 10/21/23 12:22:44.774
• [2.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 10/21/23 12:22:44.781
  Oct 21 12:22:44.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 12:22:44.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:44.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:44.8
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/21/23 12:22:44.803
  STEP: Saw pod success @ 10/21/23 12:22:46.818
  Oct 21 12:22:46.820: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-0dea19e1-bbc9-44b1-b4bd-1e8913fc7a5f container test-container: <nil>
  STEP: delete the pod @ 10/21/23 12:22:46.837
  Oct 21 12:22:46.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7507" for this suite. @ 10/21/23 12:22:46.856
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 10/21/23 12:22:46.862
  Oct 21 12:22:46.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 12:22:46.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:46.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:46.882
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5233 @ 10/21/23 12:22:46.888
  STEP: changing the ExternalName service to type=ClusterIP @ 10/21/23 12:22:46.892
  STEP: creating replication controller externalname-service in namespace services-5233 @ 10/21/23 12:22:46.91
  I1021 12:22:46.916998      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5233, replica count: 2
  I1021 12:22:49.967973      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 12:22:49.968: INFO: Creating new exec pod
  Oct 21 12:22:52.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-5233 exec execpodxnz7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 21 12:22:53.105: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 21 12:22:53.105: INFO: stdout: ""
  Oct 21 12:22:54.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-5233 exec execpodxnz7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 21 12:22:54.223: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 21 12:22:54.223: INFO: stdout: "externalname-service-xmhkn"
  Oct 21 12:22:54.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-5233 exec execpodxnz7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.85 80'
  Oct 21 12:22:54.344: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.85 80\nConnection to 10.152.183.85 80 port [tcp/http] succeeded!\n"
  Oct 21 12:22:54.344: INFO: stdout: ""
  Oct 21 12:22:55.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-5233 exec execpodxnz7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.85 80'
  Oct 21 12:22:55.464: INFO: stderr: "+ nc -v -t -w 2 10.152.183.85 80\n+ echo hostName\nConnection to 10.152.183.85 80 port [tcp/http] succeeded!\n"
  Oct 21 12:22:55.464: INFO: stdout: ""
  Oct 21 12:22:56.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-5233 exec execpodxnz7t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.85 80'
  Oct 21 12:22:56.469: INFO: stderr: "+ nc -v -t -w 2 10.152.183.85 80\n+ echo hostName\nConnection to 10.152.183.85 80 port [tcp/http] succeeded!\n"
  Oct 21 12:22:56.469: INFO: stdout: "externalname-service-xmhkn"
  Oct 21 12:22:56.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 12:22:56.473: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-5233" for this suite. @ 10/21/23 12:22:56.501
• [9.644 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 10/21/23 12:22:56.507
  Oct 21 12:22:56.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename disruption @ 10/21/23 12:22:56.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:56.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:56.525
  STEP: Creating a kubernetes client @ 10/21/23 12:22:56.529
  Oct 21 12:22:56.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename disruption-2 @ 10/21/23 12:22:56.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:22:56.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:22:56.546
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:22:56.554
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:22:58.57
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:23:00.582
  STEP: listing a collection of PDBs across all namespaces @ 10/21/23 12:23:00.588
  STEP: listing a collection of PDBs in namespace disruption-7960 @ 10/21/23 12:23:00.592
  STEP: deleting a collection of PDBs @ 10/21/23 12:23:00.594
  STEP: Waiting for the PDB collection to be deleted @ 10/21/23 12:23:00.605
  Oct 21 12:23:00.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 12:23:00.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-275" for this suite. @ 10/21/23 12:23:00.614
  STEP: Destroying namespace "disruption-7960" for this suite. @ 10/21/23 12:23:00.62
• [4.120 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 10/21/23 12:23:00.627
  Oct 21 12:23:00.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 12:23:00.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:23:00.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:23:00.643
  STEP: Creating pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482 @ 10/21/23 12:23:00.647
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 12:23:02.666
  Oct 21 12:23:02.669: INFO: Initial restart count of pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 is 0
  Oct 21 12:23:02.672: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:04.676: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:06.680: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:08.684: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:10.688: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:12.693: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:14.698: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:16.703: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:18.707: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:20.711: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:22.716: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:24.721: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:26.725: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:28.730: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:30.733: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:32.738: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:34.742: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:36.748: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:38.753: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:40.756: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:42.761: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:44.765: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:46.770: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:48.776: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:50.779: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:52.784: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:54.789: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:56.792: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:23:58.797: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:00.802: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:02.807: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:04.811: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:06.815: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:08.819: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:10.823: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:12.827: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:14.832: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:16.837: INFO: Get pod test-grpc-687d899a-3280-471e-ac93-4c014384c151 in namespace container-probe-2482
  Oct 21 12:24:16.837: INFO: Restart count of pod container-probe-2482/test-grpc-687d899a-3280-471e-ac93-4c014384c151 is now 1 (1m14.167868435s elapsed)
  Oct 21 12:24:16.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 12:24:16.841
  STEP: Destroying namespace "container-probe-2482" for this suite. @ 10/21/23 12:24:16.853
• [76.233 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 10/21/23 12:24:16.86
  Oct 21 12:24:16.860: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename runtimeclass @ 10/21/23 12:24:16.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:24:16.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:24:16.879
  Oct 21 12:24:16.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4089" for this suite. @ 10/21/23 12:24:16.91
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 10/21/23 12:24:16.919
  Oct 21 12:24:16.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename runtimeclass @ 10/21/23 12:24:16.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:24:16.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:24:16.936
  STEP: Deleting RuntimeClass runtimeclass-2304-delete-me @ 10/21/23 12:24:16.944
  STEP: Waiting for the RuntimeClass to disappear @ 10/21/23 12:24:16.949
  Oct 21 12:24:16.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2304" for this suite. @ 10/21/23 12:24:16.961
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/21/23 12:24:16.967
  Oct 21 12:24:16.967: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename containers @ 10/21/23 12:24:16.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:24:16.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:24:16.985
  STEP: Creating a pod to test override command @ 10/21/23 12:24:16.989
  STEP: Saw pod success @ 10/21/23 12:24:19.008
  Oct 21 12:24:19.012: INFO: Trying to get logs from node ip-172-31-41-152 pod client-containers-c2a5c209-8b7f-4288-bd28-a7bd30f35eff container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:24:19.025
  Oct 21 12:24:19.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7149" for this suite. @ 10/21/23 12:24:19.042
• [2.080 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 10/21/23 12:24:19.047
  Oct 21 12:24:19.047: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 12:24:19.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:24:19.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:24:19.067
  STEP: Creating configMap with name configmap-test-volume-map-d754cfcc-2a8d-453a-841c-d1a9493220c7 @ 10/21/23 12:24:19.07
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:24:19.074
  STEP: Saw pod success @ 10/21/23 12:24:23.099
  Oct 21 12:24:23.101: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-ed3e0463-3509-4b9e-8912-03d96b5e3014 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:24:23.115
  Oct 21 12:24:23.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6917" for this suite. @ 10/21/23 12:24:23.133
• [4.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 10/21/23 12:24:23.139
  Oct 21 12:24:23.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename events @ 10/21/23 12:24:23.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:24:23.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:24:23.159
  STEP: creating a test event @ 10/21/23 12:24:23.162
  STEP: listing all events in all namespaces @ 10/21/23 12:24:23.166
  STEP: patching the test event @ 10/21/23 12:24:23.172
  STEP: fetching the test event @ 10/21/23 12:24:23.179
  STEP: updating the test event @ 10/21/23 12:24:23.181
  STEP: getting the test event @ 10/21/23 12:24:23.189
  STEP: deleting the test event @ 10/21/23 12:24:23.192
  STEP: listing all events in all namespaces @ 10/21/23 12:24:23.198
  Oct 21 12:24:23.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2103" for this suite. @ 10/21/23 12:24:23.208
• [0.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 10/21/23 12:24:23.215
  Oct 21 12:24:23.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 12:24:23.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:24:23.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:24:23.235
  STEP: creating the pod @ 10/21/23 12:24:23.238
  STEP: waiting for pod running @ 10/21/23 12:24:23.246
  STEP: creating a file in subpath @ 10/21/23 12:24:25.256
  Oct 21 12:24:25.259: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2838 PodName:var-expansion-2342fe66-eb52-4580-997a-68a7499f2be3 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:24:25.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:24:25.259: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:24:25.259: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2838/pods/var-expansion-2342fe66-eb52-4580-997a-68a7499f2be3/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/21/23 12:24:25.331
  Oct 21 12:24:25.334: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2838 PodName:var-expansion-2342fe66-eb52-4580-997a-68a7499f2be3 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:24:25.334: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:24:25.335: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:24:25.335: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2838/pods/var-expansion-2342fe66-eb52-4580-997a-68a7499f2be3/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/21/23 12:24:25.398
  Oct 21 12:24:25.908: INFO: Successfully updated pod "var-expansion-2342fe66-eb52-4580-997a-68a7499f2be3"
  STEP: waiting for annotated pod running @ 10/21/23 12:24:25.909
  STEP: deleting the pod gracefully @ 10/21/23 12:24:25.912
  Oct 21 12:24:25.912: INFO: Deleting pod "var-expansion-2342fe66-eb52-4580-997a-68a7499f2be3" in namespace "var-expansion-2838"
  Oct 21 12:24:25.919: INFO: Wait up to 5m0s for pod "var-expansion-2342fe66-eb52-4580-997a-68a7499f2be3" to be fully deleted
  Oct 21 12:24:57.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2838" for this suite. @ 10/21/23 12:24:57.997
• [34.790 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 10/21/23 12:24:58.005
  Oct 21 12:24:58.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 12:24:58.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:24:58.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:24:58.038
  STEP: Creating a pod to test downward api env vars @ 10/21/23 12:24:58.042
  STEP: Saw pod success @ 10/21/23 12:25:02.068
  Oct 21 12:25:02.072: INFO: Trying to get logs from node ip-172-31-83-52 pod downward-api-aaf415cd-da0a-411d-b6de-7f9eade843a3 container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 12:25:02.077
  Oct 21 12:25:02.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3815" for this suite. @ 10/21/23 12:25:02.1
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 10/21/23 12:25:02.107
  Oct 21 12:25:02.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 12:25:02.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:02.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:02.128
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/21/23 12:25:02.131
  STEP: Saw pod success @ 10/21/23 12:25:06.152
  Oct 21 12:25:06.155: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-28c49603-5161-4a24-a91e-8ef181f3022f container test-container: <nil>
  STEP: delete the pod @ 10/21/23 12:25:06.161
  Oct 21 12:25:06.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7144" for this suite. @ 10/21/23 12:25:06.178
• [4.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 10/21/23 12:25:06.185
  Oct 21 12:25:06.185: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/21/23 12:25:06.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:06.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:06.203
  STEP: create the container to handle the HTTPGet hook request. @ 10/21/23 12:25:06.209
  STEP: create the pod with lifecycle hook @ 10/21/23 12:25:08.231
  STEP: check poststart hook @ 10/21/23 12:25:10.246
  STEP: delete the pod with lifecycle hook @ 10/21/23 12:25:10.253
  Oct 21 12:25:14.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-449" for this suite. @ 10/21/23 12:25:14.274
• [8.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 10/21/23 12:25:14.284
  Oct 21 12:25:14.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 12:25:14.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:14.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:14.302
  STEP: creating a Service @ 10/21/23 12:25:14.308
  STEP: watching for the Service to be added @ 10/21/23 12:25:14.319
  Oct 21 12:25:14.321: INFO: Found Service test-service-5xznr in namespace services-1189 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Oct 21 12:25:14.321: INFO: Service test-service-5xznr created
  STEP: Getting /status @ 10/21/23 12:25:14.321
  Oct 21 12:25:14.325: INFO: Service test-service-5xznr has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/21/23 12:25:14.325
  STEP: watching for the Service to be patched @ 10/21/23 12:25:14.331
  Oct 21 12:25:14.332: INFO: observed Service test-service-5xznr in namespace services-1189 with annotations: map[] & LoadBalancer: {[]}
  Oct 21 12:25:14.332: INFO: Found Service test-service-5xznr in namespace services-1189 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Oct 21 12:25:14.332: INFO: Service test-service-5xznr has service status patched
  STEP: updating the ServiceStatus @ 10/21/23 12:25:14.332
  Oct 21 12:25:14.345: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/21/23 12:25:14.345
  Oct 21 12:25:14.348: INFO: Observed Service test-service-5xznr in namespace services-1189 with annotations: map[] & Conditions: {[]}
  Oct 21 12:25:14.348: INFO: Observed event: &Service{ObjectMeta:{test-service-5xznr  services-1189  66cda607-bcad-4aeb-a9d8-c5d0aab5168c 3969 0 2023-10-21 12:25:14 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-10-21 12:25:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-10-21 12:25:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.53,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.53],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Oct 21 12:25:14.348: INFO: Found Service test-service-5xznr in namespace services-1189 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 21 12:25:14.348: INFO: Service test-service-5xznr has service status updated
  STEP: patching the service @ 10/21/23 12:25:14.348
  STEP: watching for the Service to be patched @ 10/21/23 12:25:14.357
  Oct 21 12:25:14.359: INFO: observed Service test-service-5xznr in namespace services-1189 with labels: map[test-service-static:true]
  Oct 21 12:25:14.359: INFO: observed Service test-service-5xznr in namespace services-1189 with labels: map[test-service-static:true]
  Oct 21 12:25:14.359: INFO: observed Service test-service-5xznr in namespace services-1189 with labels: map[test-service-static:true]
  Oct 21 12:25:14.359: INFO: Found Service test-service-5xznr in namespace services-1189 with labels: map[test-service:patched test-service-static:true]
  Oct 21 12:25:14.359: INFO: Service test-service-5xznr patched
  STEP: deleting the service @ 10/21/23 12:25:14.359
  STEP: watching for the Service to be deleted @ 10/21/23 12:25:14.37
  Oct 21 12:25:14.372: INFO: Observed event: ADDED
  Oct 21 12:25:14.372: INFO: Observed event: MODIFIED
  Oct 21 12:25:14.372: INFO: Observed event: MODIFIED
  Oct 21 12:25:14.372: INFO: Observed event: MODIFIED
  Oct 21 12:25:14.372: INFO: Found Service test-service-5xznr in namespace services-1189 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Oct 21 12:25:14.372: INFO: Service test-service-5xznr deleted
  Oct 21 12:25:14.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1189" for this suite. @ 10/21/23 12:25:14.375
• [0.097 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 10/21/23 12:25:14.381
  Oct 21 12:25:14.381: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/21/23 12:25:14.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:14.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:14.398
  STEP: create the container to handle the HTTPGet hook request. @ 10/21/23 12:25:14.407
  STEP: create the pod with lifecycle hook @ 10/21/23 12:25:16.429
  STEP: check poststart hook @ 10/21/23 12:25:18.452
  STEP: delete the pod with lifecycle hook @ 10/21/23 12:25:18.458
  Oct 21 12:25:20.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8424" for this suite. @ 10/21/23 12:25:20.476
• [6.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 10/21/23 12:25:20.484
  Oct 21 12:25:20.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:25:20.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:20.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:20.502
  STEP: creating Agnhost RC @ 10/21/23 12:25:20.505
  Oct 21 12:25:20.505: INFO: namespace kubectl-7898
  Oct 21 12:25:20.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7898 create -f -'
  Oct 21 12:25:20.664: INFO: stderr: ""
  Oct 21 12:25:20.664: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/21/23 12:25:20.664
  Oct 21 12:25:21.669: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 12:25:21.669: INFO: Found 0 / 1
  Oct 21 12:25:22.668: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 12:25:22.668: INFO: Found 1 / 1
  Oct 21 12:25:22.668: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct 21 12:25:22.672: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 12:25:22.672: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 21 12:25:22.672: INFO: wait on agnhost-primary startup in kubectl-7898 
  Oct 21 12:25:22.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7898 logs agnhost-primary-vfxgm agnhost-primary'
  Oct 21 12:25:22.731: INFO: stderr: ""
  Oct 21 12:25:22.731: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 10/21/23 12:25:22.731
  Oct 21 12:25:22.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7898 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Oct 21 12:25:22.792: INFO: stderr: ""
  Oct 21 12:25:22.792: INFO: stdout: "service/rm2 exposed\n"
  Oct 21 12:25:22.799: INFO: Service rm2 in namespace kubectl-7898 found.
  STEP: exposing service @ 10/21/23 12:25:24.805
  Oct 21 12:25:24.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7898 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Oct 21 12:25:24.863: INFO: stderr: ""
  Oct 21 12:25:24.863: INFO: stdout: "service/rm3 exposed\n"
  Oct 21 12:25:24.869: INFO: Service rm3 in namespace kubectl-7898 found.
  Oct 21 12:25:26.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7898" for this suite. @ 10/21/23 12:25:26.879
• [6.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 10/21/23 12:25:26.886
  Oct 21 12:25:26.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename gc @ 10/21/23 12:25:26.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:26.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:26.903
  STEP: create the rc1 @ 10/21/23 12:25:26.91
  STEP: create the rc2 @ 10/21/23 12:25:26.916
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/21/23 12:25:32.934
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/21/23 12:25:33.331
  STEP: wait for the rc to be deleted @ 10/21/23 12:25:33.338
  Oct 21 12:25:38.348: INFO: 69 pods remaining
  Oct 21 12:25:38.348: INFO: 69 pods has nil DeletionTimestamp
  Oct 21 12:25:38.348: INFO: 
  STEP: Gathering metrics @ 10/21/23 12:25:43.349
  W1021 12:25:43.354985      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 21 12:25:43.355: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 21 12:25:43.356: INFO: Deleting pod "simpletest-rc-to-be-deleted-25ktt" in namespace "gc-8983"
  Oct 21 12:25:43.366: INFO: Deleting pod "simpletest-rc-to-be-deleted-2m5xt" in namespace "gc-8983"
  Oct 21 12:25:43.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-2w4c2" in namespace "gc-8983"
  Oct 21 12:25:43.397: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xjx8" in namespace "gc-8983"
  Oct 21 12:25:43.407: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xk2n" in namespace "gc-8983"
  Oct 21 12:25:43.418: INFO: Deleting pod "simpletest-rc-to-be-deleted-4cpz5" in namespace "gc-8983"
  Oct 21 12:25:43.432: INFO: Deleting pod "simpletest-rc-to-be-deleted-4t5vh" in namespace "gc-8983"
  Oct 21 12:25:43.443: INFO: Deleting pod "simpletest-rc-to-be-deleted-52jd6" in namespace "gc-8983"
  Oct 21 12:25:43.458: INFO: Deleting pod "simpletest-rc-to-be-deleted-5c72t" in namespace "gc-8983"
  Oct 21 12:25:43.474: INFO: Deleting pod "simpletest-rc-to-be-deleted-5gfwj" in namespace "gc-8983"
  Oct 21 12:25:43.486: INFO: Deleting pod "simpletest-rc-to-be-deleted-5qlhb" in namespace "gc-8983"
  Oct 21 12:25:43.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-62wk7" in namespace "gc-8983"
  Oct 21 12:25:43.510: INFO: Deleting pod "simpletest-rc-to-be-deleted-649fc" in namespace "gc-8983"
  Oct 21 12:25:43.526: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kz59" in namespace "gc-8983"
  Oct 21 12:25:43.541: INFO: Deleting pod "simpletest-rc-to-be-deleted-7s9bt" in namespace "gc-8983"
  Oct 21 12:25:43.561: INFO: Deleting pod "simpletest-rc-to-be-deleted-82mvl" in namespace "gc-8983"
  Oct 21 12:25:43.577: INFO: Deleting pod "simpletest-rc-to-be-deleted-87ngl" in namespace "gc-8983"
  Oct 21 12:25:43.595: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dvlv" in namespace "gc-8983"
  Oct 21 12:25:43.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jq6s" in namespace "gc-8983"
  Oct 21 12:25:43.636: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t5xq" in namespace "gc-8983"
  Oct 21 12:25:43.652: INFO: Deleting pod "simpletest-rc-to-be-deleted-8tc2z" in namespace "gc-8983"
  Oct 21 12:25:43.673: INFO: Deleting pod "simpletest-rc-to-be-deleted-8w84f" in namespace "gc-8983"
  Oct 21 12:25:43.697: INFO: Deleting pod "simpletest-rc-to-be-deleted-9544n" in namespace "gc-8983"
  Oct 21 12:25:43.713: INFO: Deleting pod "simpletest-rc-to-be-deleted-962nb" in namespace "gc-8983"
  Oct 21 12:25:43.733: INFO: Deleting pod "simpletest-rc-to-be-deleted-9c52d" in namespace "gc-8983"
  Oct 21 12:25:43.746: INFO: Deleting pod "simpletest-rc-to-be-deleted-9c6jj" in namespace "gc-8983"
  Oct 21 12:25:43.765: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wg75" in namespace "gc-8983"
  Oct 21 12:25:43.786: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xwsw" in namespace "gc-8983"
  Oct 21 12:25:43.800: INFO: Deleting pod "simpletest-rc-to-be-deleted-b4pwp" in namespace "gc-8983"
  Oct 21 12:25:43.819: INFO: Deleting pod "simpletest-rc-to-be-deleted-bcszn" in namespace "gc-8983"
  Oct 21 12:25:43.861: INFO: Deleting pod "simpletest-rc-to-be-deleted-bd68j" in namespace "gc-8983"
  Oct 21 12:25:43.884: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdm9m" in namespace "gc-8983"
  Oct 21 12:25:43.907: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvfkz" in namespace "gc-8983"
  Oct 21 12:25:43.931: INFO: Deleting pod "simpletest-rc-to-be-deleted-bz6m5" in namespace "gc-8983"
  Oct 21 12:25:43.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgtc2" in namespace "gc-8983"
  Oct 21 12:25:43.963: INFO: Deleting pod "simpletest-rc-to-be-deleted-cq8r9" in namespace "gc-8983"
  Oct 21 12:25:43.983: INFO: Deleting pod "simpletest-rc-to-be-deleted-d4lw7" in namespace "gc-8983"
  Oct 21 12:25:44.004: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgn8m" in namespace "gc-8983"
  Oct 21 12:25:44.023: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnfbz" in namespace "gc-8983"
  Oct 21 12:25:44.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-f9lbj" in namespace "gc-8983"
  Oct 21 12:25:44.047: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmgtr" in namespace "gc-8983"
  Oct 21 12:25:44.063: INFO: Deleting pod "simpletest-rc-to-be-deleted-g6n88" in namespace "gc-8983"
  Oct 21 12:25:44.078: INFO: Deleting pod "simpletest-rc-to-be-deleted-gmskv" in namespace "gc-8983"
  Oct 21 12:25:44.095: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrk59" in namespace "gc-8983"
  Oct 21 12:25:44.112: INFO: Deleting pod "simpletest-rc-to-be-deleted-j76lk" in namespace "gc-8983"
  Oct 21 12:25:44.133: INFO: Deleting pod "simpletest-rc-to-be-deleted-jzdrc" in namespace "gc-8983"
  Oct 21 12:25:44.145: INFO: Deleting pod "simpletest-rc-to-be-deleted-kpnkk" in namespace "gc-8983"
  Oct 21 12:25:44.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-kq4mz" in namespace "gc-8983"
  Oct 21 12:25:44.189: INFO: Deleting pod "simpletest-rc-to-be-deleted-kv5rk" in namespace "gc-8983"
  Oct 21 12:25:44.210: INFO: Deleting pod "simpletest-rc-to-be-deleted-l5xll" in namespace "gc-8983"
  Oct 21 12:25:44.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8983" for this suite. @ 10/21/23 12:25:44.235
• [17.357 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 10/21/23 12:25:44.247
  Oct 21 12:25:44.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename gc @ 10/21/23 12:25:44.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:44.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:44.281
  STEP: create the deployment @ 10/21/23 12:25:44.284
  W1021 12:25:44.291099      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/21/23 12:25:44.291
  STEP: delete the deployment @ 10/21/23 12:25:44.806
  STEP: wait for all rs to be garbage collected @ 10/21/23 12:25:44.819
  STEP: expected 0 pods, got 2 pods @ 10/21/23 12:25:44.84
  STEP: Gathering metrics @ 10/21/23 12:25:45.356
  W1021 12:25:45.365420      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 21 12:25:45.365: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 21 12:25:45.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2004" for this suite. @ 10/21/23 12:25:45.374
• [1.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 10/21/23 12:25:45.381
  Oct 21 12:25:45.381: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 12:25:45.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:45.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:45.404
  STEP: Creating a pod to test substitution in container's args @ 10/21/23 12:25:45.408
  STEP: Saw pod success @ 10/21/23 12:25:49.469
  Oct 21 12:25:49.473: INFO: Trying to get logs from node ip-172-31-83-52 pod var-expansion-56aaff51-54bd-42ea-a4b8-63293bae26e2 container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 12:25:49.48
  Oct 21 12:25:49.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7921" for this suite. @ 10/21/23 12:25:49.508
• [4.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/21/23 12:25:49.516
  Oct 21 12:25:49.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubelet-test @ 10/21/23 12:25:49.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:49.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:49.547
  Oct 21 12:25:49.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8900" for this suite. @ 10/21/23 12:25:49.597
• [0.090 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/21/23 12:25:49.607
  Oct 21 12:25:49.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename subpath @ 10/21/23 12:25:49.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:25:49.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:25:49.637
  STEP: Setting up data @ 10/21/23 12:25:49.641
  STEP: Creating pod pod-subpath-test-configmap-mz8j @ 10/21/23 12:25:49.654
  STEP: Creating a pod to test atomic-volume-subpath @ 10/21/23 12:25:49.654
  STEP: Saw pod success @ 10/21/23 12:26:13.722
  Oct 21 12:26:13.725: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-subpath-test-configmap-mz8j container test-container-subpath-configmap-mz8j: <nil>
  STEP: delete the pod @ 10/21/23 12:26:13.731
  STEP: Deleting pod pod-subpath-test-configmap-mz8j @ 10/21/23 12:26:13.747
  Oct 21 12:26:13.747: INFO: Deleting pod "pod-subpath-test-configmap-mz8j" in namespace "subpath-7172"
  Oct 21 12:26:13.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7172" for this suite. @ 10/21/23 12:26:13.753
• [24.153 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 10/21/23 12:26:13.76
  Oct 21 12:26:13.761: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 12:26:13.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:26:13.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:26:13.784
  STEP: Creating configMap with name configmap-test-volume-map-bc10da4a-058c-45fa-afe8-770772d0148d @ 10/21/23 12:26:13.787
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:26:13.791
  STEP: Saw pod success @ 10/21/23 12:26:17.811
  Oct 21 12:26:17.814: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-3f7af5eb-3c0b-4d21-80ea-59305e9f19b7 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:26:17.82
  Oct 21 12:26:17.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4913" for this suite. @ 10/21/23 12:26:17.839
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/21/23 12:26:17.847
  Oct 21 12:26:17.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/21/23 12:26:17.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:26:17.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:26:17.865
  STEP: Setting up the test @ 10/21/23 12:26:17.872
  STEP: Creating hostNetwork=false pod @ 10/21/23 12:26:17.872
  STEP: Creating hostNetwork=true pod @ 10/21/23 12:26:19.892
  STEP: Running the test @ 10/21/23 12:26:21.915
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/21/23 12:26:21.915
  Oct 21 12:26:21.915: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:21.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:21.916: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:21.916: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 21 12:26:21.987: INFO: Exec stderr: ""
  Oct 21 12:26:21.987: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:21.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:21.987: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:21.987: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 21 12:26:22.058: INFO: Exec stderr: ""
  Oct 21 12:26:22.058: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.059: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.059: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 21 12:26:22.131: INFO: Exec stderr: ""
  Oct 21 12:26:22.131: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.131: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.132: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 21 12:26:22.199: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/21/23 12:26:22.199
  Oct 21 12:26:22.199: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.199: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.199: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct 21 12:26:22.266: INFO: Exec stderr: ""
  Oct 21 12:26:22.267: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.267: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.267: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct 21 12:26:22.338: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/21/23 12:26:22.338
  Oct 21 12:26:22.338: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.338: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.339: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.339: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 21 12:26:22.415: INFO: Exec stderr: ""
  Oct 21 12:26:22.415: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.415: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.416: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.416: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 21 12:26:22.486: INFO: Exec stderr: ""
  Oct 21 12:26:22.487: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.487: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.487: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 21 12:26:22.563: INFO: Exec stderr: ""
  Oct 21 12:26:22.563: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5203 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:26:22.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:26:22.564: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:26:22.564: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5203/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 21 12:26:22.623: INFO: Exec stderr: ""
  Oct 21 12:26:22.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5203" for this suite. @ 10/21/23 12:26:22.627
• [4.787 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 10/21/23 12:26:22.634
  Oct 21 12:26:22.634: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 12:26:22.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:26:22.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:26:22.651
  Oct 21 12:26:22.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/21/23 12:26:23.971
  Oct 21 12:26:23.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-2305 --namespace=crd-publish-openapi-2305 create -f -'
  Oct 21 12:26:24.332: INFO: stderr: ""
  Oct 21 12:26:24.332: INFO: stdout: "e2e-test-crd-publish-openapi-3188-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct 21 12:26:24.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-2305 --namespace=crd-publish-openapi-2305 delete e2e-test-crd-publish-openapi-3188-crds test-cr'
  Oct 21 12:26:24.384: INFO: stderr: ""
  Oct 21 12:26:24.384: INFO: stdout: "e2e-test-crd-publish-openapi-3188-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Oct 21 12:26:24.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-2305 --namespace=crd-publish-openapi-2305 apply -f -'
  Oct 21 12:26:24.643: INFO: stderr: ""
  Oct 21 12:26:24.643: INFO: stdout: "e2e-test-crd-publish-openapi-3188-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct 21 12:26:24.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-2305 --namespace=crd-publish-openapi-2305 delete e2e-test-crd-publish-openapi-3188-crds test-cr'
  Oct 21 12:26:24.697: INFO: stderr: ""
  Oct 21 12:26:24.697: INFO: stdout: "e2e-test-crd-publish-openapi-3188-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/21/23 12:26:24.697
  Oct 21 12:26:24.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-2305 explain e2e-test-crd-publish-openapi-3188-crds'
  Oct 21 12:26:24.793: INFO: stderr: ""
  Oct 21 12:26:24.793: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3188-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Oct 21 12:26:26.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2305" for this suite. @ 10/21/23 12:26:26.033
• [3.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/21/23 12:26:26.041
  Oct 21 12:26:26.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename watch @ 10/21/23 12:26:26.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:26:26.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:26:26.061
  STEP: creating a watch on configmaps with label A @ 10/21/23 12:26:26.064
  STEP: creating a watch on configmaps with label B @ 10/21/23 12:26:26.066
  STEP: creating a watch on configmaps with label A or B @ 10/21/23 12:26:26.067
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/21/23 12:26:26.068
  Oct 21 12:26:26.073: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7266 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:26:26.073: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7266 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/21/23 12:26:26.073
  Oct 21 12:26:26.084: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7267 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:26:26.085: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7267 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/21/23 12:26:26.085
  Oct 21 12:26:26.094: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7268 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:26:26.094: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7268 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/21/23 12:26:26.094
  Oct 21 12:26:26.099: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7269 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:26:26.100: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6657  548d8854-9fcb-49c2-871d-c99d936f9944 7269 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/21/23 12:26:26.1
  Oct 21 12:26:26.104: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6657  ec63c51c-6c76-4b68-88c0-8a451981018c 7270 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:26:26.105: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6657  ec63c51c-6c76-4b68-88c0-8a451981018c 7270 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/21/23 12:26:36.106
  Oct 21 12:26:36.113: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6657  ec63c51c-6c76-4b68-88c0-8a451981018c 7332 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:26:36.113: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6657  ec63c51c-6c76-4b68-88c0-8a451981018c 7332 0 2023-10-21 12:26:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-21 12:26:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:26:46.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6657" for this suite. @ 10/21/23 12:26:46.12
• [20.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 10/21/23 12:26:46.128
  Oct 21 12:26:46.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 12:26:46.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:26:46.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:26:46.147
  STEP: creating service endpoint-test2 in namespace services-9427 @ 10/21/23 12:26:46.15
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9427 to expose endpoints map[] @ 10/21/23 12:26:46.157
  Oct 21 12:26:46.168: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Oct 21 12:26:47.176: INFO: successfully validated that service endpoint-test2 in namespace services-9427 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9427 @ 10/21/23 12:26:47.176
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9427 to expose endpoints map[pod1:[80]] @ 10/21/23 12:26:49.198
  Oct 21 12:26:49.208: INFO: successfully validated that service endpoint-test2 in namespace services-9427 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/21/23 12:26:49.208
  Oct 21 12:26:49.209: INFO: Creating new exec pod
  Oct 21 12:26:52.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-9427 exec execpod8rc7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 21 12:26:52.341: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 21 12:26:52.341: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 12:26:52.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-9427 exec execpod8rc7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.46 80'
  Oct 21 12:26:52.460: INFO: stderr: "+ nc -v -t -w 2 10.152.183.46 80\nConnection to 10.152.183.46 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 21 12:26:52.460: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9427 @ 10/21/23 12:26:52.46
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9427 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/21/23 12:26:54.479
  Oct 21 12:26:54.495: INFO: successfully validated that service endpoint-test2 in namespace services-9427 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/21/23 12:26:54.495
  Oct 21 12:26:55.495: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-9427 exec execpod8rc7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 21 12:26:55.601: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 21 12:26:55.601: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 12:26:55.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-9427 exec execpod8rc7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.46 80'
  Oct 21 12:26:55.721: INFO: stderr: "+ nc -v -t -w 2 10.152.183.46 80\n+ echo hostName\nConnection to 10.152.183.46 80 port [tcp/http] succeeded!\n"
  Oct 21 12:26:55.721: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9427 @ 10/21/23 12:26:55.721
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9427 to expose endpoints map[pod2:[80]] @ 10/21/23 12:26:55.736
  Oct 21 12:26:56.758: INFO: successfully validated that service endpoint-test2 in namespace services-9427 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/21/23 12:26:56.758
  Oct 21 12:26:57.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-9427 exec execpod8rc7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 21 12:26:57.874: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 21 12:26:57.874: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 12:26:57.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-9427 exec execpod8rc7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.46 80'
  Oct 21 12:26:57.990: INFO: stderr: "+ nc -v -t -w 2 10.152.183.46 80\n+ echo hostName\nConnection to 10.152.183.46 80 port [tcp/http] succeeded!\n"
  Oct 21 12:26:57.990: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9427 @ 10/21/23 12:26:57.99
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9427 to expose endpoints map[] @ 10/21/23 12:26:58.009
  Oct 21 12:26:58.018: INFO: successfully validated that service endpoint-test2 in namespace services-9427 exposes endpoints map[]
  Oct 21 12:26:58.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9427" for this suite. @ 10/21/23 12:26:58.052
• [11.938 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 10/21/23 12:26:58.066
  Oct 21 12:26:58.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 12:26:58.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:26:58.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:26:58.108
  STEP: Creating a test externalName service @ 10/21/23 12:26:58.111
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2334.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2334.svc.cluster.local; sleep 1; done
   @ 10/21/23 12:26:58.117
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2334.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2334.svc.cluster.local; sleep 1; done
   @ 10/21/23 12:26:58.117
  STEP: creating a pod to probe DNS @ 10/21/23 12:26:58.117
  STEP: submitting the pod to kubernetes @ 10/21/23 12:26:58.117
  STEP: retrieving the pod @ 10/21/23 12:27:06.159
  STEP: looking for the results for each expected name from probers @ 10/21/23 12:27:06.162
  Oct 21 12:27:06.168: INFO: DNS probes using dns-test-642dccdb-f838-45c6-b3ba-17a107b04f9a succeeded

  STEP: changing the externalName to bar.example.com @ 10/21/23 12:27:06.169
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2334.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2334.svc.cluster.local; sleep 1; done
   @ 10/21/23 12:27:06.177
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2334.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2334.svc.cluster.local; sleep 1; done
   @ 10/21/23 12:27:06.177
  STEP: creating a second pod to probe DNS @ 10/21/23 12:27:06.177
  STEP: submitting the pod to kubernetes @ 10/21/23 12:27:06.177
  STEP: retrieving the pod @ 10/21/23 12:27:12.198
  STEP: looking for the results for each expected name from probers @ 10/21/23 12:27:12.201
  Oct 21 12:27:12.210: INFO: DNS probes using dns-test-4d2cd7fa-a619-4325-be4f-97f530fcbe37 succeeded

  STEP: changing the service to type=ClusterIP @ 10/21/23 12:27:12.21
  W1021 12:27:12.221677      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2334.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2334.svc.cluster.local; sleep 1; done
   @ 10/21/23 12:27:12.221
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2334.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2334.svc.cluster.local; sleep 1; done
   @ 10/21/23 12:27:12.221
  STEP: creating a third pod to probe DNS @ 10/21/23 12:27:12.222
  STEP: submitting the pod to kubernetes @ 10/21/23 12:27:12.225
  STEP: retrieving the pod @ 10/21/23 12:27:14.239
  STEP: looking for the results for each expected name from probers @ 10/21/23 12:27:14.242
  Oct 21 12:27:14.249: INFO: DNS probes using dns-test-8ed3c64b-cc62-489e-ae00-8c0e592ddf54 succeeded

  Oct 21 12:27:14.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 12:27:14.252
  STEP: deleting the pod @ 10/21/23 12:27:14.263
  STEP: deleting the pod @ 10/21/23 12:27:14.281
  STEP: deleting the test externalName service @ 10/21/23 12:27:14.3
  STEP: Destroying namespace "dns-2334" for this suite. @ 10/21/23 12:27:14.317
• [16.259 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 10/21/23 12:27:14.326
  Oct 21 12:27:14.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:27:14.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:27:14.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:27:14.345
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/21/23 12:27:14.348
  Oct 21 12:27:14.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-464 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct 21 12:27:14.406: INFO: stderr: ""
  Oct 21 12:27:14.406: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/21/23 12:27:14.406
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/21/23 12:27:19.458
  Oct 21 12:27:19.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-464 get pod e2e-test-httpd-pod -o json'
  Oct 21 12:27:19.504: INFO: stderr: ""
  Oct 21 12:27:19.504: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-10-21T12:27:14Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-464\",\n        \"resourceVersion\": \"7612\",\n        \"uid\": \"5f827497-e740-4023-a065-d0c31995eaeb\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-cx9br\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-83-52\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-cx9br\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-21T12:27:14Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-21T12:27:18Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-21T12:27:18Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-21T12:27:14Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://58009b126925ce48e4229649e4900b90dc3cc10145f2f534197d4076c8830f02\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-10-21T12:27:17Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.83.52\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.47.184\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.47.184\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-10-21T12:27:14Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/21/23 12:27:19.505
  Oct 21 12:27:19.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-464 replace -f -'
  Oct 21 12:27:19.884: INFO: stderr: ""
  Oct 21 12:27:19.884: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 10/21/23 12:27:19.885
  Oct 21 12:27:19.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-464 delete pods e2e-test-httpd-pod'
  Oct 21 12:27:22.089: INFO: stderr: ""
  Oct 21 12:27:22.089: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 21 12:27:22.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-464" for this suite. @ 10/21/23 12:27:22.092
• [7.789 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 10/21/23 12:27:22.116
  Oct 21 12:27:22.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svcaccounts @ 10/21/23 12:27:22.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:27:22.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:27:22.141
  Oct 21 12:27:22.173: INFO: created pod pod-service-account-defaultsa
  Oct 21 12:27:22.173: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Oct 21 12:27:22.180: INFO: created pod pod-service-account-mountsa
  Oct 21 12:27:22.180: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Oct 21 12:27:22.185: INFO: created pod pod-service-account-nomountsa
  Oct 21 12:27:22.185: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Oct 21 12:27:22.195: INFO: created pod pod-service-account-defaultsa-mountspec
  Oct 21 12:27:22.195: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Oct 21 12:27:22.207: INFO: created pod pod-service-account-mountsa-mountspec
  Oct 21 12:27:22.207: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Oct 21 12:27:22.218: INFO: created pod pod-service-account-nomountsa-mountspec
  Oct 21 12:27:22.218: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Oct 21 12:27:22.224: INFO: created pod pod-service-account-defaultsa-nomountspec
  Oct 21 12:27:22.224: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Oct 21 12:27:22.240: INFO: created pod pod-service-account-mountsa-nomountspec
  Oct 21 12:27:22.240: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Oct 21 12:27:22.253: INFO: created pod pod-service-account-nomountsa-nomountspec
  Oct 21 12:27:22.253: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Oct 21 12:27:22.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1097" for this suite. @ 10/21/23 12:27:22.257
• [0.149 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 10/21/23 12:27:22.265
  Oct 21 12:27:22.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 12:27:22.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:27:22.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:27:22.284
  STEP: Creating service test in namespace statefulset-9113 @ 10/21/23 12:27:22.287
  STEP: Looking for a node to schedule stateful set and pod @ 10/21/23 12:27:22.292
  STEP: Creating pod with conflicting port in namespace statefulset-9113 @ 10/21/23 12:27:22.3
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9113 @ 10/21/23 12:27:22.307
  STEP: Creating statefulset with conflicting port in namespace statefulset-9113 @ 10/21/23 12:27:24.315
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9113 @ 10/21/23 12:27:24.321
  Oct 21 12:27:24.340: INFO: Observed stateful pod in namespace: statefulset-9113, name: ss-0, uid: 07daee74-a50c-4a7d-981c-1854c92ef51a, status phase: Pending. Waiting for statefulset controller to delete.
  Oct 21 12:27:24.353: INFO: Observed stateful pod in namespace: statefulset-9113, name: ss-0, uid: 07daee74-a50c-4a7d-981c-1854c92ef51a, status phase: Failed. Waiting for statefulset controller to delete.
  Oct 21 12:27:24.362: INFO: Observed stateful pod in namespace: statefulset-9113, name: ss-0, uid: 07daee74-a50c-4a7d-981c-1854c92ef51a, status phase: Failed. Waiting for statefulset controller to delete.
  Oct 21 12:27:24.367: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9113
  STEP: Removing pod with conflicting port in namespace statefulset-9113 @ 10/21/23 12:27:24.367
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9113 and will be in running state @ 10/21/23 12:27:24.383
  Oct 21 12:27:26.393: INFO: Deleting all statefulset in ns statefulset-9113
  Oct 21 12:27:26.396: INFO: Scaling statefulset ss to 0
  Oct 21 12:27:36.414: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 12:27:36.417: INFO: Deleting statefulset ss
  Oct 21 12:27:36.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9113" for this suite. @ 10/21/23 12:27:36.434
• [14.175 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/21/23 12:27:36.441
  Oct 21 12:27:36.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 12:27:36.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:27:36.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:27:36.465
  STEP: Creating secret with name secret-test-d21e6916-c18c-49d6-99a4-337f3009c77d @ 10/21/23 12:27:36.468
  STEP: Creating a pod to test consume secrets @ 10/21/23 12:27:36.472
  STEP: Saw pod success @ 10/21/23 12:27:40.49
  Oct 21 12:27:40.493: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-secrets-43407dc1-eb15-4fa4-8ddc-2a6b97a56241 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 12:27:40.499
  Oct 21 12:27:40.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4592" for this suite. @ 10/21/23 12:27:40.52
• [4.085 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 10/21/23 12:27:40.527
  Oct 21 12:27:40.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/21/23 12:27:40.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:27:40.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:27:40.547
  STEP: create the container to handle the HTTPGet hook request. @ 10/21/23 12:27:40.555
  STEP: create the pod with lifecycle hook @ 10/21/23 12:27:44.583
  STEP: delete the pod with lifecycle hook @ 10/21/23 12:27:46.6
  STEP: check prestop hook @ 10/21/23 12:27:48.614
  Oct 21 12:27:48.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6012" for this suite. @ 10/21/23 12:27:48.632
• [8.112 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 10/21/23 12:27:48.64
  Oct 21 12:27:48.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 12:27:48.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:27:48.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:27:48.66
  STEP: Creating service test in namespace statefulset-1380 @ 10/21/23 12:27:48.663
  STEP: Creating a new StatefulSet @ 10/21/23 12:27:48.67
  Oct 21 12:27:48.681: INFO: Found 0 stateful pods, waiting for 3
  Oct 21 12:27:58.686: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 12:27:58.686: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 12:27:58.686: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 12:27:58.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-1380 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 12:27:58.815: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 12:27:58.815: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 12:27:58.815: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/21/23 12:28:08.838
  Oct 21 12:28:08.858: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/21/23 12:28:08.858
  STEP: Updating Pods in reverse ordinal order @ 10/21/23 12:28:18.882
  Oct 21 12:28:18.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-1380 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 12:28:18.996: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 21 12:28:18.996: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 12:28:18.996: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 10/21/23 12:28:39.014
  Oct 21 12:28:39.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-1380 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 12:28:39.135: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 12:28:39.135: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 12:28:39.135: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 12:28:49.167: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 10/21/23 12:28:59.181
  Oct 21 12:28:59.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-1380 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 12:28:59.288: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 21 12:28:59.289: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 12:28:59.289: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 12:29:09.309: INFO: Deleting all statefulset in ns statefulset-1380
  Oct 21 12:29:09.311: INFO: Scaling statefulset ss2 to 0
  Oct 21 12:29:19.330: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 12:29:19.333: INFO: Deleting statefulset ss2
  Oct 21 12:29:19.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1380" for this suite. @ 10/21/23 12:29:19.349
• [90.719 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 10/21/23 12:29:19.36
  Oct 21 12:29:19.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 12:29:19.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:29:19.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:29:19.381
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/21/23 12:29:19.384
  STEP: Saw pod success @ 10/21/23 12:29:23.404
  Oct 21 12:29:23.406: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-42467051-4a13-41f2-b1ce-f929b9d57ae6 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 12:29:23.421
  Oct 21 12:29:23.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6041" for this suite. @ 10/21/23 12:29:23.444
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/21/23 12:29:23.452
  Oct 21 12:29:23.452: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 12:29:23.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:29:23.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:29:23.472
  STEP: creating a Deployment @ 10/21/23 12:29:23.478
  STEP: waiting for Deployment to be created @ 10/21/23 12:29:23.487
  STEP: waiting for all Replicas to be Ready @ 10/21/23 12:29:23.488
  Oct 21 12:29:23.490: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:23.490: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:23.501: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:23.501: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:23.522: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:23.522: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:23.542: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:23.542: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 21 12:29:24.335: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Oct 21 12:29:24.335: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Oct 21 12:29:24.577: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/21/23 12:29:24.577
  Oct 21 12:29:24.587: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/21/23 12:29:24.587
  Oct 21 12:29:24.588: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.588: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.588: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.588: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.588: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.588: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.588: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.589: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 0
  Oct 21 12:29:24.589: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:24.589: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:24.589: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.589: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.589: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.589: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.597: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.597: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.618: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.618: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:24.636: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:24.636: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:24.661: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:24.661: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:26.357: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:26.357: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:26.376: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  STEP: listing Deployments @ 10/21/23 12:29:26.376
  Oct 21 12:29:26.381: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/21/23 12:29:26.381
  Oct 21 12:29:26.390: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/21/23 12:29:26.39
  Oct 21 12:29:26.397: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:26.402: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:26.426: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:26.440: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:26.449: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:27.355: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:27.372: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:27.387: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:27.400: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:27.407: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 21 12:29:28.600: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/21/23 12:29:28.636
  STEP: fetching the DeploymentStatus @ 10/21/23 12:29:28.644
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 1
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:28.649: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:28.650: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 2
  Oct 21 12:29:28.650: INFO: observed Deployment test-deployment in namespace deployment-4780 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/21/23 12:29:28.65
  Oct 21 12:29:28.660: INFO: observed event type MODIFIED
  Oct 21 12:29:28.660: INFO: observed event type MODIFIED
  Oct 21 12:29:28.660: INFO: observed event type MODIFIED
  Oct 21 12:29:28.660: INFO: observed event type MODIFIED
  Oct 21 12:29:28.660: INFO: observed event type MODIFIED
  Oct 21 12:29:28.661: INFO: observed event type MODIFIED
  Oct 21 12:29:28.661: INFO: observed event type MODIFIED
  Oct 21 12:29:28.661: INFO: observed event type MODIFIED
  Oct 21 12:29:28.661: INFO: observed event type MODIFIED
  Oct 21 12:29:28.661: INFO: observed event type MODIFIED
  Oct 21 12:29:28.661: INFO: observed event type MODIFIED
  Oct 21 12:29:28.661: INFO: observed event type MODIFIED
  Oct 21 12:29:28.662: INFO: observed event type MODIFIED
  Oct 21 12:29:28.662: INFO: observed event type MODIFIED
  Oct 21 12:29:28.674: INFO: Log out all the ReplicaSets if there is no deployment created
  Oct 21 12:29:28.692: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b72af447-7a03-4a1f-913d-4fef1f420788",
      ResourceVersion: (string) (len=4) "8960",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "283525c7-13e4-4268-8525-7b00a3b8319c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 38 33 35  32 35 63 37 2d 31 33 65  |":\"283525c7-13e|
              00000130  34 2d 34 32 36 38 2d 38  35 32 35 2d 37 62 30 30  |4-4268-8525-7b00|
              00000140  61 33 62 38 33 31 39 63  5c 22 7d 22 3a 7b 7d 7d  |a3b8319c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Oct 21 12:29:28.713: INFO: pod: "test-deployment-64fd565c98-mb74q":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-mb74q",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-4780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad859329-8ef7-41fc-ac1a-92591ef7e236",
      ResourceVersion: (string) (len=4) "8955",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488170,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "b72af447-7a03-4a1f-913d-4fef1f420788",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 37 32 61 66 34 34 37  |uid\":\"b72af447|
              000000a0  2d 37 61 30 33 2d 34 61  31 66 2d 39 31 33 64 2d  |-7a03-4a1f-913d-|
              000000b0  34 66 65 66 31 66 34 32  30 37 38 38 5c 22 7d 22  |4fef1f420788\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 33 35 5c 22  |192.168.47.135\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t8wcm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t8wcm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833488165,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://6384b914729f84a969c3f14ed16e80e5bce5a2feb8720e90c6e467e120bae484",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Oct 21 12:29:28.715: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccf27530-6103-4a39-abb1-28c235878375",
      ResourceVersion: (string) (len=4) "8859",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488163,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "283525c7-13e4-4268-8525-7b00a3b8319c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 38 33 35  32 35 63 37 2d 31 33 65  |":\"283525c7-13e|
              00000130  34 2d 34 32 36 38 2d 38  35 32 35 2d 37 62 30 30  |4-4268-8525-7b00|
              00000140  61 33 62 38 33 31 39 63  5c 22 7d 22 3a 7b 7d 7d  |a3b8319c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Oct 21 12:29:28.722: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb5602d5-b0d4-465c-804f-d1c1ac401385",
      ResourceVersion: (string) (len=4) "8948",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "283525c7-13e4-4268-8525-7b00a3b8319c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 38 33 35  32 35 63 37 2d 31 33 65  |":\"283525c7-13e|
              00000130  34 2d 34 32 36 38 2d 38  35 32 35 2d 37 62 30 30  |4-4268-8525-7b00|
              00000140  61 33 62 38 33 31 39 63  5c 22 7d 22 3a 7b 7d 7d  |a3b8319c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Oct 21 12:29:28.735: INFO: pod: "test-deployment-79ff746c4-h5q4h":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-h5q4h",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-4780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db267f26-054c-4fcf-8f41-d665367628d9",
      ResourceVersion: (string) (len=4) "8972",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "cb5602d5-b0d4-465c-804f-d1c1ac401385",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 62 35 36 30 32 64 35  |uid\":\"cb5602d5|
              000000a0  2d 62 30 64 34 2d 34 36  35 63 2d 38 30 34 66 2d  |-b0d4-465c-804f-|
              000000b0  64 31 63 31 61 63 34 30  31 33 38 35 5c 22 7d 22  |d1c1ac401385\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 33 36 5c 22  |192.168.47.136\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nzc7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nzc7p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488166,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833488167,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://098a426f039dc599c2b5a1b13409ca0ac1e66631c6ec626377d83e197f6fa08c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Oct 21 12:29:28.738: INFO: pod: "test-deployment-79ff746c4-ltctc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-ltctc",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-4780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cc597c6-cb51-416d-9ed2-63305c184f98",
      ResourceVersion: (string) (len=4) "8973",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "cb5602d5-b0d4-465c-804f-d1c1ac401385",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 62 35 36 30 32 64 35  |uid\":\"cb5602d5|
              000000a0  2d 62 30 64 34 2d 34 36  35 63 2d 38 30 34 66 2d  |-b0d4-465c-804f-|
              000000b0  64 31 63 31 61 63 34 30  31 33 38 35 5c 22 7d 22  |d1c1ac401385\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 35 2e 32 34 33 5c 22  |192.168.45.243\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4lqqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4lqqh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488168,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833488167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.45.243",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.45.243"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833488167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833488168,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://30c07388c8b0965758485fcf15b479e0aaae19fd1f03300670f798f944850383",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Oct 21 12:29:28.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4780" for this suite. @ 10/21/23 12:29:28.743
• [5.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 10/21/23 12:29:28.76
  Oct 21 12:29:28.760: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replicaset @ 10/21/23 12:29:28.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:29:28.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:29:28.786
  STEP: Create a Replicaset @ 10/21/23 12:29:28.792
  STEP: Verify that the required pods have come up. @ 10/21/23 12:29:28.798
  Oct 21 12:29:28.801: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct 21 12:29:33.805: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/21/23 12:29:33.805
  STEP: Getting /status @ 10/21/23 12:29:33.805
  Oct 21 12:29:33.810: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/21/23 12:29:33.81
  Oct 21 12:29:33.822: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/21/23 12:29:33.822
  Oct 21 12:29:33.823: INFO: Observed &ReplicaSet event: ADDED
  Oct 21 12:29:33.824: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 21 12:29:33.824: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 21 12:29:33.824: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 21 12:29:33.824: INFO: Found replicaset test-rs in namespace replicaset-8843 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 21 12:29:33.824: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/21/23 12:29:33.824
  Oct 21 12:29:33.824: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 21 12:29:33.831: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/21/23 12:29:33.831
  Oct 21 12:29:33.833: INFO: Observed &ReplicaSet event: ADDED
  Oct 21 12:29:33.833: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 21 12:29:33.833: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 21 12:29:33.833: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 21 12:29:33.833: INFO: Observed replicaset test-rs in namespace replicaset-8843 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 21 12:29:33.834: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 21 12:29:33.834: INFO: Found replicaset test-rs in namespace replicaset-8843 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Oct 21 12:29:33.834: INFO: Replicaset test-rs has a patched status
  Oct 21 12:29:33.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8843" for this suite. @ 10/21/23 12:29:33.838
• [5.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 10/21/23 12:29:33.845
  Oct 21 12:29:33.845: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename gc @ 10/21/23 12:29:33.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:29:33.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:29:33.868
  STEP: create the rc @ 10/21/23 12:29:33.879
  W1021 12:29:33.885833      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/21/23 12:29:39.896
  STEP: wait for the rc to be deleted @ 10/21/23 12:29:39.91
  Oct 21 12:29:40.921: INFO: 80 pods remaining
  Oct 21 12:29:40.921: INFO: 80 pods has nil DeletionTimestamp
  Oct 21 12:29:40.921: INFO: 
  Oct 21 12:29:41.923: INFO: 70 pods remaining
  Oct 21 12:29:41.923: INFO: 70 pods has nil DeletionTimestamp
  Oct 21 12:29:41.923: INFO: 
  Oct 21 12:29:42.921: INFO: 60 pods remaining
  Oct 21 12:29:42.921: INFO: 60 pods has nil DeletionTimestamp
  Oct 21 12:29:42.921: INFO: 
  Oct 21 12:29:43.924: INFO: 40 pods remaining
  Oct 21 12:29:43.924: INFO: 40 pods has nil DeletionTimestamp
  Oct 21 12:29:43.924: INFO: 
  Oct 21 12:29:44.922: INFO: 30 pods remaining
  Oct 21 12:29:44.922: INFO: 30 pods has nil DeletionTimestamp
  Oct 21 12:29:44.922: INFO: 
  Oct 21 12:29:45.920: INFO: 20 pods remaining
  Oct 21 12:29:45.920: INFO: 20 pods has nil DeletionTimestamp
  Oct 21 12:29:45.920: INFO: 
  STEP: Gathering metrics @ 10/21/23 12:29:46.919
  W1021 12:29:46.925032      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 21 12:29:46.925: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 21 12:29:46.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5857" for this suite. @ 10/21/23 12:29:46.929
• [13.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 10/21/23 12:29:46.942
  Oct 21 12:29:46.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:29:46.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:29:46.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:29:46.96
  STEP: Creating configMap with name projected-configmap-test-volume-c593b49e-bb3f-4620-a669-2612902c88c0 @ 10/21/23 12:29:46.963
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:29:46.97
  STEP: Saw pod success @ 10/21/23 12:29:51.015
  Oct 21 12:29:51.017: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-configmaps-d71f0141-6e37-44ea-9bc9-2ab2abce98fe container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:29:51.023
  Oct 21 12:29:51.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5721" for this suite. @ 10/21/23 12:29:51.041
• [4.103 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 10/21/23 12:29:51.046
  Oct 21 12:29:51.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 12:29:51.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:29:51.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:29:51.062
  STEP: Creating configMap with name configmap-test-upd-0e914074-4395-4d01-9191-6d559ff9c0aa @ 10/21/23 12:29:51.068
  STEP: Creating the pod @ 10/21/23 12:29:51.072
  STEP: Updating configmap configmap-test-upd-0e914074-4395-4d01-9191-6d559ff9c0aa @ 10/21/23 12:29:53.098
  STEP: waiting to observe update in volume @ 10/21/23 12:29:53.102
  Oct 21 12:31:17.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4084" for this suite. @ 10/21/23 12:31:17.412
• [86.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 10/21/23 12:31:17.419
  Oct 21 12:31:17.419: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename gc @ 10/21/23 12:31:17.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:17.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:17.437
  STEP: create the deployment @ 10/21/23 12:31:17.442
  W1021 12:31:17.446600      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/21/23 12:31:17.446
  STEP: delete the deployment @ 10/21/23 12:31:17.962
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/21/23 12:31:17.969
  STEP: Gathering metrics @ 10/21/23 12:31:18.489
  W1021 12:31:18.493811      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 21 12:31:18.493: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 21 12:31:18.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6347" for this suite. @ 10/21/23 12:31:18.497
• [1.085 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 10/21/23 12:31:18.504
  Oct 21 12:31:18.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:31:18.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:18.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:18.522
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/21/23 12:31:18.525
  Oct 21 12:31:18.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-6581 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct 21 12:31:18.577: INFO: stderr: ""
  Oct 21 12:31:18.577: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/21/23 12:31:18.577
  Oct 21 12:31:18.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-6581 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Oct 21 12:31:18.630: INFO: stderr: ""
  Oct 21 12:31:18.630: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/21/23 12:31:18.63
  Oct 21 12:31:18.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-6581 delete pods e2e-test-httpd-pod'
  Oct 21 12:31:20.570: INFO: stderr: ""
  Oct 21 12:31:20.570: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 21 12:31:20.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6581" for this suite. @ 10/21/23 12:31:20.573
• [2.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 10/21/23 12:31:20.581
  Oct 21 12:31:20.581: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 12:31:20.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:20.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:20.597
  Oct 21 12:31:22.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 12:31:22.622: INFO: Deleting pod "var-expansion-f9b71353-0f4a-4528-866b-e3c2f369a062" in namespace "var-expansion-3394"
  Oct 21 12:31:22.632: INFO: Wait up to 5m0s for pod "var-expansion-f9b71353-0f4a-4528-866b-e3c2f369a062" to be fully deleted
  STEP: Destroying namespace "var-expansion-3394" for this suite. @ 10/21/23 12:31:24.639
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/21/23 12:31:24.645
  Oct 21 12:31:24.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename proxy @ 10/21/23 12:31:24.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:24.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:24.666
  Oct 21 12:31:24.671: INFO: Creating pod...
  Oct 21 12:31:26.698: INFO: Creating service...
  Oct 21 12:31:26.712: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/pods/agnhost/proxy/some/path/with/DELETE
  Oct 21 12:31:26.718: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 21 12:31:26.718: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/pods/agnhost/proxy/some/path/with/GET
  Oct 21 12:31:26.721: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct 21 12:31:26.721: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/pods/agnhost/proxy/some/path/with/HEAD
  Oct 21 12:31:26.724: INFO: http.Client request:HEAD | StatusCode:200
  Oct 21 12:31:26.724: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/pods/agnhost/proxy/some/path/with/OPTIONS
  Oct 21 12:31:26.727: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 21 12:31:26.727: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/pods/agnhost/proxy/some/path/with/PATCH
  Oct 21 12:31:26.730: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 21 12:31:26.730: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/pods/agnhost/proxy/some/path/with/POST
  Oct 21 12:31:26.733: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 21 12:31:26.733: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/pods/agnhost/proxy/some/path/with/PUT
  Oct 21 12:31:26.737: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 21 12:31:26.737: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/services/test-service/proxy/some/path/with/DELETE
  Oct 21 12:31:26.741: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 21 12:31:26.741: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/services/test-service/proxy/some/path/with/GET
  Oct 21 12:31:26.745: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct 21 12:31:26.745: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/services/test-service/proxy/some/path/with/HEAD
  Oct 21 12:31:26.752: INFO: http.Client request:HEAD | StatusCode:200
  Oct 21 12:31:26.752: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/services/test-service/proxy/some/path/with/OPTIONS
  Oct 21 12:31:26.756: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 21 12:31:26.756: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/services/test-service/proxy/some/path/with/PATCH
  Oct 21 12:31:26.760: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 21 12:31:26.760: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/services/test-service/proxy/some/path/with/POST
  Oct 21 12:31:26.765: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 21 12:31:26.765: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3536/services/test-service/proxy/some/path/with/PUT
  Oct 21 12:31:26.769: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 21 12:31:26.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3536" for this suite. @ 10/21/23 12:31:26.773
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 10/21/23 12:31:26.782
  Oct 21 12:31:26.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:31:26.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:26.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:26.805
  STEP: validating cluster-info @ 10/21/23 12:31:26.808
  Oct 21 12:31:26.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-612 cluster-info'
  Oct 21 12:31:26.854: INFO: stderr: ""
  Oct 21 12:31:26.854: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Oct 21 12:31:26.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-612" for this suite. @ 10/21/23 12:31:26.858
• [0.084 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 10/21/23 12:31:26.866
  Oct 21 12:31:26.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 12:31:26.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:26.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:26.885
  Oct 21 12:31:26.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/21/23 12:31:28.144
  Oct 21 12:31:28.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 create -f -'
  Oct 21 12:31:28.509: INFO: stderr: ""
  Oct 21 12:31:28.509: INFO: stdout: "e2e-test-crd-publish-openapi-5166-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct 21 12:31:28.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 delete e2e-test-crd-publish-openapi-5166-crds test-foo'
  Oct 21 12:31:28.563: INFO: stderr: ""
  Oct 21 12:31:28.563: INFO: stdout: "e2e-test-crd-publish-openapi-5166-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Oct 21 12:31:28.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 apply -f -'
  Oct 21 12:31:28.876: INFO: stderr: ""
  Oct 21 12:31:28.876: INFO: stdout: "e2e-test-crd-publish-openapi-5166-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct 21 12:31:28.876: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 delete e2e-test-crd-publish-openapi-5166-crds test-foo'
  Oct 21 12:31:28.934: INFO: stderr: ""
  Oct 21 12:31:28.934: INFO: stdout: "e2e-test-crd-publish-openapi-5166-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/21/23 12:31:28.935
  Oct 21 12:31:28.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 create -f -'
  Oct 21 12:31:29.038: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/21/23 12:31:29.038
  Oct 21 12:31:29.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 create -f -'
  Oct 21 12:31:29.147: INFO: rc: 1
  Oct 21 12:31:29.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 apply -f -'
  Oct 21 12:31:29.258: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/21/23 12:31:29.258
  Oct 21 12:31:29.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 create -f -'
  Oct 21 12:31:29.371: INFO: rc: 1
  Oct 21 12:31:29.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 --namespace=crd-publish-openapi-7643 apply -f -'
  Oct 21 12:31:29.482: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/21/23 12:31:29.482
  Oct 21 12:31:29.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 explain e2e-test-crd-publish-openapi-5166-crds'
  Oct 21 12:31:29.585: INFO: stderr: ""
  Oct 21 12:31:29.585: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5166-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/21/23 12:31:29.585
  Oct 21 12:31:29.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 explain e2e-test-crd-publish-openapi-5166-crds.metadata'
  Oct 21 12:31:29.680: INFO: stderr: ""
  Oct 21 12:31:29.681: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5166-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Oct 21 12:31:29.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 explain e2e-test-crd-publish-openapi-5166-crds.spec'
  Oct 21 12:31:29.783: INFO: stderr: ""
  Oct 21 12:31:29.783: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5166-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Oct 21 12:31:29.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 explain e2e-test-crd-publish-openapi-5166-crds.spec.bars'
  Oct 21 12:31:29.897: INFO: stderr: ""
  Oct 21 12:31:29.897: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5166-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/21/23 12:31:29.897
  Oct 21 12:31:29.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7643 explain e2e-test-crd-publish-openapi-5166-crds.spec.bars2'
  Oct 21 12:31:29.995: INFO: rc: 1
  Oct 21 12:31:31.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7643" for this suite. @ 10/21/23 12:31:31.228
• [4.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 10/21/23 12:31:31.239
  Oct 21 12:31:31.239: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replication-controller @ 10/21/23 12:31:31.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:31.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:31.259
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/21/23 12:31:31.261
  STEP: When a replication controller with a matching selector is created @ 10/21/23 12:31:33.277
  STEP: Then the orphan pod is adopted @ 10/21/23 12:31:33.284
  Oct 21 12:31:34.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9022" for this suite. @ 10/21/23 12:31:34.293
• [3.060 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/21/23 12:31:34.299
  Oct 21 12:31:34.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename certificates @ 10/21/23 12:31:34.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:34.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:34.317
  STEP: getting /apis @ 10/21/23 12:31:35.456
  STEP: getting /apis/certificates.k8s.io @ 10/21/23 12:31:35.459
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/21/23 12:31:35.461
  STEP: creating @ 10/21/23 12:31:35.462
  STEP: getting @ 10/21/23 12:31:35.476
  STEP: listing @ 10/21/23 12:31:35.478
  STEP: watching @ 10/21/23 12:31:35.481
  Oct 21 12:31:35.481: INFO: starting watch
  STEP: patching @ 10/21/23 12:31:35.482
  STEP: updating @ 10/21/23 12:31:35.488
  Oct 21 12:31:35.492: INFO: waiting for watch events with expected annotations
  Oct 21 12:31:35.492: INFO: saw patched and updated annotations
  STEP: getting /approval @ 10/21/23 12:31:35.492
  STEP: patching /approval @ 10/21/23 12:31:35.495
  STEP: updating /approval @ 10/21/23 12:31:35.502
  STEP: getting /status @ 10/21/23 12:31:35.507
  STEP: patching /status @ 10/21/23 12:31:35.51
  STEP: updating /status @ 10/21/23 12:31:35.517
  STEP: deleting @ 10/21/23 12:31:35.524
  STEP: deleting a collection @ 10/21/23 12:31:35.534
  Oct 21 12:31:35.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2039" for this suite. @ 10/21/23 12:31:35.55
• [1.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 10/21/23 12:31:35.557
  Oct 21 12:31:35.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename job @ 10/21/23 12:31:35.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:31:35.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:31:35.579
  STEP: Creating a job @ 10/21/23 12:31:35.583
  STEP: Ensuring active pods == parallelism @ 10/21/23 12:31:35.59
  STEP: delete a job @ 10/21/23 12:31:39.595
  STEP: deleting Job.batch foo in namespace job-7202, will wait for the garbage collector to delete the pods @ 10/21/23 12:31:39.595
  Oct 21 12:31:39.656: INFO: Deleting Job.batch foo took: 7.234223ms
  Oct 21 12:31:39.757: INFO: Terminating Job.batch foo pods took: 100.975113ms
  STEP: Ensuring job was deleted @ 10/21/23 12:32:10.858
  Oct 21 12:32:10.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7202" for this suite. @ 10/21/23 12:32:10.865
• [35.316 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 10/21/23 12:32:10.873
  Oct 21 12:32:10.873: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:32:10.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:32:10.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:32:10.895
  STEP: Creating configMap with name projected-configmap-test-volume-map-5f855848-bac9-4af2-83c1-935bfcd1baa5 @ 10/21/23 12:32:10.897
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:32:10.901
  STEP: Saw pod success @ 10/21/23 12:32:12.915
  Oct 21 12:32:12.918: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-configmaps-424828d6-5c5d-4e42-898c-5f6af23aa6e2 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:32:12.932
  Oct 21 12:32:12.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6954" for this suite. @ 10/21/23 12:32:12.951
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 10/21/23 12:32:12.959
  Oct 21 12:32:12.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 12:32:12.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:32:12.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:32:12.98
  STEP: Creating a ResourceQuota with best effort scope @ 10/21/23 12:32:12.984
  STEP: Ensuring ResourceQuota status is calculated @ 10/21/23 12:32:12.989
  STEP: Creating a ResourceQuota with not best effort scope @ 10/21/23 12:32:14.993
  STEP: Ensuring ResourceQuota status is calculated @ 10/21/23 12:32:14.998
  STEP: Creating a best-effort pod @ 10/21/23 12:32:17.001
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/21/23 12:32:17.012
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/21/23 12:32:19.015
  STEP: Deleting the pod @ 10/21/23 12:32:21.02
  STEP: Ensuring resource quota status released the pod usage @ 10/21/23 12:32:21.028
  STEP: Creating a not best-effort pod @ 10/21/23 12:32:23.032
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/21/23 12:32:23.041
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/21/23 12:32:25.046
  STEP: Deleting the pod @ 10/21/23 12:32:27.05
  STEP: Ensuring resource quota status released the pod usage @ 10/21/23 12:32:27.063
  Oct 21 12:32:29.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2283" for this suite. @ 10/21/23 12:32:29.07
• [16.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/21/23 12:32:29.077
  Oct 21 12:32:29.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename watch @ 10/21/23 12:32:29.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:32:29.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:32:29.097
  STEP: creating a new configmap @ 10/21/23 12:32:29.1
  STEP: modifying the configmap once @ 10/21/23 12:32:29.105
  STEP: modifying the configmap a second time @ 10/21/23 12:32:29.111
  STEP: deleting the configmap @ 10/21/23 12:32:29.117
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/21/23 12:32:29.122
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/21/23 12:32:29.123
  Oct 21 12:32:29.123: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3409  a6a96fc6-45be-4886-afb0-058c97853d37 12275 0 2023-10-21 12:32:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-21 12:32:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:32:29.124: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3409  a6a96fc6-45be-4886-afb0-058c97853d37 12276 0 2023-10-21 12:32:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-21 12:32:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:32:29.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3409" for this suite. @ 10/21/23 12:32:29.127
• [0.056 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 10/21/23 12:32:29.133
  Oct 21 12:32:29.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 12:32:29.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:32:29.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:32:29.152
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-546 @ 10/21/23 12:32:29.155
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/21/23 12:32:29.167
  STEP: creating service externalsvc in namespace services-546 @ 10/21/23 12:32:29.167
  STEP: creating replication controller externalsvc in namespace services-546 @ 10/21/23 12:32:29.179
  I1021 12:32:29.185375      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-546, replica count: 2
  I1021 12:32:32.236945      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/21/23 12:32:32.24
  Oct 21 12:32:32.262: INFO: Creating new exec pod
  Oct 21 12:32:34.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-546 exec execpodzhdlp -- /bin/sh -x -c nslookup nodeport-service.services-546.svc.cluster.local'
  Oct 21 12:32:34.407: INFO: stderr: "+ nslookup nodeport-service.services-546.svc.cluster.local\n"
  Oct 21 12:32:34.407: INFO: stdout: "Server:\t\t10.152.183.118\nAddress:\t10.152.183.118#53\n\nnodeport-service.services-546.svc.cluster.local\tcanonical name = externalsvc.services-546.svc.cluster.local.\nName:\texternalsvc.services-546.svc.cluster.local\nAddress: 10.152.183.201\n\n"
  Oct 21 12:32:34.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-546, will wait for the garbage collector to delete the pods @ 10/21/23 12:32:34.411
  Oct 21 12:32:34.471: INFO: Deleting ReplicationController externalsvc took: 5.704196ms
  Oct 21 12:32:34.571: INFO: Terminating ReplicationController externalsvc pods took: 100.419072ms
  Oct 21 12:32:37.786: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-546" for this suite. @ 10/21/23 12:32:37.795
• [8.670 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/21/23 12:32:37.803
  Oct 21 12:32:37.803: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubelet-test @ 10/21/23 12:32:37.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:32:37.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:32:37.822
  STEP: Waiting for pod completion @ 10/21/23 12:32:37.832
  Oct 21 12:32:41.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6532" for this suite. @ 10/21/23 12:32:41.853
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/21/23 12:32:41.861
  Oct 21 12:32:41.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename containers @ 10/21/23 12:32:41.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:32:41.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:32:41.879
  STEP: Creating a pod to test override arguments @ 10/21/23 12:32:41.881
  STEP: Saw pod success @ 10/21/23 12:32:43.895
  Oct 21 12:32:43.898: INFO: Trying to get logs from node ip-172-31-83-52 pod client-containers-e809143e-15df-48dd-bf69-938bc1f85cd0 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:32:43.904
  Oct 21 12:32:43.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6812" for this suite. @ 10/21/23 12:32:43.919
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 10/21/23 12:32:43.927
  Oct 21 12:32:43.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-preemption @ 10/21/23 12:32:43.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:32:43.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:32:43.945
  Oct 21 12:32:43.961: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 21 12:33:43.983: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/21/23 12:33:43.986
  Oct 21 12:33:44.009: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct 21 12:33:44.019: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct 21 12:33:44.040: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct 21 12:33:44.048: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct 21 12:33:44.069: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct 21 12:33:44.077: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/21/23 12:33:44.077
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/21/23 12:33:46.103
  Oct 21 12:33:50.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5247" for this suite. @ 10/21/23 12:33:50.182
• [66.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 10/21/23 12:33:50.191
  Oct 21 12:33:50.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:33:50.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:33:50.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:33:50.217
  STEP: Creating configMap with name cm-test-opt-del-9c148918-7782-405d-a3cc-19aa9f3d6801 @ 10/21/23 12:33:50.227
  STEP: Creating configMap with name cm-test-opt-upd-d1f31790-da44-41d6-8b1c-92aaccd047c0 @ 10/21/23 12:33:50.232
  STEP: Creating the pod @ 10/21/23 12:33:50.236
  STEP: Deleting configmap cm-test-opt-del-9c148918-7782-405d-a3cc-19aa9f3d6801 @ 10/21/23 12:33:52.273
  STEP: Updating configmap cm-test-opt-upd-d1f31790-da44-41d6-8b1c-92aaccd047c0 @ 10/21/23 12:33:52.278
  STEP: Creating configMap with name cm-test-opt-create-39923840-49cf-4769-b9e9-622b5a1fb0e1 @ 10/21/23 12:33:52.282
  STEP: waiting to observe update in volume @ 10/21/23 12:33:52.287
  Oct 21 12:34:56.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4562" for this suite. @ 10/21/23 12:34:56.541
• [66.355 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 10/21/23 12:34:56.548
  Oct 21 12:34:56.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename field-validation @ 10/21/23 12:34:56.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:34:56.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:34:56.571
  Oct 21 12:34:56.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  W1021 12:34:56.575104      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0015229f0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1021 12:34:59.120447      19 warnings.go:70] unknown field "alpha"
  W1021 12:34:59.120466      19 warnings.go:70] unknown field "beta"
  W1021 12:34:59.120470      19 warnings.go:70] unknown field "delta"
  W1021 12:34:59.120474      19 warnings.go:70] unknown field "epsilon"
  W1021 12:34:59.120477      19 warnings.go:70] unknown field "gamma"
  Oct 21 12:34:59.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1015" for this suite. @ 10/21/23 12:34:59.659
• [3.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/21/23 12:34:59.669
  Oct 21 12:34:59.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename proxy @ 10/21/23 12:34:59.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:34:59.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:34:59.687
  Oct 21 12:34:59.690: INFO: Creating pod...
  Oct 21 12:35:01.704: INFO: Creating service...
  Oct 21 12:35:01.715: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/pods/agnhost/proxy?method=DELETE
  Oct 21 12:35:01.720: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 21 12:35:01.720: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/pods/agnhost/proxy?method=OPTIONS
  Oct 21 12:35:01.724: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 21 12:35:01.725: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/pods/agnhost/proxy?method=PATCH
  Oct 21 12:35:01.729: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 21 12:35:01.729: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/pods/agnhost/proxy?method=POST
  Oct 21 12:35:01.732: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 21 12:35:01.732: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/pods/agnhost/proxy?method=PUT
  Oct 21 12:35:01.736: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 21 12:35:01.736: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/services/e2e-proxy-test-service/proxy?method=DELETE
  Oct 21 12:35:01.741: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 21 12:35:01.742: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Oct 21 12:35:01.746: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 21 12:35:01.746: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/services/e2e-proxy-test-service/proxy?method=PATCH
  Oct 21 12:35:01.753: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 21 12:35:01.753: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/services/e2e-proxy-test-service/proxy?method=POST
  Oct 21 12:35:01.758: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 21 12:35:01.759: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/services/e2e-proxy-test-service/proxy?method=PUT
  Oct 21 12:35:01.765: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 21 12:35:01.765: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/pods/agnhost/proxy?method=GET
  Oct 21 12:35:01.768: INFO: http.Client request:GET StatusCode:301
  Oct 21 12:35:01.768: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/services/e2e-proxy-test-service/proxy?method=GET
  Oct 21 12:35:01.772: INFO: http.Client request:GET StatusCode:301
  Oct 21 12:35:01.772: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/pods/agnhost/proxy?method=HEAD
  Oct 21 12:35:01.775: INFO: http.Client request:HEAD StatusCode:301
  Oct 21 12:35:01.775: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9079/services/e2e-proxy-test-service/proxy?method=HEAD
  Oct 21 12:35:01.782: INFO: http.Client request:HEAD StatusCode:301
  Oct 21 12:35:01.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9079" for this suite. @ 10/21/23 12:35:01.786
• [2.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/21/23 12:35:01.795
  Oct 21 12:35:01.795: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-watch @ 10/21/23 12:35:01.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:35:01.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:35:01.817
  Oct 21 12:35:01.821: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Creating first CR  @ 10/21/23 12:35:04.361
  Oct 21 12:35:04.369: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-21T12:35:04Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-21T12:35:04Z]] name:name1 resourceVersion:13077 uid:065f94fe-9db7-4324-af82-ac842a951605] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 10/21/23 12:35:14.369
  Oct 21 12:35:14.375: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-21T12:35:14Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-21T12:35:14Z]] name:name2 resourceVersion:13129 uid:5b110b70-e3ee-4514-8989-46c38c8d6690] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 10/21/23 12:35:24.375
  Oct 21 12:35:24.381: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-21T12:35:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-21T12:35:24Z]] name:name1 resourceVersion:13149 uid:065f94fe-9db7-4324-af82-ac842a951605] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 10/21/23 12:35:34.381
  Oct 21 12:35:34.386: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-21T12:35:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-21T12:35:34Z]] name:name2 resourceVersion:13169 uid:5b110b70-e3ee-4514-8989-46c38c8d6690] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 10/21/23 12:35:44.386
  Oct 21 12:35:44.393: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-21T12:35:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-21T12:35:24Z]] name:name1 resourceVersion:13189 uid:065f94fe-9db7-4324-af82-ac842a951605] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 10/21/23 12:35:54.394
  Oct 21 12:35:54.400: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-21T12:35:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-21T12:35:34Z]] name:name2 resourceVersion:13210 uid:5b110b70-e3ee-4514-8989-46c38c8d6690] num:map[num1:9223372036854775807 num2:1000000]]}
  Oct 21 12:36:04.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3803" for this suite. @ 10/21/23 12:36:04.918
• [63.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 10/21/23 12:36:04.926
  Oct 21 12:36:04.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 12:36:04.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:36:04.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:36:04.945
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/21/23 12:36:04.947
  STEP: Saw pod success @ 10/21/23 12:36:08.963
  Oct 21 12:36:08.966: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-f5698da2-eedd-46ef-a146-8f6d66c341e9 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 12:36:08.972
  Oct 21 12:36:08.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9245" for this suite. @ 10/21/23 12:36:08.987
• [4.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 10/21/23 12:36:08.992
  Oct 21 12:36:08.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:36:08.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:36:09.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:36:09.014
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 12:36:09.017
  STEP: Saw pod success @ 10/21/23 12:36:13.038
  Oct 21 12:36:13.041: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-b88f84c1-bc85-4137-98d7-df9610eef9fd container client-container: <nil>
  STEP: delete the pod @ 10/21/23 12:36:13.047
  Oct 21 12:36:13.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4412" for this suite. @ 10/21/23 12:36:13.062
• [4.075 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 10/21/23 12:36:13.069
  Oct 21 12:36:13.069: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 12:36:13.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:36:13.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:36:13.087
  STEP: Creating configMap with name configmap-test-upd-334ac249-a765-42ea-b456-3024a3a850e4 @ 10/21/23 12:36:13.092
  STEP: Creating the pod @ 10/21/23 12:36:13.096
  STEP: Waiting for pod with text data @ 10/21/23 12:36:15.111
  STEP: Waiting for pod with binary data @ 10/21/23 12:36:15.117
  Oct 21 12:36:15.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5347" for this suite. @ 10/21/23 12:36:15.126
• [2.063 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 10/21/23 12:36:15.132
  Oct 21 12:36:15.132: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 12:36:15.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:36:15.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:36:15.152
  STEP: Setting up server cert @ 10/21/23 12:36:15.175
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 12:36:15.335
  STEP: Deploying the webhook pod @ 10/21/23 12:36:15.343
  STEP: Wait for the deployment to be ready @ 10/21/23 12:36:15.356
  Oct 21 12:36:15.365: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/21/23 12:36:17.374
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 12:36:17.383
  Oct 21 12:36:18.383: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/21/23 12:36:18.389
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/21/23 12:36:18.404
  STEP: Creating a dummy validating-webhook-configuration object @ 10/21/23 12:36:18.417
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/21/23 12:36:18.424
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/21/23 12:36:18.429
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/21/23 12:36:18.437
  Oct 21 12:36:18.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7691" for this suite. @ 10/21/23 12:36:18.49
  STEP: Destroying namespace "webhook-markers-5969" for this suite. @ 10/21/23 12:36:18.496
• [3.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 10/21/23 12:36:18.502
  Oct 21 12:36:18.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:36:18.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:36:18.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:36:18.52
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 12:36:18.523
  STEP: Saw pod success @ 10/21/23 12:36:22.54
  Oct 21 12:36:22.543: INFO: Trying to get logs from node ip-172-31-41-152 pod downwardapi-volume-14623b86-7ac6-47f0-864d-79f6092fe867 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 12:36:22.558
  Oct 21 12:36:22.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7529" for this suite. @ 10/21/23 12:36:22.574
• [4.078 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 10/21/23 12:36:22.58
  Oct 21 12:36:22.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 12:36:22.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:36:22.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:36:22.6
  STEP: Creating pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488 @ 10/21/23 12:36:22.602
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 12:36:24.617
  Oct 21 12:36:24.619: INFO: Initial restart count of pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b is 0
  Oct 21 12:36:24.622: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:26.627: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:28.631: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:30.635: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:32.640: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:34.644: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:36.648: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:38.652: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:40.656: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:42.660: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:44.664: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:46.669: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:48.672: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:50.676: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:52.680: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:54.683: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:56.687: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:36:58.691: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:00.694: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:02.698: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:04.701: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:06.705: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:08.709: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:10.714: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:12.717: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:14.722: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:16.725: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:18.729: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:20.733: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:22.737: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:24.742: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:26.746: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:28.750: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:30.754: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:32.758: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:34.762: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:36.767: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:38.770: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:40.774: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:42.778: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:44.784: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:46.788: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:48.791: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:50.795: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:52.798: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:54.802: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:56.807: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:37:58.811: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:00.814: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:02.819: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:04.823: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:06.828: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:08.831: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:10.835: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:12.839: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:14.842: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:16.846: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:18.851: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:20.855: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:22.858: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:24.862: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:26.867: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:28.870: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:30.874: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:32.877: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:34.881: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:36.885: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:38.889: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:40.894: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:42.898: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:44.902: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:46.907: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:48.912: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:50.916: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:52.921: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:54.924: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:56.928: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:38:58.933: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:00.937: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:02.941: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:04.945: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:06.950: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:08.953: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:10.957: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:12.962: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:14.966: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:16.970: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:18.973: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:20.977: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:22.981: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:24.985: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:26.990: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:28.993: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:30.998: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:33.001: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:35.005: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:37.009: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:39.013: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:41.017: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:43.023: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:45.029: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:47.033: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:49.037: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:51.041: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:53.045: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:55.049: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:57.054: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:39:59.057: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:01.061: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:03.065: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:05.069: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:07.074: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:09.077: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:11.081: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:13.085: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:15.089: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:17.099: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:19.103: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:21.106: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:23.110: INFO: Get pod test-webserver-6f535292-4450-4660-8513-ca87f11dc05b in namespace container-probe-9488
  Oct 21 12:40:25.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 12:40:25.115
  STEP: Destroying namespace "container-probe-9488" for this suite. @ 10/21/23 12:40:25.124
• [242.550 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 10/21/23 12:40:25.13
  Oct 21 12:40:25.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:40:25.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:40:25.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:40:25.15
  STEP: Creating configMap with name projected-configmap-test-volume-7e9fdca2-a6a0-44d8-abee-396b74ccf75b @ 10/21/23 12:40:25.153
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:40:25.157
  STEP: Saw pod success @ 10/21/23 12:40:29.178
  Oct 21 12:40:29.181: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-configmaps-6283ed0f-1193-4abc-a37e-0ca658222101 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:40:29.196
  Oct 21 12:40:29.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5581" for this suite. @ 10/21/23 12:40:29.211
• [4.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/21/23 12:40:29.216
  Oct 21 12:40:29.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename watch @ 10/21/23 12:40:29.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:40:29.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:40:29.234
  STEP: creating a watch on configmaps @ 10/21/23 12:40:29.236
  STEP: creating a new configmap @ 10/21/23 12:40:29.238
  STEP: modifying the configmap once @ 10/21/23 12:40:29.241
  STEP: closing the watch once it receives two notifications @ 10/21/23 12:40:29.247
  Oct 21 12:40:29.247: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3868  ad5dcb9e-704c-4458-a070-4e30204db90b 14022 0 2023-10-21 12:40:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-21 12:40:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:40:29.247: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3868  ad5dcb9e-704c-4458-a070-4e30204db90b 14023 0 2023-10-21 12:40:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-21 12:40:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/21/23 12:40:29.247
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/21/23 12:40:29.255
  STEP: deleting the configmap @ 10/21/23 12:40:29.256
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/21/23 12:40:29.261
  Oct 21 12:40:29.261: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3868  ad5dcb9e-704c-4458-a070-4e30204db90b 14024 0 2023-10-21 12:40:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-21 12:40:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:40:29.261: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3868  ad5dcb9e-704c-4458-a070-4e30204db90b 14025 0 2023-10-21 12:40:29 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-21 12:40:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 12:40:29.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3868" for this suite. @ 10/21/23 12:40:29.265
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 10/21/23 12:40:29.271
  Oct 21 12:40:29.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename disruption @ 10/21/23 12:40:29.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:40:29.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:40:29.335
  STEP: creating the pdb @ 10/21/23 12:40:29.34
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:40:29.343
  STEP: updating the pdb @ 10/21/23 12:40:31.351
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:40:31.358
  STEP: patching the pdb @ 10/21/23 12:40:33.365
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:40:33.374
  STEP: Waiting for the pdb to be deleted @ 10/21/23 12:40:35.387
  Oct 21 12:40:35.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1776" for this suite. @ 10/21/23 12:40:35.393
• [6.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 10/21/23 12:40:35.398
  Oct 21 12:40:35.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 12:40:35.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:40:35.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:40:35.417
  STEP: Creating configMap with name configmap-test-volume-2e4b615c-85f3-43a2-b0c1-f371e029278d @ 10/21/23 12:40:35.419
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:40:35.423
  STEP: Saw pod success @ 10/21/23 12:40:39.444
  Oct 21 12:40:39.446: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-13de7d12-8bca-4d67-8065-699810d46564 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:40:39.452
  Oct 21 12:40:39.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3293" for this suite. @ 10/21/23 12:40:39.47
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/21/23 12:40:39.475
  Oct 21 12:40:39.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename cronjob @ 10/21/23 12:40:39.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:40:39.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:40:39.493
  STEP: Creating a suspended cronjob @ 10/21/23 12:40:39.496
  STEP: Ensuring no jobs are scheduled @ 10/21/23 12:40:39.5
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/21/23 12:45:39.509
  STEP: Removing cronjob @ 10/21/23 12:45:39.512
  Oct 21 12:45:39.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2195" for this suite. @ 10/21/23 12:45:39.523
• [300.054 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 10/21/23 12:45:39.53
  Oct 21 12:45:39.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename endpointslice @ 10/21/23 12:45:39.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:45:39.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:45:39.602
  Oct 21 12:45:39.614: INFO: Endpoints addresses: [172.31.10.176 172.31.83.54] , ports: [6443]
  Oct 21 12:45:39.614: INFO: EndpointSlices addresses: [172.31.10.176 172.31.83.54] , ports: [6443]
  Oct 21 12:45:39.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3624" for this suite. @ 10/21/23 12:45:39.618
• [0.094 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 10/21/23 12:45:39.624
  Oct 21 12:45:39.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:45:39.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:45:39.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:45:39.65
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 12:45:39.655
  STEP: Saw pod success @ 10/21/23 12:45:43.676
  Oct 21 12:45:43.679: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-7ac34d46-d1af-4c8d-b7df-af4262785682 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 12:45:43.693
  Oct 21 12:45:43.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7054" for this suite. @ 10/21/23 12:45:43.709
• [4.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 10/21/23 12:45:43.715
  Oct 21 12:45:43.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:45:43.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:45:43.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:45:43.735
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 12:45:43.737
  STEP: Saw pod success @ 10/21/23 12:45:47.759
  Oct 21 12:45:47.764: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-6b5f4525-ceff-4c25-b658-96d8644324cc container client-container: <nil>
  STEP: delete the pod @ 10/21/23 12:45:47.771
  Oct 21 12:45:47.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3742" for this suite. @ 10/21/23 12:45:47.789
• [4.079 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/21/23 12:45:47.794
  Oct 21 12:45:47.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename init-container @ 10/21/23 12:45:47.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:45:47.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:45:47.815
  STEP: creating the pod @ 10/21/23 12:45:47.817
  Oct 21 12:45:47.817: INFO: PodSpec: initContainers in spec.initContainers
  Oct 21 12:46:31.047: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-b3dd11c4-2c75-4d7c-b064-f9c1aa70b508", GenerateName:"", Namespace:"init-container-3778", SelfLink:"", UID:"1f251d45-720b-4735-a0c4-57e6062c909c", ResourceVersion:"14933", Generation:0, CreationTimestamp:time.Date(2023, time.October, 21, 12, 45, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"817568156"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 21, 12, 45, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003943830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 21, 12, 46, 31, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003943860), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-wztx2", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004511a60), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wztx2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wztx2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wztx2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004664558), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-83-52", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0003c5180), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0046645e0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004664600)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004664608), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00466460c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000e54d90), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 21, 12, 45, 47, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 21, 12, 45, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 21, 12, 45, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 21, 12, 45, 47, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.83.52", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.47.134", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.47.134"}}, StartTime:time.Date(2023, time.October, 21, 12, 45, 47, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003c5260)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003c52d0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://b9d795db886863f6607bce7f2d4f25d7858ff31f41eb803cfb66802b4e57c9e1", Started:(*bool)(0xc0046646aa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004511ae0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0046646bf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004511ac0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00466468f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Oct 21 12:46:31.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3778" for this suite. @ 10/21/23 12:46:31.052
• [43.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 10/21/23 12:46:31.06
  Oct 21 12:46:31.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename field-validation @ 10/21/23 12:46:31.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:46:31.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:46:31.079
  Oct 21 12:46:31.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:46:34.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6745" for this suite. @ 10/21/23 12:46:34.166
• [3.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 10/21/23 12:46:34.171
  Oct 21 12:46:34.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:46:34.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:46:34.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:46:34.19
  STEP: Creating configMap with name projected-configmap-test-volume-07f8e18b-ad9f-418d-8b5e-4c5bef798911 @ 10/21/23 12:46:34.193
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:46:34.197
  STEP: Saw pod success @ 10/21/23 12:46:38.218
  Oct 21 12:46:38.221: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-projected-configmaps-ca1fdfc7-bcc2-4e18-b90f-7059efd93185 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 12:46:38.237
  Oct 21 12:46:38.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1124" for this suite. @ 10/21/23 12:46:38.252
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/21/23 12:46:38.257
  Oct 21 12:46:38.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename daemonsets @ 10/21/23 12:46:38.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:46:38.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:46:38.276
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/21/23 12:46:38.293
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/21/23 12:46:38.297
  Oct 21 12:46:38.300: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:38.300: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:38.304: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 12:46:38.304: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  Oct 21 12:46:39.308: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:39.308: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:39.312: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 21 12:46:39.312: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  Oct 21 12:46:40.307: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:40.307: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:40.310: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 12:46:40.310: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/21/23 12:46:40.313
  Oct 21 12:46:40.326: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:40.327: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:46:40.329: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 12:46:40.329: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/21/23 12:46:40.329
  STEP: Deleting DaemonSet "daemon-set" @ 10/21/23 12:46:41.342
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3253, will wait for the garbage collector to delete the pods @ 10/21/23 12:46:41.342
  Oct 21 12:46:41.402: INFO: Deleting DaemonSet.extensions daemon-set took: 6.378298ms
  Oct 21 12:46:41.503: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.752196ms
  Oct 21 12:46:42.807: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 12:46:42.807: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 21 12:46:42.809: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15132"},"items":null}

  Oct 21 12:46:42.812: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15132"},"items":null}

  Oct 21 12:46:42.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3253" for this suite. @ 10/21/23 12:46:42.827
• [4.575 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/21/23 12:46:42.832
  Oct 21 12:46:42.833: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-runtime @ 10/21/23 12:46:42.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:46:42.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:46:42.852
  STEP: create the container @ 10/21/23 12:46:42.855
  W1021 12:46:42.863497      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/21/23 12:46:42.863
  STEP: get the container status @ 10/21/23 12:46:45.879
  STEP: the container should be terminated @ 10/21/23 12:46:45.881
  STEP: the termination message should be set @ 10/21/23 12:46:45.881
  Oct 21 12:46:45.881: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/21/23 12:46:45.881
  Oct 21 12:46:45.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8563" for this suite. @ 10/21/23 12:46:45.897
• [3.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 10/21/23 12:46:45.903
  Oct 21 12:46:45.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename field-validation @ 10/21/23 12:46:45.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:46:45.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:46:45.971
  STEP: apply creating a deployment @ 10/21/23 12:46:45.974
  Oct 21 12:46:45.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4483" for this suite. @ 10/21/23 12:46:45.991
• [0.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 10/21/23 12:46:45.997
  Oct 21 12:46:45.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-preemption @ 10/21/23 12:46:45.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:46:46.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:46:46.019
  Oct 21 12:46:46.034: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 21 12:47:46.054: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/21/23 12:47:46.057
  Oct 21 12:47:46.072: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct 21 12:47:46.079: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct 21 12:47:46.093: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct 21 12:47:46.099: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct 21 12:47:46.113: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct 21 12:47:46.123: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/21/23 12:47:46.123
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/21/23 12:47:48.144
  Oct 21 12:47:52.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6797" for this suite. @ 10/21/23 12:47:52.239
• [66.249 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/21/23 12:47:52.246
  Oct 21 12:47:52.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename subpath @ 10/21/23 12:47:52.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:47:52.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:47:52.266
  STEP: Setting up data @ 10/21/23 12:47:52.268
  STEP: Creating pod pod-subpath-test-projected-f955 @ 10/21/23 12:47:52.276
  STEP: Creating a pod to test atomic-volume-subpath @ 10/21/23 12:47:52.276
  STEP: Saw pod success @ 10/21/23 12:48:16.335
  Oct 21 12:48:16.339: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-subpath-test-projected-f955 container test-container-subpath-projected-f955: <nil>
  STEP: delete the pod @ 10/21/23 12:48:16.355
  STEP: Deleting pod pod-subpath-test-projected-f955 @ 10/21/23 12:48:16.374
  Oct 21 12:48:16.374: INFO: Deleting pod "pod-subpath-test-projected-f955" in namespace "subpath-3960"
  Oct 21 12:48:16.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3960" for this suite. @ 10/21/23 12:48:16.381
• [24.139 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 10/21/23 12:48:16.386
  Oct 21 12:48:16.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pod-network-test @ 10/21/23 12:48:16.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:48:16.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:48:16.406
  STEP: Performing setup for networking test in namespace pod-network-test-5498 @ 10/21/23 12:48:16.408
  STEP: creating a selector @ 10/21/23 12:48:16.409
  STEP: Creating the service pods in kubernetes @ 10/21/23 12:48:16.409
  Oct 21 12:48:16.409: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/21/23 12:48:38.492
  Oct 21 12:48:40.517: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 21 12:48:40.517: INFO: Going to poll 192.168.45.214 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 21 12:48:40.520: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.45.214:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5498 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:48:40.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:48:40.520: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:48:40.520: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5498/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.45.214%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 21 12:48:40.590: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct 21 12:48:40.591: INFO: Going to poll 192.168.116.201 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 21 12:48:40.594: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.116.201:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5498 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:48:40.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:48:40.595: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:48:40.595: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5498/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.116.201%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 21 12:48:40.661: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct 21 12:48:40.661: INFO: Going to poll 192.168.47.138 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 21 12:48:40.664: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.47.138:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5498 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:48:40.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:48:40.665: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:48:40.665: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5498/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.47.138%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 21 12:48:40.729: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct 21 12:48:40.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5498" for this suite. @ 10/21/23 12:48:40.733
• [24.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 10/21/23 12:48:40.74
  Oct 21 12:48:40.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sysctl @ 10/21/23 12:48:40.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:48:40.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:48:40.76
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/21/23 12:48:40.763
  Oct 21 12:48:40.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3576" for this suite. @ 10/21/23 12:48:40.77
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/21/23 12:48:40.777
  Oct 21 12:48:40.777: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename daemonsets @ 10/21/23 12:48:40.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:48:40.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:48:40.794
  STEP: Creating simple DaemonSet "daemon-set" @ 10/21/23 12:48:40.812
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/21/23 12:48:40.817
  Oct 21 12:48:40.820: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:40.820: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:40.823: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 12:48:40.823: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  Oct 21 12:48:41.828: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:41.828: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:41.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 12:48:41.831: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  Oct 21 12:48:42.827: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:42.827: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:42.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 12:48:42.831: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/21/23 12:48:42.833
  Oct 21 12:48:42.847: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:42.847: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:42.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 21 12:48:42.849: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  Oct 21 12:48:43.854: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:43.854: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:43.857: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 21 12:48:43.857: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  Oct 21 12:48:44.853: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:44.853: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:48:44.856: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 12:48:44.856: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/21/23 12:48:44.859
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6127, will wait for the garbage collector to delete the pods @ 10/21/23 12:48:44.859
  Oct 21 12:48:44.918: INFO: Deleting DaemonSet.extensions daemon-set took: 5.459722ms
  Oct 21 12:48:45.019: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.212177ms
  Oct 21 12:48:46.023: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 12:48:46.023: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 21 12:48:46.027: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15881"},"items":null}

  Oct 21 12:48:46.032: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15882"},"items":null}

  Oct 21 12:48:46.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6127" for this suite. @ 10/21/23 12:48:46.052
• [5.280 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/21/23 12:48:46.058
  Oct 21 12:48:46.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 12:48:46.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:48:46.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:48:46.077
  STEP: Creating secret with name secret-test-map-c5bdee6c-50dc-42bf-83db-b1df44a42c94 @ 10/21/23 12:48:46.094
  STEP: Creating a pod to test consume secrets @ 10/21/23 12:48:46.101
  STEP: Saw pod success @ 10/21/23 12:48:50.125
  Oct 21 12:48:50.128: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-secrets-5e5cec54-c8e6-4534-a492-bbc4fad06388 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 12:48:50.14
  Oct 21 12:48:50.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8025" for this suite. @ 10/21/23 12:48:50.159
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 10/21/23 12:48:50.165
  Oct 21 12:48:50.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pod-network-test @ 10/21/23 12:48:50.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:48:50.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:48:50.184
  STEP: Performing setup for networking test in namespace pod-network-test-3234 @ 10/21/23 12:48:50.187
  STEP: creating a selector @ 10/21/23 12:48:50.187
  STEP: Creating the service pods in kubernetes @ 10/21/23 12:48:50.187
  Oct 21 12:48:50.187: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/21/23 12:49:02.256
  Oct 21 12:49:04.275: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 21 12:49:04.275: INFO: Breadth first check of 192.168.45.204 on host 172.31.41.152...
  Oct 21 12:49:04.278: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.47.171:9080/dial?request=hostname&protocol=udp&host=192.168.45.204&port=8081&tries=1'] Namespace:pod-network-test-3234 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:49:04.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:49:04.278: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:49:04.278: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3234/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.47.171%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.45.204%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 21 12:49:04.349: INFO: Waiting for responses: map[]
  Oct 21 12:49:04.349: INFO: reached 192.168.45.204 after 0/1 tries
  Oct 21 12:49:04.349: INFO: Breadth first check of 192.168.116.204 on host 172.31.65.2...
  Oct 21 12:49:04.353: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.47.171:9080/dial?request=hostname&protocol=udp&host=192.168.116.204&port=8081&tries=1'] Namespace:pod-network-test-3234 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:49:04.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:49:04.353: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:49:04.354: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3234/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.47.171%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.116.204%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 21 12:49:04.428: INFO: Waiting for responses: map[]
  Oct 21 12:49:04.428: INFO: reached 192.168.116.204 after 0/1 tries
  Oct 21 12:49:04.428: INFO: Breadth first check of 192.168.47.166 on host 172.31.83.52...
  Oct 21 12:49:04.432: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.47.171:9080/dial?request=hostname&protocol=udp&host=192.168.47.166&port=8081&tries=1'] Namespace:pod-network-test-3234 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 12:49:04.432: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:49:04.432: INFO: ExecWithOptions: Clientset creation
  Oct 21 12:49:04.432: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3234/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.47.171%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.47.166%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 21 12:49:04.500: INFO: Waiting for responses: map[]
  Oct 21 12:49:04.500: INFO: reached 192.168.47.166 after 0/1 tries
  Oct 21 12:49:04.500: INFO: Going to retry 0 out of 3 pods....
  Oct 21 12:49:04.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3234" for this suite. @ 10/21/23 12:49:04.504
• [14.346 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/21/23 12:49:04.511
  Oct 21 12:49:04.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 12:49:04.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:04.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:04.53
  STEP: Creating secret with name secret-test-map-0837f720-2929-4a2a-acba-7d8933f3a7e7 @ 10/21/23 12:49:04.532
  STEP: Creating a pod to test consume secrets @ 10/21/23 12:49:04.536
  STEP: Saw pod success @ 10/21/23 12:49:08.559
  Oct 21 12:49:08.564: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-secrets-2a07abde-cce9-4d06-b5b0-037748c50950 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 12:49:08.573
  Oct 21 12:49:08.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8651" for this suite. @ 10/21/23 12:49:08.594
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 10/21/23 12:49:08.607
  Oct 21 12:49:08.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 12:49:08.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:08.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:08.63
  STEP: Creating secret with name secret-test-1c2198b1-a86c-4224-9875-3d0575658a87 @ 10/21/23 12:49:08.634
  STEP: Creating a pod to test consume secrets @ 10/21/23 12:49:08.638
  STEP: Saw pod success @ 10/21/23 12:49:12.656
  Oct 21 12:49:12.660: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-secrets-a41926b9-5ea4-4b1a-999f-470991a4fe3c container secret-env-test: <nil>
  STEP: delete the pod @ 10/21/23 12:49:12.666
  Oct 21 12:49:12.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3989" for this suite. @ 10/21/23 12:49:12.683
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 10/21/23 12:49:12.689
  Oct 21 12:49:12.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:49:12.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:12.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:12.714
  STEP: creating all guestbook components @ 10/21/23 12:49:12.72
  Oct 21 12:49:12.721: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Oct 21 12:49:12.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 create -f -'
  Oct 21 12:49:13.111: INFO: stderr: ""
  Oct 21 12:49:13.111: INFO: stdout: "service/agnhost-replica created\n"
  Oct 21 12:49:13.112: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Oct 21 12:49:13.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 create -f -'
  Oct 21 12:49:13.276: INFO: stderr: ""
  Oct 21 12:49:13.276: INFO: stdout: "service/agnhost-primary created\n"
  Oct 21 12:49:13.276: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Oct 21 12:49:13.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 create -f -'
  Oct 21 12:49:13.430: INFO: stderr: ""
  Oct 21 12:49:13.430: INFO: stdout: "service/frontend created\n"
  Oct 21 12:49:13.430: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Oct 21 12:49:13.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 create -f -'
  Oct 21 12:49:13.555: INFO: stderr: ""
  Oct 21 12:49:13.555: INFO: stdout: "deployment.apps/frontend created\n"
  Oct 21 12:49:13.555: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct 21 12:49:13.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 create -f -'
  Oct 21 12:49:13.689: INFO: stderr: ""
  Oct 21 12:49:13.689: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Oct 21 12:49:13.689: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct 21 12:49:13.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 create -f -'
  Oct 21 12:49:13.810: INFO: stderr: ""
  Oct 21 12:49:13.810: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/21/23 12:49:13.81
  Oct 21 12:49:13.810: INFO: Waiting for all frontend pods to be Running.
  Oct 21 12:49:18.860: INFO: Waiting for frontend to serve content.
  Oct 21 12:49:18.872: INFO: Trying to add a new entry to the guestbook.
  Oct 21 12:49:18.882: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/21/23 12:49:18.889
  Oct 21 12:49:18.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 delete --grace-period=0 --force -f -'
  Oct 21 12:49:18.950: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 12:49:18.950: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/21/23 12:49:18.95
  Oct 21 12:49:18.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 delete --grace-period=0 --force -f -'
  Oct 21 12:49:19.009: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 12:49:19.009: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/21/23 12:49:19.01
  Oct 21 12:49:19.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 delete --grace-period=0 --force -f -'
  Oct 21 12:49:19.084: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 12:49:19.084: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/21/23 12:49:19.084
  Oct 21 12:49:19.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 delete --grace-period=0 --force -f -'
  Oct 21 12:49:19.135: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 12:49:19.135: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/21/23 12:49:19.136
  Oct 21 12:49:19.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 delete --grace-period=0 --force -f -'
  Oct 21 12:49:19.202: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 12:49:19.202: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/21/23 12:49:19.203
  Oct 21 12:49:19.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7317 delete --grace-period=0 --force -f -'
  Oct 21 12:49:19.266: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 12:49:19.266: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Oct 21 12:49:19.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7317" for this suite. @ 10/21/23 12:49:19.269
• [6.586 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 10/21/23 12:49:19.275
  Oct 21 12:49:19.275: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:49:19.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:19.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:19.297
  Oct 21 12:49:19.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-5534 version'
  Oct 21 12:49:19.432: INFO: stderr: ""
  Oct 21 12:49:19.432: INFO: stdout: "Client Version: v1.28.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.3\n"
  Oct 21 12:49:19.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5534" for this suite. @ 10/21/23 12:49:19.436
• [0.168 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 10/21/23 12:49:19.443
  Oct 21 12:49:19.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename disruption @ 10/21/23 12:49:19.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:19.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:19.461
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/21/23 12:49:19.465
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:49:19.47
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/21/23 12:49:21.482
  STEP: Waiting for all pods to be running @ 10/21/23 12:49:21.482
  Oct 21 12:49:21.486: INFO: pods: 0 < 3
  STEP: locating a running pod @ 10/21/23 12:49:23.49
  STEP: Updating the pdb to allow a pod to be evicted @ 10/21/23 12:49:23.5
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:49:23.509
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/21/23 12:49:25.515
  STEP: Waiting for all pods to be running @ 10/21/23 12:49:25.515
  STEP: Waiting for the pdb to observed all healthy pods @ 10/21/23 12:49:25.518
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/21/23 12:49:25.541
  STEP: Waiting for the pdb to be processed @ 10/21/23 12:49:25.559
  STEP: Waiting for all pods to be running @ 10/21/23 12:49:27.566
  STEP: locating a running pod @ 10/21/23 12:49:27.569
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/21/23 12:49:27.577
  STEP: Waiting for the pdb to be deleted @ 10/21/23 12:49:27.582
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/21/23 12:49:27.585
  STEP: Waiting for all pods to be running @ 10/21/23 12:49:27.585
  Oct 21 12:49:27.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4346" for this suite. @ 10/21/23 12:49:27.604
• [8.184 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 10/21/23 12:49:27.627
  Oct 21 12:49:27.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/21/23 12:49:27.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:27.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:27.643
  Oct 21 12:49:27.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 12:49:33.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7436" for this suite. @ 10/21/23 12:49:33.821
• [6.200 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 10/21/23 12:49:33.827
  Oct 21 12:49:33.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:49:33.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:33.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:33.845
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 12:49:33.862
  STEP: Saw pod success @ 10/21/23 12:49:37.89
  Oct 21 12:49:37.894: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-05c59701-f96f-48d7-8d5d-355747ca7b76 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 12:49:37.899
  Oct 21 12:49:37.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-91" for this suite. @ 10/21/23 12:49:37.915
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 10/21/23 12:49:37.921
  Oct 21 12:49:37.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 12:49:37.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:37.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:37.941
  STEP: fetching services @ 10/21/23 12:49:37.944
  Oct 21 12:49:37.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4202" for this suite. @ 10/21/23 12:49:37.95
• [0.034 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 10/21/23 12:49:37.955
  Oct 21 12:49:37.955: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename cronjob @ 10/21/23 12:49:37.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:49:37.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:49:37.983
  STEP: Creating a ReplaceConcurrent cronjob @ 10/21/23 12:49:37.986
  STEP: Ensuring a job is scheduled @ 10/21/23 12:49:37.99
  STEP: Ensuring exactly one is scheduled @ 10/21/23 12:50:01.994
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/21/23 12:50:01.997
  STEP: Ensuring the job is replaced with a new one @ 10/21/23 12:50:02
  STEP: Removing cronjob @ 10/21/23 12:51:02.004
  Oct 21 12:51:02.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7959" for this suite. @ 10/21/23 12:51:02.014
• [84.066 seconds]
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 10/21/23 12:51:02.021
  Oct 21 12:51:02.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 12:51:02.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:51:02.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:51:02.042
  Oct 21 12:51:02.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5657" for this suite. @ 10/21/23 12:51:02.079
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 10/21/23 12:51:02.085
  Oct 21 12:51:02.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-pred @ 10/21/23 12:51:02.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:51:02.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:51:02.103
  Oct 21 12:51:02.106: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 21 12:51:02.112: INFO: Waiting for terminating namespaces to be deleted...
  Oct 21 12:51:02.115: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-152 before test
  Oct 21 12:51:02.119: INFO: replace-28298211-69j49 from cronjob-7959 started at 2023-10-21 12:51:00 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.119: INFO: 	Container c ready: true, restart count 0
  Oct 21 12:51:02.119: INFO: nginx-ingress-controller-kubernetes-worker-pgmxk from ingress-nginx-kubernetes-worker started at 2023-10-21 12:15:53 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.119: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 12:51:02.119: INFO: calico-node-pdjzp from kube-system started at 2023-10-21 12:14:46 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.119: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 12:51:02.119: INFO: sonobuoy-e2e-job-dc9fd44093224134 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 12:51:02.119: INFO: 	Container e2e ready: true, restart count 0
  Oct 21 12:51:02.119: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 12:51:02.119: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-bqx4f from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 12:51:02.119: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 12:51:02.119: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 12:51:02.119: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-65-2 before test
  Oct 21 12:51:02.124: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvf5j from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: nginx-ingress-controller-kubernetes-worker-sf86b from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: calico-node-lttm5 from kube-system started at 2023-10-21 12:12:23 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: coredns-59cfb5bf46-4s8zg from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container coredns ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: kube-state-metrics-775d9f4f79-qbqgv from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: metrics-server-v0.6.3-69d7fbfdf8-n4sg7 from kube-system started at 2023-10-21 12:12:56 +0000 UTC (2 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: dashboard-metrics-scraper-5dd7cb5fc-gpj8d from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: kubernetes-dashboard-7b899cb9d9-2dfs9 from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-st954 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 12:51:02.124: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 12:51:02.124: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-83-52 before test
  Oct 21 12:51:02.128: INFO: replace-28298210-dndbc from cronjob-7959 started at 2023-10-21 12:50:00 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.128: INFO: 	Container c ready: true, restart count 0
  Oct 21 12:51:02.128: INFO: nginx-ingress-controller-kubernetes-worker-cbn5x from ingress-nginx-kubernetes-worker started at 2023-10-21 12:15:25 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.128: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 12:51:02.128: INFO: calico-node-dfp9j from kube-system started at 2023-10-21 12:14:49 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.128: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 12:51:02.128: INFO: sonobuoy from sonobuoy started at 2023-10-21 12:21:43 +0000 UTC (1 container statuses recorded)
  Oct 21 12:51:02.128: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 21 12:51:02.128: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-sq7tr from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 12:51:02.128: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 12:51:02.128: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/21/23 12:51:02.128
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/21/23 12:51:04.146
  STEP: Trying to apply a random label on the found node. @ 10/21/23 12:51:04.157
  STEP: verifying the node has the label kubernetes.io/e2e-69b594b0-6903-4ca0-b129-1b887915507d 95 @ 10/21/23 12:51:04.164
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/21/23 12:51:04.167
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.83.52 on the node which pod4 resides and expect not scheduled @ 10/21/23 12:51:06.18
  STEP: removing the label kubernetes.io/e2e-69b594b0-6903-4ca0-b129-1b887915507d off the node ip-172-31-83-52 @ 10/21/23 12:56:06.187
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-69b594b0-6903-4ca0-b129-1b887915507d @ 10/21/23 12:56:06.198
  Oct 21 12:56:06.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2895" for this suite. @ 10/21/23 12:56:06.205
• [304.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 10/21/23 12:56:06.213
  Oct 21 12:56:06.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:56:06.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:06.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:06.243
  STEP: Creating configMap with name projected-configmap-test-volume-map-ca416ddb-9212-4b99-a636-469cfd3ecce3 @ 10/21/23 12:56:06.246
  STEP: Creating a pod to test consume configMaps @ 10/21/23 12:56:06.251
  STEP: Saw pod success @ 10/21/23 12:56:08.269
  Oct 21 12:56:08.272: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-projected-configmaps-9afd35a4-034d-4811-8d96-88787c7ae289 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 12:56:08.288
  Oct 21 12:56:08.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5598" for this suite. @ 10/21/23 12:56:08.307
• [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 10/21/23 12:56:08.314
  Oct 21 12:56:08.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:56:08.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:08.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:08.333
  STEP: Starting the proxy @ 10/21/23 12:56:08.336
  Oct 21 12:56:08.336: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-1719 proxy --unix-socket=/tmp/kubectl-proxy-unix1750407846/test'
  STEP: retrieving proxy /api/ output @ 10/21/23 12:56:08.367
  Oct 21 12:56:08.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1719" for this suite. @ 10/21/23 12:56:08.371
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 10/21/23 12:56:08.379
  Oct 21 12:56:08.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 12:56:08.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:08.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:08.403
  STEP: creating a Deployment @ 10/21/23 12:56:08.41
  Oct 21 12:56:08.410: INFO: Creating simple deployment test-deployment-sdjb6
  Oct 21 12:56:08.419: INFO: new replicaset for deployment "test-deployment-sdjb6" is yet to be created
  STEP: Getting /status @ 10/21/23 12:56:10.431
  Oct 21 12:56:10.435: INFO: Deployment test-deployment-sdjb6 has Conditions: [{Available True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sdjb6-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/21/23 12:56:10.435
  Oct 21 12:56:10.443: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 10, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 8, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-sdjb6-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/21/23 12:56:10.443
  Oct 21 12:56:10.445: INFO: Observed &Deployment event: ADDED
  Oct 21 12:56:10.445: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sdjb6-5d576bd769"}
  Oct 21 12:56:10.445: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.445: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sdjb6-5d576bd769"}
  Oct 21 12:56:10.445: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 21 12:56:10.445: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.445: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 21 12:56:10.445: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sdjb6-5d576bd769" is progressing.}
  Oct 21 12:56:10.446: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.446: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 21 12:56:10.446: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sdjb6-5d576bd769" has successfully progressed.}
  Oct 21 12:56:10.446: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.446: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 21 12:56:10.446: INFO: Observed Deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sdjb6-5d576bd769" has successfully progressed.}
  Oct 21 12:56:10.446: INFO: Found Deployment test-deployment-sdjb6 in namespace deployment-6088 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 21 12:56:10.446: INFO: Deployment test-deployment-sdjb6 has an updated status
  STEP: patching the Statefulset Status @ 10/21/23 12:56:10.446
  Oct 21 12:56:10.446: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 21 12:56:10.451: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/21/23 12:56:10.451
  Oct 21 12:56:10.453: INFO: Observed &Deployment event: ADDED
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sdjb6-5d576bd769"}
  Oct 21 12:56:10.453: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-sdjb6-5d576bd769"}
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 21 12:56:10.453: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:08 +0000 UTC 2023-10-21 12:56:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-sdjb6-5d576bd769" is progressing.}
  Oct 21 12:56:10.453: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sdjb6-5d576bd769" has successfully progressed.}
  Oct 21 12:56:10.453: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-21 12:56:10 +0000 UTC 2023-10-21 12:56:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-sdjb6-5d576bd769" has successfully progressed.}
  Oct 21 12:56:10.453: INFO: Observed deployment test-deployment-sdjb6 in namespace deployment-6088 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 21 12:56:10.454: INFO: Observed &Deployment event: MODIFIED
  Oct 21 12:56:10.454: INFO: Found deployment test-deployment-sdjb6 in namespace deployment-6088 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Oct 21 12:56:10.454: INFO: Deployment test-deployment-sdjb6 has a patched status
  Oct 21 12:56:10.459: INFO: Deployment "test-deployment-sdjb6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-sdjb6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6088",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ae87f24-5a72-446b-a66c-62bef9801d1e",
      ResourceVersion: (string) (len=5) "17749",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-sdjb6-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 21 12:56:10.463: INFO: New ReplicaSet "test-deployment-sdjb6-5d576bd769" of Deployment "test-deployment-sdjb6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-sdjb6-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6088",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70343222-2393-49b9-a0c2-85f1229b647b",
      ResourceVersion: (string) (len=5) "17744",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-sdjb6",
          UID: (types.UID) (len=36) "0ae87f24-5a72-446b-a66c-62bef9801d1e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 61 65  |k:{\"uid\":\"0ae|
              00000120  38 37 66 32 34 2d 35 61  37 32 2d 34 34 36 62 2d  |87f24-5a72-446b-|
              00000130  61 36 36 63 2d 36 32 62  65 66 39 38 30 31 64 31  |a66c-62bef9801d1|
              00000140  65 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |e\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 12:56:10.468: INFO: Pod "test-deployment-sdjb6-5d576bd769-m52gt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-sdjb6-5d576bd769-m52gt",
      GenerateName: (string) (len=33) "test-deployment-sdjb6-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6088",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99a77293-35bc-4b51-8fc9-04a2e460bda1",
      ResourceVersion: (string) (len=5) "17743",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-sdjb6-5d576bd769",
          UID: (types.UID) (len=36) "70343222-2393-49b9-a0c2-85f1229b647b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 30 33 34 33 32 32  32 2d 32 33 39 33 2d 34  |"70343222-2393-4|
              000000a0  39 62 39 2d 61 30 63 32  2d 38 35 66 31 32 32 39  |9b9-a0c2-85f1229|
              000000b0  62 36 34 37 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b647b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 35 2e 32 34 30 5c 22  |192.168.45.240\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jz9n6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jz9n6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.45.240",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.45.240"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833489769,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ceed0f612d9bf30209a6a1e7c9c335eac413e00dd46c4869309a755e713bd9e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 12:56:10.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6088" for this suite. @ 10/21/23 12:56:10.473
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 10/21/23 12:56:10.48
  Oct 21 12:56:10.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-webhook @ 10/21/23 12:56:10.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:10.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:10.5
  STEP: Setting up server cert @ 10/21/23 12:56:10.502
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/21/23 12:56:10.758
  STEP: Deploying the custom resource conversion webhook pod @ 10/21/23 12:56:10.765
  STEP: Wait for the deployment to be ready @ 10/21/23 12:56:10.777
  Oct 21 12:56:10.783: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/21/23 12:56:12.792
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 12:56:12.802
  Oct 21 12:56:13.802: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct 21 12:56:13.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Creating a v1 custom resource @ 10/21/23 12:56:16.37
  STEP: v2 custom resource should be converted @ 10/21/23 12:56:16.376
  Oct 21 12:56:16.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7429" for this suite. @ 10/21/23 12:56:16.938
• [6.467 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/21/23 12:56:16.946
  Oct 21 12:56:16.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename daemonsets @ 10/21/23 12:56:16.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:16.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:16.968
  Oct 21 12:56:16.990: INFO: Create a RollingUpdate DaemonSet
  Oct 21 12:56:16.994: INFO: Check that daemon pods launch on every node of the cluster
  Oct 21 12:56:16.997: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:16.998: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:17.000: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 12:56:17.000: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  Oct 21 12:56:18.004: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:18.004: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:18.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 21 12:56:18.007: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  Oct 21 12:56:19.004: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:19.004: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:19.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 12:56:19.007: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Oct 21 12:56:19.007: INFO: Update the DaemonSet to trigger a rollout
  Oct 21 12:56:19.018: INFO: Updating DaemonSet daemon-set
  Oct 21 12:56:20.037: INFO: Roll back the DaemonSet before rollout is complete
  Oct 21 12:56:20.046: INFO: Updating DaemonSet daemon-set
  Oct 21 12:56:20.046: INFO: Make sure DaemonSet rollback is complete
  Oct 21 12:56:20.048: INFO: Wrong image for pod: daemon-set-zt9bd. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Oct 21 12:56:20.048: INFO: Pod daemon-set-zt9bd is not available
  Oct 21 12:56:20.051: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:20.051: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:21.059: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:21.059: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:22.055: INFO: Pod daemon-set-xs58d is not available
  Oct 21 12:56:22.059: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 12:56:22.059: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/21/23 12:56:22.065
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3731, will wait for the garbage collector to delete the pods @ 10/21/23 12:56:22.065
  Oct 21 12:56:22.125: INFO: Deleting DaemonSet.extensions daemon-set took: 5.560205ms
  Oct 21 12:56:22.225: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.128128ms
  Oct 21 12:56:25.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 12:56:25.229: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 21 12:56:25.232: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18050"},"items":null}

  Oct 21 12:56:25.234: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18050"},"items":null}

  Oct 21 12:56:25.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3731" for this suite. @ 10/21/23 12:56:25.248
• [8.308 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/21/23 12:56:25.255
  Oct 21 12:56:25.255: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 12:56:25.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:25.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:25.276
  Oct 21 12:56:25.286: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Oct 21 12:56:30.291: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/21/23 12:56:30.292
  Oct 21 12:56:30.292: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Oct 21 12:56:32.295: INFO: Creating deployment "test-rollover-deployment"
  Oct 21 12:56:32.303: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Oct 21 12:56:34.309: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Oct 21 12:56:34.315: INFO: Ensure that both replica sets have 1 created replica
  Oct 21 12:56:34.321: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Oct 21 12:56:34.328: INFO: Updating deployment test-rollover-deployment
  Oct 21 12:56:34.328: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Oct 21 12:56:36.335: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Oct 21 12:56:36.341: INFO: Make sure deployment "test-rollover-deployment" is complete
  Oct 21 12:56:36.346: INFO: all replica sets need to contain the pod-template-hash label
  Oct 21 12:56:36.346: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 21 12:56:38.353: INFO: all replica sets need to contain the pod-template-hash label
  Oct 21 12:56:38.353: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 21 12:56:40.355: INFO: all replica sets need to contain the pod-template-hash label
  Oct 21 12:56:40.355: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 21 12:56:42.353: INFO: all replica sets need to contain the pod-template-hash label
  Oct 21 12:56:42.354: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 21 12:56:44.353: INFO: all replica sets need to contain the pod-template-hash label
  Oct 21 12:56:44.353: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 12, 56, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 12, 56, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 21 12:56:46.354: INFO: 
  Oct 21 12:56:46.354: INFO: Ensure that both old replica sets have no replicas
  Oct 21 12:56:46.362: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70c531af-e707-4111-9da3-3734b0e92519",
      ResourceVersion: (string) (len=5) "18217",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489792,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 21 12:56:46.368: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c48c95e1-820d-45f6-a0a8-5755307f9b88",
      ResourceVersion: (string) (len=5) "18207",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "70c531af-e707-4111-9da3-3734b0e92519",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 30 63 35 33 31  61 66 2d 65 37 30 37 2d  |\"70c531af-e707-|
              00000120  34 31 31 31 2d 39 64 61  33 2d 33 37 33 34 62 30  |4111-9da3-3734b0|
              00000130  65 39 32 35 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e92519\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 12:56:46.369: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Oct 21 12:56:46.370: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08365af1-6f94-4f97-967e-1a69b676e7dc",
      ResourceVersion: (string) (len=5) "18216",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489785,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "70c531af-e707-4111-9da3-3734b0e92519",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 30 63 35 33 31 61 66  2d 65 37 30 37 2d 34 31  |70c531af-e707-41|
              000000c0  31 31 2d 39 64 61 33 2d  33 37 33 34 62 30 65 39  |11-9da3-3734b0e9|
              000000d0  32 35 31 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |2519\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 12:56:46.371: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5da37322-c253-4cc3-8cde-1a1677d9021f",
      ResourceVersion: (string) (len=5) "18166",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489792,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "70c531af-e707-4111-9da3-3734b0e92519",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 30 63 35 33 31  61 66 2d 65 37 30 37 2d  |\"70c531af-e707-|
              00000120  34 31 31 31 2d 39 64 61  33 2d 33 37 33 34 62 30  |4111-9da3-3734b0|
              00000130  65 39 32 35 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e92519\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 12:56:46.375: INFO: Pod "test-rollover-deployment-5d484bf7f9-fspk9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-fspk9",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-4234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6c3a60d-7555-4697-86bd-64b1b53305c4",
      ResourceVersion: (string) (len=5) "18185",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "c48c95e1-820d-45f6-a0a8-5755307f9b88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 34  38 63 39 35 65 31 2d 38  |d\":\"c48c95e1-8|
              00000090  32 30 64 2d 34 35 66 36  2d 61 30 61 38 2d 35 37  |20d-45f6-a0a8-57|
              000000a0  35 35 33 30 37 66 39 62  38 38 5c 22 7d 22 3a 7b  |55307f9b88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 35 33 5c 22  |192.168.47.153\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cmqvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cmqvz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833489794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833489794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833489795,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://ded11eee823fb176dc15950b24f7123649960c19f04ab4c9019c3c81af378a31",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 12:56:46.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4234" for this suite. @ 10/21/23 12:56:46.38
• [21.131 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 10/21/23 12:56:46.386
  Oct 21 12:56:46.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 12:56:46.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:46.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:46.404
  STEP: creating a replication controller @ 10/21/23 12:56:46.407
  Oct 21 12:56:46.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 create -f -'
  Oct 21 12:56:46.577: INFO: stderr: ""
  Oct 21 12:56:46.577: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/21/23 12:56:46.577
  Oct 21 12:56:46.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 21 12:56:46.647: INFO: stderr: ""
  Oct 21 12:56:46.647: INFO: stdout: "update-demo-nautilus-5bll2 update-demo-nautilus-jl2s4 "
  Oct 21 12:56:46.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-5bll2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 12:56:46.702: INFO: stderr: ""
  Oct 21 12:56:46.702: INFO: stdout: ""
  Oct 21 12:56:46.702: INFO: update-demo-nautilus-5bll2 is created but not running
  Oct 21 12:56:51.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 21 12:56:51.765: INFO: stderr: ""
  Oct 21 12:56:51.765: INFO: stdout: "update-demo-nautilus-5bll2 update-demo-nautilus-jl2s4 "
  Oct 21 12:56:51.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-5bll2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 12:56:51.813: INFO: stderr: ""
  Oct 21 12:56:51.813: INFO: stdout: "true"
  Oct 21 12:56:51.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-5bll2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 21 12:56:51.860: INFO: stderr: ""
  Oct 21 12:56:51.860: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 21 12:56:51.860: INFO: validating pod update-demo-nautilus-5bll2
  Oct 21 12:56:51.865: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 21 12:56:51.865: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 21 12:56:51.865: INFO: update-demo-nautilus-5bll2 is verified up and running
  Oct 21 12:56:51.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-jl2s4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 12:56:51.911: INFO: stderr: ""
  Oct 21 12:56:51.911: INFO: stdout: "true"
  Oct 21 12:56:51.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-jl2s4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 21 12:56:51.957: INFO: stderr: ""
  Oct 21 12:56:51.957: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 21 12:56:51.957: INFO: validating pod update-demo-nautilus-jl2s4
  Oct 21 12:56:51.962: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 21 12:56:51.962: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 21 12:56:51.962: INFO: update-demo-nautilus-jl2s4 is verified up and running
  STEP: scaling down the replication controller @ 10/21/23 12:56:51.962
  Oct 21 12:56:51.962: INFO: scanned /root for discovery docs: <nil>
  Oct 21 12:56:51.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Oct 21 12:56:53.027: INFO: stderr: ""
  Oct 21 12:56:53.027: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/21/23 12:56:53.027
  Oct 21 12:56:53.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 21 12:56:53.075: INFO: stderr: ""
  Oct 21 12:56:53.075: INFO: stdout: "update-demo-nautilus-5bll2 update-demo-nautilus-jl2s4 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 10/21/23 12:56:53.075
  Oct 21 12:56:58.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 21 12:56:58.122: INFO: stderr: ""
  Oct 21 12:56:58.122: INFO: stdout: "update-demo-nautilus-5bll2 "
  Oct 21 12:56:58.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-5bll2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 12:56:58.170: INFO: stderr: ""
  Oct 21 12:56:58.170: INFO: stdout: "true"
  Oct 21 12:56:58.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-5bll2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 21 12:56:58.217: INFO: stderr: ""
  Oct 21 12:56:58.217: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 21 12:56:58.217: INFO: validating pod update-demo-nautilus-5bll2
  Oct 21 12:56:58.220: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 21 12:56:58.220: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 21 12:56:58.220: INFO: update-demo-nautilus-5bll2 is verified up and running
  STEP: scaling up the replication controller @ 10/21/23 12:56:58.221
  Oct 21 12:56:58.221: INFO: scanned /root for discovery docs: <nil>
  Oct 21 12:56:58.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Oct 21 12:56:59.287: INFO: stderr: ""
  Oct 21 12:56:59.287: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/21/23 12:56:59.287
  Oct 21 12:56:59.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 21 12:56:59.336: INFO: stderr: ""
  Oct 21 12:56:59.336: INFO: stdout: "update-demo-nautilus-5bll2 update-demo-nautilus-bnnss "
  Oct 21 12:56:59.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-5bll2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 12:56:59.383: INFO: stderr: ""
  Oct 21 12:56:59.383: INFO: stdout: "true"
  Oct 21 12:56:59.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-5bll2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 21 12:56:59.430: INFO: stderr: ""
  Oct 21 12:56:59.430: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 21 12:56:59.430: INFO: validating pod update-demo-nautilus-5bll2
  Oct 21 12:56:59.434: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 21 12:56:59.434: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 21 12:56:59.434: INFO: update-demo-nautilus-5bll2 is verified up and running
  Oct 21 12:56:59.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-bnnss -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 12:56:59.481: INFO: stderr: ""
  Oct 21 12:56:59.481: INFO: stdout: "true"
  Oct 21 12:56:59.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods update-demo-nautilus-bnnss -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 21 12:56:59.527: INFO: stderr: ""
  Oct 21 12:56:59.527: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 21 12:56:59.527: INFO: validating pod update-demo-nautilus-bnnss
  Oct 21 12:56:59.532: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 21 12:56:59.532: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 21 12:56:59.532: INFO: update-demo-nautilus-bnnss is verified up and running
  STEP: using delete to clean up resources @ 10/21/23 12:56:59.532
  Oct 21 12:56:59.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 delete --grace-period=0 --force -f -'
  Oct 21 12:56:59.583: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 12:56:59.583: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct 21 12:56:59.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get rc,svc -l name=update-demo --no-headers'
  Oct 21 12:56:59.651: INFO: stderr: "No resources found in kubectl-77 namespace.\n"
  Oct 21 12:56:59.651: INFO: stdout: ""
  Oct 21 12:56:59.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-77 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 21 12:56:59.704: INFO: stderr: ""
  Oct 21 12:56:59.704: INFO: stdout: ""
  Oct 21 12:56:59.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-77" for this suite. @ 10/21/23 12:56:59.708
• [13.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/21/23 12:56:59.715
  Oct 21 12:56:59.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:56:59.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:56:59.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:56:59.735
  STEP: Creating projection with secret that has name projected-secret-test-a621aaa4-d55a-4c2d-a79e-a1155c28f38f @ 10/21/23 12:56:59.738
  STEP: Creating a pod to test consume secrets @ 10/21/23 12:56:59.741
  STEP: Saw pod success @ 10/21/23 12:57:03.76
  Oct 21 12:57:03.763: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-secrets-bba2142a-4f82-457c-9a0e-a2123990be79 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 12:57:03.777
  Oct 21 12:57:03.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2736" for this suite. @ 10/21/23 12:57:03.796
• [4.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 10/21/23 12:57:03.804
  Oct 21 12:57:03.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svcaccounts @ 10/21/23 12:57:03.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:57:03.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:57:03.822
  Oct 21 12:57:03.827: INFO: Got root ca configmap in namespace "svcaccounts-5597"
  Oct 21 12:57:03.833: INFO: Deleted root ca configmap in namespace "svcaccounts-5597"
  STEP: waiting for a new root ca configmap created @ 10/21/23 12:57:04.333
  Oct 21 12:57:04.336: INFO: Recreated root ca configmap in namespace "svcaccounts-5597"
  Oct 21 12:57:04.342: INFO: Updated root ca configmap in namespace "svcaccounts-5597"
  STEP: waiting for the root ca configmap reconciled @ 10/21/23 12:57:04.842
  Oct 21 12:57:04.846: INFO: Reconciled root ca configmap in namespace "svcaccounts-5597"
  Oct 21 12:57:04.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5597" for this suite. @ 10/21/23 12:57:04.85
• [1.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 10/21/23 12:57:04.855
  Oct 21 12:57:04.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 12:57:04.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:57:04.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:57:04.878
  STEP: Discovering how many secrets are in namespace by default @ 10/21/23 12:57:04.88
  STEP: Counting existing ResourceQuota @ 10/21/23 12:57:09.885
  STEP: Creating a ResourceQuota @ 10/21/23 12:57:14.889
  STEP: Ensuring resource quota status is calculated @ 10/21/23 12:57:14.896
  STEP: Creating a Secret @ 10/21/23 12:57:16.899
  STEP: Ensuring resource quota status captures secret creation @ 10/21/23 12:57:16.909
  STEP: Deleting a secret @ 10/21/23 12:57:18.913
  STEP: Ensuring resource quota status released usage @ 10/21/23 12:57:18.92
  Oct 21 12:57:20.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-480" for this suite. @ 10/21/23 12:57:20.927
• [16.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 10/21/23 12:57:20.933
  Oct 21 12:57:20.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 12:57:20.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:57:20.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:57:20.953
  STEP: creating a collection of services @ 10/21/23 12:57:20.956
  Oct 21 12:57:20.956: INFO: Creating e2e-svc-a-7fbhm
  Oct 21 12:57:20.964: INFO: Creating e2e-svc-b-pb4bn
  Oct 21 12:57:20.973: INFO: Creating e2e-svc-c-rt7lm
  STEP: deleting service collection @ 10/21/23 12:57:20.987
  Oct 21 12:57:21.013: INFO: Collection of services has been deleted
  Oct 21 12:57:21.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8840" for this suite. @ 10/21/23 12:57:21.016
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/21/23 12:57:21.023
  Oct 21 12:57:21.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename cronjob @ 10/21/23 12:57:21.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:57:21.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:57:21.041
  STEP: Creating a cronjob @ 10/21/23 12:57:21.044
  STEP: Ensuring more than one job is running at a time @ 10/21/23 12:57:21.05
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/21/23 12:59:01.055
  STEP: Removing cronjob @ 10/21/23 12:59:01.057
  Oct 21 12:59:01.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4132" for this suite. @ 10/21/23 12:59:01.066
• [100.049 seconds]
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 10/21/23 12:59:01.072
  Oct 21 12:59:01.072: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replication-controller @ 10/21/23 12:59:01.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:59:01.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:59:01.093
  STEP: Creating ReplicationController "e2e-rc-hbxz4" @ 10/21/23 12:59:01.095
  Oct 21 12:59:01.099: INFO: Get Replication Controller "e2e-rc-hbxz4" to confirm replicas
  Oct 21 12:59:02.103: INFO: Get Replication Controller "e2e-rc-hbxz4" to confirm replicas
  Oct 21 12:59:02.106: INFO: Found 1 replicas for "e2e-rc-hbxz4" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-hbxz4" @ 10/21/23 12:59:02.106
  STEP: Updating a scale subresource @ 10/21/23 12:59:02.109
  STEP: Verifying replicas where modified for replication controller "e2e-rc-hbxz4" @ 10/21/23 12:59:02.115
  Oct 21 12:59:02.115: INFO: Get Replication Controller "e2e-rc-hbxz4" to confirm replicas
  Oct 21 12:59:03.118: INFO: Get Replication Controller "e2e-rc-hbxz4" to confirm replicas
  Oct 21 12:59:03.121: INFO: Found 2 replicas for "e2e-rc-hbxz4" replication controller
  Oct 21 12:59:03.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1778" for this suite. @ 10/21/23 12:59:03.125
• [2.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 10/21/23 12:59:03.131
  Oct 21 12:59:03.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename endpointslice @ 10/21/23 12:59:03.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:59:03.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:59:03.15
  Oct 21 12:59:05.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4118" for this suite. @ 10/21/23 12:59:05.195
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/21/23 12:59:05.203
  Oct 21 12:59:05.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 12:59:05.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:59:05.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:59:05.224
  STEP: Creating projection with secret that has name projected-secret-test-map-cd86b9f7-26af-4088-af22-955ecf8ef63f @ 10/21/23 12:59:05.226
  STEP: Creating a pod to test consume secrets @ 10/21/23 12:59:05.231
  STEP: Saw pod success @ 10/21/23 12:59:09.249
  Oct 21 12:59:09.252: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-projected-secrets-4c9a1ca4-9ca9-49c2-a608-e097db1e0696 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 12:59:09.265
  Oct 21 12:59:09.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8828" for this suite. @ 10/21/23 12:59:09.28
• [4.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 10/21/23 12:59:09.286
  Oct 21 12:59:09.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 12:59:09.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 12:59:09.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 12:59:09.304
  Oct 21 13:00:09.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-324" for this suite. @ 10/21/23 13:00:09.323
• [60.043 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 10/21/23 13:00:09.329
  Oct 21 13:00:09.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:00:09.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:00:09.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:00:09.348
  STEP: creating Agnhost RC @ 10/21/23 13:00:09.351
  Oct 21 13:00:09.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3444 create -f -'
  Oct 21 13:00:09.502: INFO: stderr: ""
  Oct 21 13:00:09.502: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/21/23 13:00:09.502
  Oct 21 13:00:10.507: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 13:00:10.507: INFO: Found 1 / 1
  Oct 21 13:00:10.507: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/21/23 13:00:10.507
  Oct 21 13:00:10.510: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 13:00:10.510: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 21 13:00:10.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3444 patch pod agnhost-primary-n224z -p {"metadata":{"annotations":{"x":"y"}}}'
  Oct 21 13:00:10.563: INFO: stderr: ""
  Oct 21 13:00:10.563: INFO: stdout: "pod/agnhost-primary-n224z patched\n"
  STEP: checking annotations @ 10/21/23 13:00:10.563
  Oct 21 13:00:10.566: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 13:00:10.566: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 21 13:00:10.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3444" for this suite. @ 10/21/23 13:00:10.57
• [1.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 10/21/23 13:00:10.577
  Oct 21 13:00:10.577: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:00:10.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:00:10.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:00:10.595
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-7d519c0a-d903-43e8-9c4e-111a0f79f19b @ 10/21/23 13:00:10.601
  STEP: Creating the pod @ 10/21/23 13:00:10.605
  STEP: Updating configmap projected-configmap-test-upd-7d519c0a-d903-43e8-9c4e-111a0f79f19b @ 10/21/23 13:00:12.633
  STEP: waiting to observe update in volume @ 10/21/23 13:00:12.639
  Oct 21 13:01:28.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8033" for this suite. @ 10/21/23 13:01:28.927
• [78.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 10/21/23 13:01:28.933
  Oct 21 13:01:28.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename discovery @ 10/21/23 13:01:28.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:01:28.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:01:28.961
  STEP: Setting up server cert @ 10/21/23 13:01:28.964
  STEP: Requesting APIResourceList from "/api/v1" @ 10/21/23 13:01:29.212
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/21/23 13:01:29.214
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/21/23 13:01:29.215
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/21/23 13:01:29.216
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/21/23 13:01:29.218
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/21/23 13:01:29.219
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/21/23 13:01:29.22
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/21/23 13:01:29.221
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/21/23 13:01:29.222
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/21/23 13:01:29.223
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/21/23 13:01:29.224
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/21/23 13:01:29.225
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/21/23 13:01:29.226
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/21/23 13:01:29.227
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/21/23 13:01:29.229
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/21/23 13:01:29.23
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/21/23 13:01:29.231
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/21/23 13:01:29.232
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/21/23 13:01:29.233
  Oct 21 13:01:29.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-927" for this suite. @ 10/21/23 13:01:29.237
• [0.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 10/21/23 13:01:29.244
  Oct 21 13:01:29.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/21/23 13:01:29.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:01:29.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:01:29.264
  STEP: fetching the /apis discovery document @ 10/21/23 13:01:29.267
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/21/23 13:01:29.268
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/21/23 13:01:29.268
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/21/23 13:01:29.268
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/21/23 13:01:29.269
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/21/23 13:01:29.269
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/21/23 13:01:29.271
  Oct 21 13:01:29.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2216" for this suite. @ 10/21/23 13:01:29.274
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 10/21/23 13:01:29.28
  Oct 21 13:01:29.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:01:29.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:01:29.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:01:29.307
  STEP: Creating configMap with name projected-configmap-test-volume-map-db0aec5d-74cb-4f36-a3b3-12675b8b6c40 @ 10/21/23 13:01:29.311
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:01:29.317
  STEP: Saw pod success @ 10/21/23 13:01:33.337
  Oct 21 13:01:33.340: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-projected-configmaps-2f5811d6-876e-488b-bef2-5b1a9e672113 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 13:01:33.366
  Oct 21 13:01:33.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9191" for this suite. @ 10/21/23 13:01:33.387
• [4.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 10/21/23 13:01:33.394
  Oct 21 13:01:33.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:01:33.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:01:33.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:01:33.418
  STEP: Setting up server cert @ 10/21/23 13:01:33.445
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:01:33.79
  STEP: Deploying the webhook pod @ 10/21/23 13:01:33.797
  STEP: Wait for the deployment to be ready @ 10/21/23 13:01:33.808
  Oct 21 13:01:33.815: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/21/23 13:01:35.824
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:01:35.833
  Oct 21 13:01:36.834: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/21/23 13:01:36.84
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/21/23 13:01:36.853
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/21/23 13:01:36.86
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/21/23 13:01:36.869
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/21/23 13:01:36.878
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/21/23 13:01:36.884
  Oct 21 13:01:36.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5092" for this suite. @ 10/21/23 13:01:36.925
  STEP: Destroying namespace "webhook-markers-4341" for this suite. @ 10/21/23 13:01:36.931
• [3.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 10/21/23 13:01:36.945
  Oct 21 13:01:36.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 13:01:36.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:01:36.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:01:36.969
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/21/23 13:01:36.972
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/21/23 13:01:36.972
  STEP: creating a pod to probe DNS @ 10/21/23 13:01:36.972
  STEP: submitting the pod to kubernetes @ 10/21/23 13:01:36.972
  STEP: retrieving the pod @ 10/21/23 13:01:38.987
  STEP: looking for the results for each expected name from probers @ 10/21/23 13:01:38.99
  Oct 21 13:01:39.005: INFO: DNS probes using dns-7950/dns-test-6963de45-7a13-4d98-867d-e549f44946ed succeeded

  Oct 21 13:01:39.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:01:39.008
  STEP: Destroying namespace "dns-7950" for this suite. @ 10/21/23 13:01:39.022
• [2.082 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 10/21/23 13:01:39.028
  Oct 21 13:01:39.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replication-controller @ 10/21/23 13:01:39.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:01:39.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:01:39.05
  STEP: creating a ReplicationController @ 10/21/23 13:01:39.056
  STEP: waiting for RC to be added @ 10/21/23 13:01:39.063
  STEP: waiting for available Replicas @ 10/21/23 13:01:39.063
  STEP: patching ReplicationController @ 10/21/23 13:01:40.645
  STEP: waiting for RC to be modified @ 10/21/23 13:01:40.651
  STEP: patching ReplicationController status @ 10/21/23 13:01:40.651
  STEP: waiting for RC to be modified @ 10/21/23 13:01:40.656
  STEP: waiting for available Replicas @ 10/21/23 13:01:40.656
  STEP: fetching ReplicationController status @ 10/21/23 13:01:40.662
  STEP: patching ReplicationController scale @ 10/21/23 13:01:40.666
  STEP: waiting for RC to be modified @ 10/21/23 13:01:40.671
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/21/23 13:01:40.671
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/21/23 13:01:41.639
  STEP: updating ReplicationController status @ 10/21/23 13:01:41.643
  STEP: waiting for RC to be modified @ 10/21/23 13:01:41.648
  STEP: listing all ReplicationControllers @ 10/21/23 13:01:41.648
  STEP: checking that ReplicationController has expected values @ 10/21/23 13:01:41.654
  STEP: deleting ReplicationControllers by collection @ 10/21/23 13:01:41.654
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/21/23 13:01:41.661
  Oct 21 13:01:41.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1021 13:01:41.702535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6975" for this suite. @ 10/21/23 13:01:41.705
• [2.683 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 10/21/23 13:01:41.711
  Oct 21 13:01:41.711: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-preemption @ 10/21/23 13:01:41.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:01:41.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:01:41.731
  Oct 21 13:01:41.747: INFO: Waiting up to 1m0s for all nodes to be ready
  E1021 13:01:42.702678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:43.703439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:44.703548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:45.704309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:46.704413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:47.704594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:48.704664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:49.704763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:50.704873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:51.704948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:52.705032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:53.705290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:54.705396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:55.705502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:56.705569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:57.705646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:58.705678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:01:59.705752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:00.706384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:01.706463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:02.706550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:03.706622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:04.706743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:05.707723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:06.707754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:07.707849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:08.707931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:09.708933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:10.709802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:11.709951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:12.710285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:13.710351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:14.711420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:15.711577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:16.711625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:17.711781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:18.711876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:19.712033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:20.713099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:21.713184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:22.713288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:23.714054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:24.714486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:25.714567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:26.715412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:27.715575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:28.715610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:29.715808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:30.716256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:31.716340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:32.717414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:33.717672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:34.717756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:35.717910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:36.717953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:37.718850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:38.718938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:39.719416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:40.720461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:41.720610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:41.767: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/21/23 13:02:41.77
  Oct 21 13:02:41.770: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/21/23 13:02:41.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:02:41.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:02:41.788
  Oct 21 13:02:41.803: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Oct 21 13:02:41.806: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Oct 21 13:02:41.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:02:41.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5495" for this suite. @ 10/21/23 13:02:41.87
  STEP: Destroying namespace "sched-preemption-465" for this suite. @ 10/21/23 13:02:41.876
• [60.171 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 10/21/23 13:02:41.882
  Oct 21 13:02:41.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:02:41.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:02:41.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:02:41.901
  STEP: creating an Endpoint @ 10/21/23 13:02:41.906
  STEP: waiting for available Endpoint @ 10/21/23 13:02:41.91
  STEP: listing all Endpoints @ 10/21/23 13:02:41.912
  STEP: updating the Endpoint @ 10/21/23 13:02:41.915
  STEP: fetching the Endpoint @ 10/21/23 13:02:41.92
  STEP: patching the Endpoint @ 10/21/23 13:02:41.923
  STEP: fetching the Endpoint @ 10/21/23 13:02:41.931
  STEP: deleting the Endpoint by Collection @ 10/21/23 13:02:41.933
  STEP: waiting for Endpoint deletion @ 10/21/23 13:02:41.944
  STEP: fetching the Endpoint @ 10/21/23 13:02:41.945
  Oct 21 13:02:41.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6910" for this suite. @ 10/21/23 13:02:41.951
• [0.076 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 10/21/23 13:02:41.958
  Oct 21 13:02:41.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename aggregator @ 10/21/23 13:02:41.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:02:41.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:02:41.978
  Oct 21 13:02:41.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Registering the sample API server. @ 10/21/23 13:02:41.982
  Oct 21 13:02:42.155: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Oct 21 13:02:42.181: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1021 13:02:42.721001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:43.721327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:44.221: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:44.722115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:45.722290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:46.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:46.722598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:47.722605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:48.226: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:48.722698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:49.722743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:50.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:50.723377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:51.723473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:52.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:52.723572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:53.724482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:54.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:54.725306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:55.725425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:56.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:56.725910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:57.725999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:02:58.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:02:58.726975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:02:59.727969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:00.226: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:03:00.728030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:01.728660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:02.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:03:02.728747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:03.728835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:04.226: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 2, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:03:04.729147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:05.729235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:06.342: INFO: Waited 110.727244ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/21/23 13:03:06.372
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/21/23 13:03:06.375
  STEP: List APIServices @ 10/21/23 13:03:06.382
  Oct 21 13:03:06.386: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/21/23 13:03:06.387
  Oct 21 13:03:06.396: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/21/23 13:03:06.396
  Oct 21 13:03:06.405: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.October, 21, 13, 3, 6, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/21/23 13:03:06.405
  Oct 21 13:03:06.408: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-10-21 13:03:06 +0000 UTC Passed all checks passed}
  Oct 21 13:03:06.408: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 21 13:03:06.408: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/21/23 13:03:06.408
  Oct 21 13:03:06.418: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1791027527" @ 10/21/23 13:03:06.418
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/21/23 13:03:06.427
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/21/23 13:03:06.435
  STEP: Patch APIService Status @ 10/21/23 13:03:06.438
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/21/23 13:03:06.444
  Oct 21 13:03:06.447: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-10-21 13:03:06 +0000 UTC Passed all checks passed}
  Oct 21 13:03:06.447: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 21 13:03:06.447: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Oct 21 13:03:06.447: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 10/21/23 13:03:06.447
  STEP: Confirm that the generated APIService has been deleted @ 10/21/23 13:03:06.451
  Oct 21 13:03:06.451: INFO: Requesting list of APIServices to confirm quantity
  Oct 21 13:03:06.455: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Oct 21 13:03:06.455: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Oct 21 13:03:06.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3044" for this suite. @ 10/21/23 13:03:06.556
• [24.604 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 10/21/23 13:03:06.563
  Oct 21 13:03:06.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename daemonsets @ 10/21/23 13:03:06.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:03:06.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:03:06.583
  STEP: Creating simple DaemonSet "daemon-set" @ 10/21/23 13:03:06.608
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/21/23 13:03:06.612
  Oct 21 13:03:06.615: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:06.615: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:06.618: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:03:06.618: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  E1021 13:03:06.729300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:07.622: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:07.623: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:07.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 21 13:03:07.626: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  E1021 13:03:07.729611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:08.623: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:08.623: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:08.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 21 13:03:08.626: INFO: Node ip-172-31-83-52 is running 0 daemon pod, expected 1
  E1021 13:03:08.729691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:09.623: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:09.623: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:03:09.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 13:03:09.626: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/21/23 13:03:09.629
  Oct 21 13:03:09.632: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/21/23 13:03:09.632
  Oct 21 13:03:09.640: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/21/23 13:03:09.64
  Oct 21 13:03:09.642: INFO: Observed &DaemonSet event: ADDED
  Oct 21 13:03:09.642: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.642: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.642: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.642: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.643: INFO: Found daemon set daemon-set in namespace daemonsets-6453 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 21 13:03:09.643: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/21/23 13:03:09.643
  STEP: watching for the daemon set status to be patched @ 10/21/23 13:03:09.65
  Oct 21 13:03:09.651: INFO: Observed &DaemonSet event: ADDED
  Oct 21 13:03:09.651: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.651: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.652: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.652: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.652: INFO: Observed daemon set daemon-set in namespace daemonsets-6453 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 21 13:03:09.652: INFO: Observed &DaemonSet event: MODIFIED
  Oct 21 13:03:09.652: INFO: Found daemon set daemon-set in namespace daemonsets-6453 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Oct 21 13:03:09.652: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/21/23 13:03:09.655
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6453, will wait for the garbage collector to delete the pods @ 10/21/23 13:03:09.655
  Oct 21 13:03:09.714: INFO: Deleting DaemonSet.extensions daemon-set took: 5.752115ms
  E1021 13:03:09.729786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:09.815: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.421863ms
  E1021 13:03:10.729740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:11.730727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:11.918: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:03:11.918: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 21 13:03:11.921: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20029"},"items":null}

  Oct 21 13:03:11.924: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20029"},"items":null}

  Oct 21 13:03:11.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6453" for this suite. @ 10/21/23 13:03:11.938
• [5.381 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/21/23 13:03:11.944
  Oct 21 13:03:11.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename init-container @ 10/21/23 13:03:11.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:03:11.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:03:11.962
  STEP: creating the pod @ 10/21/23 13:03:11.965
  Oct 21 13:03:11.965: INFO: PodSpec: initContainers in spec.initContainers
  E1021 13:03:12.730839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:13.731589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:14.731694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:15.731777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:15.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5952" for this suite. @ 10/21/23 13:03:15.976
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 10/21/23 13:03:15.983
  Oct 21 13:03:15.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename job @ 10/21/23 13:03:15.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:03:16.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:03:16.003
  STEP: Creating a job @ 10/21/23 13:03:16.006
  STEP: Ensuring active pods == parallelism @ 10/21/23 13:03:16.012
  E1021 13:03:16.732060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:17.732135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 10/21/23 13:03:18.017
  Oct 21 13:03:18.532: INFO: Successfully updated pod "adopt-release-glvfn"
  STEP: Checking that the Job readopts the Pod @ 10/21/23 13:03:18.532
  E1021 13:03:18.733145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:19.733304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 10/21/23 13:03:20.539
  E1021 13:03:20.733928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:21.050: INFO: Successfully updated pod "adopt-release-glvfn"
  STEP: Checking that the Job releases the Pod @ 10/21/23 13:03:21.051
  E1021 13:03:21.734517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:22.735525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:23.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2241" for this suite. @ 10/21/23 13:03:23.061
• [7.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/21/23 13:03:23.067
  Oct 21 13:03:23.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:03:23.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:03:23.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:03:23.085
  STEP: Creating projection with secret that has name projected-secret-test-8cc8f911-c4b7-4b83-bf28-3552dbaaf22a @ 10/21/23 13:03:23.088
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:03:23.092
  E1021 13:03:23.735594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:24.736617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:25.737543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:26.737712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:03:27.114
  Oct 21 13:03:27.117: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-projected-secrets-5aedb9c0-18a4-4348-838a-23498c57cf4e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:03:27.13
  Oct 21 13:03:27.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8602" for this suite. @ 10/21/23 13:03:27.147
• [4.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 10/21/23 13:03:27.154
  Oct 21 13:03:27.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 13:03:27.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:03:27.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:03:27.173
  STEP: Creating service test in namespace statefulset-5144 @ 10/21/23 13:03:27.176
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/21/23 13:03:27.18
  STEP: Creating stateful set ss in namespace statefulset-5144 @ 10/21/23 13:03:27.184
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5144 @ 10/21/23 13:03:27.193
  Oct 21 13:03:27.196: INFO: Found 0 stateful pods, waiting for 1
  E1021 13:03:27.738335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:28.738376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:29.738478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:30.738568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:31.738636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:32.739416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:33.740377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:34.740464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:35.740623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:36.740710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:37.201: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/21/23 13:03:37.201
  Oct 21 13:03:37.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 13:03:37.339: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:03:37.339: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:03:37.339: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:03:37.343: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1021 13:03:37.741307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:38.742329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:39.742362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:40.742453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:41.742559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:42.743588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:43.743636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:44.744230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:45.744388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:46.744578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:47.348: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:03:47.348: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 21 13:03:47.362: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999857s
  E1021 13:03:47.744732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:48.366: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996203795s
  E1021 13:03:48.745339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:49.370: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.99251595s
  E1021 13:03:49.746360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:50.374: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.988595703s
  E1021 13:03:50.746754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:51.377: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.985086914s
  E1021 13:03:51.747363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:52.381: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.981514497s
  E1021 13:03:52.748301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:53.385: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.977442008s
  E1021 13:03:53.748992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:54.389: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.973898424s
  E1021 13:03:54.749659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:55.393: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.970225039s
  E1021 13:03:55.750618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:03:56.396: INFO: Verifying statefulset ss doesn't scale past 1 for another 966.310887ms
  E1021 13:03:56.750975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5144 @ 10/21/23 13:03:57.396
  Oct 21 13:03:57.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 13:03:57.529: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 21 13:03:57.529: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 13:03:57.529: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 13:03:57.533: INFO: Found 1 stateful pods, waiting for 3
  E1021 13:03:57.751924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:58.752709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:03:59.752786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:00.753801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:01.753869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:02.753977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:03.754183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:04.754252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:05.754377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:06.755431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:07.538: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:04:07.538: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:04:07.538: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/21/23 13:04:07.538
  STEP: Scale down will halt with unhealthy stateful pod @ 10/21/23 13:04:07.538
  Oct 21 13:04:07.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 13:04:07.661: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:04:07.661: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:04:07.661: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:04:07.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1021 13:04:07.755508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:07.782: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:04:07.782: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:04:07.782: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:04:07.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 13:04:07.907: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:04:07.907: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:04:07.907: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:04:07.907: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 21 13:04:07.910: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E1021 13:04:08.755607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:09.755764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:10.755837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:11.756056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:12.756418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:13.756503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:14.756663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:15.756833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:16.756922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:17.757071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:17.918: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:04:17.918: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:04:17.918: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:04:17.928: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999858s
  E1021 13:04:18.757811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:18.932: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996630382s
  E1021 13:04:19.758370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:19.937: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992135452s
  E1021 13:04:20.759422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:20.942: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987084824s
  E1021 13:04:21.759992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:21.945: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983541977s
  E1021 13:04:22.760633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:22.949: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.979909923s
  E1021 13:04:23.760662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:23.953: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.975748826s
  E1021 13:04:24.761118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:24.958: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.971387554s
  E1021 13:04:25.761207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:25.963: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.967333642s
  E1021 13:04:26.762224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:26.966: INFO: Verifying statefulset ss doesn't scale past 3 for another 962.507265ms
  E1021 13:04:27.762398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5144 @ 10/21/23 13:04:27.967
  Oct 21 13:04:27.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 13:04:28.092: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 21 13:04:28.092: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 13:04:28.092: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 13:04:28.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 13:04:28.212: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 21 13:04:28.212: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 13:04:28.212: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 13:04:28.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-5144 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 13:04:28.342: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 21 13:04:28.342: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 13:04:28.342: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 13:04:28.342: INFO: Scaling statefulset ss to 0
  E1021 13:04:28.763064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:29.763807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:30.763897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:31.764428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:32.764512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:33.765543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:34.765630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:35.765784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:36.766280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:37.766363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/21/23 13:04:38.357
  Oct 21 13:04:38.357: INFO: Deleting all statefulset in ns statefulset-5144
  Oct 21 13:04:38.360: INFO: Scaling statefulset ss to 0
  Oct 21 13:04:38.369: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 13:04:38.372: INFO: Deleting statefulset ss
  Oct 21 13:04:38.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5144" for this suite. @ 10/21/23 13:04:38.386
• [71.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 10/21/23 13:04:38.394
  Oct 21 13:04:38.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:04:38.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:04:38.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:04:38.415
  STEP: Creating a pod to test downward api env vars @ 10/21/23 13:04:38.418
  E1021 13:04:38.766990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:39.767079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:40.767387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:41.767471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:04:42.439
  Oct 21 13:04:42.442: INFO: Trying to get logs from node ip-172-31-83-52 pod downward-api-b0bd02e3-e3bf-442f-be79-a89051b05ad8 container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 13:04:42.458
  Oct 21 13:04:42.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4909" for this suite. @ 10/21/23 13:04:42.474
• [4.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 10/21/23 13:04:42.482
  Oct 21 13:04:42.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename job @ 10/21/23 13:04:42.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:04:42.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:04:42.566
  STEP: Creating a suspended job @ 10/21/23 13:04:42.571
  STEP: Patching the Job @ 10/21/23 13:04:42.575
  STEP: Watching for Job to be patched @ 10/21/23 13:04:42.589
  Oct 21 13:04:42.591: INFO: Event ADDED observed for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b] and annotations: map[]
  Oct 21 13:04:42.591: INFO: Event MODIFIED observed for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b] and annotations: map[]
  Oct 21 13:04:42.591: INFO: Event MODIFIED found for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[]
  STEP: Updating the job @ 10/21/23 13:04:42.591
  STEP: Watching for Job to be updated @ 10/21/23 13:04:42.599
  Oct 21 13:04:42.601: INFO: Event MODIFIED found for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[updated:true]
  Oct 21 13:04:42.601: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/21/23 13:04:42.601
  Oct 21 13:04:42.603: INFO: Job: e2e-mwh7b as labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched]
  STEP: Waiting for job to complete @ 10/21/23 13:04:42.603
  E1021 13:04:42.768101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:43.768289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:44.768339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:45.768408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:46.769074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:47.769165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:48.769505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:49.769421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 10/21/23 13:04:50.607
  STEP: Watching for Job to be deleted @ 10/21/23 13:04:50.614
  Oct 21 13:04:50.616: INFO: Event MODIFIED observed for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[updated:true]
  Oct 21 13:04:50.616: INFO: Event MODIFIED observed for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[updated:true]
  Oct 21 13:04:50.616: INFO: Event MODIFIED observed for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[updated:true]
  Oct 21 13:04:50.616: INFO: Event MODIFIED observed for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[updated:true]
  Oct 21 13:04:50.616: INFO: Event MODIFIED observed for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[updated:true]
  Oct 21 13:04:50.616: INFO: Event DELETED found for Job e2e-mwh7b in namespace job-6503 with labels: map[e2e-job-label:e2e-mwh7b e2e-mwh7b:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/21/23 13:04:50.616
  Oct 21 13:04:50.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6503" for this suite. @ 10/21/23 13:04:50.629
• [8.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 10/21/23 13:04:50.638
  Oct 21 13:04:50.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:04:50.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:04:50.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:04:50.658
  STEP: creating service in namespace services-7220 @ 10/21/23 13:04:50.66
  STEP: creating service affinity-clusterip in namespace services-7220 @ 10/21/23 13:04:50.66
  STEP: creating replication controller affinity-clusterip in namespace services-7220 @ 10/21/23 13:04:50.668
  I1021 13:04:50.674264      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7220, replica count: 3
  E1021 13:04:50.769808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:51.770592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:52.771297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:04:53.725081      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 13:04:53.731: INFO: Creating new exec pod
  E1021 13:04:53.771513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:54.771621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:55.772595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:56.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-7220 exec execpod-affinityhqjmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E1021 13:04:56.773115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:04:56.865: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Oct 21 13:04:56.865: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:04:56.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-7220 exec execpod-affinityhqjmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80'
  Oct 21 13:04:56.986: INFO: stderr: "+ nc -v -t -w 2 10.152.183.244 80\n+ echo hostName\nConnection to 10.152.183.244 80 port [tcp/http] succeeded!\n"
  Oct 21 13:04:56.986: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:04:56.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-7220 exec execpod-affinityhqjmj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.244:80/ ; done'
  Oct 21 13:04:57.152: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.244:80/\n"
  Oct 21 13:04:57.152: INFO: stdout: "\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb\naffinity-clusterip-qkscb"
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Received response from host: affinity-clusterip-qkscb
  Oct 21 13:04:57.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:04:57.156: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7220, will wait for the garbage collector to delete the pods @ 10/21/23 13:04:57.166
  Oct 21 13:04:57.225: INFO: Deleting ReplicationController affinity-clusterip took: 5.703956ms
  Oct 21 13:04:57.326: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.865291ms
  E1021 13:04:57.773335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:58.773544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:04:59.774269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7220" for this suite. @ 10/21/23 13:05:00.141
• [9.508 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 10/21/23 13:05:00.151
  Oct 21 13:05:00.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:05:00.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:05:00.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:05:00.172
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/21/23 13:05:00.175
  E1021 13:05:00.775122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:01.775211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:05:02.193
  Oct 21 13:05:02.196: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-1131d186-ad14-4bd2-b74f-9a827f4ad7ab container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:05:02.202
  Oct 21 13:05:02.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6611" for this suite. @ 10/21/23 13:05:02.22
• [2.075 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 10/21/23 13:05:02.226
  Oct 21 13:05:02.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:05:02.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:05:02.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:05:02.245
  STEP: Setting up server cert @ 10/21/23 13:05:02.276
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:05:02.657
  STEP: Deploying the webhook pod @ 10/21/23 13:05:02.665
  STEP: Wait for the deployment to be ready @ 10/21/23 13:05:02.676
  Oct 21 13:05:02.683: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:05:02.775530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:03.775577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:05:04.694
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:05:04.705
  E1021 13:05:04.776339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:05:05.706: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E1021 13:05:05.776608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 10/21/23 13:05:05.788
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/21/23 13:05:05.824
  STEP: Deleting the collection of validation webhooks @ 10/21/23 13:05:05.858
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/21/23 13:05:05.902
  Oct 21 13:05:05.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-684" for this suite. @ 10/21/23 13:05:05.945
  STEP: Destroying namespace "webhook-markers-7065" for this suite. @ 10/21/23 13:05:05.953
• [3.732 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 10/21/23 13:05:05.959
  Oct 21 13:05:05.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:05:05.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:05:05.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:05:05.979
  STEP: Setting up server cert @ 10/21/23 13:05:06.007
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:05:06.209
  STEP: Deploying the webhook pod @ 10/21/23 13:05:06.214
  STEP: Wait for the deployment to be ready @ 10/21/23 13:05:06.225
  Oct 21 13:05:06.233: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:05:06.776741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:07.776837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:05:08.243
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:05:08.253
  E1021 13:05:08.777590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:05:09.255: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/21/23 13:05:09.262
  STEP: create a pod that should be updated by the webhook @ 10/21/23 13:05:09.279
  Oct 21 13:05:09.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3504" for this suite. @ 10/21/23 13:05:09.336
  STEP: Destroying namespace "webhook-markers-6584" for this suite. @ 10/21/23 13:05:09.345
• [3.395 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 10/21/23 13:05:09.355
  Oct 21 13:05:09.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename taint-single-pod @ 10/21/23 13:05:09.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:05:09.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:05:09.376
  Oct 21 13:05:09.379: INFO: Waiting up to 1m0s for all nodes to be ready
  E1021 13:05:09.777660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:10.778675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:11.779430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:12.779574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:13.779663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:14.779840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:15.780444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:16.780552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:17.780625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:18.781067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:19.782017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:20.782175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:21.782428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:22.782494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:23.783208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:24.783272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:25.783816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:26.783892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:27.783986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:28.784052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:29.784137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:30.784255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:31.784375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:32.784810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:33.784894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:34.785047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:35.785660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:36.785752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:37.785838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:38.786044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:39.786882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:40.787422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:41.788247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:42.788397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:43.788523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:44.788695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:45.789393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:46.789484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:47.789977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:48.790288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:49.791101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:50.791413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:51.792196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:52.792294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:53.792421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:54.793179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:55.794021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:56.794127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:57.795075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:58.795166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:05:59.795900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:00.795986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:01.796776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:02.796865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:03.797682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:04.797830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:05.797915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:06.798105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:07.798736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:08.798792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:06:09.394: INFO: Waiting for terminating namespaces to be deleted...
  Oct 21 13:06:09.397: INFO: Starting informer...
  STEP: Starting pod... @ 10/21/23 13:06:09.397
  Oct 21 13:06:09.608: INFO: Pod is running on ip-172-31-83-52. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/21/23 13:06:09.608
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/21/23 13:06:09.617
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/21/23 13:06:09.62
  Oct 21 13:06:09.620: INFO: Pod wasn't evicted. Proceeding
  Oct 21 13:06:09.620: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/21/23 13:06:09.629
  STEP: Waiting some time to make sure that toleration time passed. @ 10/21/23 13:06:09.632
  E1021 13:06:09.799246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:10.799801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:11.799874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:12.799967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:13.800046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:14.800222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:15.800392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:16.800485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:17.800588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:18.800659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:19.800802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:20.801256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:21.801348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:22.802316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:23.802357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:24.803399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:25.803488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:26.803640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:27.804224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:28.804319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:29.805170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:30.805256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:31.806286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:32.806364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:33.806477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:34.806578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:35.806659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:36.807429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:37.808430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:38.808525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:39.809449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:40.810508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:41.811407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:42.811550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:43.811671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:44.811771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:45.812652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:46.812742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:47.812961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:48.813047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:49.813212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:50.813303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:51.814029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:52.814969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:53.815169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:54.815256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:55.815345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:56.815487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:57.815705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:58.815786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:06:59.815943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:00.816039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:01.816537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:02.816626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:03.816927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:04.817008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:05.817150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:06.817666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:07.817820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:08.817910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:09.818017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:10.818978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:11.819420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:12.819583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:13.819854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:14.820029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:15.820179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:16.820357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:17.820445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:18.820842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:19.820929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:20.821073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:21.821223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:22.821366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:23.822122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:07:24.633: INFO: Pod wasn't evicted. Test successful
  Oct 21 13:07:24.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7090" for this suite. @ 10/21/23 13:07:24.638
• [135.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 10/21/23 13:07:24.645
  Oct 21 13:07:24.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:07:24.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:07:24.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:07:24.662
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/21/23 13:07:24.665
  E1021 13:07:24.822899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:25.823619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:26.824389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:27.824481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:07:28.685
  Oct 21 13:07:28.688: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-545c88ee-ce51-4b07-829e-29493be8fe6f container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:07:28.701
  Oct 21 13:07:28.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5967" for this suite. @ 10/21/23 13:07:28.717
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 10/21/23 13:07:28.724
  Oct 21 13:07:28.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:07:28.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:07:28.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:07:28.743
  STEP: Creating the pod @ 10/21/23 13:07:28.746
  E1021 13:07:28.825091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:29.825168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:30.825283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:07:31.291: INFO: Successfully updated pod "labelsupdate98c2e58a-5127-416a-9999-5b2cce41fb44"
  E1021 13:07:31.825397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:32.825482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:07:33.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1601" for this suite. @ 10/21/23 13:07:33.311
• [4.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/21/23 13:07:33.318
  Oct 21 13:07:33.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename subpath @ 10/21/23 13:07:33.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:07:33.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:07:33.338
  STEP: Setting up data @ 10/21/23 13:07:33.341
  STEP: Creating pod pod-subpath-test-secret-jb6t @ 10/21/23 13:07:33.35
  STEP: Creating a pod to test atomic-volume-subpath @ 10/21/23 13:07:33.35
  E1021 13:07:33.825518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:34.825665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:35.826686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:36.826774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:37.826856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:38.827228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:39.827316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:40.827403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:41.828240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:42.829174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:43.829261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:44.829348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:45.829431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:46.829602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:47.829974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:48.830068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:49.830632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:50.830724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:51.831348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:52.831509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:53.832133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:54.832228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:55.832327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:56.832404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:07:57.408
  Oct 21 13:07:57.411: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-subpath-test-secret-jb6t container test-container-subpath-secret-jb6t: <nil>
  STEP: delete the pod @ 10/21/23 13:07:57.417
  STEP: Deleting pod pod-subpath-test-secret-jb6t @ 10/21/23 13:07:57.431
  Oct 21 13:07:57.431: INFO: Deleting pod "pod-subpath-test-secret-jb6t" in namespace "subpath-9157"
  Oct 21 13:07:57.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9157" for this suite. @ 10/21/23 13:07:57.437
• [24.123 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 10/21/23 13:07:57.442
  Oct 21 13:07:57.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replicaset @ 10/21/23 13:07:57.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:07:57.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:07:57.46
  Oct 21 13:07:57.463: INFO: Creating ReplicaSet my-hostname-basic-82741d37-5859-4dee-9e99-784c5937187c
  Oct 21 13:07:57.473: INFO: Pod name my-hostname-basic-82741d37-5859-4dee-9e99-784c5937187c: Found 0 pods out of 1
  E1021 13:07:57.832480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:58.832852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:07:59.833023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:00.833137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:01.833306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:02.477: INFO: Pod name my-hostname-basic-82741d37-5859-4dee-9e99-784c5937187c: Found 1 pods out of 1
  Oct 21 13:08:02.477: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-82741d37-5859-4dee-9e99-784c5937187c" is running
  Oct 21 13:08:02.480: INFO: Pod "my-hostname-basic-82741d37-5859-4dee-9e99-784c5937187c-p7592" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:07:57 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:07:58 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:07:58 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:07:57 +0000 UTC Reason: Message:}])
  Oct 21 13:08:02.480: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/21/23 13:08:02.48
  Oct 21 13:08:02.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2891" for this suite. @ 10/21/23 13:08:02.493
• [5.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/21/23 13:08:02.5
  Oct 21 13:08:02.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:08:02.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:02.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:02.518
  Oct 21 13:08:02.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1195" for this suite. @ 10/21/23 13:08:02.555
• [0.061 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 10/21/23 13:08:02.561
  Oct 21 13:08:02.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:08:02.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:02.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:02.581
  STEP: Creating configMap with name configmap-test-volume-ea419f6f-8431-49e8-aee8-95c7e5591df3 @ 10/21/23 13:08:02.585
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:08:02.589
  E1021 13:08:02.833822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:03.834001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:04.834444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:05.834537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:08:06.613
  Oct 21 13:08:06.615: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-08e6b6a2-5e6a-49df-b68e-9900ba30f56a container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 13:08:06.621
  Oct 21 13:08:06.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4892" for this suite. @ 10/21/23 13:08:06.636
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 10/21/23 13:08:06.642
  Oct 21 13:08:06.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:08:06.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:06.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:06.661
  STEP: creating service nodeport-test with type=NodePort in namespace services-540 @ 10/21/23 13:08:06.664
  STEP: creating replication controller nodeport-test in namespace services-540 @ 10/21/23 13:08:06.683
  I1021 13:08:06.689767      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-540, replica count: 2
  E1021 13:08:06.835419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:07.836360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:08.837381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:08:09.741397      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 13:08:09.741: INFO: Creating new exec pod
  E1021 13:08:09.838217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:10.838364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:11.839255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:12.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E1021 13:08:12.839941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:12.881: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Oct 21 13:08:12.881: INFO: stdout: "nodeport-test-j6znx"
  Oct 21 13:08:12.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  Oct 21 13:08:13.000: INFO: stderr: "+ nc -v -t -w 2 10.152.183.59 80\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 21 13:08:13.000: INFO: stdout: ""
  E1021 13:08:13.840557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:14.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  Oct 21 13:08:14.116: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.59 80\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n"
  Oct 21 13:08:14.116: INFO: stdout: ""
  E1021 13:08:14.841043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:15.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  Oct 21 13:08:15.110: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.152.183.59 80\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n"
  Oct 21 13:08:15.110: INFO: stdout: ""
  E1021 13:08:15.841283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:16.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  Oct 21 13:08:16.121: INFO: stderr: "+ nc -v -t -w 2 10.152.183.59 80\n+ echo hostName\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n"
  Oct 21 13:08:16.121: INFO: stdout: "nodeport-test-9k7dx"
  Oct 21 13:08:16.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.52 30117'
  Oct 21 13:08:16.232: INFO: stderr: "+ nc -v -t -w 2 172.31.83.52 30117\n+ echo hostName\nConnection to 172.31.83.52 30117 port [tcp/*] succeeded!\n"
  Oct 21 13:08:16.232: INFO: stdout: ""
  E1021 13:08:16.842130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:17.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.52 30117'
  Oct 21 13:08:17.344: INFO: stderr: "+ nc -v -t -w 2 172.31.83.52 30117\n+ echo hostName\nConnection to 172.31.83.52 30117 port [tcp/*] succeeded!\n"
  Oct 21 13:08:17.344: INFO: stdout: ""
  E1021 13:08:17.843042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:18.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.52 30117'
  Oct 21 13:08:18.349: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.52 30117\nConnection to 172.31.83.52 30117 port [tcp/*] succeeded!\n"
  Oct 21 13:08:18.349: INFO: stdout: ""
  E1021 13:08:18.843421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:19.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.52 30117'
  Oct 21 13:08:19.361: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.52 30117\nConnection to 172.31.83.52 30117 port [tcp/*] succeeded!\n"
  Oct 21 13:08:19.361: INFO: stdout: "nodeport-test-j6znx"
  Oct 21 13:08:19.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-540 exec execpod42ncz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.2 30117'
  Oct 21 13:08:19.477: INFO: stderr: "+ nc -v -t -w 2 172.31.65.2 30117\n+ echo hostName\nConnection to 172.31.65.2 30117 port [tcp/*] succeeded!\n"
  Oct 21 13:08:19.477: INFO: stdout: "nodeport-test-j6znx"
  Oct 21 13:08:19.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-540" for this suite. @ 10/21/23 13:08:19.481
• [12.846 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 10/21/23 13:08:19.488
  Oct 21 13:08:19.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:08:19.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:19.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:19.507
  STEP: Creating projection with secret that has name secret-emptykey-test-3f60b1c4-9569-4856-a6e0-e40b4c069e8d @ 10/21/23 13:08:19.51
  Oct 21 13:08:19.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4313" for this suite. @ 10/21/23 13:08:19.515
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 10/21/23 13:08:19.521
  Oct 21 13:08:19.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename limitrange @ 10/21/23 13:08:19.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:19.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:19.539
  STEP: Creating a LimitRange @ 10/21/23 13:08:19.548
  STEP: Setting up watch @ 10/21/23 13:08:19.548
  STEP: Submitting a LimitRange @ 10/21/23 13:08:19.652
  STEP: Verifying LimitRange creation was observed @ 10/21/23 13:08:19.659
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/21/23 13:08:19.659
  Oct 21 13:08:19.662: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct 21 13:08:19.662: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/21/23 13:08:19.662
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/21/23 13:08:19.669
  Oct 21 13:08:19.672: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct 21 13:08:19.672: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/21/23 13:08:19.672
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/21/23 13:08:19.679
  Oct 21 13:08:19.682: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Oct 21 13:08:19.682: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/21/23 13:08:19.682
  STEP: Failing to create a Pod with more than max resources @ 10/21/23 13:08:19.685
  STEP: Updating a LimitRange @ 10/21/23 13:08:19.687
  STEP: Verifying LimitRange updating is effective @ 10/21/23 13:08:19.692
  E1021 13:08:19.843995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:20.844087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 10/21/23 13:08:21.697
  STEP: Failing to create a Pod with more than max resources @ 10/21/23 13:08:21.703
  STEP: Deleting a LimitRange @ 10/21/23 13:08:21.705
  STEP: Verifying the LimitRange was deleted @ 10/21/23 13:08:21.715
  E1021 13:08:21.844550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:22.844634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:23.844970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:24.845055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:25.845240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:26.722: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/21/23 13:08:26.722
  Oct 21 13:08:26.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6514" for this suite. @ 10/21/23 13:08:26.749
• [7.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 10/21/23 13:08:26.759
  Oct 21 13:08:26.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:08:26.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:26.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:26.791
  STEP: Setting up server cert @ 10/21/23 13:08:26.827
  E1021 13:08:26.845421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:08:27.225
  STEP: Deploying the webhook pod @ 10/21/23 13:08:27.233
  STEP: Wait for the deployment to be ready @ 10/21/23 13:08:27.243
  Oct 21 13:08:27.250: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:08:27.845556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:28.845955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:08:29.259
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:08:29.268
  E1021 13:08:29.846372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:30.269: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/21/23 13:08:30.276
  STEP: create a pod that should be denied by the webhook @ 10/21/23 13:08:30.289
  STEP: create a pod that causes the webhook to hang @ 10/21/23 13:08:30.3
  E1021 13:08:30.846452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:31.847428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:32.847517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:33.847710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:34.848495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:35.848674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:36.848821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:37.849832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:38.850187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:39.850347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 10/21/23 13:08:40.308
  STEP: create a configmap that should be admitted by the webhook @ 10/21/23 13:08:40.349
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/21/23 13:08:40.357
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/21/23 13:08:40.364
  STEP: create a namespace that bypass the webhook @ 10/21/23 13:08:40.368
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/21/23 13:08:40.383
  Oct 21 13:08:40.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3124" for this suite. @ 10/21/23 13:08:40.435
  STEP: Destroying namespace "webhook-markers-2653" for this suite. @ 10/21/23 13:08:40.443
  STEP: Destroying namespace "exempted-namespace-3644" for this suite. @ 10/21/23 13:08:40.449
• [13.695 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 10/21/23 13:08:40.454
  Oct 21 13:08:40.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename namespaces @ 10/21/23 13:08:40.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:40.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:40.472
  STEP: creating a Namespace @ 10/21/23 13:08:40.474
  STEP: patching the Namespace @ 10/21/23 13:08:40.538
  STEP: get the Namespace and ensuring it has the label @ 10/21/23 13:08:40.543
  Oct 21 13:08:40.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4200" for this suite. @ 10/21/23 13:08:40.551
  STEP: Destroying namespace "nspatchtest-466fcd57-aae5-4a44-b8a7-7e401bb94640-8090" for this suite. @ 10/21/23 13:08:40.558
• [0.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 10/21/23 13:08:40.564
  Oct 21 13:08:40.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:08:40.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:40.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:40.583
  Oct 21 13:08:40.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3907" for this suite. @ 10/21/23 13:08:40.591
• [0.033 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 10/21/23 13:08:40.597
  Oct 21 13:08:40.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 13:08:40.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:08:40.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:08:40.614
  STEP: Creating service test in namespace statefulset-2379 @ 10/21/23 13:08:40.616
  STEP: Creating statefulset ss in namespace statefulset-2379 @ 10/21/23 13:08:40.621
  Oct 21 13:08:40.628: INFO: Found 0 stateful pods, waiting for 1
  E1021 13:08:40.851175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:41.851326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:42.851403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:43.851674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:44.851832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:45.851895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:46.852002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:47.852176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:48.852256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:49.852412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:08:50.633: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/21/23 13:08:50.639
  STEP: updating a scale subresource @ 10/21/23 13:08:50.641
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/21/23 13:08:50.647
  STEP: Patch a scale subresource @ 10/21/23 13:08:50.65
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/21/23 13:08:50.655
  Oct 21 13:08:50.658: INFO: Deleting all statefulset in ns statefulset-2379
  Oct 21 13:08:50.661: INFO: Scaling statefulset ss to 0
  E1021 13:08:50.853089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:51.853143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:52.853244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:53.853365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:54.853445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:55.853538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:56.853643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:57.853712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:58.853794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:08:59.853908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:00.677: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 13:09:00.680: INFO: Deleting statefulset ss
  Oct 21 13:09:00.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2379" for this suite. @ 10/21/23 13:09:00.694
• [20.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 10/21/23 13:09:00.7
  Oct 21 13:09:00.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:09:00.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:00.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:00.72
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:09:00.724
  E1021 13:09:00.854612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:01.854771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:02.855764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:03.855844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:09:04.743
  Oct 21 13:09:04.746: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-3e2efbdf-1fa3-4e9d-a076-97b1eda4b4ab container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:09:04.753
  Oct 21 13:09:04.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7162" for this suite. @ 10/21/23 13:09:04.769
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 10/21/23 13:09:04.776
  Oct 21 13:09:04.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 13:09:04.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:04.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:04.794
  Oct 21 13:09:04.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:09:04.856039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:05.857015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/21/23 13:09:06.12
  Oct 21 13:09:06.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 create -f -'
  Oct 21 13:09:06.479: INFO: stderr: ""
  Oct 21 13:09:06.479: INFO: stdout: "e2e-test-crd-publish-openapi-2505-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct 21 13:09:06.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 delete e2e-test-crd-publish-openapi-2505-crds test-cr'
  Oct 21 13:09:06.540: INFO: stderr: ""
  Oct 21 13:09:06.540: INFO: stdout: "e2e-test-crd-publish-openapi-2505-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Oct 21 13:09:06.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 apply -f -'
  Oct 21 13:09:06.672: INFO: stderr: ""
  Oct 21 13:09:06.672: INFO: stdout: "e2e-test-crd-publish-openapi-2505-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct 21 13:09:06.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7906 --namespace=crd-publish-openapi-7906 delete e2e-test-crd-publish-openapi-2505-crds test-cr'
  Oct 21 13:09:06.724: INFO: stderr: ""
  Oct 21 13:09:06.724: INFO: stdout: "e2e-test-crd-publish-openapi-2505-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/21/23 13:09:06.724
  Oct 21 13:09:06.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-7906 explain e2e-test-crd-publish-openapi-2505-crds'
  E1021 13:09:06.857790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:06.957: INFO: stderr: ""
  Oct 21 13:09:06.957: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2505-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1021 13:09:07.858596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:08.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7906" for this suite. @ 10/21/23 13:09:08.199
• [3.435 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 10/21/23 13:09:08.211
  Oct 21 13:09:08.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename runtimeclass @ 10/21/23 13:09:08.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:08.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:08.284
  Oct 21 13:09:08.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5916" for this suite. @ 10/21/23 13:09:08.296
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 10/21/23 13:09:08.304
  Oct 21 13:09:08.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:09:08.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:08.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:08.322
  STEP: Setting up server cert @ 10/21/23 13:09:08.341
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:09:08.717
  STEP: Deploying the webhook pod @ 10/21/23 13:09:08.725
  STEP: Wait for the deployment to be ready @ 10/21/23 13:09:08.738
  Oct 21 13:09:08.746: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:09:08.858903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:09.858983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:09:10.757
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:09:10.769
  E1021 13:09:10.859828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:11.770: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 21 13:09:11.777: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:09:11.860078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4543-crds.webhook.example.com via the AdmissionRegistration API @ 10/21/23 13:09:12.288
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/21/23 13:09:12.306
  E1021 13:09:12.861123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:13.861200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:14.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1021 13:09:14.862134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9843" for this suite. @ 10/21/23 13:09:14.891
  STEP: Destroying namespace "webhook-markers-335" for this suite. @ 10/21/23 13:09:14.898
• [6.599 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/21/23 13:09:14.903
  Oct 21 13:09:14.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename containers @ 10/21/23 13:09:14.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:14.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:14.921
  STEP: Creating a pod to test override all @ 10/21/23 13:09:14.924
  E1021 13:09:15.862230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:16.862364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:17.862458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:18.862677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:09:18.944
  Oct 21 13:09:18.947: INFO: Trying to get logs from node ip-172-31-83-52 pod client-containers-de6166cb-a7f3-4698-95f2-649e6f434dab container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 13:09:18.959
  Oct 21 13:09:18.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4070" for this suite. @ 10/21/23 13:09:18.977
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 10/21/23 13:09:18.983
  Oct 21 13:09:18.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 13:09:18.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:18.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:19
  STEP: Creating a test headless service @ 10/21/23 13:09:19.003
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7132 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7132;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7132 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7132;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7132.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7132.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7132.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7132.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7132.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7132.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7132.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7132.svc;check="$$(dig +notcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_udp@PTR;check="$$(dig +tcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_tcp@PTR;sleep 1; done
   @ 10/21/23 13:09:19.019
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7132 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7132;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7132 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7132;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7132.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7132.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7132.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7132.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7132.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7132.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7132.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7132.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7132.svc;check="$$(dig +notcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_udp@PTR;check="$$(dig +tcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_tcp@PTR;sleep 1; done
   @ 10/21/23 13:09:19.019
  STEP: creating a pod to probe DNS @ 10/21/23 13:09:19.019
  STEP: submitting the pod to kubernetes @ 10/21/23 13:09:19.019
  E1021 13:09:19.863431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:20.863527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/21/23 13:09:21.038
  STEP: looking for the results for each expected name from probers @ 10/21/23 13:09:21.041
  Oct 21 13:09:21.045: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.048: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.051: INFO: Unable to read wheezy_udp@dns-test-service.dns-7132 from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.054: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7132 from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.057: INFO: Unable to read wheezy_udp@dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.060: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.063: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.065: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.080: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.083: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.086: INFO: Unable to read jessie_udp@dns-test-service.dns-7132 from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.089: INFO: Unable to read jessie_tcp@dns-test-service.dns-7132 from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.091: INFO: Unable to read jessie_udp@dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.094: INFO: Unable to read jessie_tcp@dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.097: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.100: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7132.svc from pod dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b: the server could not find the requested resource (get pods dns-test-98770c45-026d-47d4-894b-efa67e64643b)
  Oct 21 13:09:21.111: INFO: Lookups using dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7132 wheezy_tcp@dns-test-service.dns-7132 wheezy_udp@dns-test-service.dns-7132.svc wheezy_tcp@dns-test-service.dns-7132.svc wheezy_udp@_http._tcp.dns-test-service.dns-7132.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7132.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7132 jessie_tcp@dns-test-service.dns-7132 jessie_udp@dns-test-service.dns-7132.svc jessie_tcp@dns-test-service.dns-7132.svc jessie_udp@_http._tcp.dns-test-service.dns-7132.svc jessie_tcp@_http._tcp.dns-test-service.dns-7132.svc]

  Oct 21 13:09:21.117: INFO: Pod client logs for webserver: 
  Oct 21 13:09:21.122: INFO: Pod client logs for querier: 
  Oct 21 13:09:21.127: INFO: Pod client logs for jessie-querier: 
  E1021 13:09:21.863806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:22.864556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:23.864650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:24.864747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:25.864917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:26.197: INFO: DNS probes using dns-7132/dns-test-98770c45-026d-47d4-894b-efa67e64643b succeeded

  Oct 21 13:09:26.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:09:26.2
  STEP: deleting the test service @ 10/21/23 13:09:26.216
  STEP: deleting the test headless service @ 10/21/23 13:09:26.245
  STEP: Destroying namespace "dns-7132" for this suite. @ 10/21/23 13:09:26.257
• [7.283 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 10/21/23 13:09:26.266
  Oct 21 13:09:26.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pod-network-test @ 10/21/23 13:09:26.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:26.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:26.291
  STEP: Performing setup for networking test in namespace pod-network-test-2991 @ 10/21/23 13:09:26.296
  STEP: creating a selector @ 10/21/23 13:09:26.296
  STEP: Creating the service pods in kubernetes @ 10/21/23 13:09:26.296
  Oct 21 13:09:26.296: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1021 13:09:26.865676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:27.865929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:28.865983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:29.866060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:30.866109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:31.866275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:32.866359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:33.867428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:34.867523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:35.867607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:36.868558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:37.868800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:38.869525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:39.869703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:40.870634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:41.870732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:42.870815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:43.871420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:44.871518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:45.871685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:46.872639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:47.872729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/21/23 13:09:48.402
  E1021 13:09:48.873747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:49.873836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:50.432: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 21 13:09:50.432: INFO: Going to poll 192.168.45.226 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 21 13:09:50.435: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.45.226 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2991 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:09:50.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:09:50.435: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:09:50.435: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2991/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.45.226+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1021 13:09:50.874288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:51.516: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct 21 13:09:51.516: INFO: Going to poll 192.168.116.213 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 21 13:09:51.520: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.116.213 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2991 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:09:51.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:09:51.520: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:09:51.520: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2991/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.116.213+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1021 13:09:51.874363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:52.592: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct 21 13:09:52.592: INFO: Going to poll 192.168.47.133 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 21 13:09:52.596: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.47.133 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2991 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:09:52.596: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:09:52.596: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:09:52.596: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2991/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.47.133+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1021 13:09:52.875421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:53.667: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct 21 13:09:53.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2991" for this suite. @ 10/21/23 13:09:53.671
• [27.412 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/21/23 13:09:53.679
  Oct 21 13:09:53.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:09:53.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:53.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:53.696
  STEP: creating a Pod with a static label @ 10/21/23 13:09:53.704
  STEP: watching for Pod to be ready @ 10/21/23 13:09:53.71
  Oct 21 13:09:53.712: INFO: observed Pod pod-test in namespace pods-3007 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Oct 21 13:09:53.716: INFO: observed Pod pod-test in namespace pods-3007 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:53 +0000 UTC  }]
  Oct 21 13:09:53.728: INFO: observed Pod pod-test in namespace pods-3007 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:53 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:53 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:53 +0000 UTC  }]
  E1021 13:09:53.876321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:54.441: INFO: Found Pod pod-test in namespace pods-3007 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:53 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:54 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:54 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:09:53 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/21/23 13:09:54.444
  STEP: getting the Pod and ensuring that it's patched @ 10/21/23 13:09:54.451
  STEP: replacing the Pod's status Ready condition to False @ 10/21/23 13:09:54.454
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/21/23 13:09:54.464
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/21/23 13:09:54.464
  STEP: watching for the Pod to be deleted @ 10/21/23 13:09:54.473
  Oct 21 13:09:54.474: INFO: observed event type MODIFIED
  E1021 13:09:54.876912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:09:55.877756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:56.444: INFO: observed event type MODIFIED
  Oct 21 13:09:56.636: INFO: observed event type MODIFIED
  E1021 13:09:56.877940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:57.452: INFO: observed event type MODIFIED
  Oct 21 13:09:57.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3007" for this suite. @ 10/21/23 13:09:57.463
• [3.789 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 10/21/23 13:09:57.469
  Oct 21 13:09:57.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename daemonsets @ 10/21/23 13:09:57.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:09:57.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:09:57.486
  STEP: Creating simple DaemonSet "daemon-set" @ 10/21/23 13:09:57.504
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/21/23 13:09:57.509
  Oct 21 13:09:57.512: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:09:57.513: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:09:57.516: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:09:57.516: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  E1021 13:09:57.878894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:58.520: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:09:58.520: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:09:58.523: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 21 13:09:58.523: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  E1021 13:09:58.879431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:09:59.521: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:09:59.521: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:09:59.524: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 21 13:09:59.524: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  E1021 13:09:59.879876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:10:00.521: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:10:00.521: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:10:00.524: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 13:10:00.524: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/21/23 13:10:00.527
  STEP: DeleteCollection of the DaemonSets @ 10/21/23 13:10:00.531
  STEP: Verify that ReplicaSets have been deleted @ 10/21/23 13:10:00.537
  Oct 21 13:10:00.547: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22918"},"items":null}

  Oct 21 13:10:00.562: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22920"},"items":[{"metadata":{"name":"daemon-set-ghznc","generateName":"daemon-set-","namespace":"daemonsets-2176","uid":"35958cb3-eb2f-46e7-8fdd-d9e6af112c48","resourceVersion":"22919","creationTimestamp":"2023-10-21T13:09:57Z","deletionTimestamp":"2023-10-21T13:10:30Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"063f170a-4f9d-463b-af34-0cacad4290ab","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-21T13:09:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"063f170a-4f9d-463b-af34-0cacad4290ab\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-21T13:09:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.248\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-nbw9g","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-nbw9g","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-41-152","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-41-152"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:57Z"}],"hostIP":"172.31.41.152","podIP":"192.168.45.248","podIPs":[{"ip":"192.168.45.248"}],"startTime":"2023-10-21T13:09:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-21T13:09:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d9c8146c5ffe66d3075c149cdc5a6d9a012cb24cb2528eb44e31be0f6e152bb4","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-j42bt","generateName":"daemon-set-","namespace":"daemonsets-2176","uid":"ac90766b-9ab3-4473-b0b0-fe242b2c3692","resourceVersion":"22845","creationTimestamp":"2023-10-21T13:09:57Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"063f170a-4f9d-463b-af34-0cacad4290ab","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-21T13:09:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"063f170a-4f9d-463b-af34-0cacad4290ab\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-21T13:09:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.47.136\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gbdbc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gbdbc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-83-52","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-83-52"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:57Z"}],"hostIP":"172.31.83.52","podIP":"192.168.47.136","podIPs":[{"ip":"192.168.47.136"}],"startTime":"2023-10-21T13:09:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-21T13:09:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ff3d98e338528ccfe655d1a90715daac9b185dff2a02dbec1bf4438a86c03650","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nnh75","generateName":"daemon-set-","namespace":"daemonsets-2176","uid":"a5e6be6d-ab13-4471-8e99-7817e1853b35","resourceVersion":"22920","creationTimestamp":"2023-10-21T13:09:57Z","deletionTimestamp":"2023-10-21T13:10:30Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"063f170a-4f9d-463b-af34-0cacad4290ab","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-21T13:09:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"063f170a-4f9d-463b-af34-0cacad4290ab\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-21T13:10:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.116.206\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lj4n5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lj4n5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-65-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-65-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:10:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:10:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-21T13:09:57Z"}],"hostIP":"172.31.65.2","podIP":"192.168.116.206","podIPs":[{"ip":"192.168.116.206"}],"startTime":"2023-10-21T13:09:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-21T13:09:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://c9022cff0267588f486eb94d0cb8f059e41646c587bced74257622e1bf21ca48","started":true}],"qosClass":"BestEffort"}}]}

  Oct 21 13:10:00.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2176" for this suite. @ 10/21/23 13:10:00.577
• [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 10/21/23 13:10:00.582
  Oct 21 13:10:00.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:10:00.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:10:00.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:10:00.604
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/21/23 13:10:00.607
  E1021 13:10:00.880244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:01.880424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:02.880798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:03.881083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:10:04.624
  Oct 21 13:10:04.627: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-bc5504e0-1f81-42cb-80b7-d9e58ae2a206 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:10:04.637
  Oct 21 13:10:04.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3048" for this suite. @ 10/21/23 13:10:04.654
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 10/21/23 13:10:04.66
  Oct 21 13:10:04.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename job @ 10/21/23 13:10:04.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:10:04.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:10:04.682
  STEP: Creating Indexed job @ 10/21/23 13:10:04.687
  STEP: Ensuring job reaches completions @ 10/21/23 13:10:04.694
  E1021 13:10:04.881871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:05.881981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:06.883028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:07.883436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:08.884142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:09.884236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:10.885091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:11.885166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 10/21/23 13:10:12.698
  Oct 21 13:10:12.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1631" for this suite. @ 10/21/23 13:10:12.705
• [8.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 10/21/23 13:10:12.712
  Oct 21 13:10:12.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:10:12.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:10:12.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:10:12.73
  STEP: Counting existing ResourceQuota @ 10/21/23 13:10:12.735
  E1021 13:10:12.886190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:13.887130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:14.888061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:15.888143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:16.888909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/21/23 13:10:17.739
  STEP: Ensuring resource quota status is calculated @ 10/21/23 13:10:17.749
  E1021 13:10:17.889608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:18.889953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 10/21/23 13:10:19.754
  STEP: Ensuring resource quota status captures replication controller creation @ 10/21/23 13:10:19.767
  E1021 13:10:19.890632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:20.890979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 10/21/23 13:10:21.772
  STEP: Ensuring resource quota status released usage @ 10/21/23 13:10:21.781
  E1021 13:10:21.891293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:22.891774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:10:23.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3874" for this suite. @ 10/21/23 13:10:23.79
• [11.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/21/23 13:10:23.799
  Oct 21 13:10:23.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename subpath @ 10/21/23 13:10:23.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:10:23.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:10:23.819
  STEP: Setting up data @ 10/21/23 13:10:23.823
  STEP: Creating pod pod-subpath-test-configmap-gv5b @ 10/21/23 13:10:23.832
  STEP: Creating a pod to test atomic-volume-subpath @ 10/21/23 13:10:23.832
  E1021 13:10:23.892685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:24.892802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:25.892924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:26.893128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:27.894079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:28.894549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:29.894676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:30.895408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:31.895753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:32.895878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:33.896179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:34.896298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:35.896414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:36.897270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:37.897691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:38.898061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:39.899009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:40.899122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:41.899943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:42.900264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:43.900263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:44.900394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:10:45.897
  Oct 21 13:10:45.900: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-subpath-test-configmap-gv5b container test-container-subpath-configmap-gv5b: <nil>
  E1021 13:10:45.900460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 10/21/23 13:10:45.906
  STEP: Deleting pod pod-subpath-test-configmap-gv5b @ 10/21/23 13:10:45.923
  Oct 21 13:10:45.923: INFO: Deleting pod "pod-subpath-test-configmap-gv5b" in namespace "subpath-9577"
  Oct 21 13:10:45.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9577" for this suite. @ 10/21/23 13:10:45.929
• [22.135 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 10/21/23 13:10:45.934
  Oct 21 13:10:45.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename field-validation @ 10/21/23 13:10:45.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:10:45.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:10:45.952
  STEP: apply creating a deployment @ 10/21/23 13:10:45.955
  Oct 21 13:10:45.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8084" for this suite. @ 10/21/23 13:10:45.97
• [0.041 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 10/21/23 13:10:45.976
  Oct 21 13:10:45.976: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename cronjob @ 10/21/23 13:10:45.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:10:45.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:10:45.993
  STEP: Creating a cronjob @ 10/21/23 13:10:45.996
  STEP: creating @ 10/21/23 13:10:45.996
  STEP: getting @ 10/21/23 13:10:46.001
  STEP: listing @ 10/21/23 13:10:46.004
  STEP: watching @ 10/21/23 13:10:46.008
  Oct 21 13:10:46.008: INFO: starting watch
  STEP: cluster-wide listing @ 10/21/23 13:10:46.009
  STEP: cluster-wide watching @ 10/21/23 13:10:46.012
  Oct 21 13:10:46.012: INFO: starting watch
  STEP: patching @ 10/21/23 13:10:46.013
  STEP: updating @ 10/21/23 13:10:46.018
  Oct 21 13:10:46.027: INFO: waiting for watch events with expected annotations
  Oct 21 13:10:46.027: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/21/23 13:10:46.027
  STEP: updating /status @ 10/21/23 13:10:46.032
  STEP: get /status @ 10/21/23 13:10:46.038
  STEP: deleting @ 10/21/23 13:10:46.041
  STEP: deleting a collection @ 10/21/23 13:10:46.056
  Oct 21 13:10:46.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-732" for this suite. @ 10/21/23 13:10:46.069
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 10/21/23 13:10:46.076
  Oct 21 13:10:46.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 13:10:46.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:10:46.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:10:46.092
  STEP: Creating service test in namespace statefulset-4039 @ 10/21/23 13:10:46.095
  STEP: Creating stateful set ss in namespace statefulset-4039 @ 10/21/23 13:10:46.101
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4039 @ 10/21/23 13:10:46.107
  Oct 21 13:10:46.110: INFO: Found 0 stateful pods, waiting for 1
  E1021 13:10:46.900635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:47.900869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:48.900958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:49.901106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:50.901273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:51.901427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:52.901526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:53.901787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:54.902391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:55.903413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:10:56.115: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/21/23 13:10:56.115
  Oct 21 13:10:56.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-4039 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 13:10:56.242: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:10:56.242: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:10:56.242: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:10:56.245: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1021 13:10:56.903657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:57.903867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:58.904794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:10:59.905001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:00.905147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:01.905403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:02.905566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:03.905809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:04.906106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:05.906194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:06.250: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:11:06.250: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 21 13:11:06.264: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Oct 21 13:11:06.264: INFO: ss-0  ip-172-31-83-52  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:10:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:10:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:10:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:10:46 +0000 UTC  }]
  Oct 21 13:11:06.264: INFO: 
  Oct 21 13:11:06.264: INFO: StatefulSet ss has not reached scale 3, at 1
  E1021 13:11:06.906390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:07.270: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99595543s
  E1021 13:11:07.907427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:08.276: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990845773s
  E1021 13:11:08.907570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:09.281: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984051334s
  E1021 13:11:09.907565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:10.286: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979984362s
  E1021 13:11:10.907847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:11.290: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.975544269s
  E1021 13:11:11.908897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:12.293: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971539101s
  E1021 13:11:12.909288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:13.297: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.968043938s
  E1021 13:11:13.910222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:14.301: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.964140596s
  E1021 13:11:14.910351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:15.306: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.941613ms
  E1021 13:11:15.911127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4039 @ 10/21/23 13:11:16.306
  Oct 21 13:11:16.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-4039 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 13:11:16.433: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 21 13:11:16.433: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 13:11:16.433: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 13:11:16.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-4039 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 13:11:16.547: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct 21 13:11:16.547: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 13:11:16.547: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 13:11:16.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-4039 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 21 13:11:16.697: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct 21 13:11:16.697: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 21 13:11:16.697: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 21 13:11:16.701: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:11:16.701: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:11:16.701: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/21/23 13:11:16.701
  Oct 21 13:11:16.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-4039 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 13:11:16.820: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:11:16.820: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:11:16.820: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:11:16.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-4039 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1021 13:11:16.911824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:16.935: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:11:16.935: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:11:16.935: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:11:16.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=statefulset-4039 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 21 13:11:17.052: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 21 13:11:17.052: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 21 13:11:17.052: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 21 13:11:17.052: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 21 13:11:17.055: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1021 13:11:17.912841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:18.913058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:19.913111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:20.913198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:21.913351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:22.913435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:23.914165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:24.914271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:25.914357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:26.915380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:27.063: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:11:27.063: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:11:27.063: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct 21 13:11:27.073: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Oct 21 13:11:27.073: INFO: ss-0  ip-172-31-83-52   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:10:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:10:46 +0000 UTC  }]
  Oct 21 13:11:27.073: INFO: ss-1  ip-172-31-41-152  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:06 +0000 UTC  }]
  Oct 21 13:11:27.073: INFO: ss-2  ip-172-31-65-2    Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:06 +0000 UTC  }]
  Oct 21 13:11:27.073: INFO: 
  Oct 21 13:11:27.073: INFO: StatefulSet ss has not reached scale 0, at 3
  E1021 13:11:27.916441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:28.078: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Oct 21 13:11:28.078: INFO: ss-2  ip-172-31-65-2  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:06 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:17 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-21 13:11:06 +0000 UTC  }]
  Oct 21 13:11:28.078: INFO: 
  Oct 21 13:11:28.078: INFO: StatefulSet ss has not reached scale 0, at 1
  E1021 13:11:28.916727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:29.081: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991672765s
  E1021 13:11:29.916856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:30.086: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.988533547s
  E1021 13:11:30.916947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:31.090: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.983335465s
  E1021 13:11:31.917030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:32.093: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.980359275s
  E1021 13:11:32.917970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:33.097: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.976371544s
  E1021 13:11:33.918353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:34.101: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.971955622s
  E1021 13:11:34.919411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:35.106: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.967898016s
  E1021 13:11:35.919502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:36.109: INFO: Verifying statefulset ss doesn't scale past 0 for another 963.919119ms
  E1021 13:11:36.919699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4039 @ 10/21/23 13:11:37.109
  Oct 21 13:11:37.113: INFO: Scaling statefulset ss to 0
  Oct 21 13:11:37.124: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 13:11:37.126: INFO: Deleting all statefulset in ns statefulset-4039
  Oct 21 13:11:37.129: INFO: Scaling statefulset ss to 0
  Oct 21 13:11:37.139: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 13:11:37.142: INFO: Deleting statefulset ss
  Oct 21 13:11:37.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4039" for this suite. @ 10/21/23 13:11:37.163
• [51.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/21/23 13:11:37.172
  Oct 21 13:11:37.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename containers @ 10/21/23 13:11:37.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:37.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:37.19
  E1021 13:11:37.919804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:38.919875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:39.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9983" for this suite. @ 10/21/23 13:11:39.22
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 10/21/23 13:11:39.226
  Oct 21 13:11:39.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename podtemplate @ 10/21/23 13:11:39.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:39.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:39.245
  Oct 21 13:11:39.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3434" for this suite. @ 10/21/23 13:11:39.281
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/21/23 13:11:39.288
  Oct 21 13:11:39.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:11:39.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:39.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:39.31
  Oct 21 13:11:39.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: creating the pod @ 10/21/23 13:11:39.315
  STEP: submitting the pod to kubernetes @ 10/21/23 13:11:39.315
  E1021 13:11:39.920588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:40.920820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:41.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3443" for this suite. @ 10/21/23 13:11:41.42
• [2.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 10/21/23 13:11:41.427
  Oct 21 13:11:41.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:11:41.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:41.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:41.445
  STEP: Creating configMap that has name configmap-test-emptyKey-da87aa54-375b-4a1f-8f2d-5c3412a1b690 @ 10/21/23 13:11:41.448
  Oct 21 13:11:41.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-784" for this suite. @ 10/21/23 13:11:41.454
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 10/21/23 13:11:41.46
  Oct 21 13:11:41.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename security-context-test @ 10/21/23 13:11:41.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:41.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:41.48
  E1021 13:11:41.921320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:42.921437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:43.921525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:44.921692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:45.518: INFO: Got logs for pod "busybox-privileged-false-4e602c24-badc-48b7-a52b-66f30a6b68f1": "ip: RTNETLINK answers: Operation not permitted\n"
  Oct 21 13:11:45.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5998" for this suite. @ 10/21/23 13:11:45.522
• [4.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 10/21/23 13:11:45.528
  Oct 21 13:11:45.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/21/23 13:11:45.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:45.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:45.552
  Oct 21 13:11:45.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:11:45.921841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:46.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6076" for this suite. @ 10/21/23 13:11:46.097
• [0.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/21/23 13:11:46.107
  Oct 21 13:11:46.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubelet-test @ 10/21/23 13:11:46.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:46.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:46.125
  E1021 13:11:46.922374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:47.922459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:48.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8750" for this suite. @ 10/21/23 13:11:48.157
• [2.055 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/21/23 13:11:48.163
  Oct 21 13:11:48.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 13:11:48.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:48.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:48.181
  Oct 21 13:11:48.183: INFO: Creating deployment "webserver-deployment"
  Oct 21 13:11:48.189: INFO: Waiting for observed generation 1
  E1021 13:11:48.925459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:49.925686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:50.196: INFO: Waiting for all required pods to come up
  Oct 21 13:11:50.200: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/21/23 13:11:50.2
  Oct 21 13:11:50.200: INFO: Waiting for deployment "webserver-deployment" to complete
  Oct 21 13:11:50.206: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Oct 21 13:11:50.213: INFO: Updating deployment webserver-deployment
  Oct 21 13:11:50.213: INFO: Waiting for observed generation 2
  E1021 13:11:50.926391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:51.927460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:52.221: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Oct 21 13:11:52.224: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Oct 21 13:11:52.227: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct 21 13:11:52.235: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Oct 21 13:11:52.235: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Oct 21 13:11:52.238: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct 21 13:11:52.243: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Oct 21 13:11:52.243: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Oct 21 13:11:52.252: INFO: Updating deployment webserver-deployment
  Oct 21 13:11:52.252: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Oct 21 13:11:52.259: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Oct 21 13:11:52.264: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Oct 21 13:11:52.284: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e78bc50-518b-42ba-bdda-8f2cf6807252",
      ResourceVersion: (string) (len=5) "24084",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 21 13:11:52.296: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
      ResourceVersion: (string) (len=5) "24076",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "3e78bc50-518b-42ba-bdda-8f2cf6807252",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 65 37 38 62 63  35 30 2d 35 31 38 62 2d  |\"3e78bc50-518b-|
              00000120  34 32 62 61 2d 62 64 64  61 2d 38 66 32 63 66 36  |42ba-bdda-8f2cf6|
              00000130  38 30 37 32 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |807252\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:11:52.297: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Oct 21 13:11:52.297: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
      ResourceVersion: (string) (len=5) "24075",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "3e78bc50-518b-42ba-bdda-8f2cf6807252",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 65 37 38 62 63  35 30 2d 35 31 38 62 2d  |\"3e78bc50-518b-|
              00000120  34 32 62 61 2d 62 64 64  61 2d 38 66 32 63 66 36  |42ba-bdda-8f2cf6|
              00000130  38 30 37 32 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |807252\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:11:52.320: INFO: Pod "webserver-deployment-557759b7c7-2bj26" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2bj26",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cad62f68-34a0-4a3a-b7ea-38368dcfb502",
      ResourceVersion: (string) (len=5) "23930",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 35 2e 32 31 38 5c 22  |192.168.45.218\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v6xt5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v6xt5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.45.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.45.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b6716ead52cc7873f9181825805c999cf8a5a350dc22d2536121c17ee7fa7aea",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.321: INFO: Pod "webserver-deployment-557759b7c7-6fdvr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6fdvr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5be4c2f3-495f-4c27-a506-e6f526cf382f",
      ResourceVersion: (string) (len=5) "23945",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 35 31 5c 22  |192.168.47.151\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jllgc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jllgc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://423cbe284e39260010a80a8dfcdc50092b480531a184ac18e1978cda52232b73",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.323: INFO: Pod "webserver-deployment-557759b7c7-8frl7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8frl7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f370a0de-3276-4c21-a05d-9b25bbdeeafa",
      ResourceVersion: (string) (len=5) "23923",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 31 36 2e 32 33 33 5c  |192.168.116.233\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2srqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2srqg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-65-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.65.2",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.116.233",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.116.233"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d61f3d0f57f176e2fff2e3512a97879b30c7bea8d9f3fd5757e9302693102321",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.327: INFO: Pod "webserver-deployment-557759b7c7-9vgw7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9vgw7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f011e571-20f6-4194-9454-29e620943b3b",
      ResourceVersion: (string) (len=5) "23917",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 31 36 2e 32 32 38 5c  |192.168.116.228\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s4hw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s4hw8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-65-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.65.2",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.116.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.116.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://075a90a77f5884b02f844ffdae52c9dd334fc313d23ade3889fe3465851342f1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.328: INFO: Pod "webserver-deployment-557759b7c7-bxlgc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bxlgc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1dcb00c-711d-4a36-8c38-0ccc35a4de34",
      ResourceVersion: (string) (len=5) "24099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7mtx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7mtx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.330: INFO: Pod "webserver-deployment-557759b7c7-dld4q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dld4q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6766206b-9676-473f-a3d7-493927b6c0fc",
      ResourceVersion: (string) (len=5) "23926",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 35 2e 32 30 32 5c 22  |192.168.45.202\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jbml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jbml",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.45.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.45.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1b73523265b86b91542188dc3bf1805ec0381aa609ab357b4fe941a0b524574a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.331: INFO: Pod "webserver-deployment-557759b7c7-gfpgf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gfpgf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bba657f5-1110-470c-8f6f-79f7f4fe70f0",
      ResourceVersion: (string) (len=5) "23920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 31 36 2e 32 33 32 5c  |192.168.116.232\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mttpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mttpg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-65-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.65.2",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.116.232",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.116.232"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4184bc5b35aa93dfd3d0b857a554416e71655e978b84727ddbfa7ecc171d7c7f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.332: INFO: Pod "webserver-deployment-557759b7c7-hg9l7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hg9l7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abcfbfbf-9347-47b4-a998-1b1908516bb8",
      ResourceVersion: (string) (len=5) "23939",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 35 30 5c 22  |192.168.47.150\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2j52r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2j52r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5874c9ef13eec00e5f851901747f791e528a7d5021e73584afffcf2d488ad79e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.334: INFO: Pod "webserver-deployment-557759b7c7-jx4lg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jx4lg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a909f4b5-76fb-4a2a-89cc-ac29e0821704",
      ResourceVersion: (string) (len=5) "24104",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mvb6z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mvb6z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.335: INFO: Pod "webserver-deployment-557759b7c7-s2r5t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-s2r5t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd0eb598-a3dd-4c5b-a5ef-a20c3e2c116f",
      ResourceVersion: (string) (len=5) "24091",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t84xp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t84xp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.336: INFO: Pod "webserver-deployment-557759b7c7-s5g6v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-s5g6v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fac4fa8e-195b-486b-84e6-78d4507035e1",
      ResourceVersion: (string) (len=5) "24103",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gbrg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gbrg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.336: INFO: Pod "webserver-deployment-557759b7c7-st8jh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-st8jh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2937926d-acee-4841-b347-4d1da0e060d2",
      ResourceVersion: (string) (len=5) "24105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66nfw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66nfw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.337: INFO: Pod "webserver-deployment-557759b7c7-x7rw2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x7rw2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36c31d04-3566-4a36-8439-73c0ebf7149d",
      ResourceVersion: (string) (len=5) "23942",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 37 30 5c 22  |192.168.47.170\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ds7gx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ds7gx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490709,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490708,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490708,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490709,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://08171ed56b87e034401e9300a963aa3b7aad8c5ab012501a7ed4407a7a3bde7e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.339: INFO: Pod "webserver-deployment-557759b7c7-xff6l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xff6l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5594f894-288a-4bf5-9e6a-56431800f388",
      ResourceVersion: (string) (len=5) "24092",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2365e328-3876-4651-bc3e-98c3b1849bea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  36 35 65 33 32 38 2d 33  |d\":\"2365e328-3|
              00000090  38 37 36 2d 34 36 35 31  2d 62 63 33 65 2d 39 38  |876-4651-bc3e-98|
              000000a0  63 33 62 31 38 34 39 62  65 61 5c 22 7d 22 3a 7b  |c3b1849bea\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sglkl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sglkl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.340: INFO: Pod "webserver-deployment-9b4f5bf69-4qdc9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4qdc9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "079b1fc0-57a9-4870-a660-414d80127529",
      ResourceVersion: (string) (len=5) "24060",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 31 36  2e 32 33 34 5c 22 7d 22  |.168.116.234\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvj9n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvj9n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-65-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.65.2",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.116.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.116.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.342: INFO: Pod "webserver-deployment-9b4f5bf69-5wkrm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5wkrm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4b91c90-de58-47ed-a942-86fea3b5e3e7",
      ResourceVersion: (string) (len=5) "24072",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 34 37 2e  31 35 36 5c 22 7d 22 3a  |.168.47.156\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9h4jn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9h4jn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.346: INFO: Pod "webserver-deployment-9b4f5bf69-8lg69" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8lg69",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16f6a594-516d-4e71-931d-f12876b913f6",
      ResourceVersion: (string) (len=5) "24101",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmtb5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmtb5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-65-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.65.2",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.348: INFO: Pod "webserver-deployment-9b4f5bf69-bfnbj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bfnbj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9916280b-d1a4-4f2c-91df-49e76519dfee",
      ResourceVersion: (string) (len=5) "24098",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-757m6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-757m6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.349: INFO: Pod "webserver-deployment-9b4f5bf69-c2wjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-c2wjb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8d13e7c-04bd-4bf3-a14b-4c37c98540a3",
      ResourceVersion: (string) (len=5) "24094",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s4dsg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s4dsg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.350: INFO: Pod "webserver-deployment-9b4f5bf69-c9pjd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-c9pjd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff375357-f6b5-41b2-82b0-b5d050d4d3d1",
      ResourceVersion: (string) (len=5) "24097",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hdmck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hdmck",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.350: INFO: Pod "webserver-deployment-9b4f5bf69-fff4z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fff4z",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8356bcf-6219-4073-9008-f73e139be3ec",
      ResourceVersion: (string) (len=5) "24100",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-62ffv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-62ffv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.351: INFO: Pod "webserver-deployment-9b4f5bf69-khphz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-khphz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ce4086b-40c0-4cbd-bae5-ff7483890ce8",
      ResourceVersion: (string) (len=5) "24067",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 34 35 2e  32 35 32 5c 22 7d 22 3a  |.168.45.252\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxj8c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxj8c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.45.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.45.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.353: INFO: Pod "webserver-deployment-9b4f5bf69-l4bc6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-l4bc6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7d24cdd-f1d6-4bbe-9832-758c1855f3cd",
      ResourceVersion: (string) (len=5) "24069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 34 37 2e  31 34 37 5c 22 7d 22 3a  |.168.47.147\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kdjwm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kdjwm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.358: INFO: Pod "webserver-deployment-9b4f5bf69-m4jwr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-m4jwr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0c7c337-4ac3-4ed9-a268-b01f6fd2ce06",
      ResourceVersion: (string) (len=5) "24093",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2fln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2fln",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.359: INFO: Pod "webserver-deployment-9b4f5bf69-nfj45" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nfj45",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6d225bc-33cd-4406-bbc6-aab70a27a51a",
      ResourceVersion: (string) (len=5) "24106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-clbmg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-clbmg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-65-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.360: INFO: Pod "webserver-deployment-9b4f5bf69-vmrbr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vmrbr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "224da823-0516-41f3-9f26-23150d76ed4b",
      ResourceVersion: (string) (len=5) "24065",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cbb8af89-720a-4773-a71f-275cb57e3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  62 38 61 66 38 39 2d 37  |d\":\"cbb8af89-7|
              00000090  32 30 61 2d 34 37 37 33  2d 61 37 31 66 2d 32 37  |20a-4773-a71f-27|
              000000a0  35 63 62 35 37 65 33 65  31 31 5c 22 7d 22 3a 7b  |5cb57e3e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 34 35 2e  32 34 35 5c 22 7d 22 3a  |.168.45.245\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-448s7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-448s7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.45.245",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.45.245"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:11:52.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7446" for this suite. @ 10/21/23 13:11:52.369
• [4.222 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 10/21/23 13:11:52.386
  Oct 21 13:11:52.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:11:52.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:52.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:52.463
  STEP: Setting up server cert @ 10/21/23 13:11:52.488
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:11:52.799
  STEP: Deploying the webhook pod @ 10/21/23 13:11:52.806
  STEP: Wait for the deployment to be ready @ 10/21/23 13:11:52.818
  Oct 21 13:11:52.829: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:11:52.928014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:53.928102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:11:54.839
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:11:54.85
  E1021 13:11:54.928949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:55.851: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 21 13:11:55.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:11:55.929515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4767-crds.webhook.example.com via the AdmissionRegistration API @ 10/21/23 13:11:56.371
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/21/23 13:11:56.385
  E1021 13:11:56.929636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:11:57.929879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:11:58.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1021 13:11:58.931245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3683" for this suite. @ 10/21/23 13:11:59.031
  STEP: Destroying namespace "webhook-markers-2004" for this suite. @ 10/21/23 13:11:59.036
• [6.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 10/21/23 13:11:59.044
  Oct 21 13:11:59.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 13:11:59.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:11:59.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:11:59.063
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/21/23 13:11:59.066
  Oct 21 13:11:59.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:11:59.931420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:00.931956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:01.932819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:02.932921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:03.933607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/21/23 13:12:04.103
  Oct 21 13:12:04.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:12:04.934639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:12:05.352: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:12:05.935262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:06.935651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:07.935615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:08.935877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:09.936953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:12:10.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3674" for this suite. @ 10/21/23 13:12:10.485
• [11.446 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/21/23 13:12:10.491
  Oct 21 13:12:10.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:12:10.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:12:10.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:12:10.508
  STEP: Creating secret with name s-test-opt-del-f5ae0e88-0e90-41b5-a3dc-c3b850d3ad50 @ 10/21/23 13:12:10.516
  STEP: Creating secret with name s-test-opt-upd-48100225-1e25-4174-8c1d-389e37f7b20e @ 10/21/23 13:12:10.52
  STEP: Creating the pod @ 10/21/23 13:12:10.523
  E1021 13:12:10.937995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:11.938180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f5ae0e88-0e90-41b5-a3dc-c3b850d3ad50 @ 10/21/23 13:12:12.565
  STEP: Updating secret s-test-opt-upd-48100225-1e25-4174-8c1d-389e37f7b20e @ 10/21/23 13:12:12.571
  STEP: Creating secret with name s-test-opt-create-03056263-ac24-487d-8c4c-4055cfce6d97 @ 10/21/23 13:12:12.575
  STEP: waiting to observe update in volume @ 10/21/23 13:12:12.579
  E1021 13:12:12.938927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:13.939027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:14.939826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:15.940136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:16.940218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:17.940453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:18.940992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:19.941241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:20.942066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:21.942180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:22.943082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:23.943308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:24.944327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:25.944507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:26.945358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:27.945439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:28.946303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:29.946403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:30.947137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:31.947188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:32.948252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:33.948435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:34.948533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:35.948617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:36.949385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:37.950208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:38.950862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:39.951432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:40.952424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:41.952525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:42.953317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:43.954170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:44.954230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:45.954369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:46.955294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:47.955371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:48.955413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:49.955500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:50.956090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:51.956193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:52.956287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:53.956535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:54.956871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:55.957078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:56.957861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:57.957950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:58.958587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:12:59.958683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:00.958776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:01.959428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:02.960371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:03.961175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:04.962117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:05.962308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:06.962911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:07.963004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:08.963276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:09.963373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:10.963811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:11.963914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:12.964254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:13.964333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:14.964382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:15.964549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:16.965297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:17.966369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:18.967017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:19.967119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:20.968156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:21.968275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:22.968496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:23.968754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:24.969603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:25.969712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:26.969935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:27.970011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:13:28.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9427" for this suite. @ 10/21/23 13:13:28.891
• [78.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 10/21/23 13:13:28.897
  Oct 21 13:13:28.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:13:28.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:13:28.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:13:28.916
  STEP: Creating a ResourceQuota with terminating scope @ 10/21/23 13:13:28.918
  STEP: Ensuring ResourceQuota status is calculated @ 10/21/23 13:13:28.922
  E1021 13:13:28.970535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:29.971430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 10/21/23 13:13:30.926
  STEP: Ensuring ResourceQuota status is calculated @ 10/21/23 13:13:30.931
  E1021 13:13:30.971645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:31.971845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 10/21/23 13:13:32.934
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/21/23 13:13:32.946
  E1021 13:13:32.971993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:33.972789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/21/23 13:13:34.95
  E1021 13:13:34.973091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:35.974186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/21/23 13:13:36.954
  STEP: Ensuring resource quota status released the pod usage @ 10/21/23 13:13:36.965
  E1021 13:13:36.974214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:37.974374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 10/21/23 13:13:38.968
  E1021 13:13:38.975071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/21/23 13:13:38.978
  E1021 13:13:39.975209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:40.975975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/21/23 13:13:40.982
  E1021 13:13:41.976689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:42.977174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/21/23 13:13:42.986
  STEP: Ensuring resource quota status released the pod usage @ 10/21/23 13:13:42.995
  E1021 13:13:43.977242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:44.977369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:13:45.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1521" for this suite. @ 10/21/23 13:13:45.003
• [16.111 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 10/21/23 13:13:45.009
  Oct 21 13:13:45.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:13:45.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:13:45.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:13:45.027
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:13:45.03
  E1021 13:13:45.977627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:46.977718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:47.978427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:48.979432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:13:49.047
  Oct 21 13:13:49.050: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-1c1ba5ff-2e97-4460-8bd5-8ba47c0cc8b2 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:13:49.062
  Oct 21 13:13:49.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6688" for this suite. @ 10/21/23 13:13:49.078
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/21/23 13:13:49.085
  Oct 21 13:13:49.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/21/23 13:13:49.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:13:49.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:13:49.102
  STEP: Creating 50 configmaps @ 10/21/23 13:13:49.104
  STEP: Creating RC which spawns configmap-volume pods @ 10/21/23 13:13:49.34
  Oct 21 13:13:49.445: INFO: Pod name wrapped-volume-race-130c0c6f-90cd-4945-b54a-f9d0f70c2f91: Found 3 pods out of 5
  E1021 13:13:49.979650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:50.979890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:51.980112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:52.980305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:53.980561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:13:54.451: INFO: Pod name wrapped-volume-race-130c0c6f-90cd-4945-b54a-f9d0f70c2f91: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/21/23 13:13:54.451
  STEP: Creating RC which spawns configmap-volume pods @ 10/21/23 13:13:54.469
  Oct 21 13:13:54.480: INFO: Pod name wrapped-volume-race-19e07436-70b0-4253-a539-7ef0547678d3: Found 0 pods out of 5
  E1021 13:13:54.980801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:55.980996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:56.981246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:57.981337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:13:58.981887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:13:59.485: INFO: Pod name wrapped-volume-race-19e07436-70b0-4253-a539-7ef0547678d3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/21/23 13:13:59.485
  STEP: Creating RC which spawns configmap-volume pods @ 10/21/23 13:13:59.503
  Oct 21 13:13:59.514: INFO: Pod name wrapped-volume-race-1ed8c78a-1e39-454a-b813-bf90d49b1ee7: Found 0 pods out of 5
  E1021 13:13:59.982551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:00.983465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:01.984146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:02.984240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:03.985050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:04.522: INFO: Pod name wrapped-volume-race-1ed8c78a-1e39-454a-b813-bf90d49b1ee7: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/21/23 13:14:04.522
  Oct 21 13:14:04.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-1ed8c78a-1e39-454a-b813-bf90d49b1ee7 in namespace emptydir-wrapper-5093, will wait for the garbage collector to delete the pods @ 10/21/23 13:14:04.54
  Oct 21 13:14:04.599: INFO: Deleting ReplicationController wrapped-volume-race-1ed8c78a-1e39-454a-b813-bf90d49b1ee7 took: 5.903032ms
  Oct 21 13:14:04.700: INFO: Terminating ReplicationController wrapped-volume-race-1ed8c78a-1e39-454a-b813-bf90d49b1ee7 pods took: 100.794963ms
  E1021 13:14:04.985459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:05.985741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-19e07436-70b0-4253-a539-7ef0547678d3 in namespace emptydir-wrapper-5093, will wait for the garbage collector to delete the pods @ 10/21/23 13:14:06.101
  Oct 21 13:14:06.161: INFO: Deleting ReplicationController wrapped-volume-race-19e07436-70b0-4253-a539-7ef0547678d3 took: 6.343119ms
  Oct 21 13:14:06.262: INFO: Terminating ReplicationController wrapped-volume-race-19e07436-70b0-4253-a539-7ef0547678d3 pods took: 100.456776ms
  E1021 13:14:06.986684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-130c0c6f-90cd-4945-b54a-f9d0f70c2f91 in namespace emptydir-wrapper-5093, will wait for the garbage collector to delete the pods @ 10/21/23 13:14:07.863
  Oct 21 13:14:07.923: INFO: Deleting ReplicationController wrapped-volume-race-130c0c6f-90cd-4945-b54a-f9d0f70c2f91 took: 6.01841ms
  E1021 13:14:07.986747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:08.024: INFO: Terminating ReplicationController wrapped-volume-race-130c0c6f-90cd-4945-b54a-f9d0f70c2f91 pods took: 100.727316ms
  E1021 13:14:08.987343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/21/23 13:14:09.124
  STEP: Destroying namespace "emptydir-wrapper-5093" for this suite. @ 10/21/23 13:14:09.38
• [20.300 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 10/21/23 13:14:09.386
  Oct 21 13:14:09.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 13:14:09.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:09.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:09.403
  STEP: Creating service test in namespace statefulset-5300 @ 10/21/23 13:14:09.406
  Oct 21 13:14:09.419: INFO: Found 0 stateful pods, waiting for 1
  E1021 13:14:09.987848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:10.987923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:11.987999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:12.988691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:13.988797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:14.989050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:15.989416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:16.989485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:17.990459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:18.991411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:19.423: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/21/23 13:14:19.43
  W1021 13:14:19.438926      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Oct 21 13:14:19.444: INFO: Found 1 stateful pods, waiting for 2
  E1021 13:14:19.993209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:20.994198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:21.994373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:22.994450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:23.995473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:24.996005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:25.996093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:26.996187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:27.996405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:28.996808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:29.449: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:14:29.449: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/21/23 13:14:29.455
  STEP: Delete all of the StatefulSets @ 10/21/23 13:14:29.457
  STEP: Verify that StatefulSets have been deleted @ 10/21/23 13:14:29.464
  Oct 21 13:14:29.467: INFO: Deleting all statefulset in ns statefulset-5300
  Oct 21 13:14:29.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5300" for this suite. @ 10/21/23 13:14:29.492
• [20.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/21/23 13:14:29.499
  Oct 21 13:14:29.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 13:14:29.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:29.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:29.519
  Oct 21 13:14:29.521: INFO: Creating simple deployment test-new-deployment
  Oct 21 13:14:29.534: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E1021 13:14:29.997349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:30.997595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 10/21/23 13:14:31.547
  STEP: updating a scale subresource @ 10/21/23 13:14:31.549
  STEP: verifying the deployment Spec.Replicas was modified @ 10/21/23 13:14:31.555
  STEP: Patch a scale subresource @ 10/21/23 13:14:31.558
  Oct 21 13:14:31.569: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d8a95f3-5ca7-4e61-826a-99b720dfa06d",
      ResourceVersion: (string) (len=5) "25665",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490869,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 21 13:14:31.573: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "867d0631-2933-4f58-890b-48a2931e68f9",
      ResourceVersion: (string) (len=5) "25664",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490869,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "1d8a95f3-5ca7-4e61-826a-99b720dfa06d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 64 38 61 39 35  66 33 2d 35 63 61 37 2d  |\"1d8a95f3-5ca7-|
              00000120  34 65 36 31 2d 38 32 36  61 2d 39 39 62 37 32 30  |4e61-826a-99b720|
              00000130  64 66 61 30 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dfa06d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:14:31.580: INFO: Pod "test-new-deployment-557759b7c7-q9gdg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-q9gdg",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5692",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2be7334d-95ff-4da7-a14c-e858e7225705",
      ResourceVersion: (string) (len=5) "25660",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490869,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "867d0631-2933-4f58-890b-48a2931e68f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  37 64 30 36 33 31 2d 32  |d\":\"867d0631-2|
              00000090  39 33 33 2d 34 66 35 38  2d 38 39 30 62 2d 34 38  |933-4f58-890b-48|
              000000a0  61 32 39 33 31 65 36 38  66 39 5c 22 7d 22 3a 7b  |a2931e68f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 36 32 5c 22  |192.168.47.162\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nlqd5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nlqd5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490871,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490869,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490870,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9c728c87e165096ed8d37d021add40073e6aa588b7e47b51bf10317ecf212d69",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:14:31.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5692" for this suite. @ 10/21/23 13:14:31.588
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 10/21/23 13:14:31.597
  Oct 21 13:14:31.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 13:14:31.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:31.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:31.626
  E1021 13:14:31.998314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:32.998378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:33.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:14:33.647: INFO: Deleting pod "var-expansion-763d6f68-397c-4335-890b-de1f6c5f4a5e" in namespace "var-expansion-9374"
  Oct 21 13:14:33.654: INFO: Wait up to 5m0s for pod "var-expansion-763d6f68-397c-4335-890b-de1f6c5f4a5e" to be fully deleted
  E1021 13:14:33.998639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:34.998653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-9374" for this suite. @ 10/21/23 13:14:35.661
• [4.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 10/21/23 13:14:35.669
  Oct 21 13:14:35.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename controllerrevisions @ 10/21/23 13:14:35.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:35.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:35.688
  STEP: Creating DaemonSet "e2e-qgnwx-daemon-set" @ 10/21/23 13:14:35.71
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/21/23 13:14:35.714
  Oct 21 13:14:35.717: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:14:35.717: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:14:35.720: INFO: Number of nodes with available pods controlled by daemonset e2e-qgnwx-daemon-set: 0
  Oct 21 13:14:35.720: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  E1021 13:14:35.999428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:36.723: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:14:36.723: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:14:36.727: INFO: Number of nodes with available pods controlled by daemonset e2e-qgnwx-daemon-set: 1
  Oct 21 13:14:36.727: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  E1021 13:14:36.999530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:37.724: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:14:37.724: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:14:37.727: INFO: Number of nodes with available pods controlled by daemonset e2e-qgnwx-daemon-set: 3
  Oct 21 13:14:37.727: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-qgnwx-daemon-set
  STEP: Confirm DaemonSet "e2e-qgnwx-daemon-set" successfully created with "daemonset-name=e2e-qgnwx-daemon-set" label @ 10/21/23 13:14:37.731
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-qgnwx-daemon-set" @ 10/21/23 13:14:37.737
  Oct 21 13:14:37.740: INFO: Located ControllerRevision: "e2e-qgnwx-daemon-set-7d765b7cd6"
  STEP: Patching ControllerRevision "e2e-qgnwx-daemon-set-7d765b7cd6" @ 10/21/23 13:14:37.743
  Oct 21 13:14:37.748: INFO: e2e-qgnwx-daemon-set-7d765b7cd6 has been patched
  STEP: Create a new ControllerRevision @ 10/21/23 13:14:37.748
  Oct 21 13:14:37.753: INFO: Created ControllerRevision: e2e-qgnwx-daemon-set-6dc4dcf496
  STEP: Confirm that there are two ControllerRevisions @ 10/21/23 13:14:37.753
  Oct 21 13:14:37.753: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 21 13:14:37.756: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-qgnwx-daemon-set-7d765b7cd6" @ 10/21/23 13:14:37.756
  STEP: Confirm that there is only one ControllerRevision @ 10/21/23 13:14:37.761
  Oct 21 13:14:37.761: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 21 13:14:37.763: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-qgnwx-daemon-set-6dc4dcf496" @ 10/21/23 13:14:37.766
  Oct 21 13:14:37.773: INFO: e2e-qgnwx-daemon-set-6dc4dcf496 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/21/23 13:14:37.773
  W1021 13:14:37.781123      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/21/23 13:14:37.781
  Oct 21 13:14:37.781: INFO: Requesting list of ControllerRevisions to confirm quantity
  E1021 13:14:38.000108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:38.786: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 21 13:14:38.789: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-qgnwx-daemon-set-6dc4dcf496=updated" @ 10/21/23 13:14:38.789
  STEP: Confirm that there is only one ControllerRevision @ 10/21/23 13:14:38.796
  Oct 21 13:14:38.796: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 21 13:14:38.799: INFO: Found 1 ControllerRevisions
  Oct 21 13:14:38.801: INFO: ControllerRevision "e2e-qgnwx-daemon-set-697b498cb9" has revision 3
  STEP: Deleting DaemonSet "e2e-qgnwx-daemon-set" @ 10/21/23 13:14:38.803
  STEP: deleting DaemonSet.extensions e2e-qgnwx-daemon-set in namespace controllerrevisions-9943, will wait for the garbage collector to delete the pods @ 10/21/23 13:14:38.803
  Oct 21 13:14:38.862: INFO: Deleting DaemonSet.extensions e2e-qgnwx-daemon-set took: 5.764049ms
  Oct 21 13:14:38.963: INFO: Terminating DaemonSet.extensions e2e-qgnwx-daemon-set pods took: 100.671742ms
  E1021 13:14:39.000998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:40.001994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:41.002867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:41.767: INFO: Number of nodes with available pods controlled by daemonset e2e-qgnwx-daemon-set: 0
  Oct 21 13:14:41.767: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-qgnwx-daemon-set
  Oct 21 13:14:41.770: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25910"},"items":null}

  Oct 21 13:14:41.773: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25910"},"items":null}

  Oct 21 13:14:41.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9943" for this suite. @ 10/21/23 13:14:41.787
• [6.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/21/23 13:14:41.794
  Oct 21 13:14:41.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:14:41.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:41.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:41.812
  STEP: Creating secret with name secret-test-98bb8fe3-6710-4411-8d29-7f5f67c88c66 @ 10/21/23 13:14:41.837
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:14:41.841
  E1021 13:14:42.003284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:43.003380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:44.004157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:45.004784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:14:45.858
  Oct 21 13:14:45.862: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-secrets-807c7df4-5953-4f17-9ed0-fdc91d74cecb container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:14:45.868
  Oct 21 13:14:45.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4672" for this suite. @ 10/21/23 13:14:45.882
  STEP: Destroying namespace "secret-namespace-572" for this suite. @ 10/21/23 13:14:45.887
• [4.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 10/21/23 13:14:45.893
  Oct 21 13:14:45.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:14:45.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:45.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:45.912
  STEP: Creating a pod to test downward api env vars @ 10/21/23 13:14:45.914
  E1021 13:14:46.005211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:47.005336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:48.005514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:49.006509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:14:49.936
  Oct 21 13:14:49.939: INFO: Trying to get logs from node ip-172-31-83-52 pod downward-api-c60fb7e9-d358-476d-9aaa-c44d2618a090 container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 13:14:49.945
  Oct 21 13:14:49.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-775" for this suite. @ 10/21/23 13:14:49.962
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 10/21/23 13:14:49.968
  Oct 21 13:14:49.969: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename namespaces @ 10/21/23 13:14:49.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:49.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:49.991
  STEP: Creating namespace "e2e-ns-sm8ht" @ 10/21/23 13:14:49.997
  E1021 13:14:50.007051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:50.018: INFO: Namespace "e2e-ns-sm8ht-4949" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-sm8ht-4949" @ 10/21/23 13:14:50.019
  Oct 21 13:14:50.032: INFO: Namespace "e2e-ns-sm8ht-4949" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-sm8ht-4949" @ 10/21/23 13:14:50.032
  Oct 21 13:14:50.042: INFO: Namespace "e2e-ns-sm8ht-4949" has []v1.FinalizerName{"kubernetes"}
  Oct 21 13:14:50.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1897" for this suite. @ 10/21/23 13:14:50.048
  STEP: Destroying namespace "e2e-ns-sm8ht-4949" for this suite. @ 10/21/23 13:14:50.055
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/21/23 13:14:50.067
  Oct 21 13:14:50.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:14:50.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:50.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:50.09
  STEP: creating pod @ 10/21/23 13:14:50.093
  E1021 13:14:51.008157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:52.008267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:52.113: INFO: Pod pod-hostip-7fb63d5c-860f-489d-b087-d546da1283da has hostIP: 172.31.83.52
  Oct 21 13:14:52.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1700" for this suite. @ 10/21/23 13:14:52.117
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 10/21/23 13:14:52.123
  Oct 21 13:14:52.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/21/23 13:14:52.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:52.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:52.141
  Oct 21 13:14:52.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:14:53.008861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:14:53.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1192" for this suite. @ 10/21/23 13:14:53.171
• [1.056 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 10/21/23 13:14:53.179
  Oct 21 13:14:53.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename gc @ 10/21/23 13:14:53.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:14:53.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:14:53.197
  STEP: create the rc @ 10/21/23 13:14:53.203
  W1021 13:14:53.207727      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1021 13:14:54.013817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:55.014853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:56.021657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:57.022425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:58.023054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:14:59.024214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/21/23 13:14:59.229
  STEP: wait for the rc to be deleted @ 10/21/23 13:14:59.238
  E1021 13:15:00.026005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:01.026122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:02.026195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:03.026364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:04.027419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/21/23 13:15:04.242
  E1021 13:15:05.027521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:06.027553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:07.027654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:08.027821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:09.027913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:10.028073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:11.028241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:12.028430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:13.029129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:14.029494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:15.029580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:16.029737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:17.029906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:18.029998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:19.030088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:20.030276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:21.030356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:22.031418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:23.031561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:24.032194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:25.032322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:26.032386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:27.033133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:28.033668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:29.033775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:30.033928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:31.034072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:32.034265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:33.034351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:34.034444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/21/23 13:15:34.25
  W1021 13:15:34.255421      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 21 13:15:34.255: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 21 13:15:34.255: INFO: Deleting pod "simpletest.rc-268k2" in namespace "gc-8057"
  Oct 21 13:15:34.266: INFO: Deleting pod "simpletest.rc-2d7ls" in namespace "gc-8057"
  Oct 21 13:15:34.279: INFO: Deleting pod "simpletest.rc-2kw2d" in namespace "gc-8057"
  Oct 21 13:15:34.288: INFO: Deleting pod "simpletest.rc-2lblr" in namespace "gc-8057"
  Oct 21 13:15:34.296: INFO: Deleting pod "simpletest.rc-2tpgz" in namespace "gc-8057"
  Oct 21 13:15:34.309: INFO: Deleting pod "simpletest.rc-4c5n9" in namespace "gc-8057"
  Oct 21 13:15:34.319: INFO: Deleting pod "simpletest.rc-4grdj" in namespace "gc-8057"
  Oct 21 13:15:34.330: INFO: Deleting pod "simpletest.rc-59rkp" in namespace "gc-8057"
  Oct 21 13:15:34.342: INFO: Deleting pod "simpletest.rc-5ctnx" in namespace "gc-8057"
  Oct 21 13:15:34.356: INFO: Deleting pod "simpletest.rc-5fmjp" in namespace "gc-8057"
  Oct 21 13:15:34.364: INFO: Deleting pod "simpletest.rc-5lwvz" in namespace "gc-8057"
  Oct 21 13:15:34.377: INFO: Deleting pod "simpletest.rc-5mgdw" in namespace "gc-8057"
  Oct 21 13:15:34.389: INFO: Deleting pod "simpletest.rc-5tkn5" in namespace "gc-8057"
  Oct 21 13:15:34.404: INFO: Deleting pod "simpletest.rc-64zfx" in namespace "gc-8057"
  Oct 21 13:15:34.414: INFO: Deleting pod "simpletest.rc-66cft" in namespace "gc-8057"
  Oct 21 13:15:34.424: INFO: Deleting pod "simpletest.rc-6d8p2" in namespace "gc-8057"
  Oct 21 13:15:34.435: INFO: Deleting pod "simpletest.rc-6lbr9" in namespace "gc-8057"
  Oct 21 13:15:34.446: INFO: Deleting pod "simpletest.rc-72rvw" in namespace "gc-8057"
  Oct 21 13:15:34.461: INFO: Deleting pod "simpletest.rc-7fs8l" in namespace "gc-8057"
  Oct 21 13:15:34.473: INFO: Deleting pod "simpletest.rc-7kbxw" in namespace "gc-8057"
  Oct 21 13:15:34.487: INFO: Deleting pod "simpletest.rc-7kp88" in namespace "gc-8057"
  Oct 21 13:15:34.501: INFO: Deleting pod "simpletest.rc-7t2lh" in namespace "gc-8057"
  Oct 21 13:15:34.511: INFO: Deleting pod "simpletest.rc-7t8jw" in namespace "gc-8057"
  Oct 21 13:15:34.522: INFO: Deleting pod "simpletest.rc-7w7tz" in namespace "gc-8057"
  Oct 21 13:15:34.536: INFO: Deleting pod "simpletest.rc-7w9wm" in namespace "gc-8057"
  Oct 21 13:15:34.546: INFO: Deleting pod "simpletest.rc-82hv6" in namespace "gc-8057"
  Oct 21 13:15:34.557: INFO: Deleting pod "simpletest.rc-84phx" in namespace "gc-8057"
  Oct 21 13:15:34.567: INFO: Deleting pod "simpletest.rc-8bpcs" in namespace "gc-8057"
  Oct 21 13:15:34.579: INFO: Deleting pod "simpletest.rc-8gfs2" in namespace "gc-8057"
  Oct 21 13:15:34.591: INFO: Deleting pod "simpletest.rc-9hc68" in namespace "gc-8057"
  Oct 21 13:15:34.601: INFO: Deleting pod "simpletest.rc-9t2vt" in namespace "gc-8057"
  Oct 21 13:15:34.612: INFO: Deleting pod "simpletest.rc-b94cd" in namespace "gc-8057"
  Oct 21 13:15:34.623: INFO: Deleting pod "simpletest.rc-bbqd6" in namespace "gc-8057"
  Oct 21 13:15:34.636: INFO: Deleting pod "simpletest.rc-bfbjs" in namespace "gc-8057"
  Oct 21 13:15:34.654: INFO: Deleting pod "simpletest.rc-bhphh" in namespace "gc-8057"
  Oct 21 13:15:34.664: INFO: Deleting pod "simpletest.rc-bzvnd" in namespace "gc-8057"
  Oct 21 13:15:34.678: INFO: Deleting pod "simpletest.rc-c8jtn" in namespace "gc-8057"
  Oct 21 13:15:34.691: INFO: Deleting pod "simpletest.rc-csn5s" in namespace "gc-8057"
  Oct 21 13:15:34.709: INFO: Deleting pod "simpletest.rc-dbpwf" in namespace "gc-8057"
  Oct 21 13:15:34.723: INFO: Deleting pod "simpletest.rc-dfszq" in namespace "gc-8057"
  Oct 21 13:15:34.732: INFO: Deleting pod "simpletest.rc-f5w7b" in namespace "gc-8057"
  Oct 21 13:15:34.744: INFO: Deleting pod "simpletest.rc-fg7ng" in namespace "gc-8057"
  Oct 21 13:15:34.767: INFO: Deleting pod "simpletest.rc-fk7bc" in namespace "gc-8057"
  Oct 21 13:15:34.780: INFO: Deleting pod "simpletest.rc-fxrs8" in namespace "gc-8057"
  Oct 21 13:15:34.794: INFO: Deleting pod "simpletest.rc-gbsgm" in namespace "gc-8057"
  Oct 21 13:15:34.804: INFO: Deleting pod "simpletest.rc-gkrjh" in namespace "gc-8057"
  Oct 21 13:15:34.815: INFO: Deleting pod "simpletest.rc-gt97l" in namespace "gc-8057"
  Oct 21 13:15:34.826: INFO: Deleting pod "simpletest.rc-hk8fb" in namespace "gc-8057"
  Oct 21 13:15:34.838: INFO: Deleting pod "simpletest.rc-jd5g2" in namespace "gc-8057"
  Oct 21 13:15:34.850: INFO: Deleting pod "simpletest.rc-jdsc9" in namespace "gc-8057"
  Oct 21 13:15:34.860: INFO: Deleting pod "simpletest.rc-jhg7m" in namespace "gc-8057"
  Oct 21 13:15:34.871: INFO: Deleting pod "simpletest.rc-jhtmp" in namespace "gc-8057"
  Oct 21 13:15:34.881: INFO: Deleting pod "simpletest.rc-jpvk8" in namespace "gc-8057"
  Oct 21 13:15:34.891: INFO: Deleting pod "simpletest.rc-js7zf" in namespace "gc-8057"
  Oct 21 13:15:34.902: INFO: Deleting pod "simpletest.rc-jvnv7" in namespace "gc-8057"
  Oct 21 13:15:34.913: INFO: Deleting pod "simpletest.rc-jwbc4" in namespace "gc-8057"
  Oct 21 13:15:34.923: INFO: Deleting pod "simpletest.rc-klv7l" in namespace "gc-8057"
  Oct 21 13:15:34.932: INFO: Deleting pod "simpletest.rc-kmtpq" in namespace "gc-8057"
  Oct 21 13:15:34.943: INFO: Deleting pod "simpletest.rc-knrjs" in namespace "gc-8057"
  Oct 21 13:15:34.956: INFO: Deleting pod "simpletest.rc-kphj6" in namespace "gc-8057"
  Oct 21 13:15:34.968: INFO: Deleting pod "simpletest.rc-kwngl" in namespace "gc-8057"
  Oct 21 13:15:34.980: INFO: Deleting pod "simpletest.rc-l2gj8" in namespace "gc-8057"
  Oct 21 13:15:34.991: INFO: Deleting pod "simpletest.rc-lhcxl" in namespace "gc-8057"
  Oct 21 13:15:35.001: INFO: Deleting pod "simpletest.rc-lnd7s" in namespace "gc-8057"
  E1021 13:15:35.034693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:15:35.051: INFO: Deleting pod "simpletest.rc-lxgc5" in namespace "gc-8057"
  Oct 21 13:15:35.104: INFO: Deleting pod "simpletest.rc-mhxvf" in namespace "gc-8057"
  Oct 21 13:15:35.164: INFO: Deleting pod "simpletest.rc-mrbnx" in namespace "gc-8057"
  Oct 21 13:15:35.213: INFO: Deleting pod "simpletest.rc-n52tn" in namespace "gc-8057"
  Oct 21 13:15:35.253: INFO: Deleting pod "simpletest.rc-n8gnx" in namespace "gc-8057"
  Oct 21 13:15:35.309: INFO: Deleting pod "simpletest.rc-nf7zr" in namespace "gc-8057"
  Oct 21 13:15:35.353: INFO: Deleting pod "simpletest.rc-nfbtg" in namespace "gc-8057"
  Oct 21 13:15:35.404: INFO: Deleting pod "simpletest.rc-nh9g6" in namespace "gc-8057"
  Oct 21 13:15:35.452: INFO: Deleting pod "simpletest.rc-nhm95" in namespace "gc-8057"
  Oct 21 13:15:35.503: INFO: Deleting pod "simpletest.rc-nnc57" in namespace "gc-8057"
  Oct 21 13:15:35.557: INFO: Deleting pod "simpletest.rc-p6btf" in namespace "gc-8057"
  Oct 21 13:15:35.607: INFO: Deleting pod "simpletest.rc-pzxzw" in namespace "gc-8057"
  Oct 21 13:15:35.654: INFO: Deleting pod "simpletest.rc-q6p2h" in namespace "gc-8057"
  Oct 21 13:15:35.704: INFO: Deleting pod "simpletest.rc-qjmr6" in namespace "gc-8057"
  Oct 21 13:15:35.754: INFO: Deleting pod "simpletest.rc-r5sgb" in namespace "gc-8057"
  Oct 21 13:15:35.803: INFO: Deleting pod "simpletest.rc-rlckl" in namespace "gc-8057"
  Oct 21 13:15:35.858: INFO: Deleting pod "simpletest.rc-rmd2v" in namespace "gc-8057"
  Oct 21 13:15:35.906: INFO: Deleting pod "simpletest.rc-s7cxx" in namespace "gc-8057"
  Oct 21 13:15:35.955: INFO: Deleting pod "simpletest.rc-sgh8f" in namespace "gc-8057"
  Oct 21 13:15:36.026: INFO: Deleting pod "simpletest.rc-st4wq" in namespace "gc-8057"
  E1021 13:15:36.035411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:15:36.067: INFO: Deleting pod "simpletest.rc-sx2t6" in namespace "gc-8057"
  Oct 21 13:15:36.112: INFO: Deleting pod "simpletest.rc-t9zt9" in namespace "gc-8057"
  Oct 21 13:15:36.154: INFO: Deleting pod "simpletest.rc-tcb8v" in namespace "gc-8057"
  Oct 21 13:15:36.204: INFO: Deleting pod "simpletest.rc-tv4sw" in namespace "gc-8057"
  Oct 21 13:15:36.266: INFO: Deleting pod "simpletest.rc-tvjht" in namespace "gc-8057"
  Oct 21 13:15:36.304: INFO: Deleting pod "simpletest.rc-v6qw2" in namespace "gc-8057"
  Oct 21 13:15:36.362: INFO: Deleting pod "simpletest.rc-vs9m8" in namespace "gc-8057"
  Oct 21 13:15:36.403: INFO: Deleting pod "simpletest.rc-vxffs" in namespace "gc-8057"
  Oct 21 13:15:36.452: INFO: Deleting pod "simpletest.rc-w5sms" in namespace "gc-8057"
  Oct 21 13:15:36.505: INFO: Deleting pod "simpletest.rc-wbpm8" in namespace "gc-8057"
  Oct 21 13:15:36.553: INFO: Deleting pod "simpletest.rc-wcvd4" in namespace "gc-8057"
  Oct 21 13:15:36.629: INFO: Deleting pod "simpletest.rc-wlld5" in namespace "gc-8057"
  Oct 21 13:15:36.653: INFO: Deleting pod "simpletest.rc-wvbl8" in namespace "gc-8057"
  Oct 21 13:15:36.705: INFO: Deleting pod "simpletest.rc-xhrzb" in namespace "gc-8057"
  Oct 21 13:15:36.763: INFO: Deleting pod "simpletest.rc-xp9wg" in namespace "gc-8057"
  Oct 21 13:15:36.810: INFO: Deleting pod "simpletest.rc-zb8n4" in namespace "gc-8057"
  Oct 21 13:15:36.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8057" for this suite. @ 10/21/23 13:15:36.897
• [43.778 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 10/21/23 13:15:36.957
  Oct 21 13:15:36.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:15:36.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:15:36.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:15:37.01
  E1021 13:15:37.036955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 10/21/23 13:15:37.066
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:15:38.005
  STEP: Deploying the webhook pod @ 10/21/23 13:15:38.015
  STEP: Wait for the deployment to be ready @ 10/21/23 13:15:38.027
  Oct 21 13:15:38.036: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:15:38.037550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:39.037684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:40.038689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:15:40.045: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 15, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 15, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 15, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 15, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:15:41.038791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:42.039391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:15:42.049
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:15:42.06
  E1021 13:15:43.039497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:15:43.060: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/21/23 13:15:43.066
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/21/23 13:15:43.081
  STEP: Creating a configMap that should not be mutated @ 10/21/23 13:15:43.087
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/21/23 13:15:43.098
  STEP: Creating a configMap that should be mutated @ 10/21/23 13:15:43.104
  Oct 21 13:15:43.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9077" for this suite. @ 10/21/23 13:15:43.16
  STEP: Destroying namespace "webhook-markers-7384" for this suite. @ 10/21/23 13:15:43.259
• [6.307 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 10/21/23 13:15:43.265
  Oct 21 13:15:43.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/21/23 13:15:43.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:15:43.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:15:43.283
  STEP: create the container to handle the HTTPGet hook request. @ 10/21/23 13:15:43.289
  E1021 13:15:44.039978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:45.040065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/21/23 13:15:45.308
  E1021 13:15:46.040152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:47.040327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/21/23 13:15:47.322
  E1021 13:15:48.041226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:49.042282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/21/23 13:15:49.335
  Oct 21 13:15:49.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1813" for this suite. @ 10/21/23 13:15:49.354
• [6.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/21/23 13:15:49.363
  Oct 21 13:15:49.363: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/21/23 13:15:49.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:15:49.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:15:49.383
  STEP: Creating two CSIDrivers @ 10/21/23 13:15:49.386
  STEP: Getting "inline-driver-0a81d9ad-0319-4923-a52c-b8c8992cd971" & "inline-driver-ba584a6c-68e8-4c93-96f6-cda145d841f0" @ 10/21/23 13:15:49.401
  STEP: Patching the CSIDriver "inline-driver-ba584a6c-68e8-4c93-96f6-cda145d841f0" @ 10/21/23 13:15:49.406
  STEP: Updating the CSIDriver "inline-driver-ba584a6c-68e8-4c93-96f6-cda145d841f0" @ 10/21/23 13:15:49.411
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9559" @ 10/21/23 13:15:49.418
  STEP: Deleting CSIDriver "inline-driver-0a81d9ad-0319-4923-a52c-b8c8992cd971" @ 10/21/23 13:15:49.421
  STEP: Confirm deletion of CSIDriver "inline-driver-0a81d9ad-0319-4923-a52c-b8c8992cd971" @ 10/21/23 13:15:49.426
  STEP: Deleting CSIDriver "inline-driver-ba584a6c-68e8-4c93-96f6-cda145d841f0" via DeleteCollection @ 10/21/23 13:15:49.428
  STEP: Confirm deletion of CSIDriver "inline-driver-ba584a6c-68e8-4c93-96f6-cda145d841f0" @ 10/21/23 13:15:49.435
  Oct 21 13:15:49.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9559" for this suite. @ 10/21/23 13:15:49.441
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 10/21/23 13:15:49.447
  Oct 21 13:15:49.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 13:15:49.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:15:49.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:15:49.463
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/21/23 13:15:49.466
  Oct 21 13:15:49.473: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-8969  f161f4a6-dce9-413f-8646-0ed9d7b07d2c 28772 0 2023-10-21 13:15:49 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-10-21 13:15:49 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8qx8j,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8qx8j,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1021 13:15:50.042377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:51.042475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/21/23 13:15:51.483
  Oct 21 13:15:51.483: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-8969 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:15:51.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:15:51.484: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:15:51.484: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-8969/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 10/21/23 13:15:51.565
  Oct 21 13:15:51.565: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-8969 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:15:51.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:15:51.566: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:15:51.566: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-8969/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 21 13:15:51.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:15:51.650: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-8969" for this suite. @ 10/21/23 13:15:51.66
• [2.219 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/21/23 13:15:51.667
  Oct 21 13:15:51.667: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 13:15:51.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:15:51.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:15:51.687
  Oct 21 13:15:51.699: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E1021 13:15:52.042538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:53.043444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:54.043522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:55.044270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:56.044454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:15:56.705: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/21/23 13:15:56.705
  Oct 21 13:15:56.705: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/21/23 13:15:56.716
  Oct 21 13:15:56.727: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-405",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0719e40b-1ad6-4c6a-9a91-499ffcb488b5",
      ResourceVersion: (string) (len=5) "28860",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 21 13:15:56.733: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Oct 21 13:15:56.733: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Oct 21 13:15:56.734: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-405",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4d0a360-71da-438e-94f9-4daed6245d4d",
      ResourceVersion: (string) (len=5) "28862",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490951,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "0719e40b-1ad6-4c6a-9a91-499ffcb488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490952,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 30 37 31 39 65 34 30  |"uid\":\"0719e40|
              00000040  62 2d 31 61 64 36 2d 34  63 36 61 2d 39 61 39 31  |b-1ad6-4c6a-9a91|
              00000050  2d 34 39 39 66 66 63 62  34 38 38 62 35 5c 22 7d  |-499ffcb488b5\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:15:56.742: INFO: Pod "test-cleanup-controller-btdx9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-btdx9",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=14) "deployment-405",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4f05d95-f854-4b68-ac09-a2eb7d2188e7",
      ResourceVersion: (string) (len=5) "28815",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490951,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "e4d0a360-71da-438e-94f9-4daed6245d4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  65 34 64 30 61 33 36 30  |uid\":\"e4d0a360|
              00000080  2d 37 31 64 61 2d 34 33  38 65 2d 39 34 66 39 2d  |-71da-438e-94f9-|
              00000090  34 64 61 65 64 36 32 34  35 64 34 64 5c 22 7d 22  |4daed6245d4d\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490952,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 33 34 5c 22  |192.168.47.134\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p6m5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p6m5z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490952,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490952,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833490951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833490951,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833490952,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://36fdee962f0fcd2af79feecaeaa132e24390e11639326c0363dbed7c0ed0497e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:15:56.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-405" for this suite. @ 10/21/23 13:15:56.753
• [5.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 10/21/23 13:15:56.764
  Oct 21 13:15:56.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:15:56.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:15:56.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:15:56.8
  STEP: Setting up server cert @ 10/21/23 13:15:56.859
  E1021 13:15:57.044600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:15:57.304
  STEP: Deploying the webhook pod @ 10/21/23 13:15:57.309
  STEP: Wait for the deployment to be ready @ 10/21/23 13:15:57.322
  Oct 21 13:15:57.331: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:15:58.045053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:15:59.045143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:15:59.341
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:15:59.349
  E1021 13:16:00.045250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:16:00.350: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/21/23 13:16:00.358
  STEP: create a pod @ 10/21/23 13:16:00.373
  E1021 13:16:01.046041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:02.046141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/21/23 13:16:02.389
  Oct 21 13:16:02.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=webhook-7443 attach --namespace=webhook-7443 to-be-attached-pod -i -c=container1'
  Oct 21 13:16:02.488: INFO: rc: 1
  Oct 21 13:16:02.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7443" for this suite. @ 10/21/23 13:16:02.539
  STEP: Destroying namespace "webhook-markers-4620" for this suite. @ 10/21/23 13:16:02.545
• [5.789 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 10/21/23 13:16:02.553
  Oct 21 13:16:02.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:16:02.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:16:02.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:16:02.575
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/21/23 13:16:02.581
  E1021 13:16:03.046860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:04.046961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:05.047457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:06.047735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:16:06.6
  Oct 21 13:16:06.603: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-7b4fb728-859a-4f66-87cb-d7e78772d3b6 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:16:06.62
  Oct 21 13:16:06.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9460" for this suite. @ 10/21/23 13:16:06.64
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 10/21/23 13:16:06.648
  Oct 21 13:16:06.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename job @ 10/21/23 13:16:06.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:16:06.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:16:06.668
  STEP: Creating a job @ 10/21/23 13:16:06.673
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/21/23 13:16:06.678
  E1021 13:16:07.047738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:08.048637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/21/23 13:16:08.683
  STEP: updating /status @ 10/21/23 13:16:08.69
  STEP: get /status @ 10/21/23 13:16:08.696
  Oct 21 13:16:08.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-569" for this suite. @ 10/21/23 13:16:08.703
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 10/21/23 13:16:08.712
  Oct 21 13:16:08.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename endpointslice @ 10/21/23 13:16:08.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:16:08.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:16:08.736
  E1021 13:16:09.049576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:10.049728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:11.049817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:12.049918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:13.050271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 10/21/23 13:16:13.792
  E1021 13:16:14.051032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:15.051138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:16.051208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:17.051303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:18.051633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 10/21/23 13:16:18.799
  E1021 13:16:19.051933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:20.052267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:21.052444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:22.052538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:23.053485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/21/23 13:16:23.806
  E1021 13:16:24.054333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:25.054432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:26.055398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:27.055491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:28.055624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 10/21/23 13:16:28.813
  Oct 21 13:16:28.832: INFO: EndpointSlice for Service endpointslice-7463/example-named-port not found
  E1021 13:16:29.056641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:30.056812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:31.056984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:32.057913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:33.058571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:34.058918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:35.059423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:36.059615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:37.059874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:38.060335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:16:38.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7463" for this suite. @ 10/21/23 13:16:38.844
• [30.138 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 10/21/23 13:16:38.85
  Oct 21 13:16:38.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:16:38.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:16:38.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:16:38.871
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:16:38.873
  E1021 13:16:39.061326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:40.061505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:41.061836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:42.062069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:16:42.896
  Oct 21 13:16:42.899: INFO: Trying to get logs from node ip-172-31-41-152 pod downwardapi-volume-dc982fc6-a3bc-4aee-9c65-b8264d07875c container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:16:42.905
  Oct 21 13:16:42.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4771" for this suite. @ 10/21/23 13:16:42.919
• [4.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 10/21/23 13:16:42.926
  Oct 21 13:16:42.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:16:42.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:16:42.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:16:42.944
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:16:42.947
  E1021 13:16:43.062323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:44.062367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:45.062641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:46.063573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:16:46.964
  Oct 21 13:16:46.968: INFO: Trying to get logs from node ip-172-31-41-152 pod downwardapi-volume-a439b1b4-df65-4bcb-a1a3-992b05a34f3f container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:16:46.974
  Oct 21 13:16:46.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4203" for this suite. @ 10/21/23 13:16:46.99
• [4.070 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/21/23 13:16:46.996
  Oct 21 13:16:46.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-runtime @ 10/21/23 13:16:46.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:16:47.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:16:47.014
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/21/23 13:16:47.024
  E1021 13:16:47.063890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:48.064567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:49.065174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:50.065176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:51.065934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:52.065982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:53.067058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:54.067770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:55.068227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:56.068839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:57.069447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:58.069682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:16:59.069784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:00.070356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:01.071440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:02.071534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:03.072347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/21/23 13:17:03.091
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/21/23 13:17:03.094
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/21/23 13:17:03.099
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 10/21/23 13:17:03.1
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/21/23 13:17:03.117
  E1021 13:17:04.072477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:05.072555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:06.072645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/21/23 13:17:06.133
  E1021 13:17:07.072730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/21/23 13:17:07.14
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/21/23 13:17:07.147
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 10/21/23 13:17:07.148
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/21/23 13:17:07.166
  E1021 13:17:08.073711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/21/23 13:17:08.174
  E1021 13:17:09.074374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:10.075418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/21/23 13:17:10.185
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/21/23 13:17:10.19
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 10/21/23 13:17:10.19
  Oct 21 13:17:10.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7983" for this suite. @ 10/21/23 13:17:10.219
• [23.230 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 10/21/23 13:17:10.226
  Oct 21 13:17:10.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename podtemplate @ 10/21/23 13:17:10.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:10.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:10.292
  STEP: Create set of pod templates @ 10/21/23 13:17:10.298
  Oct 21 13:17:10.303: INFO: created test-podtemplate-1
  Oct 21 13:17:10.307: INFO: created test-podtemplate-2
  Oct 21 13:17:10.312: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/21/23 13:17:10.312
  STEP: delete collection of pod templates @ 10/21/23 13:17:10.315
  Oct 21 13:17:10.315: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/21/23 13:17:10.33
  Oct 21 13:17:10.330: INFO: requesting list of pod templates to confirm quantity
  Oct 21 13:17:10.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3085" for this suite. @ 10/21/23 13:17:10.336
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 10/21/23 13:17:10.344
  Oct 21 13:17:10.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename disruption @ 10/21/23 13:17:10.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:10.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:10.363
  STEP: Waiting for the pdb to be processed @ 10/21/23 13:17:10.369
  E1021 13:17:11.076439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:12.076526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/21/23 13:17:12.396
  Oct 21 13:17:12.401: INFO: running pods: 0 < 3
  E1021 13:17:13.076615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:14.076700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:17:14.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8786" for this suite. @ 10/21/23 13:17:14.412
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 10/21/23 13:17:14.418
  Oct 21 13:17:14.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 13:17:14.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:14.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:14.436
  E1021 13:17:15.077572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:16.078718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:17.079510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:18.079628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:19.080464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:20.080735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:21.080814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:22.081315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:23.081611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:24.081780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:25.082276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:26.082373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:27.082686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:28.083639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:29.084314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:30.084419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:31.085445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:32.085989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:33.086454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:34.087422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:35.087528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:36.087617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:17:36.494: INFO: Container started at 2023-10-21 13:17:15 +0000 UTC, pod became ready at 2023-10-21 13:17:34 +0000 UTC
  Oct 21 13:17:36.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3623" for this suite. @ 10/21/23 13:17:36.498
• [22.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 10/21/23 13:17:36.503
  Oct 21 13:17:36.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:17:36.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:36.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:36.527
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:17:36.529
  E1021 13:17:37.087993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:38.088315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:39.089002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:40.089189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:17:40.549
  Oct 21 13:17:40.552: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-509b3899-df94-487f-b14a-c23ce38b97ad container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:17:40.567
  Oct 21 13:17:40.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9503" for this suite. @ 10/21/23 13:17:40.584
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 10/21/23 13:17:40.59
  Oct 21 13:17:40.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename security-context-test @ 10/21/23 13:17:40.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:40.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:40.608
  E1021 13:17:41.090120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:42.090192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:43.091109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:44.091210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:17:44.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3164" for this suite. @ 10/21/23 13:17:44.635
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 10/21/23 13:17:44.642
  Oct 21 13:17:44.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svcaccounts @ 10/21/23 13:17:44.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:44.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:44.663
  E1021 13:17:45.091597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:46.092062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 10/21/23 13:17:46.704
  Oct 21 13:17:46.704: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6019 pod-service-account-fc0af7dc-2df4-4fda-b0e2-918436bc015d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/21/23 13:17:46.82
  Oct 21 13:17:46.820: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6019 pod-service-account-fc0af7dc-2df4-4fda-b0e2-918436bc015d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/21/23 13:17:46.935
  Oct 21 13:17:46.935: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6019 pod-service-account-fc0af7dc-2df4-4fda-b0e2-918436bc015d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Oct 21 13:17:47.055: INFO: Got root ca configmap in namespace "svcaccounts-6019"
  Oct 21 13:17:47.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6019" for this suite. @ 10/21/23 13:17:47.062
• [2.425 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 10/21/23 13:17:47.067
  Oct 21 13:17:47.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:17:47.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:47.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:47.089
  STEP: creating a replication controller @ 10/21/23 13:17:47.092
  Oct 21 13:17:47.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 create -f -'
  E1021 13:17:47.092442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:17:47.288: INFO: stderr: ""
  Oct 21 13:17:47.288: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/21/23 13:17:47.288
  Oct 21 13:17:47.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 21 13:17:47.341: INFO: stderr: ""
  Oct 21 13:17:47.341: INFO: stdout: "update-demo-nautilus-8t5gc update-demo-nautilus-c28cz "
  Oct 21 13:17:47.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods update-demo-nautilus-8t5gc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 13:17:47.388: INFO: stderr: ""
  Oct 21 13:17:47.388: INFO: stdout: ""
  Oct 21 13:17:47.388: INFO: update-demo-nautilus-8t5gc is created but not running
  E1021 13:17:48.093480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:49.093584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:50.094297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:51.094378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:52.094449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:17:52.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 21 13:17:52.438: INFO: stderr: ""
  Oct 21 13:17:52.438: INFO: stdout: "update-demo-nautilus-8t5gc update-demo-nautilus-c28cz "
  Oct 21 13:17:52.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods update-demo-nautilus-8t5gc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 13:17:52.494: INFO: stderr: ""
  Oct 21 13:17:52.494: INFO: stdout: "true"
  Oct 21 13:17:52.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods update-demo-nautilus-8t5gc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 21 13:17:52.541: INFO: stderr: ""
  Oct 21 13:17:52.541: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 21 13:17:52.541: INFO: validating pod update-demo-nautilus-8t5gc
  Oct 21 13:17:52.546: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 21 13:17:52.546: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 21 13:17:52.546: INFO: update-demo-nautilus-8t5gc is verified up and running
  Oct 21 13:17:52.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods update-demo-nautilus-c28cz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 21 13:17:52.594: INFO: stderr: ""
  Oct 21 13:17:52.594: INFO: stdout: "true"
  Oct 21 13:17:52.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods update-demo-nautilus-c28cz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 21 13:17:52.640: INFO: stderr: ""
  Oct 21 13:17:52.641: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 21 13:17:52.641: INFO: validating pod update-demo-nautilus-c28cz
  Oct 21 13:17:52.645: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 21 13:17:52.645: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 21 13:17:52.645: INFO: update-demo-nautilus-c28cz is verified up and running
  STEP: using delete to clean up resources @ 10/21/23 13:17:52.645
  Oct 21 13:17:52.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 delete --grace-period=0 --force -f -'
  Oct 21 13:17:52.696: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 13:17:52.696: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct 21 13:17:52.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get rc,svc -l name=update-demo --no-headers'
  Oct 21 13:17:52.763: INFO: stderr: "No resources found in kubectl-7693 namespace.\n"
  Oct 21 13:17:52.763: INFO: stdout: ""
  Oct 21 13:17:52.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-7693 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 21 13:17:52.838: INFO: stderr: ""
  Oct 21 13:17:52.838: INFO: stdout: ""
  Oct 21 13:17:52.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7693" for this suite. @ 10/21/23 13:17:52.842
• [5.780 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 10/21/23 13:17:52.848
  Oct 21 13:17:52.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename gc @ 10/21/23 13:17:52.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:52.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:52.866
  Oct 21 13:17:52.898: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"79245763-602a-4a05-90fa-7a9999b46fd1", Controller:(*bool)(0xc0020bd896), BlockOwnerDeletion:(*bool)(0xc0020bd897)}}
  Oct 21 13:17:52.905: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b9b4e0af-925a-4825-994c-244c1a50b0ad", Controller:(*bool)(0xc00378bd36), BlockOwnerDeletion:(*bool)(0xc00378bd37)}}
  Oct 21 13:17:52.910: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"13e20b6d-ce87-4df7-81cd-b8a96e1938b3", Controller:(*bool)(0xc0020bdad6), BlockOwnerDeletion:(*bool)(0xc0020bdad7)}}
  E1021 13:17:53.094856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:54.095430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:55.095490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:56.095730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:57.095934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:17:57.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8611" for this suite. @ 10/21/23 13:17:57.935
• [5.094 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/21/23 13:17:57.942
  Oct 21 13:17:57.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:17:57.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:17:57.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:17:57.964
  STEP: Creating secret with name secret-test-6868a145-5954-4e08-be44-dcaff220e3fc @ 10/21/23 13:17:57.967
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:17:57.971
  E1021 13:17:58.096265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:17:59.096472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:00.096871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:01.097056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:18:01.991
  Oct 21 13:18:01.994: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-secrets-8b516438-0fd2-4dc2-a413-1b2452772863 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:18:02
  Oct 21 13:18:02.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4178" for this suite. @ 10/21/23 13:18:02.017
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 10/21/23 13:18:02.025
  Oct 21 13:18:02.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename field-validation @ 10/21/23 13:18:02.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:02.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:02.047
  Oct 21 13:18:02.050: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:18:02.097244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:03.097631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:04.097721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1021 13:18:04.592395      19 warnings.go:70] unknown field "alpha"
  W1021 13:18:04.592413      19 warnings.go:70] unknown field "beta"
  W1021 13:18:04.592416      19 warnings.go:70] unknown field "delta"
  W1021 13:18:04.592419      19 warnings.go:70] unknown field "epsilon"
  W1021 13:18:04.592422      19 warnings.go:70] unknown field "gamma"
  E1021 13:18:05.098377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:18:05.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8945" for this suite. @ 10/21/23 13:18:05.13
• [3.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 10/21/23 13:18:05.137
  Oct 21 13:18:05.137: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replicaset @ 10/21/23 13:18:05.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:05.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:05.157
  STEP: Create a ReplicaSet @ 10/21/23 13:18:05.16
  STEP: Verify that the required pods have come up @ 10/21/23 13:18:05.165
  Oct 21 13:18:05.167: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1021 13:18:06.098463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:07.099440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:08.099628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:09.099980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:10.100453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:18:10.172: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/21/23 13:18:10.172
  Oct 21 13:18:10.174: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/21/23 13:18:10.175
  STEP: DeleteCollection of the ReplicaSets @ 10/21/23 13:18:10.177
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/21/23 13:18:10.184
  Oct 21 13:18:10.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-98" for this suite. @ 10/21/23 13:18:10.19
• [5.059 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/21/23 13:18:10.195
  Oct 21 13:18:10.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename tables @ 10/21/23 13:18:10.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:10.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:10.254
  Oct 21 13:18:10.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4695" for this suite. @ 10/21/23 13:18:10.263
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 10/21/23 13:18:10.271
  Oct 21 13:18:10.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename namespaces @ 10/21/23 13:18:10.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:10.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:10.295
  STEP: Creating a test namespace @ 10/21/23 13:18:10.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:10.323
  STEP: Creating a pod in the namespace @ 10/21/23 13:18:10.326
  STEP: Waiting for the pod to have running status @ 10/21/23 13:18:10.336
  E1021 13:18:11.100533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:12.101506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 10/21/23 13:18:12.343
  STEP: Waiting for the namespace to be removed. @ 10/21/23 13:18:12.348
  E1021 13:18:13.102343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:14.102387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:15.102450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:16.103054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:17.103435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:18.103653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:19.103749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:20.103818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:21.104397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:22.104780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:23.105047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/21/23 13:18:23.353
  STEP: Verifying there are no pods in the namespace @ 10/21/23 13:18:23.37
  Oct 21 13:18:23.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-738" for this suite. @ 10/21/23 13:18:23.379
  STEP: Destroying namespace "nsdeletetest-4050" for this suite. @ 10/21/23 13:18:23.385
  Oct 21 13:18:23.388: INFO: Namespace nsdeletetest-4050 was already deleted
  STEP: Destroying namespace "nsdeletetest-7528" for this suite. @ 10/21/23 13:18:23.388
• [13.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 10/21/23 13:18:23.393
  Oct 21 13:18:23.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename security-context @ 10/21/23 13:18:23.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:23.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:23.412
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/21/23 13:18:23.415
  E1021 13:18:24.106056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:25.106131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:26.106374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:27.107433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:18:27.432
  Oct 21 13:18:27.434: INFO: Trying to get logs from node ip-172-31-83-52 pod security-context-9f32b039-af21-4d98-b28b-08db47b99508 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:18:27.44
  Oct 21 13:18:27.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2267" for this suite. @ 10/21/23 13:18:27.455
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 10/21/23 13:18:27.463
  Oct 21 13:18:27.463: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 13:18:27.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:27.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:27.481
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4136.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4136.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/21/23 13:18:27.483
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4136.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4136.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/21/23 13:18:27.483
  STEP: creating a pod to probe /etc/hosts @ 10/21/23 13:18:27.483
  STEP: submitting the pod to kubernetes @ 10/21/23 13:18:27.483
  E1021 13:18:28.107667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:29.107760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/21/23 13:18:29.503
  STEP: looking for the results for each expected name from probers @ 10/21/23 13:18:29.506
  Oct 21 13:18:29.520: INFO: DNS probes using dns-4136/dns-test-e5a1d854-21e6-49c3-b8c7-c051b7eb698a succeeded

  Oct 21 13:18:29.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:18:29.523
  STEP: Destroying namespace "dns-4136" for this suite. @ 10/21/23 13:18:29.534
• [2.077 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 10/21/23 13:18:29.54
  Oct 21 13:18:29.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:18:29.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:29.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:29.558
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:18:29.561
  E1021 13:18:30.107855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:31.107953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:32.108028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:33.108081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:18:33.58
  Oct 21 13:18:33.583: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-2a268751-10dc-4c07-8377-1a3a422b7538 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:18:33.589
  Oct 21 13:18:33.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5752" for this suite. @ 10/21/23 13:18:33.605
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 10/21/23 13:18:33.613
  Oct 21 13:18:33.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename endpointslice @ 10/21/23 13:18:33.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:33.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:33.634
  STEP: getting /apis @ 10/21/23 13:18:33.636
  STEP: getting /apis/discovery.k8s.io @ 10/21/23 13:18:33.64
  STEP: getting /apis/discovery.k8s.iov1 @ 10/21/23 13:18:33.641
  STEP: creating @ 10/21/23 13:18:33.642
  STEP: getting @ 10/21/23 13:18:33.655
  STEP: listing @ 10/21/23 13:18:33.657
  STEP: watching @ 10/21/23 13:18:33.66
  Oct 21 13:18:33.660: INFO: starting watch
  STEP: cluster-wide listing @ 10/21/23 13:18:33.661
  STEP: cluster-wide watching @ 10/21/23 13:18:33.664
  Oct 21 13:18:33.664: INFO: starting watch
  STEP: patching @ 10/21/23 13:18:33.665
  STEP: updating @ 10/21/23 13:18:33.67
  Oct 21 13:18:33.677: INFO: waiting for watch events with expected annotations
  Oct 21 13:18:33.677: INFO: saw patched and updated annotations
  STEP: deleting @ 10/21/23 13:18:33.677
  STEP: deleting a collection @ 10/21/23 13:18:33.687
  Oct 21 13:18:33.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1421" for this suite. @ 10/21/23 13:18:33.703
• [0.096 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/21/23 13:18:33.709
  Oct 21 13:18:33.709: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename init-container @ 10/21/23 13:18:33.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:33.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:33.726
  STEP: creating the pod @ 10/21/23 13:18:33.728
  Oct 21 13:18:33.728: INFO: PodSpec: initContainers in spec.initContainers
  E1021 13:18:34.108924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:35.109269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:36.109571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:37.109726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:18:37.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1196" for this suite. @ 10/21/23 13:18:37.192
• [3.489 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/21/23 13:18:37.198
  Oct 21 13:18:37.198: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename cronjob @ 10/21/23 13:18:37.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:18:37.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:18:37.215
  STEP: Creating a ForbidConcurrent cronjob @ 10/21/23 13:18:37.218
  STEP: Ensuring a job is scheduled @ 10/21/23 13:18:37.223
  E1021 13:18:38.110674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:39.110758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:40.111326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:41.111409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:42.111555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:43.112527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:44.112631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:45.113556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:46.114597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:47.115448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:48.116135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:49.116230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:50.116602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:51.116993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:52.117085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:53.117340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:54.117463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:55.118230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:56.118387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:57.118454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:58.118665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:18:59.118757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:00.119425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:01.119598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/21/23 13:19:01.227
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/21/23 13:19:01.23
  STEP: Ensuring no more jobs are scheduled @ 10/21/23 13:19:01.232
  E1021 13:19:02.120122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:03.120203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:04.121023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:05.121091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:06.121207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:07.121268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:08.121691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:09.121779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:10.121867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:11.122349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:12.122437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:13.122482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:14.122592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:15.123434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:16.123831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:17.123922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:18.124694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:19.124783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:20.124872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:21.125056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:22.125152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:23.125215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:24.125319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:25.125503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:26.125601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:27.125766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:28.126699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:29.126779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:30.126895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:31.126982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:32.127075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:33.127370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:34.127755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:35.128641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:36.128737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:37.129010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:38.129945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:39.130101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:40.130378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:41.130444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:42.130820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:43.131750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:44.131856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:45.132331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:46.132893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:47.133907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:48.134497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:49.134537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:50.135039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:51.135669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:52.135773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:53.135854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:54.135940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:55.136139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:56.136243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:57.136350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:58.136709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:19:59.136947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:00.137036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:01.137645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:02.137714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:03.138552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:04.138649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:05.139412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:06.139460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:07.139939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:08.140705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:09.140898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:10.140988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:11.141054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:12.141931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:13.142548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:14.142596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:15.143411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:16.144336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:17.144458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:18.145395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:19.145517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:20.145535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:21.146229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:22.146351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:23.146541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:24.147013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:25.147105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:26.147410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:27.147533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:28.147546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:29.147635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:30.147720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:31.147876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:32.147958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:33.148551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:34.149230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:35.149357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:36.149909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:37.150796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:38.151688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:39.151847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:40.152095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:41.153107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:42.154168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:43.154434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:44.155405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:45.156380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:46.156466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:47.156992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:48.157686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:49.157826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:50.158366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:51.158448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:52.158534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:53.159568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:54.159970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:55.160128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:56.160222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:57.161185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:58.161730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:20:59.161815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:00.162365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:01.163427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:02.163601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:03.163677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:04.163764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:05.164139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:06.164227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:07.164403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:08.164425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:09.164513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:10.164806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:11.165323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:12.165432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:13.165514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:14.166598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:15.167451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:16.167520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:17.167643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:18.168421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:19.168739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:20.168831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:21.169081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:22.169174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:23.169475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:24.169544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:25.170166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:26.170367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:27.170456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:28.170675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:29.170775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:30.170868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:31.171427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:32.171518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:33.171770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:34.172212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:35.173211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:36.173457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:37.173534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:38.174417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:39.174680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:40.174768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:41.175447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:42.175520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:43.175806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:44.175908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:45.176080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:46.176562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:47.177090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:48.177741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:49.177846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:50.178369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:51.178459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:52.178550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:53.178819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:54.178928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:55.179427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:56.180484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:57.181061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:58.181746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:21:59.181927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:00.182367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:01.183420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:02.183522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:03.183976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:04.184079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:05.184251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:06.184965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:07.185973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:08.186616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:09.186802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:10.187045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:11.187111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:12.187822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:13.187868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:14.188440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:15.188525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:16.188599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:17.188735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:18.189712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:19.190499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:20.191414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:21.191573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:22.192015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:23.192351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:24.192399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:25.192454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:26.192520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:27.192608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:28.192652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:29.192740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:30.193335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:31.193472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:32.193566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:33.194615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:34.195414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:35.195562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:36.196484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:37.197425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:38.197626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:39.197681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:40.198300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:41.198358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:42.198892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:43.199603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:44.199696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:45.200548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:46.200637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:47.200827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:48.201731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:49.201975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:50.202354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:51.203422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:52.203604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:53.204548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:54.204647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:55.204897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:56.204994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:57.205080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:58.205955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:22:59.206106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:00.206348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:01.207409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:02.207497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:03.207556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:04.207681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:05.207756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:06.208268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:07.208352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:08.208791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:09.209018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:10.210010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:11.210102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:12.210352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:13.211407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:14.211881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:15.212025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:16.212532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:17.212627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:18.212690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:19.213482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:20.214394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:21.214493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:22.215406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:23.215565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:24.215923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:25.216012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:26.216563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:27.216650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:28.217472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:29.217626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:30.218433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:31.218522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:32.219408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:33.219559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:34.219611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:35.219766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:36.219849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:37.220062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:38.220811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:39.220964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:40.221055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:41.221202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:42.221289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:43.221446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:44.222371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:45.222454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:46.222605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:47.222691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:48.223408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:49.223970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:50.224076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:51.224259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:52.224955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:53.225640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:54.225739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:55.226032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:56.226116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:57.226299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:58.226964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:23:59.227432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:00.227522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:01.227704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 10/21/23 13:24:01.238
  Oct 21 13:24:01.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4578" for this suite. @ 10/21/23 13:24:01.247
• [324.055 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 10/21/23 13:24:01.252
  Oct 21 13:24:01.252: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 13:24:01.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:24:01.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:24:01.277
  STEP: creating the pod with failed condition @ 10/21/23 13:24:01.279
  E1021 13:24:02.227802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:03.228648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:04.228746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:05.228836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:06.228924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:07.229461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:08.229788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:09.230018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:10.230373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:11.230440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:12.230526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:13.230582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:14.230771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:15.231413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:16.231503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:17.231661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:18.231715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:19.231783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:20.232256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:21.233185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:22.233451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:23.233531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:24.233936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:25.234021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:26.234107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:27.234273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:28.234757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:29.235412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:30.235515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:31.235662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:32.236630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:33.237646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:34.238016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:35.238165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:36.238338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:37.238431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:38.239411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:39.239571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:40.240475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:41.240564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:42.241539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:43.241596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:44.241687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:45.241822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:46.242612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:47.242705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:48.243253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:49.244274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:50.244479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:51.244675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:52.245219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:53.245306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:54.245435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:55.245506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:56.246280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:57.246351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:58.246773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:24:59.246861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:00.247447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:01.247539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:02.247868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:03.248651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:04.249118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:05.249211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:06.250033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:07.250191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:08.251010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:09.251162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:10.251976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:11.252146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:12.252498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:13.252598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:14.253044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:15.253236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:16.253290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:17.253371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:18.253597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:19.254451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:20.255191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:21.255357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:22.256031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:23.256114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:24.256203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:25.256368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:26.257419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:27.257844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:28.258325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:29.258354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:30.259412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:31.260280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:32.260359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:33.261435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:34.261518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:35.261596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:36.261704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:37.261879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:38.262813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:39.262976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:40.263061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:41.263417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:42.263959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:43.264677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:44.265640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:45.265738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:46.266351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:47.267413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:48.267531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:49.267976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:50.268056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:51.268144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:52.268231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:53.268433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:54.269348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:55.270149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:56.271085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:57.271177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:58.272169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:25:59.272262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:00.272296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:01.272381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 10/21/23 13:26:01.288
  Oct 21 13:26:01.800: INFO: Successfully updated pod "var-expansion-01d4cab9-96e9-4f0d-9b74-bc5b781b8218"
  STEP: waiting for pod running @ 10/21/23 13:26:01.8
  E1021 13:26:02.273140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:03.273351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/21/23 13:26:03.806
  Oct 21 13:26:03.807: INFO: Deleting pod "var-expansion-01d4cab9-96e9-4f0d-9b74-bc5b781b8218" in namespace "var-expansion-3657"
  Oct 21 13:26:03.814: INFO: Wait up to 5m0s for pod "var-expansion-01d4cab9-96e9-4f0d-9b74-bc5b781b8218" to be fully deleted
  E1021 13:26:04.273743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:05.273837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:06.274501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:07.275427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:08.275461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:09.275786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:10.275631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:11.276310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:12.276978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:13.277668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:14.278221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:15.278356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:16.279277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:17.279447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:18.280044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:19.280206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:20.280636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:21.280798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:22.281862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:23.282694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:24.282786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:25.283413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:26.283709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:27.283985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:28.284187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:29.285029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:30.285684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:31.286328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:32.286359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:33.286439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:34.287420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:35.287509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:26:35.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3657" for this suite. @ 10/21/23 13:26:35.885
• [154.641 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 10/21/23 13:26:35.893
  Oct 21 13:26:35.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:26:35.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:35.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:35.915
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:26:35.918
  E1021 13:26:36.288066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:37.288242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:26:37.931
  Oct 21 13:26:37.935: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-60ad8f2a-0b2c-46be-8dee-4ef2dc6a06f3 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:26:37.949
  Oct 21 13:26:37.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9990" for this suite. @ 10/21/23 13:26:37.964
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 10/21/23 13:26:37.97
  Oct 21 13:26:37.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename disruption @ 10/21/23 13:26:37.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:37.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:37.989
  STEP: Waiting for the pdb to be processed @ 10/21/23 13:26:37.995
  E1021 13:26:38.288426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:39.288497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 10/21/23 13:26:40.002
  STEP: Waiting for all pods to be running @ 10/21/23 13:26:40.009
  Oct 21 13:26:40.018: INFO: running pods: 0 < 1
  E1021 13:26:40.289492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:41.289593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/21/23 13:26:42.021
  STEP: Waiting for the pdb to be processed @ 10/21/23 13:26:42.033
  STEP: Patching PodDisruptionBudget status @ 10/21/23 13:26:42.038
  STEP: Waiting for the pdb to be processed @ 10/21/23 13:26:42.046
  Oct 21 13:26:42.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4512" for this suite. @ 10/21/23 13:26:42.052
• [4.089 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/21/23 13:26:42.059
  Oct 21 13:26:42.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename watch @ 10/21/23 13:26:42.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:42.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:42.078
  STEP: getting a starting resourceVersion @ 10/21/23 13:26:42.081
  STEP: starting a background goroutine to produce watch events @ 10/21/23 13:26:42.083
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/21/23 13:26:42.083
  E1021 13:26:42.290540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:43.291051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:44.291750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:26:44.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5346" for this suite. @ 10/21/23 13:26:44.913
• [2.907 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 10/21/23 13:26:44.969
  Oct 21 13:26:44.969: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:26:44.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:44.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:44.987
  STEP: create deployment with httpd image @ 10/21/23 13:26:44.99
  Oct 21 13:26:44.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-6074 create -f -'
  Oct 21 13:26:45.113: INFO: stderr: ""
  Oct 21 13:26:45.113: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/21/23 13:26:45.113
  Oct 21 13:26:45.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-6074 diff -f -'
  Oct 21 13:26:45.231: INFO: rc: 1
  Oct 21 13:26:45.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-6074 delete -f -'
  Oct 21 13:26:45.283: INFO: stderr: ""
  Oct 21 13:26:45.283: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Oct 21 13:26:45.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6074" for this suite. @ 10/21/23 13:26:45.286
  E1021 13:26:45.292252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 10/21/23 13:26:45.294
  Oct 21 13:26:45.294: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename field-validation @ 10/21/23 13:26:45.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:45.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:45.314
  Oct 21 13:26:45.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:26:46.292362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:47.292444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1021 13:26:47.863891      19 warnings.go:70] unknown field "alpha"
  W1021 13:26:47.863911      19 warnings.go:70] unknown field "beta"
  W1021 13:26:47.863914      19 warnings.go:70] unknown field "delta"
  W1021 13:26:47.863918      19 warnings.go:70] unknown field "epsilon"
  W1021 13:26:47.863920      19 warnings.go:70] unknown field "gamma"
  E1021 13:26:48.293233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:26:48.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4419" for this suite. @ 10/21/23 13:26:48.405
• [3.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 10/21/23 13:26:48.41
  Oct 21 13:26:48.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename discovery @ 10/21/23 13:26:48.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:48.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:48.429
  STEP: Setting up server cert @ 10/21/23 13:26:48.433
  Oct 21 13:26:48.772: INFO: Checking APIGroup: apiregistration.k8s.io
  Oct 21 13:26:48.773: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Oct 21 13:26:48.773: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Oct 21 13:26:48.773: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Oct 21 13:26:48.773: INFO: Checking APIGroup: apps
  Oct 21 13:26:48.774: INFO: PreferredVersion.GroupVersion: apps/v1
  Oct 21 13:26:48.774: INFO: Versions found [{apps/v1 v1}]
  Oct 21 13:26:48.774: INFO: apps/v1 matches apps/v1
  Oct 21 13:26:48.774: INFO: Checking APIGroup: events.k8s.io
  Oct 21 13:26:48.775: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Oct 21 13:26:48.775: INFO: Versions found [{events.k8s.io/v1 v1}]
  Oct 21 13:26:48.775: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Oct 21 13:26:48.775: INFO: Checking APIGroup: authentication.k8s.io
  Oct 21 13:26:48.776: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Oct 21 13:26:48.776: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Oct 21 13:26:48.776: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Oct 21 13:26:48.776: INFO: Checking APIGroup: authorization.k8s.io
  Oct 21 13:26:48.777: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Oct 21 13:26:48.777: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Oct 21 13:26:48.777: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Oct 21 13:26:48.778: INFO: Checking APIGroup: autoscaling
  Oct 21 13:26:48.779: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Oct 21 13:26:48.779: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Oct 21 13:26:48.779: INFO: autoscaling/v2 matches autoscaling/v2
  Oct 21 13:26:48.779: INFO: Checking APIGroup: batch
  Oct 21 13:26:48.780: INFO: PreferredVersion.GroupVersion: batch/v1
  Oct 21 13:26:48.780: INFO: Versions found [{batch/v1 v1}]
  Oct 21 13:26:48.780: INFO: batch/v1 matches batch/v1
  Oct 21 13:26:48.780: INFO: Checking APIGroup: certificates.k8s.io
  Oct 21 13:26:48.781: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Oct 21 13:26:48.781: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Oct 21 13:26:48.781: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Oct 21 13:26:48.781: INFO: Checking APIGroup: networking.k8s.io
  Oct 21 13:26:48.782: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Oct 21 13:26:48.782: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Oct 21 13:26:48.782: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Oct 21 13:26:48.782: INFO: Checking APIGroup: policy
  Oct 21 13:26:48.783: INFO: PreferredVersion.GroupVersion: policy/v1
  Oct 21 13:26:48.783: INFO: Versions found [{policy/v1 v1}]
  Oct 21 13:26:48.783: INFO: policy/v1 matches policy/v1
  Oct 21 13:26:48.783: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Oct 21 13:26:48.784: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Oct 21 13:26:48.784: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Oct 21 13:26:48.784: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Oct 21 13:26:48.784: INFO: Checking APIGroup: storage.k8s.io
  Oct 21 13:26:48.785: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Oct 21 13:26:48.785: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Oct 21 13:26:48.785: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Oct 21 13:26:48.785: INFO: Checking APIGroup: admissionregistration.k8s.io
  Oct 21 13:26:48.786: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Oct 21 13:26:48.786: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Oct 21 13:26:48.786: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Oct 21 13:26:48.786: INFO: Checking APIGroup: apiextensions.k8s.io
  Oct 21 13:26:48.787: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Oct 21 13:26:48.787: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Oct 21 13:26:48.787: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Oct 21 13:26:48.787: INFO: Checking APIGroup: scheduling.k8s.io
  Oct 21 13:26:48.788: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Oct 21 13:26:48.788: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Oct 21 13:26:48.788: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Oct 21 13:26:48.788: INFO: Checking APIGroup: coordination.k8s.io
  Oct 21 13:26:48.789: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Oct 21 13:26:48.789: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Oct 21 13:26:48.789: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Oct 21 13:26:48.789: INFO: Checking APIGroup: node.k8s.io
  Oct 21 13:26:48.790: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Oct 21 13:26:48.790: INFO: Versions found [{node.k8s.io/v1 v1}]
  Oct 21 13:26:48.790: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Oct 21 13:26:48.790: INFO: Checking APIGroup: discovery.k8s.io
  Oct 21 13:26:48.791: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Oct 21 13:26:48.791: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Oct 21 13:26:48.791: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Oct 21 13:26:48.791: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Oct 21 13:26:48.792: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Oct 21 13:26:48.792: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Oct 21 13:26:48.792: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Oct 21 13:26:48.792: INFO: Checking APIGroup: metrics.k8s.io
  Oct 21 13:26:48.793: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Oct 21 13:26:48.793: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Oct 21 13:26:48.793: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Oct 21 13:26:48.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6289" for this suite. @ 10/21/23 13:26:48.796
• [0.391 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 10/21/23 13:26:48.802
  Oct 21 13:26:48.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:26:48.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:48.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:48.82
  STEP: Creating a pod to test downward api env vars @ 10/21/23 13:26:48.823
  E1021 13:26:49.294168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:50.294259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:51.294370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:52.295215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:26:52.84
  Oct 21 13:26:52.844: INFO: Trying to get logs from node ip-172-31-83-52 pod downward-api-3d094f5c-63e9-4f93-a9c4-08bc5aca27be container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 13:26:52.849
  Oct 21 13:26:52.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2327" for this suite. @ 10/21/23 13:26:52.864
• [4.067 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 10/21/23 13:26:52.87
  Oct 21 13:26:52.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:26:52.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:26:52.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:26:52.889
  STEP: Creating resourceQuota "e2e-rq-status-7gxft" @ 10/21/23 13:26:52.897
  Oct 21 13:26:52.903: INFO: Resource quota "e2e-rq-status-7gxft" reports spec: hard cpu limit of 500m
  Oct 21 13:26:52.903: INFO: Resource quota "e2e-rq-status-7gxft" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-7gxft" /status @ 10/21/23 13:26:52.903
  STEP: Confirm /status for "e2e-rq-status-7gxft" resourceQuota via watch @ 10/21/23 13:26:52.91
  Oct 21 13:26:52.912: INFO: observed resourceQuota "e2e-rq-status-7gxft" in namespace "resourcequota-3224" with hard status: v1.ResourceList(nil)
  Oct 21 13:26:52.912: INFO: Found resourceQuota "e2e-rq-status-7gxft" in namespace "resourcequota-3224" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct 21 13:26:52.912: INFO: ResourceQuota "e2e-rq-status-7gxft" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/21/23 13:26:52.915
  Oct 21 13:26:52.920: INFO: Resource quota "e2e-rq-status-7gxft" reports spec: hard cpu limit of 1
  Oct 21 13:26:52.920: INFO: Resource quota "e2e-rq-status-7gxft" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-7gxft" /status @ 10/21/23 13:26:52.92
  STEP: Confirm /status for "e2e-rq-status-7gxft" resourceQuota via watch @ 10/21/23 13:26:52.925
  Oct 21 13:26:52.927: INFO: observed resourceQuota "e2e-rq-status-7gxft" in namespace "resourcequota-3224" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct 21 13:26:52.927: INFO: Found resourceQuota "e2e-rq-status-7gxft" in namespace "resourcequota-3224" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Oct 21 13:26:52.927: INFO: ResourceQuota "e2e-rq-status-7gxft" /status was patched
  STEP: Get "e2e-rq-status-7gxft" /status @ 10/21/23 13:26:52.927
  Oct 21 13:26:52.930: INFO: Resourcequota "e2e-rq-status-7gxft" reports status: hard cpu of 1
  Oct 21 13:26:52.930: INFO: Resourcequota "e2e-rq-status-7gxft" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-7gxft" /status before checking Spec is unchanged @ 10/21/23 13:26:52.933
  Oct 21 13:26:52.937: INFO: Resourcequota "e2e-rq-status-7gxft" reports status: hard cpu of 2
  Oct 21 13:26:52.937: INFO: Resourcequota "e2e-rq-status-7gxft" reports status: hard memory of 2Gi
  Oct 21 13:26:52.939: INFO: Found resourceQuota "e2e-rq-status-7gxft" in namespace "resourcequota-3224" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E1021 13:26:53.295485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:54.296350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:55.296960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:56.297068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:57.297155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:58.297221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:26:59.297388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:00.297556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:01.297730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:02.298315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:02.945: INFO: ResourceQuota "e2e-rq-status-7gxft" Spec was unchanged and /status reset
  Oct 21 13:27:02.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3224" for this suite. @ 10/21/23 13:27:02.948
• [10.084 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 10/21/23 13:27:02.954
  Oct 21 13:27:02.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 13:27:02.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:27:02.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:27:02.972
  STEP: Creating pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022 @ 10/21/23 13:27:02.975
  E1021 13:27:03.298970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:04.299055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 13:27:04.988
  Oct 21 13:27:04.991: INFO: Initial restart count of pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 is 0
  Oct 21 13:27:04.993: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:05.299279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:06.299461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:06.997: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:07.300083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:08.300366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:09.001: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:09.301071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:10.301136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:11.005: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:11.301178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:12.301485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:13.009: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:13.302306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:14.302481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:15.013: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:15.303153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:16.303342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:17.017: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:17.303786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:18.304844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:19.021: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:19.305315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:20.305417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:21.025: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:21.305504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:22.306348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:23.029: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:23.307175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:24.307270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:25.033: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  Oct 21 13:27:25.033: INFO: Restart count of pod container-probe-2022/liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 is now 1 (20.042447064s elapsed)
  E1021 13:27:25.308040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:26.308936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:27.038: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:27.309431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:28.309681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:29.042: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:29.310417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:30.310522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:31.045: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:31.311093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:32.311182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:33.049: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:33.311831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:34.311895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:35.053: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:35.312437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:36.312618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:37.056: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:37.313241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:38.313309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:39.061: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:39.313393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:40.314367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:41.064: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:41.315069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:42.315135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:43.068: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:43.315923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:44.316608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:45.072: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  Oct 21 13:27:45.072: INFO: Restart count of pod container-probe-2022/liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 is now 2 (40.080944905s elapsed)
  E1021 13:27:45.317532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:46.317605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:47.076: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:47.318377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:48.318750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:49.079: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:49.318842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:50.318950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:51.083: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:51.319441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:52.319607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:53.086: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:53.320174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:54.320257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:55.089: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:55.321293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:56.322061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:57.094: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:57.322677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:27:58.322760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:27:59.099: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:27:59.323419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:00.324346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:01.103: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:01.324951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:02.325215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:03.107: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:03.326029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:04.326193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:05.111: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  Oct 21 13:28:05.111: INFO: Restart count of pod container-probe-2022/liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 is now 3 (1m0.119861642s elapsed)
  E1021 13:28:05.326308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:06.326431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:07.114: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:07.327041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:08.327147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:09.118: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:09.327495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:10.327588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:11.122: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:11.328049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:12.328242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:13.126: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:13.329057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:14.329151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:15.130: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:15.329589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:16.329687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:17.134: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:17.330307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:18.330783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:19.139: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:19.331157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:20.331412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:21.143: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:21.331511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:22.332193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:23.147: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:23.332836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:24.333810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:25.151: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  Oct 21 13:28:25.151: INFO: Restart count of pod container-probe-2022/liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 is now 4 (1m20.159759736s elapsed)
  E1021 13:28:25.334216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:26.334365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:27.155: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:27.335417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:28.335870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:29.159: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:29.336826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:30.337043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:31.163: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:31.337494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:32.337584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:33.166: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:33.338143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:34.338257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:35.170: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:35.338357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:36.339413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:37.174: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:37.339960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:38.340858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:39.179: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:39.341576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:40.341680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:41.182: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:41.342041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:42.342134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:43.186: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:43.342985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:44.343072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:45.190: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:45.343847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:46.344111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:47.194: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:47.344523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:48.344823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:49.198: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:49.345222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:50.345448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:51.201: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:51.345887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:52.345975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:53.205: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:53.346523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:54.347417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:55.209: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:55.348333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:56.348477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:57.212: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:57.349090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:28:58.349536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:28:59.217: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:28:59.350196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:00.350353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:01.220: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:01.350978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:02.351419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:03.225: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:03.352292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:04.352445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:05.228: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:05.352910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:06.353071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:07.232: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:07.353807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:08.354779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:09.237: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:09.355383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:10.355468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:11.240: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:11.356077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:12.356170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:13.244: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:13.357155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:14.357349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:15.248: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:15.357888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:16.358200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:17.252: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:17.358292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:18.358711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:19.256: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:19.358757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:20.359407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:21.260: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:21.359867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:22.360015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:23.264: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  E1021 13:29:23.360962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:24.361127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:25.268: INFO: Get pod liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 in namespace container-probe-2022
  Oct 21 13:29:25.268: INFO: Restart count of pod container-probe-2022/liveness-1e066d5c-60c9-43ca-b359-c3a5a274f299 is now 5 (2m20.27720658s elapsed)
  Oct 21 13:29:25.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:29:25.271
  STEP: Destroying namespace "container-probe-2022" for this suite. @ 10/21/23 13:29:25.284
• [142.335 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 10/21/23 13:29:25.29
  Oct 21 13:29:25.290: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename events @ 10/21/23 13:29:25.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:29:25.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:29:25.313
  STEP: Create set of events @ 10/21/23 13:29:25.316
  Oct 21 13:29:25.324: INFO: created test-event-1
  Oct 21 13:29:25.329: INFO: created test-event-2
  Oct 21 13:29:25.332: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/21/23 13:29:25.332
  STEP: delete collection of events @ 10/21/23 13:29:25.335
  Oct 21 13:29:25.335: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/21/23 13:29:25.353
  Oct 21 13:29:25.353: INFO: requesting list of events to confirm quantity
  Oct 21 13:29:25.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1853" for this suite. @ 10/21/23 13:29:25.36
  E1021 13:29:25.361924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 10/21/23 13:29:25.366
  Oct 21 13:29:25.366: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename field-validation @ 10/21/23 13:29:25.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:29:25.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:29:25.385
  Oct 21 13:29:25.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:29:26.362068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:27.362152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1021 13:29:27.936355      19 warnings.go:70] unknown field "alpha"
  W1021 13:29:27.936373      19 warnings.go:70] unknown field "beta"
  W1021 13:29:27.936376      19 warnings.go:70] unknown field "delta"
  W1021 13:29:27.936380      19 warnings.go:70] unknown field "epsilon"
  W1021 13:29:27.936383      19 warnings.go:70] unknown field "gamma"
  E1021 13:29:28.362306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:28.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6625" for this suite. @ 10/21/23 13:29:28.482
• [3.121 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 10/21/23 13:29:28.487
  Oct 21 13:29:28.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:29:28.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:29:28.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:29:28.505
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/21/23 13:29:28.508
  E1021 13:29:29.362378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:30.362471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:31.362753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:32.362821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:29:32.526
  Oct 21 13:29:32.529: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-c12caab4-713e-4cf5-a997-6adc8126e314 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:29:32.541
  Oct 21 13:29:32.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-587" for this suite. @ 10/21/23 13:29:32.556
• [4.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 10/21/23 13:29:32.561
  Oct 21 13:29:32.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:29:32.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:29:32.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:29:32.58
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:29:32.583
  E1021 13:29:33.363462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:34.364273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:35.365126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:36.365218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:29:36.602
  Oct 21 13:29:36.604: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-9277e315-7ade-4b2c-beb6-4c0879e4c86d container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:29:36.61
  Oct 21 13:29:36.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8631" for this suite. @ 10/21/23 13:29:36.627
• [4.071 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/21/23 13:29:36.633
  Oct 21 13:29:36.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:29:36.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:29:36.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:29:36.652
  STEP: Create a pod @ 10/21/23 13:29:36.654
  E1021 13:29:37.365892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:38.366221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/21/23 13:29:38.671
  Oct 21 13:29:38.678: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Oct 21 13:29:38.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6627" for this suite. @ 10/21/23 13:29:38.682
• [2.055 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 10/21/23 13:29:38.689
  Oct 21 13:29:38.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:29:38.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:29:38.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:29:38.707
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/21/23 13:29:38.71
  E1021 13:29:39.366375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:40.367429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:41.367657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:42.367682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:29:42.728
  Oct 21 13:29:42.731: INFO: Trying to get logs from node ip-172-31-41-152 pod pod-b985d84a-640e-4636-a438-7dee65fe0ff6 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:29:42.747
  Oct 21 13:29:42.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5000" for this suite. @ 10/21/23 13:29:42.764
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 10/21/23 13:29:42.769
  Oct 21 13:29:42.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 13:29:42.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:29:42.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:29:42.792
  STEP: Creating service test in namespace statefulset-101 @ 10/21/23 13:29:42.795
  STEP: Creating a new StatefulSet @ 10/21/23 13:29:42.799
  Oct 21 13:29:42.810: INFO: Found 0 stateful pods, waiting for 3
  E1021 13:29:43.368246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:44.368333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:45.368426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:46.368570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:47.368734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:48.368852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:49.368953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:50.369116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:51.369200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:52.369364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:29:52.814: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:29:52.814: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:29:52.814: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/21/23 13:29:52.823
  Oct 21 13:29:52.841: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/21/23 13:29:52.841
  E1021 13:29:53.370171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:54.370433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:55.370502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:56.371421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:57.371515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:58.371597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:29:59.371750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:00.371907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:01.372622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:02.372713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/21/23 13:30:02.855
  STEP: Performing a canary update @ 10/21/23 13:30:02.855
  Oct 21 13:30:02.875: INFO: Updating stateful set ss2
  Oct 21 13:30:02.883: INFO: Waiting for Pod statefulset-101/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1021 13:30:03.372870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:04.373374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:05.373412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:06.373619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:07.373995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:08.374473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:09.374805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:10.374731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:11.375431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:12.376020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/21/23 13:30:12.889
  Oct 21 13:30:12.922: INFO: Found 1 stateful pods, waiting for 3
  E1021 13:30:13.376612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:14.376712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:15.376793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:16.376948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:17.377351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:18.377796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:19.377835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:20.377925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:21.378108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:22.378188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:30:22.928: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:30:22.928: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 21 13:30:22.928: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/21/23 13:30:22.935
  Oct 21 13:30:22.957: INFO: Updating stateful set ss2
  Oct 21 13:30:22.966: INFO: Waiting for Pod statefulset-101/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1021 13:30:23.378328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:24.378365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:25.378466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:26.378546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:27.379444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:28.379729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:29.379903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:30.379991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:31.380151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:32.380322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:30:32.996: INFO: Updating stateful set ss2
  Oct 21 13:30:33.004: INFO: Waiting for StatefulSet statefulset-101/ss2 to complete update
  Oct 21 13:30:33.004: INFO: Waiting for Pod statefulset-101/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1021 13:30:33.381126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:34.381221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:35.381381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:36.381470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:37.381570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:38.381881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:39.382056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:40.382233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:41.382356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:42.382458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:30:43.011: INFO: Deleting all statefulset in ns statefulset-101
  Oct 21 13:30:43.014: INFO: Scaling statefulset ss2 to 0
  E1021 13:30:43.383368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:44.384315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:45.384963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:46.385039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:47.385212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:48.385540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:49.385634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:50.385731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:51.385821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:52.385974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:30:53.029: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 13:30:53.032: INFO: Deleting statefulset ss2
  Oct 21 13:30:53.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-101" for this suite. @ 10/21/23 13:30:53.045
• [70.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 10/21/23 13:30:53.052
  Oct 21 13:30:53.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:30:53.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:30:53.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:30:53.07
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/21/23 13:30:53.072
  E1021 13:30:53.386077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:54.386163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:55.386328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:56.386379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:30:57.089
  Oct 21 13:30:57.092: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-5d6f408f-80dd-4f0f-8706-311663272389 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:30:57.098
  Oct 21 13:30:57.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4710" for this suite. @ 10/21/23 13:30:57.114
• [4.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 10/21/23 13:30:57.12
  Oct 21 13:30:57.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:30:57.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:30:57.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:30:57.138
  STEP: Creating configMap with name configmap-test-volume-map-a7200699-3d9f-429c-97e2-fe51e29917c7 @ 10/21/23 13:30:57.14
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:30:57.145
  E1021 13:30:57.386463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:58.386782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:30:59.387709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:00.387750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:31:01.165
  Oct 21 13:31:01.168: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-0b8d3d0d-5a74-4f66-93bb-0b5b87f4cf5e container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 13:31:01.174
  Oct 21 13:31:01.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6674" for this suite. @ 10/21/23 13:31:01.188
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 10/21/23 13:31:01.196
  Oct 21 13:31:01.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 13:31:01.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:31:01.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:31:01.214
  STEP: set up a multi version CRD @ 10/21/23 13:31:01.22
  Oct 21 13:31:01.221: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:31:01.388227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:02.388706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:03.389395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:04.389591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 10/21/23 13:31:04.454
  STEP: check the unserved version gets removed @ 10/21/23 13:31:04.47
  STEP: check the other version is not changed @ 10/21/23 13:31:05.282
  E1021 13:31:05.389753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:06.389838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:07.390166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:07.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5765" for this suite. @ 10/21/23 13:31:07.793
• [6.603 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 10/21/23 13:31:07.799
  Oct 21 13:31:07.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-pred @ 10/21/23 13:31:07.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:31:07.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:31:07.819
  Oct 21 13:31:07.822: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 21 13:31:07.828: INFO: Waiting for terminating namespaces to be deleted...
  Oct 21 13:31:07.831: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-152 before test
  Oct 21 13:31:07.836: INFO: nginx-ingress-controller-kubernetes-worker-pgmxk from ingress-nginx-kubernetes-worker started at 2023-10-21 12:15:53 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.836: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:31:07.836: INFO: calico-node-pdjzp from kube-system started at 2023-10-21 12:14:46 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.836: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:31:07.836: INFO: sonobuoy-e2e-job-dc9fd44093224134 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:31:07.836: INFO: 	Container e2e ready: true, restart count 0
  Oct 21 13:31:07.836: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:31:07.836: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-bqx4f from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:31:07.836: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:31:07.836: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 13:31:07.836: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-65-2 before test
  Oct 21 13:31:07.840: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvf5j from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: nginx-ingress-controller-kubernetes-worker-sf86b from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: calico-node-lttm5 from kube-system started at 2023-10-21 12:12:23 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: coredns-59cfb5bf46-4s8zg from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container coredns ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: kube-state-metrics-775d9f4f79-qbqgv from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: metrics-server-v0.6.3-69d7fbfdf8-n4sg7 from kube-system started at 2023-10-21 12:12:56 +0000 UTC (2 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: dashboard-metrics-scraper-5dd7cb5fc-gpj8d from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: kubernetes-dashboard-7b899cb9d9-2dfs9 from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-st954 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:31:07.840: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 13:31:07.840: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-83-52 before test
  Oct 21 13:31:07.844: INFO: nginx-ingress-controller-kubernetes-worker-c2pkp from ingress-nginx-kubernetes-worker started at 2023-10-21 13:06:20 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.844: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:31:07.844: INFO: calico-node-dfp9j from kube-system started at 2023-10-21 12:14:49 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.844: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:31:07.844: INFO: sonobuoy from sonobuoy started at 2023-10-21 12:21:43 +0000 UTC (1 container statuses recorded)
  Oct 21 13:31:07.844: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 21 13:31:07.844: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-sq7tr from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:31:07.844: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:31:07.844: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/21/23 13:31:07.844
  E1021 13:31:08.390602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:09.390689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/21/23 13:31:09.862
  STEP: Trying to apply a random label on the found node. @ 10/21/23 13:31:09.875
  STEP: verifying the node has the label kubernetes.io/e2e-070cad91-e15b-4613-ae9a-581ea983153c 42 @ 10/21/23 13:31:09.882
  STEP: Trying to relaunch the pod, now with labels. @ 10/21/23 13:31:09.885
  E1021 13:31:10.391383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:11.392097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-070cad91-e15b-4613-ae9a-581ea983153c off the node ip-172-31-83-52 @ 10/21/23 13:31:11.901
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-070cad91-e15b-4613-ae9a-581ea983153c @ 10/21/23 13:31:11.91
  Oct 21 13:31:11.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1726" for this suite. @ 10/21/23 13:31:11.921
• [4.128 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 10/21/23 13:31:11.927
  Oct 21 13:31:11.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:31:11.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:31:11.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:31:11.943
  STEP: creating a ConfigMap @ 10/21/23 13:31:11.946
  STEP: fetching the ConfigMap @ 10/21/23 13:31:11.95
  STEP: patching the ConfigMap @ 10/21/23 13:31:11.952
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/21/23 13:31:11.957
  STEP: deleting the ConfigMap by collection with a label selector @ 10/21/23 13:31:11.961
  STEP: listing all ConfigMaps in test namespace @ 10/21/23 13:31:11.967
  Oct 21 13:31:11.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7749" for this suite. @ 10/21/23 13:31:11.973
• [0.052 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 10/21/23 13:31:11.98
  Oct 21 13:31:11.980: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 13:31:11.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:31:11.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:31:11.999
  STEP: Creating pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678 @ 10/21/23 13:31:12.002
  E1021 13:31:12.393050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:13.393282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 13:31:14.017
  Oct 21 13:31:14.020: INFO: Initial restart count of pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a is 0
  Oct 21 13:31:14.023: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:14.394069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:15.394302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:16.027: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:16.395132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:17.395220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:18.031: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:18.395879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:19.396084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:20.034: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:20.396715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:21.396806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:22.038: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:22.396876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:23.397819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:24.043: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:24.398498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:25.398600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:26.046: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:26.399139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:27.399237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:28.050: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:28.400127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:29.400306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:30.056: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:30.400387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:31.400546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:32.059: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:32.400929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:33.401819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:34.064: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:34.401909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:35.402085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:36.068: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:36.402346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:37.403429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:38.071: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:38.404205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:39.404662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:40.075: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:40.405267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:41.405369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:42.079: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:42.405460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:43.405635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:44.083: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:44.406646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:45.406729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:46.087: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:46.406825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:47.407435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:48.091: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:48.408178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:49.408256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:50.095: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:50.409031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:51.409111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:52.099: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:52.410099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:53.411066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:54.103: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:54.412069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:55.412156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:56.107: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:56.412888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:57.413053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:31:58.111: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:31:58.413608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:31:59.413689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:00.114: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:00.414222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:01.414371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:02.118: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:02.415291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:03.415554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:04.122: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:04.416223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:05.416310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:06.126: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:06.416451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:07.416984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:08.130: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:08.417918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:09.418133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:10.135: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:10.418597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:11.418674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:12.138: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:12.419145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:13.419489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:14.142: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:14.420158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:15.420325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:16.146: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:16.421074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:17.421849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:18.150: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:18.422257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:19.422368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:20.155: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:20.422834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:21.422913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:22.159: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:22.423849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:23.424837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:24.163: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:24.425859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:25.425941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:26.167: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:26.426130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:27.426224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:28.171: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:28.426826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:29.427428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:30.175: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:30.428391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:31.428479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:32.178: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:32.429178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:33.429429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:34.182: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:34.429882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:35.430060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:36.186: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:36.430364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:37.430708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:38.190: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:38.431682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:39.431768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:40.194: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:40.432807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:41.432902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:42.198: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:42.433004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:43.433071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:44.202: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:44.433862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:45.434411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:46.206: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:46.434603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:47.434694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:48.210: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:48.435391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:49.435493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:50.213: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:50.435737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:51.435839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:52.217: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:52.436317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:53.436556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:54.222: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:54.436627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:55.437404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:56.226: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:56.437816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:57.437994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:32:58.230: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:32:58.438903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:32:59.439424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:00.234: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:00.439985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:01.440134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:02.238: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:02.440835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:03.441853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:04.242: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:04.441962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:05.442118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:06.246: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:06.442907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:07.443252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:08.250: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:08.443050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:09.443162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:10.254: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:10.443827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:11.444303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:12.258: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:12.445262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:13.445349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:14.262: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:14.446197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:15.446358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:16.266: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:16.447307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:17.447397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:18.269: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:18.447983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:19.448072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:20.273: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:20.448675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:21.448838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:22.277: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:22.449413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:23.449618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:24.281: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:24.450687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:25.451422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:26.285: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:26.452100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:27.452356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:28.289: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:28.453065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:29.453920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:30.293: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:30.454449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:31.455412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:32.296: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:32.456043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:33.456124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:34.300: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:34.456881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:35.457894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:36.304: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:36.458306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:37.458367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:38.307: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:38.458992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:39.459087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:40.311: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:40.459610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:41.459752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:42.315: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:42.460517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:43.460783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:44.319: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:44.461407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:45.461605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:46.323: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:46.462431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:47.462528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:48.327: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:48.463410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:49.464399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:50.330: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:50.465002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:51.465095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:52.335: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:52.465735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:53.465816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:54.339: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:54.465877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:55.466013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:56.343: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:56.466492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:57.466741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:33:58.347: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:33:58.467598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:33:59.467684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:00.351: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:00.468249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:01.468457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:02.355: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:02.468592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:03.468820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:04.359: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:04.469532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:05.469626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:06.362: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:06.470133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:07.470358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:08.366: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:08.471006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:09.472026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:10.370: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:10.472437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:11.472599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:12.374: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:12.472972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:13.473887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:14.379: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:14.474856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:15.474944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:16.383: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:16.475237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:17.475331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:18.386: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:18.475861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:19.476030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:20.390: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:20.477052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:21.477147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:22.395: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:22.478176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:23.478342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:24.399: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:24.479404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:25.479603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:26.402: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:26.479808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:27.479908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:28.405: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:28.480161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:29.480436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:30.409: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:30.480924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:31.481066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:32.414: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:32.481225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:33.481316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:34.418: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:34.482268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:35.482354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:36.421: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:36.482940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:37.483043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:38.425: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:38.483734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:39.484415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:40.430: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:40.485322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:41.485418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:42.433: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:42.485543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:43.485743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:44.437: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:44.485979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:45.486129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:46.441: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:46.486585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:47.487417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:48.445: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:48.488201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:49.488304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:50.448: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:50.488919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:51.489063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:52.452: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:52.489664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:53.489760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:54.458: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:54.490124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:55.491165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:56.462: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:56.491192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:57.491440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:34:58.466: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:34:58.492390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:34:59.492597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:00.469: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:35:00.493065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:01.493165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:02.474: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:35:02.493455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:03.493706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:04.480: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:35:04.494221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:05.494345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:06.483: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:35:06.495068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:07.495406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:08.488: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:35:08.495521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:09.495555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:10.496535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:10.497: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:35:11.496647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:12.497591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:12.502: INFO: Get pod busybox-4118c9e9-27cd-49eb-b7e9-815511ddb71a in namespace container-probe-4678
  E1021 13:35:13.497675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:14.498584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:14.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:35:14.507
  STEP: Destroying namespace "container-probe-4678" for this suite. @ 10/21/23 13:35:14.518
• [242.545 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/21/23 13:35:14.525
  Oct 21 13:35:14.525: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename daemonsets @ 10/21/23 13:35:14.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:35:14.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:35:14.543
  Oct 21 13:35:14.561: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/21/23 13:35:14.567
  Oct 21 13:35:14.570: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:14.570: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:14.573: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:35:14.573: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  E1021 13:35:15.499421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:15.578: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:15.579: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:15.582: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 21 13:35:15.582: INFO: Node ip-172-31-41-152 is running 0 daemon pod, expected 1
  E1021 13:35:16.499594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:16.577: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:16.577: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:16.580: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 13:35:16.580: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/21/23 13:35:16.591
  STEP: Check that daemon pods images are updated. @ 10/21/23 13:35:16.599
  Oct 21 13:35:16.603: INFO: Wrong image for pod: daemon-set-42fc5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 21 13:35:16.603: INFO: Wrong image for pod: daemon-set-cxb84. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 21 13:35:16.603: INFO: Wrong image for pod: daemon-set-xsrzw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 21 13:35:16.606: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:16.606: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1021 13:35:17.499624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:17.610: INFO: Wrong image for pod: daemon-set-42fc5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 21 13:35:17.610: INFO: Pod daemon-set-bh6wm is not available
  Oct 21 13:35:17.610: INFO: Wrong image for pod: daemon-set-xsrzw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 21 13:35:17.614: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:17.614: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1021 13:35:18.499706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:18.610: INFO: Pod daemon-set-8s5p2 is not available
  Oct 21 13:35:18.610: INFO: Wrong image for pod: daemon-set-xsrzw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 21 13:35:18.613: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:18.613: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1021 13:35:19.499892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:19.614: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:19.614: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1021 13:35:20.499937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:20.611: INFO: Pod daemon-set-6rt5d is not available
  Oct 21 13:35:20.615: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:20.615: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/21/23 13:35:20.615
  Oct 21 13:35:20.618: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:20.618: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:20.621: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 21 13:35:20.621: INFO: Node ip-172-31-83-52 is running 0 daemon pod, expected 1
  E1021 13:35:21.500416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:21.626: INFO: DaemonSet pods can't tolerate node ip-172-31-10-176 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:21.626: INFO: DaemonSet pods can't tolerate node ip-172-31-83-54 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 21 13:35:21.631: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 21 13:35:21.631: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/21/23 13:35:21.648
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1015, will wait for the garbage collector to delete the pods @ 10/21/23 13:35:21.648
  Oct 21 13:35:21.709: INFO: Deleting DaemonSet.extensions daemon-set took: 7.728558ms
  Oct 21 13:35:21.809: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.103887ms
  E1021 13:35:22.501314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:22.913: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:35:22.913: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 21 13:35:22.915: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33749"},"items":null}

  Oct 21 13:35:22.918: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33749"},"items":null}

  Oct 21 13:35:22.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1015" for this suite. @ 10/21/23 13:35:22.932
• [8.415 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 10/21/23 13:35:22.94
  Oct 21 13:35:22.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:35:22.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:35:22.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:35:22.966
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/21/23 13:35:22.969
  E1021 13:35:23.501962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:24.502180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:25.502433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:26.502520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:35:26.988
  Oct 21 13:35:26.991: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-1276162a-7395-4965-a23e-ff9ef0068171 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:35:27.006
  Oct 21 13:35:27.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7316" for this suite. @ 10/21/23 13:35:27.023
• [4.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 10/21/23 13:35:27.03
  Oct 21 13:35:27.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename statefulset @ 10/21/23 13:35:27.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:35:27.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:35:27.048
  STEP: Creating service test in namespace statefulset-1875 @ 10/21/23 13:35:27.05
  STEP: Creating statefulset ss in namespace statefulset-1875 @ 10/21/23 13:35:27.059
  Oct 21 13:35:27.067: INFO: Found 0 stateful pods, waiting for 1
  E1021 13:35:27.503428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:28.504438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:29.504525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:30.504599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:31.504807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:32.504907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:33.505912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:34.506004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:35.506163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:36.506548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:37.071: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/21/23 13:35:37.077
  STEP: Getting /status @ 10/21/23 13:35:37.083
  Oct 21 13:35:37.087: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/21/23 13:35:37.087
  Oct 21 13:35:37.096: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/21/23 13:35:37.096
  Oct 21 13:35:37.098: INFO: Observed &StatefulSet event: ADDED
  Oct 21 13:35:37.098: INFO: Found Statefulset ss in namespace statefulset-1875 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 21 13:35:37.098: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/21/23 13:35:37.098
  Oct 21 13:35:37.098: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 21 13:35:37.105: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/21/23 13:35:37.105
  Oct 21 13:35:37.107: INFO: Observed &StatefulSet event: ADDED
  Oct 21 13:35:37.107: INFO: Deleting all statefulset in ns statefulset-1875
  Oct 21 13:35:37.110: INFO: Scaling statefulset ss to 0
  E1021 13:35:37.506650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:38.506976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:39.507061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:40.508003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:41.508184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:42.508855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:43.508880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:44.508957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:45.509106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:46.509191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:35:47.125: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 21 13:35:47.128: INFO: Deleting statefulset ss
  Oct 21 13:35:47.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1875" for this suite. @ 10/21/23 13:35:47.142
• [20.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/21/23 13:35:47.151
  Oct 21 13:35:47.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:35:47.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:35:47.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:35:47.171
  STEP: Creating secret with name s-test-opt-del-5ae84e6c-d614-4d46-b8ae-9ceb650a6487 @ 10/21/23 13:35:47.178
  STEP: Creating secret with name s-test-opt-upd-d5850fa1-db90-429e-a821-bd8cebf360d1 @ 10/21/23 13:35:47.183
  STEP: Creating the pod @ 10/21/23 13:35:47.188
  E1021 13:35:47.509908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:48.509995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-5ae84e6c-d614-4d46-b8ae-9ceb650a6487 @ 10/21/23 13:35:49.222
  STEP: Updating secret s-test-opt-upd-d5850fa1-db90-429e-a821-bd8cebf360d1 @ 10/21/23 13:35:49.228
  STEP: Creating secret with name s-test-opt-create-8548a476-a305-41a5-9bc0-58072633b262 @ 10/21/23 13:35:49.231
  STEP: waiting to observe update in volume @ 10/21/23 13:35:49.236
  E1021 13:35:49.510563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:50.510648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:51.511120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:52.511214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:53.512091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:54.512875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:55.513514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:56.513618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:57.514494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:58.514763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:35:59.514836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:00.514941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:01.515402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:02.515711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:03.516011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:04.516914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:05.517299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:06.517479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:07.517564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:08.517872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:09.518277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:10.518374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:11.518756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:12.519431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:13.520429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:14.520520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:15.521278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:16.521378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:17.522224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:18.522469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:19.522897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:20.522996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:21.523061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:22.523597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:23.524370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:24.524692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:25.524986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:26.525374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:27.526225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:28.527130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:29.527895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:30.528081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:31.528783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:32.529240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:33.529683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:34.529873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:35.530572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:36.530665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:37.531284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:38.531324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:39.531922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:40.532048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:41.532310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:42.532412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:43.532478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:44.532655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:45.533194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:46.533422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:47.533575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:48.533870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:49.533951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:50.534062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:51.534713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:52.535418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:53.535518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:54.535724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:55.536653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:56.536846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:57.537584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:58.537957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:36:59.538576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:00.539421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:01.540007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:02.540089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:03.540923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:04.541094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:05.541138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:06.542001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:37:07.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8659" for this suite. @ 10/21/23 13:37:07.53
• [80.385 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/21/23 13:37:07.537
  Oct 21 13:37:07.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename events @ 10/21/23 13:37:07.538
  E1021 13:37:07.542264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:07.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:07.56
  STEP: Create set of events @ 10/21/23 13:37:07.562
  STEP: get a list of Events with a label in the current namespace @ 10/21/23 13:37:07.578
  STEP: delete a list of events @ 10/21/23 13:37:07.581
  Oct 21 13:37:07.581: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/21/23 13:37:07.599
  Oct 21 13:37:07.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9171" for this suite. @ 10/21/23 13:37:07.605
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/21/23 13:37:07.612
  Oct 21 13:37:07.612: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:37:07.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:07.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:07.63
  STEP: creating the pod @ 10/21/23 13:37:07.633
  STEP: submitting the pod to kubernetes @ 10/21/23 13:37:07.633
  E1021 13:37:08.543200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:09.543366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/21/23 13:37:09.649
  STEP: updating the pod @ 10/21/23 13:37:09.652
  Oct 21 13:37:10.163: INFO: Successfully updated pod "pod-update-f01ab8f6-fb03-4f04-a8c9-3a95ca8de112"
  STEP: verifying the updated pod is in kubernetes @ 10/21/23 13:37:10.166
  Oct 21 13:37:10.173: INFO: Pod update OK
  Oct 21 13:37:10.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4599" for this suite. @ 10/21/23 13:37:10.177
• [2.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/21/23 13:37:10.184
  Oct 21 13:37:10.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename conformance-tests @ 10/21/23 13:37:10.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:10.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:10.201
  STEP: Getting node addresses @ 10/21/23 13:37:10.203
  Oct 21 13:37:10.204: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Oct 21 13:37:10.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8332" for this suite. @ 10/21/23 13:37:10.211
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 10/21/23 13:37:10.22
  Oct 21 13:37:10.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:37:10.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:10.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:10.237
  STEP: Setting up server cert @ 10/21/23 13:37:10.264
  E1021 13:37:10.544414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:37:10.587
  STEP: Deploying the webhook pod @ 10/21/23 13:37:10.597
  STEP: Wait for the deployment to be ready @ 10/21/23 13:37:10.609
  Oct 21 13:37:10.619: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:37:11.544687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:12.544782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:37:12.628
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:37:12.638
  E1021 13:37:13.545395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:37:13.638: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/21/23 13:37:13.645
  STEP: create a configmap that should be updated by the webhook @ 10/21/23 13:37:13.658
  Oct 21 13:37:13.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-187" for this suite. @ 10/21/23 13:37:13.709
  STEP: Destroying namespace "webhook-markers-9375" for this suite. @ 10/21/23 13:37:13.716
• [3.503 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/21/23 13:37:13.724
  Oct 21 13:37:13.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/21/23 13:37:13.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:13.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:13.743
  STEP: mirroring a new custom Endpoint @ 10/21/23 13:37:13.756
  Oct 21 13:37:13.762: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E1021 13:37:14.545807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:15.545982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/21/23 13:37:15.766
  Oct 21 13:37:15.773: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1021 13:37:16.546024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:17.546380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 10/21/23 13:37:17.777
  Oct 21 13:37:17.785: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E1021 13:37:18.547416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:19.547515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:37:19.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6358" for this suite. @ 10/21/23 13:37:19.792
• [6.075 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/21/23 13:37:19.799
  Oct 21 13:37:19.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 13:37:19.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:19.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:19.818
  Oct 21 13:37:19.821: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Oct 21 13:37:19.830: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1021 13:37:20.549214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:21.549367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:22.550044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:23.550965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:24.551058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:37:24.834: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/21/23 13:37:24.834
  Oct 21 13:37:24.834: INFO: Creating deployment "test-rolling-update-deployment"
  Oct 21 13:37:24.840: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Oct 21 13:37:24.845: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1021 13:37:25.551689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:26.552012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:37:26.853: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Oct 21 13:37:26.855: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Oct 21 13:37:26.864: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57f1ff3f-b1ff-44a5-8d92-e7e8695ddf29",
      ResourceVersion: (string) (len=5) "34413",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 21 13:37:26.867: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5809b14-21cd-478f-a372-0b66fc72bcd0",
      ResourceVersion: (string) (len=5) "34403",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "57f1ff3f-b1ff-44a5-8d92-e7e8695ddf29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 37 66 31 66 66  33 66 2d 62 31 66 66 2d  |\"57f1ff3f-b1ff-|
              00000120  34 34 61 35 2d 38 64 39  32 2d 65 37 65 38 36 39  |44a5-8d92-e7e869|
              00000130  35 64 64 66 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5ddf29\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:37:26.868: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Oct 21 13:37:26.868: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e181d3ed-bfb9-4377-8c30-9ac1f825e1e5",
      ResourceVersion: (string) (len=5) "34412",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "57f1ff3f-b1ff-44a5-8d92-e7e8695ddf29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 37 66 31 66 66 33  |"uid\":\"57f1ff3|
              000000b0  66 2d 62 31 66 66 2d 34  34 61 35 2d 38 64 39 32  |f-b1ff-44a5-8d92|
              000000c0  2d 65 37 65 38 36 39 35  64 64 66 32 39 5c 22 7d  |-e7e8695ddf29\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:37:26.872: INFO: Pod "test-rolling-update-deployment-7f5c55c64-smgkd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-smgkd",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-8190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d43401e-27e8-472a-a758-55f126084b04",
      ResourceVersion: (string) (len=5) "34402",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "f5809b14-21cd-478f-a372-0b66fc72bcd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 35  38 30 39 62 31 34 2d 32  |d\":\"f5809b14-2|
              00000090  31 63 64 2d 34 37 38 66  2d 61 33 37 32 2d 30 62  |1cd-478f-a372-0b|
              000000a0  36 36 66 63 37 32 62 63  64 30 5c 22 7d 22 3a 7b  |66fc72bcd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 37 2e 31 37 39 5c 22  |192.168.47.179\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9bgw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9bgw8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.47.179",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.47.179"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63833492245,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://1db076ab40ecb8a0bb84b46744626b479ab5da7e3b73c9facfffde6a55cb5b5f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:37:26.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8190" for this suite. @ 10/21/23 13:37:26.877
• [7.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 10/21/23 13:37:26.883
  Oct 21 13:37:26.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:37:26.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:26.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:26.9
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:37:26.903
  E1021 13:37:27.552893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:28.552922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:29.553001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:30.553184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:37:30.924
  Oct 21 13:37:30.927: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-da32913e-0a7d-4361-96dd-60997a736059 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:37:30.933
  Oct 21 13:37:30.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7078" for this suite. @ 10/21/23 13:37:30.947
• [4.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/21/23 13:37:30.953
  Oct 21 13:37:30.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubelet-test @ 10/21/23 13:37:30.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:30.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:30.974
  E1021 13:37:31.553915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:32.553993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:37:33.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2437" for this suite. @ 10/21/23 13:37:33.013
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 10/21/23 13:37:33.021
  Oct 21 13:37:33.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svcaccounts @ 10/21/23 13:37:33.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:37:33.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:37:33.04
  Oct 21 13:37:33.055: INFO: created pod
  E1021 13:37:33.554605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:34.554695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:35.554972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:36.555579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:37:37.067
  E1021 13:37:37.555936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:38.556025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:39.556207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:40.556279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:41.556352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:42.557070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:43.557378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:44.557456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:45.557626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:46.557894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:47.558054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:48.558341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:49.559413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:50.559503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:51.559663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:52.559822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:53.559933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:54.560124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:55.560213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:56.560388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:57.560455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:58.560831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:37:59.560992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:00.561623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:01.561792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:02.561897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:03.561930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:04.562703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:05.563428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:06.564433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:07.068: INFO: polling logs
  Oct 21 13:38:07.075: INFO: Pod logs: 
  I1021 13:37:33.727335       1 log.go:194] OK: Got token
  I1021 13:37:33.727414       1 log.go:194] validating with in-cluster discovery
  I1021 13:37:33.727799       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1021 13:37:33.727829       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8776:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003b6530), NotBefore:(*jwt.NumericDate)(0xc0003b6758), IssuedAt:(*jwt.NumericDate)(0xc0003b65d0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8776", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"113ef645-97ab-4417-9c7f-313d9fcd30ad"}}}
  I1021 13:37:33.735444       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1021 13:37:33.740442       1 log.go:194] OK: Validated signature on JWT
  I1021 13:37:33.740530       1 log.go:194] OK: Got valid claims from token!
  I1021 13:37:33.740555       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8776:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048418), NotBefore:(*jwt.NumericDate)(0xc000048450), IssuedAt:(*jwt.NumericDate)(0xc000048420), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8776", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"113ef645-97ab-4417-9c7f-313d9fcd30ad"}}}

  Oct 21 13:38:07.075: INFO: completed pod
  Oct 21 13:38:07.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8776" for this suite. @ 10/21/23 13:38:07.084
• [34.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 10/21/23 13:38:07.092
  Oct 21 13:38:07.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename ingressclass @ 10/21/23 13:38:07.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:38:07.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:38:07.112
  STEP: getting /apis @ 10/21/23 13:38:07.115
  STEP: getting /apis/networking.k8s.io @ 10/21/23 13:38:07.119
  STEP: getting /apis/networking.k8s.iov1 @ 10/21/23 13:38:07.12
  STEP: creating @ 10/21/23 13:38:07.121
  STEP: getting @ 10/21/23 13:38:07.132
  STEP: listing @ 10/21/23 13:38:07.137
  STEP: watching @ 10/21/23 13:38:07.143
  Oct 21 13:38:07.143: INFO: starting watch
  STEP: patching @ 10/21/23 13:38:07.147
  STEP: updating @ 10/21/23 13:38:07.159
  Oct 21 13:38:07.165: INFO: waiting for watch events with expected annotations
  Oct 21 13:38:07.170: INFO: saw patched and updated annotations
  STEP: deleting @ 10/21/23 13:38:07.17
  STEP: deleting a collection @ 10/21/23 13:38:07.204
  Oct 21 13:38:07.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8919" for this suite. @ 10/21/23 13:38:07.223
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 10/21/23 13:38:07.23
  Oct 21 13:38:07.231: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sysctl @ 10/21/23 13:38:07.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:38:07.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:38:07.25
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/21/23 13:38:07.253
  STEP: Watching for error events or started pod @ 10/21/23 13:38:07.263
  E1021 13:38:07.564474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:08.564626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 10/21/23 13:38:09.266
  STEP: Checking that the pod succeeded @ 10/21/23 13:38:09.272
  STEP: Getting logs from the pod @ 10/21/23 13:38:09.272
  STEP: Checking that the sysctl is actually updated @ 10/21/23 13:38:09.278
  Oct 21 13:38:09.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-998" for this suite. @ 10/21/23 13:38:09.281
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 10/21/23 13:38:09.289
  Oct 21 13:38:09.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:38:09.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:38:09.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:38:09.308
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/21/23 13:38:09.31
  E1021 13:38:09.565513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:10.565913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:11.566213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:12.566366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:38:13.328
  Oct 21 13:38:13.331: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-289cedd7-fa58-470e-9a7c-03c6491ecfb5 container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:38:13.337
  Oct 21 13:38:13.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2529" for this suite. @ 10/21/23 13:38:13.353
• [4.069 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/21/23 13:38:13.358
  Oct 21 13:38:13.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:38:13.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:38:13.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:38:13.377
  STEP: Creating projection with secret that has name projected-secret-test-e36017f7-8bb1-4b5c-a40f-44658ca14bb4 @ 10/21/23 13:38:13.38
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:38:13.384
  E1021 13:38:13.567310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:14.567390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:15.567774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:16.569338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:38:17.404
  Oct 21 13:38:17.407: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-secrets-f0763d1a-bc55-43eb-8345-299a5928ca17 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:38:17.413
  Oct 21 13:38:17.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-969" for this suite. @ 10/21/23 13:38:17.428
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/21/23 13:38:17.434
  Oct 21 13:38:17.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename prestop @ 10/21/23 13:38:17.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:38:17.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:38:17.454
  STEP: Creating server pod server in namespace prestop-5299 @ 10/21/23 13:38:17.457
  STEP: Waiting for pods to come up. @ 10/21/23 13:38:17.464
  E1021 13:38:17.569881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:18.570051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-5299 @ 10/21/23 13:38:19.474
  E1021 13:38:19.571095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:20.571426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 10/21/23 13:38:21.487
  E1021 13:38:21.571651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:22.571743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:23.571930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:24.572048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:25.572107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:26.500: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Oct 21 13:38:26.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 10/21/23 13:38:26.503
  STEP: Destroying namespace "prestop-5299" for this suite. @ 10/21/23 13:38:26.513
• [9.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 10/21/23 13:38:26.52
  Oct 21 13:38:26.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/21/23 13:38:26.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:38:26.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:38:26.54
  STEP: getting /apis @ 10/21/23 13:38:26.543
  STEP: getting /apis/storage.k8s.io @ 10/21/23 13:38:26.548
  STEP: getting /apis/storage.k8s.io/v1 @ 10/21/23 13:38:26.549
  STEP: creating @ 10/21/23 13:38:26.552
  STEP: watching @ 10/21/23 13:38:26.565
  Oct 21 13:38:26.566: INFO: starting watch
  E1021 13:38:26.572377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 10/21/23 13:38:26.572
  STEP: listing in namespace @ 10/21/23 13:38:26.575
  STEP: listing across namespaces @ 10/21/23 13:38:26.578
  STEP: patching @ 10/21/23 13:38:26.58
  STEP: updating @ 10/21/23 13:38:26.584
  Oct 21 13:38:26.589: INFO: waiting for watch events with expected annotations in namespace
  Oct 21 13:38:26.589: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/21/23 13:38:26.589
  STEP: deleting a collection @ 10/21/23 13:38:26.599
  Oct 21 13:38:26.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4808" for this suite. @ 10/21/23 13:38:26.614
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 10/21/23 13:38:26.622
  Oct 21 13:38:26.622: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 13:38:26.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:38:26.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:38:26.645
  STEP: Creating pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467 @ 10/21/23 13:38:26.648
  E1021 13:38:27.572603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:28.572932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 13:38:28.662
  Oct 21 13:38:28.665: INFO: Initial restart count of pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 is 0
  Oct 21 13:38:28.668: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:29.573201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:30.573266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:30.672: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:31.573446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:32.574217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:32.676: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:33.574839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:34.574930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:34.680: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:35.575016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:36.575101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:36.684: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:37.575441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:38.575758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:38.688: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:39.576634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:40.577027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:40.692: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:41.577043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:42.577229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:42.696: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:43.577306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:44.577419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:44.701: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:45.577495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:46.577967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:46.705: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:47.578368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:48.578404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:48.709: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:49.579377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:50.579437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:50.713: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:51.579527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:52.579773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:52.717: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:53.580345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:54.580735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:54.721: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:55.581555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:56.582337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:56.725: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:57.582354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:38:58.583445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:38:58.729: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:38:59.583533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:00.584319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:00.732: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:01.584761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:02.584929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:02.736: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:03.585447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:04.585818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:04.740: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:05.585911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:06.586119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:06.745: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:07.586357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:08.586386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:08.749: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:09.586444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:10.587485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:10.753: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:11.587554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:12.587680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:12.757: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:13.587771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:14.587903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:14.761: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:15.587987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:16.588083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:16.765: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:17.588686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:18.588916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:18.769: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:19.589003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:20.589166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:20.773: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:21.589254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:22.589334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:22.778: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:23.590232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:24.590349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:24.787: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:25.591108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:26.591414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:26.791: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:27.591508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:28.591546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:28.795: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:29.591821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:30.591908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:30.799: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:31.592271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:32.592356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:32.803: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:33.593373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:34.593531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:34.807: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:35.593883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:36.593973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:36.810: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:37.594353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:38.594599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:38.814: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:39.595411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:40.595580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:40.818: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:41.595965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:42.596053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:42.821: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:43.596317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:44.596405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:44.825: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:45.596794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:46.596893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:46.829: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:47.596975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:48.597073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:48.834: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:49.597315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:50.597475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:50.838: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:51.597522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:52.597607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:52.842: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:53.597691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:54.597780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:54.846: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:55.598176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:56.598837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:56.850: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:57.599409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:39:58.599765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:39:58.855: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:39:59.599834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:00.599992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:00.858: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:01.600190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:02.600285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:02.862: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:03.600975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:04.601127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:04.865: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:05.601214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:06.601849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:06.869: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:07.602362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:08.603419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:08.873: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:09.604263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:10.604349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:10.878: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:11.604429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:12.604573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:12.882: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:13.605571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:14.606362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:14.886: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:15.606443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:16.606531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:16.890: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:17.607225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:18.607622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:18.894: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:19.608616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:20.608762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:20.898: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:21.608849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:22.609000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:22.902: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:23.609430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:24.609637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:24.908: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:25.609779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:26.609868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:26.912: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:27.610355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:28.611408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:28.916: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:29.612104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:30.612180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:30.919: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:31.612837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:32.612911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:32.923: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:33.613360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:34.613450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:34.927: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:35.613714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:36.613815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:36.930: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:37.614348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:38.615420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:38.934: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:39.616403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:40.617153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:40.938: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:41.617333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:42.617420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:42.943: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:43.617831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:44.617919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:44.946: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:45.618008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:46.618191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:46.949: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:47.618687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:48.618939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:48.954: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:49.619413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:50.619500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:50.958: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:51.619581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:52.619749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:52.961: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:53.620470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:54.620556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:54.965: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:55.621223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:56.622107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:56.968: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:57.622409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:40:58.622503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:40:58.972: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:40:59.622842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:00.623418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:00.976: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:01.623889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:02.624085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:02.979: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:03.625140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:04.625491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:04.983: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:05.625571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:06.625662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:06.987: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:07.625871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:08.625969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:08.991: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:09.626578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:10.627413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:10.996: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:11.628259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:12.628400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:13.000: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:13.629094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:14.629471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:15.004: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:15.629843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:16.630003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:17.007: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:17.630450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:18.630539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:19.011: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:19.631328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:20.631481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:21.015: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:21.632108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:22.632263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:23.018: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:23.632522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:24.633509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:25.022: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:25.633597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:26.633684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:27.026: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:27.633767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:28.633861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:29.031: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:29.634396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:30.634486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:31.035: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:31.635188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:32.635274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:33.038: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:33.635366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:34.635613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:35.042: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:35.635950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:36.636102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:37.045: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:37.636182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:38.636538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:39.049: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:39.637347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:40.637724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:41.053: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:41.637812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:42.638554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:43.057: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:43.639274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:44.639356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:45.061: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:45.639714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:46.639870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:47.065: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:47.640696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:48.640959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:49.069: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:49.641753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:50.641880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:51.072: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:51.642026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:52.642181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:53.076: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:53.642907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:54.643417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:55.080: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:55.643504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:56.644127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:57.083: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:57.645183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:41:58.645382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:41:59.087: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:41:59.646429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:00.647414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:01.091: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:01.647807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:02.647895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:03.094: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:03.648318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:04.648412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:05.101: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:05.648457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:06.649196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:07.106: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:07.649512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:08.649770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:09.110: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:09.650725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:10.651419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:11.114: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:11.651865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:12.652365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:13.118: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:13.653027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:14.654047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:15.121: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:15.654343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:16.655407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:17.125: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:17.655438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:18.655818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:19.130: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:19.656608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:20.656762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:21.133: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:21.656965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:22.657132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:23.137: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:23.657221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:24.657389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:25.141: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:25.657472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:26.657679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:27.146: INFO: Get pod test-grpc-86a30025-431b-46f1-9a08-4869060f0130 in namespace container-probe-3467
  E1021 13:42:27.658169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:28.658349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:29.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:42:29.151
  STEP: Destroying namespace "container-probe-3467" for this suite. @ 10/21/23 13:42:29.165
• [242.549 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/21/23 13:42:29.17
  Oct 21 13:42:29.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:42:29.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:42:29.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:42:29.19
  STEP: creating the pod @ 10/21/23 13:42:29.193
  STEP: submitting the pod to kubernetes @ 10/21/23 13:42:29.193
  W1021 13:42:29.201756      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1021 13:42:29.659269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:30.659412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/21/23 13:42:31.212
  STEP: updating the pod @ 10/21/23 13:42:31.215
  E1021 13:42:31.659538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:31.727: INFO: Successfully updated pod "pod-update-activedeadlineseconds-974567e3-7ccd-48ad-ac08-8723c2203595"
  E1021 13:42:32.660461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:33.660875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:34.660983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:35.661074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:35.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8423" for this suite. @ 10/21/23 13:42:35.742
• [6.577 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 10/21/23 13:42:35.748
  Oct 21 13:42:35.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:42:35.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:42:35.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:42:35.768
  STEP: Counting existing ResourceQuota @ 10/21/23 13:42:35.771
  E1021 13:42:36.662101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:37.662371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:38.662453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:39.663006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:40.663097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/21/23 13:42:40.775
  STEP: Ensuring resource quota status is calculated @ 10/21/23 13:42:40.78
  E1021 13:42:41.663736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:42.663840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:42.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2897" for this suite. @ 10/21/23 13:42:42.788
• [7.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 10/21/23 13:42:42.799
  Oct 21 13:42:42.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:42:42.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:42:42.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:42:42.817
  STEP: Counting existing ResourceQuota @ 10/21/23 13:42:42.822
  E1021 13:42:43.664287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:44.664387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:45.664475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:46.664567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:47.664647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/21/23 13:42:47.825
  STEP: Ensuring resource quota status is calculated @ 10/21/23 13:42:47.833
  E1021 13:42:48.664973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:49.665063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 10/21/23 13:42:49.838
  STEP: Creating a NodePort Service @ 10/21/23 13:42:49.854
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/21/23 13:42:49.88
  STEP: Ensuring resource quota status captures service creation @ 10/21/23 13:42:49.901
  E1021 13:42:50.665177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:51.665276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 10/21/23 13:42:51.905
  STEP: Ensuring resource quota status released usage @ 10/21/23 13:42:51.932
  E1021 13:42:52.666125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:53.666353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:53.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4473" for this suite. @ 10/21/23 13:42:53.939
• [11.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 10/21/23 13:42:53.944
  Oct 21 13:42:53.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 13:42:53.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:42:53.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:42:53.966
  STEP: Creating pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990 @ 10/21/23 13:42:53.968
  E1021 13:42:54.667413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:55.667528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 13:42:55.982
  Oct 21 13:42:55.985: INFO: Initial restart count of pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 is 0
  Oct 21 13:42:55.988: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:42:56.667609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:57.667694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:57.992: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:42:58.668389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:42:59.668571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:42:59.996: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:00.669531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:01.669683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:02.000: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:02.670580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:03.670667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:04.006: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:04.671606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:05.671696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:06.010: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:06.671854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:07.672186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:08.014: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:08.672028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:09.672850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:10.018: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:10.673045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:11.673132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:12.023: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:12.674057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:13.674148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:14.026: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  E1021 13:43:14.674351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:15.675414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:16.031: INFO: Get pod liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 in namespace container-probe-3990
  Oct 21 13:43:16.031: INFO: Restart count of pod container-probe-3990/liveness-2559ba2f-7565-496d-ac46-aedd4ffb0313 is now 1 (20.046290887s elapsed)
  Oct 21 13:43:16.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:43:16.035
  STEP: Destroying namespace "container-probe-3990" for this suite. @ 10/21/23 13:43:16.046
• [22.108 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/21/23 13:43:16.053
  Oct 21 13:43:16.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:43:16.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:43:16.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:43:16.073
  STEP: Creating projection with secret that has name projected-secret-test-map-66d31185-dd5d-4a11-b53a-9a38c35a5782 @ 10/21/23 13:43:16.076
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:43:16.081
  E1021 13:43:16.675522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:17.675709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:18.676108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:19.676409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:43:20.102
  Oct 21 13:43:20.105: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-secrets-9310c07a-6c78-4818-b97a-ab4a4787dade container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:43:20.122
  Oct 21 13:43:20.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4236" for this suite. @ 10/21/23 13:43:20.141
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/21/23 13:43:20.148
  Oct 21 13:43:20.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename daemonsets @ 10/21/23 13:43:20.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:43:20.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:43:20.168
  Oct 21 13:43:20.187: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/21/23 13:43:20.193
  Oct 21 13:43:20.195: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:43:20.195: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/21/23 13:43:20.195
  Oct 21 13:43:20.210: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:43:20.210: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  E1021 13:43:20.677371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:21.214: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:43:21.214: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  E1021 13:43:21.677473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:22.214: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 21 13:43:22.214: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/21/23 13:43:22.217
  Oct 21 13:43:22.230: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 21 13:43:22.230: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1021 13:43:22.677656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:23.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:43:23.233: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/21/23 13:43:23.233
  Oct 21 13:43:23.243: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:43:23.243: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  E1021 13:43:23.678642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:24.246: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:43:24.247: INFO: Node ip-172-31-65-2 is running 0 daemon pod, expected 1
  E1021 13:43:24.679408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:25.247: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 21 13:43:25.247: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/21/23 13:43:25.252
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1831, will wait for the garbage collector to delete the pods @ 10/21/23 13:43:25.252
  Oct 21 13:43:25.329: INFO: Deleting DaemonSet.extensions daemon-set took: 23.689046ms
  Oct 21 13:43:25.429: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.260015ms
  E1021 13:43:25.680084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:26.333: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 21 13:43:26.333: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 21 13:43:26.336: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35711"},"items":null}

  Oct 21 13:43:26.338: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35711"},"items":null}

  Oct 21 13:43:26.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1831" for this suite. @ 10/21/23 13:43:26.362
• [6.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/21/23 13:43:26.37
  Oct 21 13:43:26.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:43:26.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:43:26.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:43:26.394
  Oct 21 13:43:26.396: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: creating the pod @ 10/21/23 13:43:26.397
  STEP: submitting the pod to kubernetes @ 10/21/23 13:43:26.397
  E1021 13:43:26.681143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:27.681325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:28.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8609" for this suite. @ 10/21/23 13:43:28.438
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 10/21/23 13:43:28.446
  Oct 21 13:43:28.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pod-network-test @ 10/21/23 13:43:28.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:43:28.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:43:28.475
  STEP: Performing setup for networking test in namespace pod-network-test-7589 @ 10/21/23 13:43:28.477
  STEP: creating a selector @ 10/21/23 13:43:28.477
  STEP: Creating the service pods in kubernetes @ 10/21/23 13:43:28.477
  Oct 21 13:43:28.477: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1021 13:43:28.682151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:29.682266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:30.682336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:31.682363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:32.682731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:33.683430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:34.683968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:35.684058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:36.684977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:37.685061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:38.685130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:39.685992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:40.686067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:41.686215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:42.686711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:43.687419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:44.687898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:45.687991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:46.688345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:47.688588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:48.689181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:49.689286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/21/23 13:43:50.572
  E1021 13:43:50.689521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:51.689616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:52.586: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 21 13:43:52.586: INFO: Breadth first check of 192.168.45.206 on host 172.31.41.152...
  Oct 21 13:43:52.589: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.47.189:9080/dial?request=hostname&protocol=http&host=192.168.45.206&port=8083&tries=1'] Namespace:pod-network-test-7589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:43:52.589: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:43:52.589: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:43:52.589: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.47.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.45.206%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 21 13:43:52.667: INFO: Waiting for responses: map[]
  Oct 21 13:43:52.667: INFO: reached 192.168.45.206 after 0/1 tries
  Oct 21 13:43:52.667: INFO: Breadth first check of 192.168.116.213 on host 172.31.65.2...
  Oct 21 13:43:52.670: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.47.189:9080/dial?request=hostname&protocol=http&host=192.168.116.213&port=8083&tries=1'] Namespace:pod-network-test-7589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:43:52.670: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:43:52.670: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:43:52.670: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.47.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.116.213%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E1021 13:43:52.689695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:43:52.737: INFO: Waiting for responses: map[]
  Oct 21 13:43:52.737: INFO: reached 192.168.116.213 after 0/1 tries
  Oct 21 13:43:52.737: INFO: Breadth first check of 192.168.47.178 on host 172.31.83.52...
  Oct 21 13:43:52.741: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.47.189:9080/dial?request=hostname&protocol=http&host=192.168.47.178&port=8083&tries=1'] Namespace:pod-network-test-7589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:43:52.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:43:52.741: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:43:52.741: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.47.189%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.47.178%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 21 13:43:52.809: INFO: Waiting for responses: map[]
  Oct 21 13:43:52.809: INFO: reached 192.168.47.178 after 0/1 tries
  Oct 21 13:43:52.809: INFO: Going to retry 0 out of 3 pods....
  Oct 21 13:43:52.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7589" for this suite. @ 10/21/23 13:43:52.812
• [24.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 10/21/23 13:43:52.82
  Oct 21 13:43:52.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/21/23 13:43:52.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:43:52.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:43:52.837
  Oct 21 13:43:52.840: INFO: Waiting up to 1m0s for all nodes to be ready
  E1021 13:43:53.690172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:54.690296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:55.690347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:56.690422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:57.690521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:58.690601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:43:59.691426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:00.691515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:01.691630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:02.691802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:03.692488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:04.692580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:05.693130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:06.693305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:07.693408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:08.694340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:09.694464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:10.694524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:11.694611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:12.694736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:13.695424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:14.695485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:15.695562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:16.695654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:17.695743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:18.695825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:19.695911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:20.696122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:21.697050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:22.697672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:23.697736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:24.698192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:25.699238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:26.699306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:27.700108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:28.700465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:29.700571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:30.700741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:31.700809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:32.701205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:33.701311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:34.701416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:35.701511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:36.701582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:37.701656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:38.701741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:39.702157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:40.702328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:41.702368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:42.703413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:43.703503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:44.703589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:45.703678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:46.704381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:47.705325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:48.705742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:49.706724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:50.707414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:51.708073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:52.708152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:44:52.856: INFO: Waiting for terminating namespaces to be deleted...
  Oct 21 13:44:52.859: INFO: Starting informer...
  STEP: Starting pods... @ 10/21/23 13:44:52.859
  Oct 21 13:44:53.076: INFO: Pod1 is running on ip-172-31-83-52. Tainting Node
  E1021 13:44:53.709197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:54.709803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:44:55.294: INFO: Pod2 is running on ip-172-31-83-52. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/21/23 13:44:55.294
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/21/23 13:44:55.302
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/21/23 13:44:55.305
  E1021 13:44:55.710169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:56.710364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:57.710436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:58.711439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:44:59.711504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:00.712155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:00.995: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E1021 13:45:01.712297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:02.713301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:03.713411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:04.714331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:05.714359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:06.715414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:07.715962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:08.716113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:09.716256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:10.716958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:11.717044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:12.717876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:13.718075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:14.718262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:15.718353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:16.719411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:17.719509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:18.719596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:19.719679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:20.719784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:20.737: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Oct 21 13:45:20.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/21/23 13:45:20.754
  STEP: Destroying namespace "taint-multiple-pods-284" for this suite. @ 10/21/23 13:45:20.757
• [87.943 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 10/21/23 13:45:20.763
  Oct 21 13:45:20.763: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replication-controller @ 10/21/23 13:45:20.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:45:20.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:45:20.799
  STEP: Creating replication controller my-hostname-basic-3230f833-82f9-4b3d-8d4f-c747e4f86bdf @ 10/21/23 13:45:20.807
  Oct 21 13:45:20.815: INFO: Pod name my-hostname-basic-3230f833-82f9-4b3d-8d4f-c747e4f86bdf: Found 0 pods out of 1
  E1021 13:45:21.720254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:22.720419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:23.720762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:24.720859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:25.721013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:25.820: INFO: Pod name my-hostname-basic-3230f833-82f9-4b3d-8d4f-c747e4f86bdf: Found 1 pods out of 1
  Oct 21 13:45:25.820: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-3230f833-82f9-4b3d-8d4f-c747e4f86bdf" are running
  Oct 21 13:45:25.825: INFO: Pod "my-hostname-basic-3230f833-82f9-4b3d-8d4f-c747e4f86bdf-f6tgp" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:45:20 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:45:21 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:45:21 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-21 13:45:20 +0000 UTC Reason: Message:}])
  Oct 21 13:45:25.825: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/21/23 13:45:25.825
  Oct 21 13:45:25.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4151" for this suite. @ 10/21/23 13:45:25.841
• [5.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/21/23 13:45:25.85
  Oct 21 13:45:25.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:45:25.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:45:25.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:45:25.872
  STEP: Creating secret with name secret-test-92ab2cf7-61bb-4487-a336-fd5316f0dda2 @ 10/21/23 13:45:25.876
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:45:25.881
  E1021 13:45:26.721119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:27.721202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:45:27.908
  Oct 21 13:45:27.911: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-secrets-8088c2f3-af40-43c1-abfe-5e3ba0d56e92 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:45:27.925
  Oct 21 13:45:27.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9840" for this suite. @ 10/21/23 13:45:27.948
• [2.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 10/21/23 13:45:27.954
  Oct 21 13:45:27.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 13:45:27.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:45:27.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:45:27.973
  STEP: Creating pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288 @ 10/21/23 13:45:27.98
  E1021 13:45:28.722217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:29.722370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 13:45:29.998
  Oct 21 13:45:30.002: INFO: Initial restart count of pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd is 0
  Oct 21 13:45:30.007: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:30.723417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:31.723607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:32.011: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:32.724383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:33.725135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:34.016: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:34.725239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:35.725335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:36.020: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:36.726220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:37.726375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:38.024: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:38.727428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:39.727617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:40.028: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:40.728176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:41.728364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:42.032: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:42.728447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:43.728537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:44.036: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:44.728603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:45.728692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:46.040: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:46.729494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:47.729578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:48.044: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:48.729775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:49.730224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:50.047: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:50.730354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:51.731416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:52.052: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:52.731522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:53.732427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:54.057: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:54.732771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:55.733342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:56.061: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:56.733634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:57.733723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:45:58.065: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:45:58.734400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:45:59.734489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:00.069: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:00.735049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:01.735432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:02.073: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:02.736295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:03.736367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:04.077: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:04.736442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:05.736538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:06.081: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:06.736636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:07.736705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:08.084: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:08.737625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:09.737747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:10.088: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:10.738780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:11.738884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:12.091: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:12.739425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:13.739497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:14.096: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:14.740068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:15.740154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:16.099: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:16.741155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:17.741226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:18.103: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  E1021 13:46:18.741288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:19.741470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:20.107: INFO: Get pod busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd in namespace container-probe-9288
  Oct 21 13:46:20.107: INFO: Restart count of pod container-probe-9288/busybox-dbb8d2e0-669b-4679-8a99-fc5e927ccffd is now 1 (50.105067089s elapsed)
  Oct 21 13:46:20.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:46:20.111
  STEP: Destroying namespace "container-probe-9288" for this suite. @ 10/21/23 13:46:20.121
• [52.176 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 10/21/23 13:46:20.13
  Oct 21 13:46:20.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:46:20.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:46:20.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:46:20.15
  STEP: Creating a pod to test downward api env vars @ 10/21/23 13:46:20.153
  E1021 13:46:20.742414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:21.742508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:22.743336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:23.743419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:46:24.172
  Oct 21 13:46:24.175: INFO: Trying to get logs from node ip-172-31-83-52 pod downward-api-bbdabda7-137b-49db-b8ba-f503f1cf3a9c container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 13:46:24.18
  Oct 21 13:46:24.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1589" for this suite. @ 10/21/23 13:46:24.195
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 10/21/23 13:46:24.202
  Oct 21 13:46:24.202: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replicaset @ 10/21/23 13:46:24.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:46:24.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:46:24.221
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/21/23 13:46:24.224
  E1021 13:46:24.744116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:25.744224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 10/21/23 13:46:26.241
  STEP: Then the orphan pod is adopted @ 10/21/23 13:46:26.251
  E1021 13:46:26.745192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 10/21/23 13:46:27.258
  Oct 21 13:46:27.261: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/21/23 13:46:27.27
  E1021 13:46:27.746121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:28.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9806" for this suite. @ 10/21/23 13:46:28.28
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 10/21/23 13:46:28.288
  Oct 21 13:46:28.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-pred @ 10/21/23 13:46:28.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:46:28.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:46:28.308
  Oct 21 13:46:28.310: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 21 13:46:28.316: INFO: Waiting for terminating namespaces to be deleted...
  Oct 21 13:46:28.319: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-152 before test
  Oct 21 13:46:28.323: INFO: nginx-ingress-controller-kubernetes-worker-pgmxk from ingress-nginx-kubernetes-worker started at 2023-10-21 12:15:53 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.323: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:46:28.323: INFO: calico-node-pdjzp from kube-system started at 2023-10-21 12:14:46 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.323: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:46:28.323: INFO: pod-adoption-release-bl6hz from replicaset-9806 started at 2023-10-21 13:46:27 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.323: INFO: 	Container pod-adoption-release ready: false, restart count 0
  Oct 21 13:46:28.323: INFO: sonobuoy-e2e-job-dc9fd44093224134 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:46:28.323: INFO: 	Container e2e ready: true, restart count 0
  Oct 21 13:46:28.323: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:46:28.323: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-bqx4f from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:46:28.323: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:46:28.323: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 13:46:28.323: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-65-2 before test
  Oct 21 13:46:28.328: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvf5j from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.328: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 21 13:46:28.328: INFO: nginx-ingress-controller-kubernetes-worker-sf86b from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.328: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:46:28.328: INFO: calico-node-lttm5 from kube-system started at 2023-10-21 12:12:23 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.328: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:46:28.328: INFO: coredns-59cfb5bf46-4s8zg from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.328: INFO: 	Container coredns ready: true, restart count 0
  Oct 21 13:46:28.328: INFO: kube-state-metrics-775d9f4f79-qbqgv from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.329: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 21 13:46:28.329: INFO: metrics-server-v0.6.3-69d7fbfdf8-n4sg7 from kube-system started at 2023-10-21 12:12:56 +0000 UTC (2 container statuses recorded)
  Oct 21 13:46:28.329: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 21 13:46:28.329: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 21 13:46:28.329: INFO: dashboard-metrics-scraper-5dd7cb5fc-gpj8d from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.329: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 21 13:46:28.329: INFO: kubernetes-dashboard-7b899cb9d9-2dfs9 from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.329: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 21 13:46:28.329: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-st954 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:46:28.329: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:46:28.329: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 13:46:28.329: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-83-52 before test
  Oct 21 13:46:28.333: INFO: nginx-ingress-controller-kubernetes-worker-dm7f9 from ingress-nginx-kubernetes-worker started at 2023-10-21 13:45:20 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.333: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:46:28.333: INFO: calico-node-dfp9j from kube-system started at 2023-10-21 12:14:49 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.333: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:46:28.334: INFO: pod-adoption-release from replicaset-9806 started at 2023-10-21 13:46:24 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.334: INFO: 	Container pod-adoption-release ready: true, restart count 0
  Oct 21 13:46:28.334: INFO: sonobuoy from sonobuoy started at 2023-10-21 12:21:43 +0000 UTC (1 container statuses recorded)
  Oct 21 13:46:28.334: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 21 13:46:28.334: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-sq7tr from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:46:28.334: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:46:28.334: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-41-152 @ 10/21/23 13:46:28.349
  STEP: verifying the node has the label node ip-172-31-65-2 @ 10/21/23 13:46:28.362
  STEP: verifying the node has the label node ip-172-31-83-52 @ 10/21/23 13:46:28.372
  Oct 21 13:46:28.382: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-gvf5j requesting resource cpu=10m on Node ip-172-31-65-2
  Oct 21 13:46:28.382: INFO: Pod nginx-ingress-controller-kubernetes-worker-dm7f9 requesting resource cpu=0m on Node ip-172-31-83-52
  Oct 21 13:46:28.383: INFO: Pod nginx-ingress-controller-kubernetes-worker-pgmxk requesting resource cpu=0m on Node ip-172-31-41-152
  Oct 21 13:46:28.383: INFO: Pod nginx-ingress-controller-kubernetes-worker-sf86b requesting resource cpu=0m on Node ip-172-31-65-2
  Oct 21 13:46:28.383: INFO: Pod calico-node-dfp9j requesting resource cpu=250m on Node ip-172-31-83-52
  Oct 21 13:46:28.383: INFO: Pod calico-node-lttm5 requesting resource cpu=250m on Node ip-172-31-65-2
  Oct 21 13:46:28.383: INFO: Pod calico-node-pdjzp requesting resource cpu=250m on Node ip-172-31-41-152
  Oct 21 13:46:28.383: INFO: Pod coredns-59cfb5bf46-4s8zg requesting resource cpu=100m on Node ip-172-31-65-2
  Oct 21 13:46:28.383: INFO: Pod kube-state-metrics-775d9f4f79-qbqgv requesting resource cpu=0m on Node ip-172-31-65-2
  Oct 21 13:46:28.383: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-n4sg7 requesting resource cpu=5m on Node ip-172-31-65-2
  Oct 21 13:46:28.383: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-gpj8d requesting resource cpu=0m on Node ip-172-31-65-2
  Oct 21 13:46:28.383: INFO: Pod kubernetes-dashboard-7b899cb9d9-2dfs9 requesting resource cpu=0m on Node ip-172-31-65-2
  Oct 21 13:46:28.383: INFO: Pod pod-adoption-release requesting resource cpu=0m on Node ip-172-31-83-52
  Oct 21 13:46:28.383: INFO: Pod pod-adoption-release-bl6hz requesting resource cpu=0m on Node ip-172-31-41-152
  Oct 21 13:46:28.383: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-83-52
  Oct 21 13:46:28.383: INFO: Pod sonobuoy-e2e-job-dc9fd44093224134 requesting resource cpu=0m on Node ip-172-31-41-152
  Oct 21 13:46:28.383: INFO: Pod sonobuoy-systemd-logs-daemon-set-497088b1692046a9-bqx4f requesting resource cpu=0m on Node ip-172-31-41-152
  Oct 21 13:46:28.383: INFO: Pod sonobuoy-systemd-logs-daemon-set-497088b1692046a9-sq7tr requesting resource cpu=0m on Node ip-172-31-83-52
  Oct 21 13:46:28.383: INFO: Pod sonobuoy-systemd-logs-daemon-set-497088b1692046a9-st954 requesting resource cpu=0m on Node ip-172-31-65-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/21/23 13:46:28.383
  Oct 21 13:46:28.383: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-41-152
  Oct 21 13:46:28.391: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-65-2
  Oct 21 13:46:28.397: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-83-52
  E1021 13:46:28.746837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:29.746902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/21/23 13:46:30.417
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c88b5d5-9514-4374-998a-e7d65ef61a5c.17902367d6265106], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8716/filler-pod-1c88b5d5-9514-4374-998a-e7d65ef61a5c to ip-172-31-41-152] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c88b5d5-9514-4374-998a-e7d65ef61a5c.17902367f9386e54], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c88b5d5-9514-4374-998a-e7d65ef61a5c.17902367fa14b0b1], Reason = [Created], Message = [Created container filler-pod-1c88b5d5-9514-4374-998a-e7d65ef61a5c] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c88b5d5-9514-4374-998a-e7d65ef61a5c.17902367feeb5d84], Reason = [Started], Message = [Started container filler-pod-1c88b5d5-9514-4374-998a-e7d65ef61a5c] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30407e56-f69b-4400-a7ef-d91de7a4ec78.17902367d68fe2b1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8716/filler-pod-30407e56-f69b-4400-a7ef-d91de7a4ec78 to ip-172-31-65-2] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30407e56-f69b-4400-a7ef-d91de7a4ec78.17902367f858923a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30407e56-f69b-4400-a7ef-d91de7a4ec78.17902367f958a7a5], Reason = [Created], Message = [Created container filler-pod-30407e56-f69b-4400-a7ef-d91de7a4ec78] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30407e56-f69b-4400-a7ef-d91de7a4ec78.17902367fe97a820], Reason = [Started], Message = [Started container filler-pod-30407e56-f69b-4400-a7ef-d91de7a4ec78] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7c385d2d-7372-466f-aa60-77a6f724f142.17902367d6b146bb], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8716/filler-pod-7c385d2d-7372-466f-aa60-77a6f724f142 to ip-172-31-83-52] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7c385d2d-7372-466f-aa60-77a6f724f142.17902367f7b6d3ce], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7c385d2d-7372-466f-aa60-77a6f724f142.17902367f8d912dc], Reason = [Created], Message = [Created container filler-pod-7c385d2d-7372-466f-aa60-77a6f724f142] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7c385d2d-7372-466f-aa60-77a6f724f142.17902367fdc6f6dd], Reason = [Started], Message = [Started container filler-pod-7c385d2d-7372-466f-aa60-77a6f724f142] @ 10/21/23 13:46:30.421
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.179023684f0538ba], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 10/21/23 13:46:30.433
  E1021 13:46:30.747447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-41-152 @ 10/21/23 13:46:31.431
  STEP: verifying the node doesn't have the label node @ 10/21/23 13:46:31.441
  STEP: removing the label node off the node ip-172-31-65-2 @ 10/21/23 13:46:31.445
  STEP: verifying the node doesn't have the label node @ 10/21/23 13:46:31.46
  STEP: removing the label node off the node ip-172-31-83-52 @ 10/21/23 13:46:31.463
  STEP: verifying the node doesn't have the label node @ 10/21/23 13:46:31.477
  Oct 21 13:46:31.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8716" for this suite. @ 10/21/23 13:46:31.485
• [3.203 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 10/21/23 13:46:31.492
  Oct 21 13:46:31.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 13:46:31.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:46:31.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:46:31.516
  STEP: Creating a test headless service @ 10/21/23 13:46:31.519
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 59.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.59_udp@PTR;check="$$(dig +tcp +noall +answer +search 59.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.59_tcp@PTR;sleep 1; done
   @ 10/21/23 13:46:31.534
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 59.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.59_udp@PTR;check="$$(dig +tcp +noall +answer +search 59.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.59_tcp@PTR;sleep 1; done
   @ 10/21/23 13:46:31.534
  STEP: creating a pod to probe DNS @ 10/21/23 13:46:31.534
  STEP: submitting the pod to kubernetes @ 10/21/23 13:46:31.534
  E1021 13:46:31.748481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:32.748551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/21/23 13:46:33.562
  STEP: looking for the results for each expected name from probers @ 10/21/23 13:46:33.565
  Oct 21 13:46:33.570: INFO: Unable to read wheezy_udp@dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.574: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.578: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.582: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.626: INFO: Unable to read jessie_udp@dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.634: INFO: Unable to read jessie_tcp@dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.638: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.642: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local from pod dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df: the server could not find the requested resource (get pods dns-test-065793f2-13ad-476f-be77-4e3126d321df)
  Oct 21 13:46:33.660: INFO: Lookups using dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df failed for: [wheezy_udp@dns-test-service.dns-1975.svc.cluster.local wheezy_tcp@dns-test-service.dns-1975.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local jessie_udp@dns-test-service.dns-1975.svc.cluster.local jessie_tcp@dns-test-service.dns-1975.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1975.svc.cluster.local]

  Oct 21 13:46:33.665: INFO: Pod client logs for webserver: 
  Oct 21 13:46:33.674: INFO: Pod client logs for querier: 
  Oct 21 13:46:33.680: INFO: Pod client logs for jessie-querier: 
  E1021 13:46:33.748967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:34.749263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:35.749624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:36.749546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:37.749548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:38.731: INFO: DNS probes using dns-1975/dns-test-065793f2-13ad-476f-be77-4e3126d321df succeeded

  Oct 21 13:46:38.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:46:38.735
  STEP: deleting the test service @ 10/21/23 13:46:38.744
  E1021 13:46:38.750217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 10/21/23 13:46:38.76
  STEP: Destroying namespace "dns-1975" for this suite. @ 10/21/23 13:46:38.769
• [7.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 10/21/23 13:46:38.776
  Oct 21 13:46:38.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replication-controller @ 10/21/23 13:46:38.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:46:38.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:46:38.809
  STEP: Given a ReplicationController is created @ 10/21/23 13:46:38.811
  STEP: When the matched label of one of its pods change @ 10/21/23 13:46:38.816
  Oct 21 13:46:38.818: INFO: Pod name pod-release: Found 0 pods out of 1
  E1021 13:46:39.750372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:40.751421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:41.751591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:42.752451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:43.753332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:43.823: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/21/23 13:46:43.832
  E1021 13:46:44.753512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:46:44.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6317" for this suite. @ 10/21/23 13:46:44.842
• [6.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 10/21/23 13:46:44.848
  Oct 21 13:46:44.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:46:44.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:46:44.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:46:44.871
  E1021 13:46:45.754090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:46.754381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:47.754445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:48.755356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:49.755431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:50.755919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:51.756410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:52.756486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:53.756847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:54.756896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:55.756987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:56.757069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:57.757785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:58.757908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:46:59.758387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:00.758473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:01.758563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/21/23 13:47:01.877
  E1021 13:47:02.758641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:03.759444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:04.759586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:05.759680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:06.760145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/21/23 13:47:06.881
  STEP: Ensuring resource quota status is calculated @ 10/21/23 13:47:06.887
  E1021 13:47:07.761075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:08.761262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 10/21/23 13:47:08.891
  STEP: Ensuring resource quota status captures configMap creation @ 10/21/23 13:47:08.9
  E1021 13:47:09.761356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:10.761921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 10/21/23 13:47:10.904
  STEP: Ensuring resource quota status released usage @ 10/21/23 13:47:10.909
  E1021 13:47:11.761969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:12.762128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:12.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3617" for this suite. @ 10/21/23 13:47:12.917
• [28.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 10/21/23 13:47:12.923
  Oct 21 13:47:12.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 13:47:12.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:12.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:12.946
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/21/23 13:47:12.949
  Oct 21 13:47:12.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:47:13.762212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:14.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:47:14.762255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:15.762766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:16.762841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:17.763432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:18.764406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:19.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4065" for this suite. @ 10/21/23 13:47:19.425
• [6.509 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/21/23 13:47:19.432
  Oct 21 13:47:19.432: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename deployment @ 10/21/23 13:47:19.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:19.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:19.448
  Oct 21 13:47:19.451: INFO: Creating deployment "test-recreate-deployment"
  Oct 21 13:47:19.456: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Oct 21 13:47:19.462: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E1021 13:47:19.764501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:20.764912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:21.468: INFO: Waiting deployment "test-recreate-deployment" to complete
  Oct 21 13:47:21.471: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Oct 21 13:47:21.480: INFO: Updating deployment test-recreate-deployment
  Oct 21 13:47:21.480: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Oct 21 13:47:21.558: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-779",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "558c9f7b-bf70-4c86-89f7-4d3436857330",
      ResourceVersion: (string) (len=5) "36975",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 21 13:47:21.561: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-779",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3bb4863-9f2e-4d5d-9e3f-24971fb90c7a",
      ResourceVersion: (string) (len=5) "36974",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "558c9f7b-bf70-4c86-89f7-4d3436857330",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 38 63 39 66  37 62 2d 62 66 37 30 2d  |\"558c9f7b-bf70-|
              00000120  34 63 38 36 2d 38 39 66  37 2d 34 64 33 34 33 36  |4c86-89f7-4d3436|
              00000130  38 35 37 33 33 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |857330\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:47:21.562: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Oct 21 13:47:21.562: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-779",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "449c7b38-403e-46f2-8f7a-65cbce3ec4cf",
      ResourceVersion: (string) (len=5) "36963",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "558c9f7b-bf70-4c86-89f7-4d3436857330",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 38 63 39 66  37 62 2d 62 66 37 30 2d  |\"558c9f7b-bf70-|
              00000120  34 63 38 36 2d 38 39 66  37 2d 34 64 33 34 33 36  |4c86-89f7-4d3436|
              00000130  38 35 37 33 33 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |857330\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 21 13:47:21.566: INFO: Pod "test-recreate-deployment-76fb77d45-tnfdm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-tnfdm",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-779",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17636dda-d857-4861-a608-b0a4292fca76",
      ResourceVersion: (string) (len=5) "36972",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "b3bb4863-9f2e-4d5d-9e3f-24971fb90c7a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  62 62 34 38 36 33 2d 39  |d\":\"b3bb4863-9|
              00000090  66 32 65 2d 34 64 35 64  2d 39 65 33 66 2d 32 34  |f2e-4d5d-9e3f-24|
              000000a0  39 37 31 66 62 39 30 63  37 61 5c 22 7d 22 3a 7b  |971fb90c7a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbqwc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbqwc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-83-52",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63833492841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.83.52",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63833492841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 21 13:47:21.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-779" for this suite. @ 10/21/23 13:47:21.572
• [2.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 10/21/23 13:47:21.578
  Oct 21 13:47:21.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/21/23 13:47:21.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:21.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:21.596
  Oct 21 13:47:21.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:47:21.765926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:22.766904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:23.767510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:24.767967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:24.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7778" for this suite. @ 10/21/23 13:47:24.805
• [3.234 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 10/21/23 13:47:24.813
  Oct 21 13:47:24.813: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename namespaces @ 10/21/23 13:47:24.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:24.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:24.833
  STEP: Creating a test namespace @ 10/21/23 13:47:24.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:24.848
  STEP: Creating a service in the namespace @ 10/21/23 13:47:24.852
  STEP: Deleting the namespace @ 10/21/23 13:47:24.868
  STEP: Waiting for the namespace to be removed. @ 10/21/23 13:47:24.877
  E1021 13:47:25.768563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:26.768646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:27.768736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:28.769316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:29.770091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:30.770312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/21/23 13:47:30.882
  STEP: Verifying there is no service in the namespace @ 10/21/23 13:47:30.895
  Oct 21 13:47:30.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-293" for this suite. @ 10/21/23 13:47:30.904
  STEP: Destroying namespace "nsdeletetest-2382" for this suite. @ 10/21/23 13:47:30.91
  Oct 21 13:47:30.913: INFO: Namespace nsdeletetest-2382 was already deleted
  STEP: Destroying namespace "nsdeletetest-1786" for this suite. @ 10/21/23 13:47:30.913
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 10/21/23 13:47:30.919
  Oct 21 13:47:30.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename security-context-test @ 10/21/23 13:47:30.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:30.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:30.94
  E1021 13:47:31.770806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:32.771795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:33.771898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:34.772074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:34.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2175" for this suite. @ 10/21/23 13:47:34.98
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 10/21/23 13:47:34.986
  Oct 21 13:47:34.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:47:34.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:35.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:35.008
  STEP: creating service multi-endpoint-test in namespace services-1823 @ 10/21/23 13:47:35.011
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1823 to expose endpoints map[] @ 10/21/23 13:47:35.023
  Oct 21 13:47:35.028: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1021 13:47:35.772100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:36.036: INFO: successfully validated that service multi-endpoint-test in namespace services-1823 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1823 @ 10/21/23 13:47:36.036
  E1021 13:47:36.773034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:37.773306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1823 to expose endpoints map[pod1:[100]] @ 10/21/23 13:47:38.06
  Oct 21 13:47:38.069: INFO: successfully validated that service multi-endpoint-test in namespace services-1823 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1823 @ 10/21/23 13:47:38.069
  E1021 13:47:38.774309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:39.774373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1823 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/21/23 13:47:40.088
  Oct 21 13:47:40.100: INFO: successfully validated that service multi-endpoint-test in namespace services-1823 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/21/23 13:47:40.1
  Oct 21 13:47:40.100: INFO: Creating new exec pod
  E1021 13:47:40.774912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:41.775424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:42.776406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:43.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-1823 exec execpodmk546 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Oct 21 13:47:43.229: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Oct 21 13:47:43.229: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:47:43.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-1823 exec execpodmk546 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.112 80'
  Oct 21 13:47:43.340: INFO: stderr: "+ nc -v -t -w 2 10.152.183.112 80\n+ echo hostName\nConnection to 10.152.183.112 80 port [tcp/http] succeeded!\n"
  Oct 21 13:47:43.340: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:47:43.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-1823 exec execpodmk546 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Oct 21 13:47:43.454: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Oct 21 13:47:43.454: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:47:43.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-1823 exec execpodmk546 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.112 81'
  Oct 21 13:47:43.569: INFO: stderr: "+ nc -v -t -w 2 10.152.183.112 81\n+ echo hostName\nConnection to 10.152.183.112 81 port [tcp/*] succeeded!\n"
  Oct 21 13:47:43.569: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1823 @ 10/21/23 13:47:43.569
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1823 to expose endpoints map[pod2:[101]] @ 10/21/23 13:47:43.588
  Oct 21 13:47:43.602: INFO: successfully validated that service multi-endpoint-test in namespace services-1823 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1823 @ 10/21/23 13:47:43.602
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1823 to expose endpoints map[] @ 10/21/23 13:47:43.613
  Oct 21 13:47:43.626: INFO: successfully validated that service multi-endpoint-test in namespace services-1823 exposes endpoints map[]
  Oct 21 13:47:43.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1823" for this suite. @ 10/21/23 13:47:43.649
• [8.669 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 10/21/23 13:47:43.655
  Oct 21 13:47:43.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename ingress @ 10/21/23 13:47:43.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:43.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:43.67
  STEP: getting /apis @ 10/21/23 13:47:43.675
  STEP: getting /apis/networking.k8s.io @ 10/21/23 13:47:43.679
  STEP: getting /apis/networking.k8s.iov1 @ 10/21/23 13:47:43.68
  STEP: creating @ 10/21/23 13:47:43.682
  STEP: getting @ 10/21/23 13:47:43.701
  STEP: listing @ 10/21/23 13:47:43.705
  STEP: watching @ 10/21/23 13:47:43.712
  Oct 21 13:47:43.712: INFO: starting watch
  STEP: cluster-wide listing @ 10/21/23 13:47:43.713
  STEP: cluster-wide watching @ 10/21/23 13:47:43.716
  Oct 21 13:47:43.716: INFO: starting watch
  STEP: patching @ 10/21/23 13:47:43.717
  STEP: updating @ 10/21/23 13:47:43.722
  Oct 21 13:47:43.733: INFO: waiting for watch events with expected annotations
  Oct 21 13:47:43.733: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/21/23 13:47:43.733
  STEP: updating /status @ 10/21/23 13:47:43.738
  STEP: get /status @ 10/21/23 13:47:43.754
  STEP: deleting @ 10/21/23 13:47:43.758
  E1021 13:47:43.777434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 10/21/23 13:47:43.781
  Oct 21 13:47:43.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4955" for this suite. @ 10/21/23 13:47:43.799
• [0.153 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 10/21/23 13:47:43.809
  Oct 21 13:47:43.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:47:43.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:43.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:43.867
  STEP: starting the proxy server @ 10/21/23 13:47:43.871
  Oct 21 13:47:43.871: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-8836 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/21/23 13:47:43.908
  Oct 21 13:47:43.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8836" for this suite. @ 10/21/23 13:47:43.92
• [0.120 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/21/23 13:47:43.929
  Oct 21 13:47:43.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/21/23 13:47:43.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:43.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:43.966
  STEP: creating a target pod @ 10/21/23 13:47:43.97
  E1021 13:47:44.777537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:45.777568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/21/23 13:47:45.996
  E1021 13:47:46.778612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:47.778704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/21/23 13:47:48.016
  Oct 21 13:47:48.016: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9868 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:47:48.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:47:48.016: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:47:48.016: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-9868/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Oct 21 13:47:48.082: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/21/23 13:47:48.089
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/21/23 13:47:48.092
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/21/23 13:47:48.101
  Oct 21 13:47:48.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9868" for this suite. @ 10/21/23 13:47:48.11
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 10/21/23 13:47:48.126
  Oct 21 13:47:48.126: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename job @ 10/21/23 13:47:48.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:48.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:48.147
  STEP: Creating a job @ 10/21/23 13:47:48.149
  STEP: Ensuring job reaches completions @ 10/21/23 13:47:48.155
  E1021 13:47:48.778813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:49.778863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:50.779854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:51.780234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:52.780610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:53.781071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:54.781925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:55.782000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:56.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4909" for this suite. @ 10/21/23 13:47:56.164
• [8.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 10/21/23 13:47:56.173
  Oct 21 13:47:56.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl-logs @ 10/21/23 13:47:56.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:47:56.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:47:56.207
  STEP: creating an pod @ 10/21/23 13:47:56.211
  Oct 21 13:47:56.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Oct 21 13:47:56.268: INFO: stderr: ""
  Oct 21 13:47:56.268: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/21/23 13:47:56.268
  Oct 21 13:47:56.268: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1021 13:47:56.782820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:57.783423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:47:58.282: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/21/23 13:47:58.282
  Oct 21 13:47:58.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 logs logs-generator logs-generator'
  Oct 21 13:47:58.345: INFO: stderr: ""
  Oct 21 13:47:58.345: INFO: stdout: "I1021 13:47:56.916838       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/gqf 426\nI1021 13:47:57.116921       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/gswn 417\nI1021 13:47:57.317392       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/vzv 482\nI1021 13:47:57.517567       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/s99p 282\nI1021 13:47:57.717855       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/85l 482\nI1021 13:47:57.917144       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/9wxp 374\nI1021 13:47:58.117430       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/9fn 377\nI1021 13:47:58.317668       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/vfhf 515\n"
  STEP: limiting log lines @ 10/21/23 13:47:58.346
  Oct 21 13:47:58.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 logs logs-generator logs-generator --tail=1'
  Oct 21 13:47:58.416: INFO: stderr: ""
  Oct 21 13:47:58.416: INFO: stdout: "I1021 13:47:58.317668       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/vfhf 515\n"
  Oct 21 13:47:58.416: INFO: got output "I1021 13:47:58.317668       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/vfhf 515\n"
  STEP: limiting log bytes @ 10/21/23 13:47:58.416
  Oct 21 13:47:58.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 logs logs-generator logs-generator --limit-bytes=1'
  Oct 21 13:47:58.469: INFO: stderr: ""
  Oct 21 13:47:58.469: INFO: stdout: "I"
  Oct 21 13:47:58.469: INFO: got output "I"
  STEP: exposing timestamps @ 10/21/23 13:47:58.469
  Oct 21 13:47:58.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 logs logs-generator logs-generator --tail=1 --timestamps'
  Oct 21 13:47:58.523: INFO: stderr: ""
  Oct 21 13:47:58.523: INFO: stdout: "2023-10-21T13:47:58.517138177Z I1021 13:47:58.517053       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/czb 205\n"
  Oct 21 13:47:58.523: INFO: got output "2023-10-21T13:47:58.517138177Z I1021 13:47:58.517053       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/czb 205\n"
  STEP: restricting to a time range @ 10/21/23 13:47:58.523
  E1021 13:47:58.783516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:47:59.783610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:00.784334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:01.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 logs logs-generator logs-generator --since=1s'
  Oct 21 13:48:01.077: INFO: stderr: ""
  Oct 21 13:48:01.077: INFO: stdout: "I1021 13:48:00.117215       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/wq8j 228\nI1021 13:48:00.317538       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/lgpl 316\nI1021 13:48:00.517824       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/tmlz 466\nI1021 13:48:00.716920       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/2jt 272\nI1021 13:48:00.917215       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/nm9 301\n"
  Oct 21 13:48:01.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 logs logs-generator logs-generator --since=24h'
  Oct 21 13:48:01.129: INFO: stderr: ""
  Oct 21 13:48:01.129: INFO: stdout: "I1021 13:47:56.916838       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/gqf 426\nI1021 13:47:57.116921       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/gswn 417\nI1021 13:47:57.317392       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/vzv 482\nI1021 13:47:57.517567       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/s99p 282\nI1021 13:47:57.717855       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/85l 482\nI1021 13:47:57.917144       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/9wxp 374\nI1021 13:47:58.117430       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/9fn 377\nI1021 13:47:58.317668       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/vfhf 515\nI1021 13:47:58.517053       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/czb 205\nI1021 13:47:58.717342       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/st5c 510\nI1021 13:47:58.917633       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/sxw 454\nI1021 13:47:59.116862       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/zc2m 558\nI1021 13:47:59.317152       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/dww 439\nI1021 13:47:59.517439       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/gf9 517\nI1021 13:47:59.717749       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/7qb 419\nI1021 13:47:59.916925       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/xxjz 397\nI1021 13:48:00.117215       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/wq8j 228\nI1021 13:48:00.317538       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/lgpl 316\nI1021 13:48:00.517824       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/tmlz 466\nI1021 13:48:00.716920       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/2jt 272\nI1021 13:48:00.917215       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/nm9 301\nI1021 13:48:01.117515       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/sj8 475\n"
  Oct 21 13:48:01.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-logs-9615 delete pod logs-generator'
  E1021 13:48:01.784486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:02.093: INFO: stderr: ""
  Oct 21 13:48:02.093: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Oct 21 13:48:02.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9615" for this suite. @ 10/21/23 13:48:02.096
• [5.929 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 10/21/23 13:48:02.102
  Oct 21 13:48:02.102: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 13:48:02.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:02.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:02.123
  STEP: set up a multi version CRD @ 10/21/23 13:48:02.126
  Oct 21 13:48:02.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:48:02.785421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:03.786061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:04.786868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 10/21/23 13:48:05.345
  STEP: check the new version name is served @ 10/21/23 13:48:05.361
  E1021 13:48:05.787449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 10/21/23 13:48:06.086
  STEP: check the other version is not changed @ 10/21/23 13:48:06.711
  E1021 13:48:06.788243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:07.789239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:08.790274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:09.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3639" for this suite. @ 10/21/23 13:48:09.285
• [7.190 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 10/21/23 13:48:09.292
  Oct 21 13:48:09.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 13:48:09.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:09.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:09.312
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/21/23 13:48:09.314
  Oct 21 13:48:09.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:48:09.790366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:10.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:48:10.790657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:11.791472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:12.792477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:13.793112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:14.793188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:15.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1021 13:48:15.793613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-3783" for this suite. @ 10/21/23 13:48:15.794
• [6.508 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/21/23 13:48:15.801
  Oct 21 13:48:15.801: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:48:15.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:15.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:15.82
  STEP: Create set of pods @ 10/21/23 13:48:15.823
  Oct 21 13:48:15.831: INFO: created test-pod-1
  Oct 21 13:48:15.839: INFO: created test-pod-2
  Oct 21 13:48:15.847: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/21/23 13:48:15.847
  E1021 13:48:16.794127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:17.794211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 10/21/23 13:48:17.9
  Oct 21 13:48:17.903: INFO: Pod quantity 3 is different from expected quantity 0
  E1021 13:48:18.794369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:18.907: INFO: Pod quantity 3 is different from expected quantity 0
  E1021 13:48:19.795419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:19.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4783" for this suite. @ 10/21/23 13:48:19.91
• [4.117 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 10/21/23 13:48:19.918
  Oct 21 13:48:19.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:48:19.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:19.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:19.938
  STEP: Creating the pod @ 10/21/23 13:48:19.955
  E1021 13:48:20.795523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:21.795596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:22.496: INFO: Successfully updated pod "annotationupdate2982bdd1-ca9d-473d-a330-6a72e749884e"
  E1021 13:48:22.796069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:23.796404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:24.796490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:25.796579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:26.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4095" for this suite. @ 10/21/23 13:48:26.519
• [6.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 10/21/23 13:48:26.526
  Oct 21 13:48:26.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:48:26.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:26.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:26.543
  STEP: creating service in namespace services-390 @ 10/21/23 13:48:26.546
  STEP: creating service affinity-nodeport in namespace services-390 @ 10/21/23 13:48:26.546
  STEP: creating replication controller affinity-nodeport in namespace services-390 @ 10/21/23 13:48:26.569
  I1021 13:48:26.577533      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-390, replica count: 3
  E1021 13:48:26.796780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:27.796891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:28.797089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:48:29.628905      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 13:48:29.638: INFO: Creating new exec pod
  E1021 13:48:29.797675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:30.797785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:31.797832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:32.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-390 exec execpod-affinityt6lgp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Oct 21 13:48:32.770: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Oct 21 13:48:32.770: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:48:32.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-390 exec execpod-affinityt6lgp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.169 80'
  E1021 13:48:32.798785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:32.885: INFO: stderr: "+ nc -v -t -w 2 10.152.183.169 80\n+ echo hostName\nConnection to 10.152.183.169 80 port [tcp/http] succeeded!\n"
  Oct 21 13:48:32.885: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:48:32.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-390 exec execpod-affinityt6lgp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.152 31726'
  Oct 21 13:48:33.001: INFO: stderr: "+ nc -v -t -w 2 172.31.41.152 31726\n+ echo hostName\nConnection to 172.31.41.152 31726 port [tcp/*] succeeded!\n"
  Oct 21 13:48:33.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:48:33.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-390 exec execpod-affinityt6lgp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.2 31726'
  Oct 21 13:48:33.116: INFO: stderr: "+ nc -v -t -w 2 172.31.65.2 31726\n+ echo hostName\nConnection to 172.31.65.2 31726 port [tcp/*] succeeded!\n"
  Oct 21 13:48:33.116: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:48:33.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-390 exec execpod-affinityt6lgp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.41.152:31726/ ; done'
  Oct 21 13:48:33.303: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31726/\n"
  Oct 21 13:48:33.303: INFO: stdout: "\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8\naffinity-nodeport-bsgc8"
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Received response from host: affinity-nodeport-bsgc8
  Oct 21 13:48:33.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:48:33.307: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-390, will wait for the garbage collector to delete the pods @ 10/21/23 13:48:33.32
  Oct 21 13:48:33.380: INFO: Deleting ReplicationController affinity-nodeport took: 5.748633ms
  Oct 21 13:48:33.481: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.042764ms
  E1021 13:48:33.799362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:34.799413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:35.799777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-390" for this suite. @ 10/21/23 13:48:36.203
• [9.682 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/21/23 13:48:36.208
  Oct 21 13:48:36.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename proxy @ 10/21/23 13:48:36.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:36.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:36.226
  STEP: starting an echo server on multiple ports @ 10/21/23 13:48:36.239
  STEP: creating replication controller proxy-service-lnxkm in namespace proxy-7527 @ 10/21/23 13:48:36.239
  I1021 13:48:36.245038      19 runners.go:197] Created replication controller with name: proxy-service-lnxkm, namespace: proxy-7527, replica count: 1
  E1021 13:48:36.800842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:48:37.296134      19 runners.go:197] proxy-service-lnxkm Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1021 13:48:37.801845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:48:38.297035      19 runners.go:197] proxy-service-lnxkm Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 13:48:38.300: INFO: setup took 2.071150031s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/21/23 13:48:38.3
  Oct 21 13:48:38.306: INFO: (0) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 5.415985ms)
  Oct 21 13:48:38.306: INFO: (0) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 5.584947ms)
  Oct 21 13:48:38.307: INFO: (0) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 6.103279ms)
  Oct 21 13:48:38.307: INFO: (0) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 6.573429ms)
  Oct 21 13:48:38.307: INFO: (0) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 6.527262ms)
  Oct 21 13:48:38.307: INFO: (0) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 6.648334ms)
  Oct 21 13:48:38.308: INFO: (0) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 7.083778ms)
  Oct 21 13:48:38.308: INFO: (0) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 7.294601ms)
  Oct 21 13:48:38.308: INFO: (0) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 7.773509ms)
  Oct 21 13:48:38.312: INFO: (0) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 12.119373ms)
  Oct 21 13:48:38.313: INFO: (0) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 12.152826ms)
  Oct 21 13:48:38.313: INFO: (0) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 12.634657ms)
  Oct 21 13:48:38.313: INFO: (0) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 12.743618ms)
  Oct 21 13:48:38.313: INFO: (0) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 13.080455ms)
  Oct 21 13:48:38.314: INFO: (0) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 12.945783ms)
  Oct 21 13:48:38.314: INFO: (0) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 13.023097ms)
  Oct 21 13:48:38.318: INFO: (1) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 3.876556ms)
  Oct 21 13:48:38.318: INFO: (1) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 4.473859ms)
  Oct 21 13:48:38.318: INFO: (1) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 4.509244ms)
  Oct 21 13:48:38.319: INFO: (1) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 5.282601ms)
  Oct 21 13:48:38.319: INFO: (1) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 5.227563ms)
  Oct 21 13:48:38.319: INFO: (1) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 5.189527ms)
  Oct 21 13:48:38.320: INFO: (1) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 6.052955ms)
  Oct 21 13:48:38.320: INFO: (1) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 6.101029ms)
  Oct 21 13:48:38.320: INFO: (1) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 6.455448ms)
  Oct 21 13:48:38.321: INFO: (1) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 6.950596ms)
  Oct 21 13:48:38.321: INFO: (1) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 6.856619ms)
  Oct 21 13:48:38.321: INFO: (1) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 7.187161ms)
  Oct 21 13:48:38.321: INFO: (1) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 7.17836ms)
  Oct 21 13:48:38.322: INFO: (1) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 7.504447ms)
  Oct 21 13:48:38.322: INFO: (1) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 8.009838ms)
  Oct 21 13:48:38.322: INFO: (1) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 7.956166ms)
  Oct 21 13:48:38.326: INFO: (2) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 3.789818ms)
  Oct 21 13:48:38.326: INFO: (2) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 3.740836ms)
  Oct 21 13:48:38.326: INFO: (2) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 4.195133ms)
  Oct 21 13:48:38.326: INFO: (2) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 4.043197ms)
  Oct 21 13:48:38.327: INFO: (2) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 4.482748ms)
  Oct 21 13:48:38.327: INFO: (2) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 4.86701ms)
  Oct 21 13:48:38.328: INFO: (2) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 5.12333ms)
  Oct 21 13:48:38.329: INFO: (2) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 6.237299ms)
  Oct 21 13:48:38.329: INFO: (2) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 6.379359ms)
  Oct 21 13:48:38.329: INFO: (2) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 6.412864ms)
  Oct 21 13:48:38.329: INFO: (2) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 6.61509ms)
  Oct 21 13:48:38.329: INFO: (2) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 6.626729ms)
  Oct 21 13:48:38.329: INFO: (2) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 7.094618ms)
  Oct 21 13:48:38.330: INFO: (2) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 7.5806ms)
  Oct 21 13:48:38.330: INFO: (2) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 7.7359ms)
  Oct 21 13:48:38.330: INFO: (2) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 7.833918ms)
  Oct 21 13:48:38.334: INFO: (3) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 3.250706ms)
  Oct 21 13:48:38.334: INFO: (3) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 3.429664ms)
  Oct 21 13:48:38.335: INFO: (3) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 4.884854ms)
  Oct 21 13:48:38.336: INFO: (3) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 5.494079ms)
  Oct 21 13:48:38.336: INFO: (3) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 5.188436ms)
  Oct 21 13:48:38.336: INFO: (3) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 5.385392ms)
  Oct 21 13:48:38.337: INFO: (3) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 6.687516ms)
  Oct 21 13:48:38.337: INFO: (3) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 6.671046ms)
  Oct 21 13:48:38.338: INFO: (3) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 6.976706ms)
  Oct 21 13:48:38.338: INFO: (3) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 7.166761ms)
  Oct 21 13:48:38.338: INFO: (3) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 7.444823ms)
  Oct 21 13:48:38.338: INFO: (3) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 7.346007ms)
  Oct 21 13:48:38.338: INFO: (3) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 7.41136ms)
  Oct 21 13:48:38.338: INFO: (3) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 7.518316ms)
  Oct 21 13:48:38.339: INFO: (3) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 7.780511ms)
  Oct 21 13:48:38.339: INFO: (3) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 8.294575ms)
  Oct 21 13:48:38.342: INFO: (4) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 3.250749ms)
  Oct 21 13:48:38.343: INFO: (4) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 3.582459ms)
  Oct 21 13:48:38.343: INFO: (4) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 3.638355ms)
  Oct 21 13:48:38.343: INFO: (4) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 4.312634ms)
  Oct 21 13:48:38.344: INFO: (4) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 4.887707ms)
  Oct 21 13:48:38.345: INFO: (4) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 5.399784ms)
  Oct 21 13:48:38.345: INFO: (4) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 5.604816ms)
  Oct 21 13:48:38.345: INFO: (4) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 5.466872ms)
  Oct 21 13:48:38.345: INFO: (4) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 6.036509ms)
  Oct 21 13:48:38.345: INFO: (4) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 6.1057ms)
  Oct 21 13:48:38.346: INFO: (4) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 6.439892ms)
  Oct 21 13:48:38.346: INFO: (4) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 6.741929ms)
  Oct 21 13:48:38.346: INFO: (4) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 7.225422ms)
  Oct 21 13:48:38.347: INFO: (4) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 8.181962ms)
  Oct 21 13:48:38.347: INFO: (4) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 8.169797ms)
  Oct 21 13:48:38.347: INFO: (4) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 8.010752ms)
  Oct 21 13:48:38.351: INFO: (5) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 3.376977ms)
  Oct 21 13:48:38.352: INFO: (5) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 3.992593ms)
  Oct 21 13:48:38.352: INFO: (5) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 4.797852ms)
  Oct 21 13:48:38.353: INFO: (5) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 5.351744ms)
  Oct 21 13:48:38.353: INFO: (5) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 5.144798ms)
  Oct 21 13:48:38.354: INFO: (5) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 6.000995ms)
  Oct 21 13:48:38.354: INFO: (5) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 6.177716ms)
  Oct 21 13:48:38.354: INFO: (5) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 6.647181ms)
  Oct 21 13:48:38.355: INFO: (5) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 7.438073ms)
  Oct 21 13:48:38.355: INFO: (5) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 7.687944ms)
  Oct 21 13:48:38.355: INFO: (5) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 7.779687ms)
  Oct 21 13:48:38.356: INFO: (5) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 8.035785ms)
  Oct 21 13:48:38.356: INFO: (5) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 8.217504ms)
  Oct 21 13:48:38.356: INFO: (5) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 8.022335ms)
  Oct 21 13:48:38.356: INFO: (5) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 8.216625ms)
  Oct 21 13:48:38.356: INFO: (5) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 8.455289ms)
  Oct 21 13:48:38.359: INFO: (6) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 3.491392ms)
  Oct 21 13:48:38.360: INFO: (6) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 4.117339ms)
  Oct 21 13:48:38.361: INFO: (6) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 5.02427ms)
  Oct 21 13:48:38.361: INFO: (6) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 5.1792ms)
  Oct 21 13:48:38.362: INFO: (6) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 5.325976ms)
  Oct 21 13:48:38.363: INFO: (6) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 7.255566ms)
  Oct 21 13:48:38.363: INFO: (6) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 7.318317ms)
  Oct 21 13:48:38.363: INFO: (6) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 7.186472ms)
  Oct 21 13:48:38.364: INFO: (6) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 7.643847ms)
  Oct 21 13:48:38.364: INFO: (6) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 8.171332ms)
  Oct 21 13:48:38.364: INFO: (6) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 8.110481ms)
  Oct 21 13:48:38.364: INFO: (6) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 7.941114ms)
  Oct 21 13:48:38.364: INFO: (6) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 8.284825ms)
  Oct 21 13:48:38.366: INFO: (6) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 9.99365ms)
  Oct 21 13:48:38.367: INFO: (6) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 10.427476ms)
  Oct 21 13:48:38.367: INFO: (6) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 11.30766ms)
  Oct 21 13:48:38.381: INFO: (7) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 12.969383ms)
  Oct 21 13:48:38.381: INFO: (7) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 13.22909ms)
  Oct 21 13:48:38.381: INFO: (7) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 13.132635ms)
  Oct 21 13:48:38.381: INFO: (7) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 13.092435ms)
  Oct 21 13:48:38.381: INFO: (7) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 13.48989ms)
  Oct 21 13:48:38.384: INFO: (7) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 15.860095ms)
  Oct 21 13:48:38.384: INFO: (7) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 16.246774ms)
  Oct 21 13:48:38.384: INFO: (7) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 16.113513ms)
  Oct 21 13:48:38.385: INFO: (7) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 16.744264ms)
  Oct 21 13:48:38.385: INFO: (7) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 17.159568ms)
  Oct 21 13:48:38.385: INFO: (7) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 17.211659ms)
  Oct 21 13:48:38.385: INFO: (7) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 17.511476ms)
  Oct 21 13:48:38.386: INFO: (7) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 18.045867ms)
  Oct 21 13:48:38.386: INFO: (7) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 18.184122ms)
  Oct 21 13:48:38.386: INFO: (7) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 18.232899ms)
  Oct 21 13:48:38.386: INFO: (7) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 18.503157ms)
  Oct 21 13:48:38.392: INFO: (8) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 5.547598ms)
  Oct 21 13:48:38.398: INFO: (8) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 11.266239ms)
  Oct 21 13:48:38.398: INFO: (8) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 11.436138ms)
  Oct 21 13:48:38.398: INFO: (8) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 11.397248ms)
  Oct 21 13:48:38.398: INFO: (8) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 12.146713ms)
  Oct 21 13:48:38.398: INFO: (8) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 12.157756ms)
  Oct 21 13:48:38.399: INFO: (8) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 12.488837ms)
  Oct 21 13:48:38.399: INFO: (8) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 12.824808ms)
  Oct 21 13:48:38.400: INFO: (8) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 13.700656ms)
  Oct 21 13:48:38.400: INFO: (8) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 13.539741ms)
  Oct 21 13:48:38.400: INFO: (8) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 13.580532ms)
  Oct 21 13:48:38.401: INFO: (8) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 14.732864ms)
  Oct 21 13:48:38.401: INFO: (8) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 14.905784ms)
  Oct 21 13:48:38.401: INFO: (8) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 14.839355ms)
  Oct 21 13:48:38.401: INFO: (8) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 15.205476ms)
  Oct 21 13:48:38.402: INFO: (8) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 15.583128ms)
  Oct 21 13:48:38.410: INFO: (9) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 8.035753ms)
  Oct 21 13:48:38.410: INFO: (9) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 8.185049ms)
  Oct 21 13:48:38.412: INFO: (9) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 9.273279ms)
  Oct 21 13:48:38.412: INFO: (9) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 9.289632ms)
  Oct 21 13:48:38.412: INFO: (9) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 9.567815ms)
  Oct 21 13:48:38.413: INFO: (9) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 10.601049ms)
  Oct 21 13:48:38.413: INFO: (9) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 10.889606ms)
  Oct 21 13:48:38.413: INFO: (9) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 11.000012ms)
  Oct 21 13:48:38.413: INFO: (9) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 11.260152ms)
  Oct 21 13:48:38.414: INFO: (9) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 11.189149ms)
  Oct 21 13:48:38.414: INFO: (9) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 11.29468ms)
  Oct 21 13:48:38.414: INFO: (9) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 11.843688ms)
  Oct 21 13:48:38.414: INFO: (9) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 11.973017ms)
  Oct 21 13:48:38.415: INFO: (9) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 12.29725ms)
  Oct 21 13:48:38.415: INFO: (9) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 12.615242ms)
  Oct 21 13:48:38.416: INFO: (9) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 13.21865ms)
  Oct 21 13:48:38.427: INFO: (10) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 11.764753ms)
  Oct 21 13:48:38.428: INFO: (10) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 12.268445ms)
  Oct 21 13:48:38.429: INFO: (10) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 12.767615ms)
  Oct 21 13:48:38.429: INFO: (10) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 13.29943ms)
  Oct 21 13:48:38.429: INFO: (10) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 13.239836ms)
  Oct 21 13:48:38.430: INFO: (10) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 14.278368ms)
  Oct 21 13:48:38.430: INFO: (10) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 14.501566ms)
  Oct 21 13:48:38.431: INFO: (10) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 15.075944ms)
  Oct 21 13:48:38.431: INFO: (10) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 14.941043ms)
  Oct 21 13:48:38.431: INFO: (10) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 15.592211ms)
  Oct 21 13:48:38.432: INFO: (10) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 16.37143ms)
  Oct 21 13:48:38.432: INFO: (10) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 16.324942ms)
  Oct 21 13:48:38.432: INFO: (10) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 16.474892ms)
  Oct 21 13:48:38.432: INFO: (10) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 16.46856ms)
  Oct 21 13:48:38.433: INFO: (10) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 17.182965ms)
  Oct 21 13:48:38.433: INFO: (10) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 16.990811ms)
  Oct 21 13:48:38.439: INFO: (11) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 6.206221ms)
  Oct 21 13:48:38.441: INFO: (11) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 7.65404ms)
  Oct 21 13:48:38.441: INFO: (11) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 7.795055ms)
  Oct 21 13:48:38.443: INFO: (11) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 9.795369ms)
  Oct 21 13:48:38.445: INFO: (11) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 11.578426ms)
  Oct 21 13:48:38.445: INFO: (11) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 11.80018ms)
  Oct 21 13:48:38.445: INFO: (11) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 11.780244ms)
  Oct 21 13:48:38.445: INFO: (11) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 12.26588ms)
  Oct 21 13:48:38.445: INFO: (11) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 12.208192ms)
  Oct 21 13:48:38.445: INFO: (11) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 12.277278ms)
  Oct 21 13:48:38.446: INFO: (11) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 12.883589ms)
  Oct 21 13:48:38.447: INFO: (11) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 13.392078ms)
  Oct 21 13:48:38.447: INFO: (11) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 13.532952ms)
  Oct 21 13:48:38.447: INFO: (11) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 13.73247ms)
  Oct 21 13:48:38.447: INFO: (11) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 14.060344ms)
  Oct 21 13:48:38.448: INFO: (11) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 14.380883ms)
  Oct 21 13:48:38.452: INFO: (12) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 4.197531ms)
  Oct 21 13:48:38.453: INFO: (12) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 4.969741ms)
  Oct 21 13:48:38.455: INFO: (12) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 7.159327ms)
  Oct 21 13:48:38.455: INFO: (12) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 7.066342ms)
  Oct 21 13:48:38.458: INFO: (12) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 9.91863ms)
  Oct 21 13:48:38.458: INFO: (12) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 10.031528ms)
  Oct 21 13:48:38.458: INFO: (12) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 10.251636ms)
  Oct 21 13:48:38.458: INFO: (12) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 10.247687ms)
  Oct 21 13:48:38.458: INFO: (12) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 10.131542ms)
  Oct 21 13:48:38.458: INFO: (12) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 10.37429ms)
  Oct 21 13:48:38.459: INFO: (12) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 11.329861ms)
  Oct 21 13:48:38.459: INFO: (12) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 11.562882ms)
  Oct 21 13:48:38.460: INFO: (12) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 11.572052ms)
  Oct 21 13:48:38.460: INFO: (12) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 11.427789ms)
  Oct 21 13:48:38.460: INFO: (12) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 11.870002ms)
  Oct 21 13:48:38.460: INFO: (12) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 12.179326ms)
  Oct 21 13:48:38.469: INFO: (13) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 9.025218ms)
  Oct 21 13:48:38.470: INFO: (13) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 10.016487ms)
  Oct 21 13:48:38.471: INFO: (13) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 10.144056ms)
  Oct 21 13:48:38.471: INFO: (13) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 9.853785ms)
  Oct 21 13:48:38.471: INFO: (13) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 10.817972ms)
  Oct 21 13:48:38.471: INFO: (13) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 10.976085ms)
  Oct 21 13:48:38.472: INFO: (13) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 11.371121ms)
  Oct 21 13:48:38.472: INFO: (13) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 11.430646ms)
  Oct 21 13:48:38.472: INFO: (13) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 11.502505ms)
  Oct 21 13:48:38.472: INFO: (13) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 11.600088ms)
  Oct 21 13:48:38.473: INFO: (13) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 12.45038ms)
  Oct 21 13:48:38.473: INFO: (13) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 12.581699ms)
  Oct 21 13:48:38.473: INFO: (13) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 12.596457ms)
  Oct 21 13:48:38.473: INFO: (13) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 12.965628ms)
  Oct 21 13:48:38.473: INFO: (13) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 12.723986ms)
  Oct 21 13:48:38.474: INFO: (13) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 12.896507ms)
  Oct 21 13:48:38.478: INFO: (14) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 4.099065ms)
  Oct 21 13:48:38.479: INFO: (14) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 5.46603ms)
  Oct 21 13:48:38.481: INFO: (14) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 6.900517ms)
  Oct 21 13:48:38.482: INFO: (14) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 7.832541ms)
  Oct 21 13:48:38.482: INFO: (14) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 7.742442ms)
  Oct 21 13:48:38.483: INFO: (14) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 9.633596ms)
  Oct 21 13:48:38.483: INFO: (14) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 9.5424ms)
  Oct 21 13:48:38.483: INFO: (14) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 9.387447ms)
  Oct 21 13:48:38.483: INFO: (14) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 9.392359ms)
  Oct 21 13:48:38.486: INFO: (14) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 11.85414ms)
  Oct 21 13:48:38.486: INFO: (14) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 12.094872ms)
  Oct 21 13:48:38.486: INFO: (14) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 12.334995ms)
  Oct 21 13:48:38.486: INFO: (14) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 12.708219ms)
  Oct 21 13:48:38.486: INFO: (14) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 12.439691ms)
  Oct 21 13:48:38.487: INFO: (14) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 12.946554ms)
  Oct 21 13:48:38.488: INFO: (14) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 13.914052ms)
  Oct 21 13:48:38.493: INFO: (15) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 4.565511ms)
  Oct 21 13:48:38.494: INFO: (15) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 6.038847ms)
  Oct 21 13:48:38.495: INFO: (15) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 6.916902ms)
  Oct 21 13:48:38.495: INFO: (15) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 7.562511ms)
  Oct 21 13:48:38.495: INFO: (15) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 7.440153ms)
  Oct 21 13:48:38.495: INFO: (15) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 7.420212ms)
  Oct 21 13:48:38.496: INFO: (15) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 7.941079ms)
  Oct 21 13:48:38.497: INFO: (15) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 8.80261ms)
  Oct 21 13:48:38.497: INFO: (15) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 8.906605ms)
  Oct 21 13:48:38.497: INFO: (15) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 9.241748ms)
  Oct 21 13:48:38.497: INFO: (15) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 9.313393ms)
  Oct 21 13:48:38.498: INFO: (15) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 10.057719ms)
  Oct 21 13:48:38.498: INFO: (15) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 10.305578ms)
  Oct 21 13:48:38.502: INFO: (15) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 14.028704ms)
  Oct 21 13:48:38.503: INFO: (15) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 14.633493ms)
  Oct 21 13:48:38.503: INFO: (15) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 14.916949ms)
  Oct 21 13:48:38.507: INFO: (16) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 4.068977ms)
  Oct 21 13:48:38.509: INFO: (16) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 5.749604ms)
  Oct 21 13:48:38.510: INFO: (16) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 6.294584ms)
  Oct 21 13:48:38.510: INFO: (16) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 6.446246ms)
  Oct 21 13:48:38.510: INFO: (16) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 6.962362ms)
  Oct 21 13:48:38.511: INFO: (16) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 7.699168ms)
  Oct 21 13:48:38.511: INFO: (16) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 7.698948ms)
  Oct 21 13:48:38.512: INFO: (16) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 8.54141ms)
  Oct 21 13:48:38.512: INFO: (16) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 8.75488ms)
  Oct 21 13:48:38.512: INFO: (16) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 8.63337ms)
  Oct 21 13:48:38.512: INFO: (16) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 8.854621ms)
  Oct 21 13:48:38.512: INFO: (16) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 9.02618ms)
  Oct 21 13:48:38.513: INFO: (16) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 9.362422ms)
  Oct 21 13:48:38.513: INFO: (16) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 10.169813ms)
  Oct 21 13:48:38.514: INFO: (16) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 10.246577ms)
  Oct 21 13:48:38.514: INFO: (16) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 10.499386ms)
  Oct 21 13:48:38.523: INFO: (17) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 8.899692ms)
  Oct 21 13:48:38.524: INFO: (17) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 9.43828ms)
  Oct 21 13:48:38.525: INFO: (17) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 10.904212ms)
  Oct 21 13:48:38.525: INFO: (17) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 10.647946ms)
  Oct 21 13:48:38.526: INFO: (17) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 12.007428ms)
  Oct 21 13:48:38.526: INFO: (17) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 11.987992ms)
  Oct 21 13:48:38.526: INFO: (17) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 12.038878ms)
  Oct 21 13:48:38.526: INFO: (17) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 12.308074ms)
  Oct 21 13:48:38.527: INFO: (17) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 13.068497ms)
  Oct 21 13:48:38.527: INFO: (17) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 13.560817ms)
  Oct 21 13:48:38.528: INFO: (17) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 13.598494ms)
  Oct 21 13:48:38.528: INFO: (17) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 14.202743ms)
  Oct 21 13:48:38.528: INFO: (17) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 14.476735ms)
  Oct 21 13:48:38.529: INFO: (17) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 14.626828ms)
  Oct 21 13:48:38.529: INFO: (17) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 15.148986ms)
  Oct 21 13:48:38.530: INFO: (17) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 15.524714ms)
  Oct 21 13:48:38.535: INFO: (18) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 4.962357ms)
  Oct 21 13:48:38.535: INFO: (18) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 5.314026ms)
  Oct 21 13:48:38.536: INFO: (18) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 6.091851ms)
  Oct 21 13:48:38.537: INFO: (18) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 7.493682ms)
  Oct 21 13:48:38.537: INFO: (18) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 7.489518ms)
  Oct 21 13:48:38.538: INFO: (18) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 7.972578ms)
  Oct 21 13:48:38.539: INFO: (18) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 9.509766ms)
  Oct 21 13:48:38.539: INFO: (18) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 9.486764ms)
  Oct 21 13:48:38.539: INFO: (18) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 9.400587ms)
  Oct 21 13:48:38.539: INFO: (18) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 9.889365ms)
  Oct 21 13:48:38.540: INFO: (18) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 10.00324ms)
  Oct 21 13:48:38.541: INFO: (18) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 11.03411ms)
  Oct 21 13:48:38.541: INFO: (18) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 10.852238ms)
  Oct 21 13:48:38.541: INFO: (18) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 10.982671ms)
  Oct 21 13:48:38.541: INFO: (18) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 11.329236ms)
  Oct 21 13:48:38.542: INFO: (18) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 11.650208ms)
  Oct 21 13:48:38.549: INFO: (19) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">... (200; 7.031117ms)
  Oct 21 13:48:38.549: INFO: (19) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 7.193887ms)
  Oct 21 13:48:38.549: INFO: (19) /api/v1/namespaces/proxy-7527/pods/http:proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 7.410624ms)
  Oct 21 13:48:38.549: INFO: (19) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:1080/proxy/rewriteme">test<... (200; 7.499396ms)
  Oct 21 13:48:38.550: INFO: (19) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:460/proxy/: tls baz (200; 7.793812ms)
  Oct 21 13:48:38.550: INFO: (19) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:160/proxy/: foo (200; 8.074889ms)
  Oct 21 13:48:38.550: INFO: (19) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:462/proxy/: tls qux (200; 8.619903ms)
  Oct 21 13:48:38.551: INFO: (19) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname2/proxy/: bar (200; 9.061285ms)
  Oct 21 13:48:38.551: INFO: (19) /api/v1/namespaces/proxy-7527/services/proxy-service-lnxkm:portname1/proxy/: foo (200; 8.942432ms)
  Oct 21 13:48:38.551: INFO: (19) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname1/proxy/: foo (200; 9.477287ms)
  Oct 21 13:48:38.551: INFO: (19) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht:162/proxy/: bar (200; 9.630159ms)
  Oct 21 13:48:38.552: INFO: (19) /api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/proxy-service-lnxkm-gtdht/proxy/rewriteme">test</a> (200; 9.784625ms)
  Oct 21 13:48:38.552: INFO: (19) /api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/: <a href="/api/v1/namespaces/proxy-7527/pods/https:proxy-service-lnxkm-gtdht:443/proxy/tlsrewritem... (200; 9.785649ms)
  Oct 21 13:48:38.552: INFO: (19) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname2/proxy/: tls qux (200; 10.182554ms)
  Oct 21 13:48:38.552: INFO: (19) /api/v1/namespaces/proxy-7527/services/https:proxy-service-lnxkm:tlsportname1/proxy/: tls baz (200; 10.098302ms)
  Oct 21 13:48:38.552: INFO: (19) /api/v1/namespaces/proxy-7527/services/http:proxy-service-lnxkm:portname2/proxy/: bar (200; 9.92944ms)
  Oct 21 13:48:38.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-lnxkm in namespace proxy-7527, will wait for the garbage collector to delete the pods @ 10/21/23 13:48:38.556
  Oct 21 13:48:38.616: INFO: Deleting ReplicationController proxy-service-lnxkm took: 6.446858ms
  Oct 21 13:48:38.716: INFO: Terminating ReplicationController proxy-service-lnxkm pods took: 100.425706ms
  E1021 13:48:38.801934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:39.802453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:40.803048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-7527" for this suite. @ 10/21/23 13:48:41.217
• [5.015 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 10/21/23 13:48:41.224
  Oct 21 13:48:41.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:48:41.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:41.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:41.243
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/21/23 13:48:41.25
  Oct 21 13:48:41.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-1371 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Oct 21 13:48:41.305: INFO: stderr: ""
  Oct 21 13:48:41.305: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/21/23 13:48:41.305
  Oct 21 13:48:41.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-1371 delete pods e2e-test-httpd-pod'
  E1021 13:48:41.803141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:42.804197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:43.162: INFO: stderr: ""
  Oct 21 13:48:43.162: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 21 13:48:43.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1371" for this suite. @ 10/21/23 13:48:43.166
• [1.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 10/21/23 13:48:43.174
  Oct 21 13:48:43.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 13:48:43.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:43.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:43.192
  STEP: Creating a pod to test substitution in container's command @ 10/21/23 13:48:43.196
  E1021 13:48:43.804310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:44.804604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:45.804686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:46.804917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:48:47.217
  Oct 21 13:48:47.221: INFO: Trying to get logs from node ip-172-31-83-52 pod var-expansion-d92e0b1b-270c-4bdc-900b-54c8f98fee67 container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 13:48:47.229
  Oct 21 13:48:47.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9712" for this suite. @ 10/21/23 13:48:47.246
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 10/21/23 13:48:47.255
  Oct 21 13:48:47.255: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename podtemplate @ 10/21/23 13:48:47.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:47.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:47.274
  STEP: Create a pod template @ 10/21/23 13:48:47.276
  STEP: Replace a pod template @ 10/21/23 13:48:47.28
  Oct 21 13:48:47.288: INFO: Found updated podtemplate annotation: "true"

  Oct 21 13:48:47.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8343" for this suite. @ 10/21/23 13:48:47.291
• [0.042 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 10/21/23 13:48:47.297
  Oct 21 13:48:47.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:48:47.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:47.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:47.32
  STEP: creating a secret @ 10/21/23 13:48:47.323
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/21/23 13:48:47.327
  STEP: patching the secret @ 10/21/23 13:48:47.329
  STEP: deleting the secret using a LabelSelector @ 10/21/23 13:48:47.336
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/21/23 13:48:47.342
  Oct 21 13:48:47.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2826" for this suite. @ 10/21/23 13:48:47.348
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 10/21/23 13:48:47.355
  Oct 21 13:48:47.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:48:47.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:47.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:47.37
  STEP: Creating a ResourceQuota @ 10/21/23 13:48:47.376
  STEP: Getting a ResourceQuota @ 10/21/23 13:48:47.381
  STEP: Updating a ResourceQuota @ 10/21/23 13:48:47.385
  STEP: Verifying a ResourceQuota was modified @ 10/21/23 13:48:47.39
  STEP: Deleting a ResourceQuota @ 10/21/23 13:48:47.395
  STEP: Verifying the deleted ResourceQuota @ 10/21/23 13:48:47.401
  Oct 21 13:48:47.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9322" for this suite. @ 10/21/23 13:48:47.406
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 10/21/23 13:48:47.413
  Oct 21 13:48:47.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/21/23 13:48:47.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:47.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:47.43
  Oct 21 13:48:47.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:48:47.805783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/21/23 13:48:48.732
  Oct 21 13:48:48.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-8373 --namespace=crd-publish-openapi-8373 create -f -'
  E1021 13:48:48.805878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:49.178: INFO: stderr: ""
  Oct 21 13:48:49.178: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct 21 13:48:49.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-8373 --namespace=crd-publish-openapi-8373 delete e2e-test-crd-publish-openapi-4303-crds test-cr'
  Oct 21 13:48:49.244: INFO: stderr: ""
  Oct 21 13:48:49.244: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Oct 21 13:48:49.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-8373 --namespace=crd-publish-openapi-8373 apply -f -'
  Oct 21 13:48:49.354: INFO: stderr: ""
  Oct 21 13:48:49.354: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct 21 13:48:49.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-8373 --namespace=crd-publish-openapi-8373 delete e2e-test-crd-publish-openapi-4303-crds test-cr'
  Oct 21 13:48:49.405: INFO: stderr: ""
  Oct 21 13:48:49.405: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/21/23 13:48:49.405
  Oct 21 13:48:49.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=crd-publish-openapi-8373 explain e2e-test-crd-publish-openapi-4303-crds'
  Oct 21 13:48:49.652: INFO: stderr: ""
  Oct 21 13:48:49.652: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4303-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1021 13:48:49.806114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:50.807155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:50.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8373" for this suite. @ 10/21/23 13:48:50.888
• [3.483 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 10/21/23 13:48:50.896
  Oct 21 13:48:50.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:48:50.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:50.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:50.915
  STEP: Creating the pod @ 10/21/23 13:48:50.918
  E1021 13:48:51.807290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:52.807372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:53.457: INFO: Successfully updated pod "annotationupdate06402daf-6ad9-4503-b2ee-c5055294392b"
  E1021 13:48:53.807962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:54.808148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:48:55.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1755" for this suite. @ 10/21/23 13:48:55.473
• [4.583 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 10/21/23 13:48:55.479
  Oct 21 13:48:55.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:48:55.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:55.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:55.497
  STEP: Creating Pod @ 10/21/23 13:48:55.501
  E1021 13:48:55.808238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:56.808498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 10/21/23 13:48:57.518
  Oct 21 13:48:57.518: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7779 PodName:pod-sharedvolume-fa9bd68b-0f3f-4f88-983d-193d69afd289 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:48:57.518: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:48:57.519: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:48:57.519: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-7779/pods/pod-sharedvolume-fa9bd68b-0f3f-4f88-983d-193d69afd289/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Oct 21 13:48:57.595: INFO: Exec stderr: ""
  Oct 21 13:48:57.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7779" for this suite. @ 10/21/23 13:48:57.6
• [2.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 10/21/23 13:48:57.612
  Oct 21 13:48:57.612: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename emptydir @ 10/21/23 13:48:57.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:48:57.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:48:57.629
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/21/23 13:48:57.634
  E1021 13:48:57.808853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:58.809837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:48:59.810807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:00.810893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:49:01.653
  Oct 21 13:49:01.656: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-df6b9e2a-e7b9-4725-8607-04b5b88d463d container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:49:01.662
  Oct 21 13:49:01.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8003" for this suite. @ 10/21/23 13:49:01.677
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 10/21/23 13:49:01.684
  Oct 21 13:49:01.684: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:49:01.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:01.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:01.703
  STEP: Creating configMap with name configmap-test-volume-727e0d46-221c-4a7d-bb08-83622d16ff24 @ 10/21/23 13:49:01.705
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:49:01.709
  E1021 13:49:01.811261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:02.811366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:03.811815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:04.812168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:49:05.73
  Oct 21 13:49:05.732: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-9462997e-786e-48fb-a415-a3e7892ce3eb container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:49:05.738
  Oct 21 13:49:05.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5692" for this suite. @ 10/21/23 13:49:05.758
• [4.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 10/21/23 13:49:05.766
  Oct 21 13:49:05.766: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:49:05.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:05.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:05.786
  E1021 13:49:05.812127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 10/21/23 13:49:05.813
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:49:06.032
  STEP: Deploying the webhook pod @ 10/21/23 13:49:06.038
  STEP: Wait for the deployment to be ready @ 10/21/23 13:49:06.06
  Oct 21 13:49:06.071: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:49:06.812565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:07.812734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:49:08.081
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:49:08.096
  E1021 13:49:08.813769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:49:09.097: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 21 13:49:09.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6014-crds.webhook.example.com via the AdmissionRegistration API @ 10/21/23 13:49:09.614
  STEP: Creating a custom resource while v1 is storage version @ 10/21/23 13:49:09.628
  E1021 13:49:09.814727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:10.814852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/21/23 13:49:11.666
  STEP: Patching the custom resource while v2 is storage version @ 10/21/23 13:49:11.679
  Oct 21 13:49:11.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1021 13:49:11.814939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-5510" for this suite. @ 10/21/23 13:49:12.281
  STEP: Destroying namespace "webhook-markers-3154" for this suite. @ 10/21/23 13:49:12.286
• [6.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/21/23 13:49:12.294
  Oct 21 13:49:12.294: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/21/23 13:49:12.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:12.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:12.312
  STEP: creating a target pod @ 10/21/23 13:49:12.315
  E1021 13:49:12.815058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:13.815163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/21/23 13:49:14.335
  E1021 13:49:14.816154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:15.816224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/21/23 13:49:16.349
  Oct 21 13:49:16.349: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2309 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 21 13:49:16.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:49:16.350: INFO: ExecWithOptions: Clientset creation
  Oct 21 13:49:16.350: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2309/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Oct 21 13:49:16.422: INFO: Exec stderr: ""
  Oct 21 13:49:16.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2309" for this suite. @ 10/21/23 13:49:16.432
• [4.145 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 10/21/23 13:49:16.439
  Oct 21 13:49:16.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:49:16.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:16.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:16.457
  STEP: Setting up server cert @ 10/21/23 13:49:16.485
  E1021 13:49:16.816991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:49:16.844
  STEP: Deploying the webhook pod @ 10/21/23 13:49:16.85
  STEP: Wait for the deployment to be ready @ 10/21/23 13:49:16.863
  Oct 21 13:49:16.874: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:49:17.817861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:18.817958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:49:18.887
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:49:18.907
  E1021 13:49:19.818660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:49:19.908: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/21/23 13:49:19.915
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/21/23 13:49:19.917
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/21/23 13:49:19.917
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/21/23 13:49:19.917
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/21/23 13:49:19.918
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/21/23 13:49:19.918
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/21/23 13:49:19.919
  Oct 21 13:49:19.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5368" for this suite. @ 10/21/23 13:49:19.958
  STEP: Destroying namespace "webhook-markers-5787" for this suite. @ 10/21/23 13:49:19.967
• [3.535 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 10/21/23 13:49:19.976
  Oct 21 13:49:19.976: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename runtimeclass @ 10/21/23 13:49:19.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:19.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:19.993
  E1021 13:49:20.819409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:21.819581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:49:22.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3420" for this suite. @ 10/21/23 13:49:22.03
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 10/21/23 13:49:22.038
  Oct 21 13:49:22.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:49:22.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:22.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:22.055
  STEP: Creating configMap configmap-5747/configmap-test-aa9f754d-479c-4126-a905-84b0e6926980 @ 10/21/23 13:49:22.058
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:49:22.062
  E1021 13:49:22.819676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:23.819992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:24.820512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:25.820789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:49:26.08
  Oct 21 13:49:26.083: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-dc664d6b-1b8a-47a8-8eba-3b394ac51469 container env-test: <nil>
  STEP: delete the pod @ 10/21/23 13:49:26.088
  Oct 21 13:49:26.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5747" for this suite. @ 10/21/23 13:49:26.107
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 10/21/23 13:49:26.115
  Oct 21 13:49:26.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename namespaces @ 10/21/23 13:49:26.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:26.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:26.131
  STEP: Updating Namespace "namespaces-7151" @ 10/21/23 13:49:26.135
  Oct 21 13:49:26.142: INFO: Namespace "namespaces-7151" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"7d7a92f8-d48a-4491-a070-3e4a900a55a3", "kubernetes.io/metadata.name":"namespaces-7151", "namespaces-7151":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Oct 21 13:49:26.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7151" for this suite. @ 10/21/23 13:49:26.146
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 10/21/23 13:49:26.152
  Oct 21 13:49:26.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:49:26.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:26.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:26.171
  STEP: Creating configMap with name configmap-test-volume-dc35ea6f-e4af-4770-9960-1ab672acfbbf @ 10/21/23 13:49:26.174
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:49:26.178
  E1021 13:49:26.820832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:27.820907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:28.821234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:29.821381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:49:30.198
  Oct 21 13:49:30.201: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-68ed68da-a0ea-4fa8-b114-b19dad74092c container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 13:49:30.207
  Oct 21 13:49:30.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1762" for this suite. @ 10/21/23 13:49:30.226
• [4.080 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/21/23 13:49:30.232
  Oct 21 13:49:30.232: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename watch @ 10/21/23 13:49:30.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:30.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:30.25
  STEP: creating a watch on configmaps with a certain label @ 10/21/23 13:49:30.253
  STEP: creating a new configmap @ 10/21/23 13:49:30.255
  STEP: modifying the configmap once @ 10/21/23 13:49:30.26
  STEP: changing the label value of the configmap @ 10/21/23 13:49:30.266
  STEP: Expecting to observe a delete notification for the watched object @ 10/21/23 13:49:30.273
  Oct 21 13:49:30.273: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3626  19bee941-c9e5-47a1-9c31-b7a4f169de4d 38692 0 2023-10-21 13:49:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-21 13:49:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 13:49:30.273: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3626  19bee941-c9e5-47a1-9c31-b7a4f169de4d 38693 0 2023-10-21 13:49:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-21 13:49:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 13:49:30.273: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3626  19bee941-c9e5-47a1-9c31-b7a4f169de4d 38694 0 2023-10-21 13:49:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-21 13:49:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/21/23 13:49:30.273
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/21/23 13:49:30.283
  E1021 13:49:30.822266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:31.822388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:32.822429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:33.823442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:34.824441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:35.824564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:36.824636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:37.824981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:38.825068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:39.825225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 10/21/23 13:49:40.283
  STEP: modifying the configmap a third time @ 10/21/23 13:49:40.295
  STEP: deleting the configmap @ 10/21/23 13:49:40.301
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/21/23 13:49:40.307
  Oct 21 13:49:40.307: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3626  19bee941-c9e5-47a1-9c31-b7a4f169de4d 38746 0 2023-10-21 13:49:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-21 13:49:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 13:49:40.307: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3626  19bee941-c9e5-47a1-9c31-b7a4f169de4d 38747 0 2023-10-21 13:49:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-21 13:49:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 13:49:40.307: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3626  19bee941-c9e5-47a1-9c31-b7a4f169de4d 38748 0 2023-10-21 13:49:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-21 13:49:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 21 13:49:40.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3626" for this suite. @ 10/21/23 13:49:40.311
• [10.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/21/23 13:49:40.319
  Oct 21 13:49:40.319: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/21/23 13:49:40.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:40.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:40.34
  STEP: creating @ 10/21/23 13:49:40.343
  STEP: getting @ 10/21/23 13:49:40.36
  STEP: listing in namespace @ 10/21/23 13:49:40.367
  STEP: patching @ 10/21/23 13:49:40.37
  STEP: deleting @ 10/21/23 13:49:40.385
  Oct 21 13:49:40.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7131" for this suite. @ 10/21/23 13:49:40.399
• [0.086 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 10/21/23 13:49:40.405
  Oct 21 13:49:40.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:49:40.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:40.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:40.429
  STEP: Setting up server cert @ 10/21/23 13:49:40.456
  E1021 13:49:40.825941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:49:40.855
  STEP: Deploying the webhook pod @ 10/21/23 13:49:40.862
  STEP: Wait for the deployment to be ready @ 10/21/23 13:49:40.873
  Oct 21 13:49:40.880: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:49:41.826426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:42.827431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:49:42.891
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:49:42.899
  E1021 13:49:43.827614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:49:43.899: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/21/23 13:49:43.906
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/21/23 13:49:43.92
  Oct 21 13:49:43.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  Oct 21 13:49:43.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2648" for this suite. @ 10/21/23 13:49:43.98
  STEP: Destroying namespace "webhook-markers-90" for this suite. @ 10/21/23 13:49:43.985
• [3.587 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 10/21/23 13:49:43.992
  Oct 21 13:49:43.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svcaccounts @ 10/21/23 13:49:43.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:44.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:44.007
  STEP: creating a ServiceAccount @ 10/21/23 13:49:44.011
  STEP: watching for the ServiceAccount to be added @ 10/21/23 13:49:44.02
  STEP: patching the ServiceAccount @ 10/21/23 13:49:44.023
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/21/23 13:49:44.027
  STEP: deleting the ServiceAccount @ 10/21/23 13:49:44.03
  Oct 21 13:49:44.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5881" for this suite. @ 10/21/23 13:49:44.047
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/21/23 13:49:44.055
  Oct 21 13:49:44.055: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:49:44.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:44.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:44.075
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:49:44.078
  E1021 13:49:44.827716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:45.827805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:46.827971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:47.828138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:49:48.098
  Oct 21 13:49:48.101: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-5f7f01a4-508a-4098-8611-c37d06eeb36d container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:49:48.107
  Oct 21 13:49:48.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6644" for this suite. @ 10/21/23 13:49:48.128
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 10/21/23 13:49:48.134
  Oct 21 13:49:48.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:49:48.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:48.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:48.155
  STEP: Creating configMap with name projected-configmap-test-volume-4308d087-6b08-4b16-ad63-f7a31a535ca0 @ 10/21/23 13:49:48.158
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:49:48.165
  E1021 13:49:48.828854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:49.828940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:50.828986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:51.829071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:49:52.19
  Oct 21 13:49:52.193: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-configmaps-200b5c83-6914-4b28-a8f5-473ee786f191 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 13:49:52.199
  Oct 21 13:49:52.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2118" for this suite. @ 10/21/23 13:49:52.216
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 10/21/23 13:49:52.222
  Oct 21 13:49:52.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:49:52.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:52.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:52.24
  STEP: validating api versions @ 10/21/23 13:49:52.245
  Oct 21 13:49:52.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-5896 api-versions'
  Oct 21 13:49:52.295: INFO: stderr: ""
  Oct 21 13:49:52.295: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Oct 21 13:49:52.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5896" for this suite. @ 10/21/23 13:49:52.299
• [0.084 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 10/21/23 13:49:52.306
  Oct 21 13:49:52.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 13:49:52.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:52.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:52.417
  STEP: Creating a test headless service @ 10/21/23 13:49:52.42
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6975.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6975.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/21/23 13:49:52.426
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6975.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6975.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/21/23 13:49:52.426
  STEP: creating a pod to probe DNS @ 10/21/23 13:49:52.426
  STEP: submitting the pod to kubernetes @ 10/21/23 13:49:52.426
  E1021 13:49:52.830002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:53.830272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/21/23 13:49:54.448
  STEP: looking for the results for each expected name from probers @ 10/21/23 13:49:54.451
  Oct 21 13:49:54.463: INFO: DNS probes using dns-6975/dns-test-c9ab9c9c-e11c-47c8-8044-586950cd3de8 succeeded

  Oct 21 13:49:54.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:49:54.467
  STEP: deleting the test headless service @ 10/21/23 13:49:54.48
  STEP: Destroying namespace "dns-6975" for this suite. @ 10/21/23 13:49:54.494
• [2.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 10/21/23 13:49:54.501
  Oct 21 13:49:54.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:49:54.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:49:54.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:49:54.519
  STEP: Setting up server cert @ 10/21/23 13:49:54.539
  E1021 13:49:54.830867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:49:54.934
  STEP: Deploying the webhook pod @ 10/21/23 13:49:54.939
  STEP: Wait for the deployment to be ready @ 10/21/23 13:49:54.949
  Oct 21 13:49:54.956: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:49:55.831221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:56.831249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:49:56.967: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 21, 13, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 49, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 21, 13, 49, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 21, 13, 49, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1021 13:49:57.831420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:49:58.832392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:49:58.972
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:49:58.986
  E1021 13:49:59.832782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:49:59.987: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/21/23 13:50:00.051
  STEP: Creating a configMap that should be mutated @ 10/21/23 13:50:00.061
  STEP: Deleting the collection of validation webhooks @ 10/21/23 13:50:00.083
  STEP: Creating a configMap that should not be mutated @ 10/21/23 13:50:00.123
  Oct 21 13:50:00.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1970" for this suite. @ 10/21/23 13:50:00.172
  STEP: Destroying namespace "webhook-markers-613" for this suite. @ 10/21/23 13:50:00.179
• [5.686 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/21/23 13:50:00.188
  Oct 21 13:50:00.188: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename init-container @ 10/21/23 13:50:00.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:00.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:00.21
  STEP: creating the pod @ 10/21/23 13:50:00.214
  Oct 21 13:50:00.214: INFO: PodSpec: initContainers in spec.initContainers
  E1021 13:50:00.833322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:01.833929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:02.834554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:03.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4648" for this suite. @ 10/21/23 13:50:03.341
• [3.160 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 10/21/23 13:50:03.348
  Oct 21 13:50:03.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replicaset @ 10/21/23 13:50:03.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:03.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:03.369
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/21/23 13:50:03.373
  Oct 21 13:50:03.383: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1021 13:50:03.835459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:04.835618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:05.835716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:06.835785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:07.835872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:08.387: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/21/23 13:50:08.387
  STEP: getting scale subresource @ 10/21/23 13:50:08.387
  STEP: updating a scale subresource @ 10/21/23 13:50:08.391
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/21/23 13:50:08.398
  STEP: Patch a scale subresource @ 10/21/23 13:50:08.401
  Oct 21 13:50:08.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5044" for this suite. @ 10/21/23 13:50:08.416
• [5.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/21/23 13:50:08.427
  Oct 21 13:50:08.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename subjectreview @ 10/21/23 13:50:08.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:08.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:08.446
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9893" @ 10/21/23 13:50:08.449
  Oct 21 13:50:08.454: INFO: saUsername: "system:serviceaccount:subjectreview-9893:e2e"
  Oct 21 13:50:08.454: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9893"}
  Oct 21 13:50:08.454: INFO: saUID: "049d893e-b6f9-4de8-9898-d48b7e04431e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9893:e2e" @ 10/21/23 13:50:08.454
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9893:e2e" @ 10/21/23 13:50:08.455
  Oct 21 13:50:08.456: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9893:e2e" api 'list' configmaps in "subjectreview-9893" namespace @ 10/21/23 13:50:08.456
  Oct 21 13:50:08.459: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9893:e2e" @ 10/21/23 13:50:08.459
  Oct 21 13:50:08.460: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Oct 21 13:50:08.460: INFO: LocalSubjectAccessReview has been verified
  Oct 21 13:50:08.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9893" for this suite. @ 10/21/23 13:50:08.463
• [0.043 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 10/21/23 13:50:08.47
  Oct 21 13:50:08.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-pred @ 10/21/23 13:50:08.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:08.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:08.492
  Oct 21 13:50:08.499: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 21 13:50:08.507: INFO: Waiting for terminating namespaces to be deleted...
  Oct 21 13:50:08.511: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-152 before test
  Oct 21 13:50:08.517: INFO: nginx-ingress-controller-kubernetes-worker-pgmxk from ingress-nginx-kubernetes-worker started at 2023-10-21 12:15:53 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.517: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:50:08.517: INFO: calico-node-pdjzp from kube-system started at 2023-10-21 12:14:46 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.517: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:50:08.517: INFO: test-rs-bsvjq from replicaset-5044 started at 2023-10-21 13:50:03 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.517: INFO: 	Container httpd ready: true, restart count 0
  Oct 21 13:50:08.517: INFO: sonobuoy-e2e-job-dc9fd44093224134 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:50:08.517: INFO: 	Container e2e ready: true, restart count 0
  Oct 21 13:50:08.517: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:50:08.517: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-bqx4f from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:50:08.517: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:50:08.517: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 13:50:08.517: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-65-2 before test
  Oct 21 13:50:08.523: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvf5j from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: nginx-ingress-controller-kubernetes-worker-sf86b from ingress-nginx-kubernetes-worker started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: calico-node-lttm5 from kube-system started at 2023-10-21 12:12:23 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: coredns-59cfb5bf46-4s8zg from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container coredns ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: kube-state-metrics-775d9f4f79-qbqgv from kube-system started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: metrics-server-v0.6.3-69d7fbfdf8-n4sg7 from kube-system started at 2023-10-21 12:12:56 +0000 UTC (2 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: dashboard-metrics-scraper-5dd7cb5fc-gpj8d from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: kubernetes-dashboard-7b899cb9d9-2dfs9 from kubernetes-dashboard started at 2023-10-21 12:12:56 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-st954 from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:50:08.523: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 21 13:50:08.523: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-83-52 before test
  Oct 21 13:50:08.529: INFO: nginx-ingress-controller-kubernetes-worker-dm7f9 from ingress-nginx-kubernetes-worker started at 2023-10-21 13:45:20 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.529: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 21 13:50:08.529: INFO: pod-init-d421831c-f193-4b2e-97a6-16c1ef0a1c13 from init-container-4648 started at 2023-10-21 13:50:00 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.529: INFO: 	Container run1 ready: true, restart count 0
  Oct 21 13:50:08.529: INFO: calico-node-dfp9j from kube-system started at 2023-10-21 12:14:49 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.529: INFO: 	Container calico-node ready: true, restart count 0
  Oct 21 13:50:08.529: INFO: test-rs-9sqxj from replicaset-5044 started at 2023-10-21 13:50:08 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.529: INFO: 	Container httpd ready: false, restart count 0
  Oct 21 13:50:08.529: INFO: sonobuoy from sonobuoy started at 2023-10-21 12:21:43 +0000 UTC (1 container statuses recorded)
  Oct 21 13:50:08.529: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 21 13:50:08.529: INFO: sonobuoy-systemd-logs-daemon-set-497088b1692046a9-sq7tr from sonobuoy started at 2023-10-21 12:21:45 +0000 UTC (2 container statuses recorded)
  Oct 21 13:50:08.529: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 21 13:50:08.529: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/21/23 13:50:08.529
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1790239b181fc362], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 10/21/23 13:50:08.559
  E1021 13:50:08.836538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:09.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-416" for this suite. @ 10/21/23 13:50:09.559
• [1.097 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 10/21/23 13:50:09.567
  Oct 21 13:50:09.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename limitrange @ 10/21/23 13:50:09.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:09.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:09.582
  STEP: Creating LimitRange "e2e-limitrange-j2444" in namespace "limitrange-6675" @ 10/21/23 13:50:09.584
  STEP: Creating another limitRange in another namespace @ 10/21/23 13:50:09.589
  Oct 21 13:50:09.600: INFO: Namespace "e2e-limitrange-j2444-1322" created
  Oct 21 13:50:09.600: INFO: Creating LimitRange "e2e-limitrange-j2444" in namespace "e2e-limitrange-j2444-1322"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-j2444" @ 10/21/23 13:50:09.605
  Oct 21 13:50:09.608: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-j2444" in "limitrange-6675" namespace @ 10/21/23 13:50:09.608
  Oct 21 13:50:09.615: INFO: LimitRange "e2e-limitrange-j2444" has been patched
  STEP: Delete LimitRange "e2e-limitrange-j2444" by Collection with labelSelector: "e2e-limitrange-j2444=patched" @ 10/21/23 13:50:09.615
  STEP: Confirm that the limitRange "e2e-limitrange-j2444" has been deleted @ 10/21/23 13:50:09.622
  Oct 21 13:50:09.622: INFO: Requesting list of LimitRange to confirm quantity
  Oct 21 13:50:09.624: INFO: Found 0 LimitRange with label "e2e-limitrange-j2444=patched"
  Oct 21 13:50:09.624: INFO: LimitRange "e2e-limitrange-j2444" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-j2444" @ 10/21/23 13:50:09.624
  Oct 21 13:50:09.627: INFO: Found 1 limitRange
  Oct 21 13:50:09.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6675" for this suite. @ 10/21/23 13:50:09.63
  STEP: Destroying namespace "e2e-limitrange-j2444-1322" for this suite. @ 10/21/23 13:50:09.635
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 10/21/23 13:50:09.644
  Oct 21 13:50:09.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename dns @ 10/21/23 13:50:09.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:09.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:09.659
  STEP: Creating a test headless service @ 10/21/23 13:50:09.662
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1934.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1934.svc.cluster.local;sleep 1; done
   @ 10/21/23 13:50:09.667
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1934.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1934.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1934.svc.cluster.local;sleep 1; done
   @ 10/21/23 13:50:09.667
  STEP: creating a pod to probe DNS @ 10/21/23 13:50:09.667
  STEP: submitting the pod to kubernetes @ 10/21/23 13:50:09.667
  E1021 13:50:09.836836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:10.836940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/21/23 13:50:11.684
  STEP: looking for the results for each expected name from probers @ 10/21/23 13:50:11.687
  Oct 21 13:50:11.691: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.694: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.697: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.700: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.702: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.705: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.708: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.711: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1934.svc.cluster.local from pod dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8: the server could not find the requested resource (get pods dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8)
  Oct 21 13:50:11.711: INFO: Lookups using dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1934.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1934.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1934.svc.cluster.local jessie_udp@dns-test-service-2.dns-1934.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1934.svc.cluster.local]

  Oct 21 13:50:11.716: INFO: Pod client logs for webserver: 
  Oct 21 13:50:11.721: INFO: Pod client logs for querier: 
  Oct 21 13:50:11.726: INFO: Pod client logs for jessie-querier: 
  E1021 13:50:11.837947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:12.838027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:13.838124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:14.839009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:15.839084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:16.753: INFO: DNS probes using dns-1934/dns-test-8c59dc58-51cd-4977-a2c9-40c5e4850be8 succeeded

  Oct 21 13:50:16.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:50:16.757
  STEP: deleting the test headless service @ 10/21/23 13:50:16.768
  STEP: Destroying namespace "dns-1934" for this suite. @ 10/21/23 13:50:16.781
• [7.144 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 10/21/23 13:50:16.788
  Oct 21 13:50:16.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename runtimeclass @ 10/21/23 13:50:16.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:16.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:16.806
  STEP: getting /apis @ 10/21/23 13:50:16.809
  STEP: getting /apis/node.k8s.io @ 10/21/23 13:50:16.812
  STEP: getting /apis/node.k8s.io/v1 @ 10/21/23 13:50:16.814
  STEP: creating @ 10/21/23 13:50:16.815
  STEP: watching @ 10/21/23 13:50:16.827
  Oct 21 13:50:16.827: INFO: starting watch
  STEP: getting @ 10/21/23 13:50:16.832
  STEP: listing @ 10/21/23 13:50:16.834
  STEP: patching @ 10/21/23 13:50:16.837
  E1021 13:50:16.839956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating @ 10/21/23 13:50:16.842
  Oct 21 13:50:16.846: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 10/21/23 13:50:16.846
  STEP: deleting a collection @ 10/21/23 13:50:16.856
  Oct 21 13:50:16.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1413" for this suite. @ 10/21/23 13:50:16.872
• [0.090 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 10/21/23 13:50:16.878
  Oct 21 13:50:16.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:50:16.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:16.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:16.895
  STEP: creating the pod @ 10/21/23 13:50:16.9
  Oct 21 13:50:16.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 create -f -'
  Oct 21 13:50:17.239: INFO: stderr: ""
  Oct 21 13:50:17.240: INFO: stdout: "pod/pause created\n"
  E1021 13:50:17.840099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:18.840195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/21/23 13:50:19.247
  Oct 21 13:50:19.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 label pods pause testing-label=testing-label-value'
  Oct 21 13:50:19.302: INFO: stderr: ""
  Oct 21 13:50:19.302: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/21/23 13:50:19.302
  Oct 21 13:50:19.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 get pod pause -L testing-label'
  Oct 21 13:50:19.349: INFO: stderr: ""
  Oct 21 13:50:19.349: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/21/23 13:50:19.349
  Oct 21 13:50:19.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 label pods pause testing-label-'
  Oct 21 13:50:19.404: INFO: stderr: ""
  Oct 21 13:50:19.404: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/21/23 13:50:19.404
  Oct 21 13:50:19.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 get pod pause -L testing-label'
  Oct 21 13:50:19.449: INFO: stderr: ""
  Oct 21 13:50:19.449: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/21/23 13:50:19.449
  Oct 21 13:50:19.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 delete --grace-period=0 --force -f -'
  Oct 21 13:50:19.505: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 21 13:50:19.505: INFO: stdout: "pod \"pause\" force deleted\n"
  Oct 21 13:50:19.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 get rc,svc -l name=pause --no-headers'
  Oct 21 13:50:19.557: INFO: stderr: "No resources found in kubectl-3379 namespace.\n"
  Oct 21 13:50:19.557: INFO: stdout: ""
  Oct 21 13:50:19.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-3379 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 21 13:50:19.602: INFO: stderr: ""
  Oct 21 13:50:19.602: INFO: stdout: ""
  Oct 21 13:50:19.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3379" for this suite. @ 10/21/23 13:50:19.606
• [2.733 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/21/23 13:50:19.611
  Oct 21 13:50:19.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:50:19.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:19.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:19.629
  STEP: Creating configMap with name configmap-projected-all-test-volume-db6f5c7c-4393-4a84-9844-9eb779b61463 @ 10/21/23 13:50:19.632
  STEP: Creating secret with name secret-projected-all-test-volume-8979f3c5-cfc7-4c32-ab9c-f77088401700 @ 10/21/23 13:50:19.636
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/21/23 13:50:19.64
  E1021 13:50:19.840976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:20.841154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:21.842236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:22.842653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:50:23.663
  Oct 21 13:50:23.666: INFO: Trying to get logs from node ip-172-31-83-52 pod projected-volume-d0b2dc1a-52f1-4878-89a9-a68eb03b4f33 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:50:23.671
  Oct 21 13:50:23.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4216" for this suite. @ 10/21/23 13:50:23.69
• [4.085 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 10/21/23 13:50:23.696
  Oct 21 13:50:23.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:50:23.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:23.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:23.721
  STEP: Setting up server cert @ 10/21/23 13:50:23.753
  E1021 13:50:23.842907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:50:24.011
  STEP: Deploying the webhook pod @ 10/21/23 13:50:24.019
  STEP: Wait for the deployment to be ready @ 10/21/23 13:50:24.03
  Oct 21 13:50:24.036: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:50:24.843250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:25.843459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:50:26.047
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:50:26.061
  E1021 13:50:26.843563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:27.061: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 21 13:50:27.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/21/23 13:50:27.579
  STEP: Creating a custom resource that should be denied by the webhook @ 10/21/23 13:50:27.592
  E1021 13:50:27.844264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:28.844360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/21/23 13:50:29.613
  STEP: Updating the custom resource with disallowed data should be denied @ 10/21/23 13:50:29.618
  STEP: Deleting the custom resource should be denied @ 10/21/23 13:50:29.625
  STEP: Remove the offending key and value from the custom resource data @ 10/21/23 13:50:29.631
  STEP: Deleting the updated custom resource should be successful @ 10/21/23 13:50:29.639
  Oct 21 13:50:29.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1021 13:50:29.844394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3215" for this suite. @ 10/21/23 13:50:30.213
  STEP: Destroying namespace "webhook-markers-6598" for this suite. @ 10/21/23 13:50:30.219
• [6.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 10/21/23 13:50:30.23
  Oct 21 13:50:30.231: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename security-context @ 10/21/23 13:50:30.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:30.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:30.251
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/21/23 13:50:30.254
  E1021 13:50:30.844467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:31.844558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:32.845000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:33.845201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:50:34.274
  Oct 21 13:50:34.277: INFO: Trying to get logs from node ip-172-31-83-52 pod security-context-923c9035-20db-45be-85ea-b03c485b4d3a container test-container: <nil>
  STEP: delete the pod @ 10/21/23 13:50:34.283
  Oct 21 13:50:34.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2545" for this suite. @ 10/21/23 13:50:34.301
• [4.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 10/21/23 13:50:34.307
  Oct 21 13:50:34.307: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:50:34.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:34.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:34.325
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:50:34.33
  E1021 13:50:34.845833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:35.845908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:36.846365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:37.846454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:50:38.354
  Oct 21 13:50:38.357: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-d0b0ed53-24d2-4231-8c1f-49758a7caf42 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:50:38.362
  Oct 21 13:50:38.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4527" for this suite. @ 10/21/23 13:50:38.38
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/21/23 13:50:38.386
  Oct 21 13:50:38.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-runtime @ 10/21/23 13:50:38.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:38.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:38.403
  STEP: create the container @ 10/21/23 13:50:38.406
  W1021 13:50:38.413747      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/21/23 13:50:38.413
  E1021 13:50:38.847227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:39.847258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:40.848107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/21/23 13:50:41.428
  STEP: the container should be terminated @ 10/21/23 13:50:41.431
  STEP: the termination message should be set @ 10/21/23 13:50:41.431
  Oct 21 13:50:41.431: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/21/23 13:50:41.431
  Oct 21 13:50:41.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9440" for this suite. @ 10/21/23 13:50:41.448
• [3.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 10/21/23 13:50:41.455
  Oct 21 13:50:41.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename lease-test @ 10/21/23 13:50:41.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:41.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:41.491
  Oct 21 13:50:41.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1441" for this suite. @ 10/21/23 13:50:41.546
• [0.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 10/21/23 13:50:41.552
  Oct 21 13:50:41.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 13:50:41.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:41.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:41.57
  STEP: Creating a pod to test env composition @ 10/21/23 13:50:41.573
  E1021 13:50:41.848477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:42.848579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:43.849268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:44.849443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:50:45.591
  Oct 21 13:50:45.593: INFO: Trying to get logs from node ip-172-31-83-52 pod var-expansion-cc9d453f-51cd-47bd-907a-a22fe1bc94e4 container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 13:50:45.6
  Oct 21 13:50:45.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7250" for this suite. @ 10/21/23 13:50:45.618
• [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 10/21/23 13:50:45.625
  Oct 21 13:50:45.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename server-version @ 10/21/23 13:50:45.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:45.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:45.643
  STEP: Request ServerVersion @ 10/21/23 13:50:45.646
  STEP: Confirm major version @ 10/21/23 13:50:45.647
  Oct 21 13:50:45.647: INFO: Major version: 1
  STEP: Confirm minor version @ 10/21/23 13:50:45.647
  Oct 21 13:50:45.647: INFO: cleanMinorVersion: 28
  Oct 21 13:50:45.647: INFO: Minor version: 28
  Oct 21 13:50:45.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7879" for this suite. @ 10/21/23 13:50:45.65
• [0.032 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 10/21/23 13:50:45.657
  Oct 21 13:50:45.657: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:50:45.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:45.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:45.678
  STEP: Creating a ResourceQuota @ 10/21/23 13:50:45.681
  STEP: Getting a ResourceQuota @ 10/21/23 13:50:45.685
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/21/23 13:50:45.688
  STEP: Patching the ResourceQuota @ 10/21/23 13:50:45.691
  STEP: Deleting a Collection of ResourceQuotas @ 10/21/23 13:50:45.696
  STEP: Verifying the deleted ResourceQuota @ 10/21/23 13:50:45.703
  Oct 21 13:50:45.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7992" for this suite. @ 10/21/23 13:50:45.709
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 10/21/23 13:50:45.716
  Oct 21 13:50:45.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:50:45.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:45.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:45.736
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3978 @ 10/21/23 13:50:45.739
  STEP: changing the ExternalName service to type=NodePort @ 10/21/23 13:50:45.745
  STEP: creating replication controller externalname-service in namespace services-3978 @ 10/21/23 13:50:45.759
  I1021 13:50:45.770445      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3978, replica count: 2
  E1021 13:50:45.850253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:46.850488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:47.851424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:50:48.820781      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 13:50:48.820: INFO: Creating new exec pod
  E1021 13:50:48.851756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:49.852408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:50:50.853216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:51.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-3978 exec execpodm4tzw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1021 13:50:51.854092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:51.962: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 21 13:50:51.962: INFO: stdout: ""
  E1021 13:50:52.854355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:52.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-3978 exec execpodm4tzw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 21 13:50:53.086: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 21 13:50:53.086: INFO: stdout: "externalname-service-6kh9c"
  Oct 21 13:50:53.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-3978 exec execpodm4tzw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.86 80'
  Oct 21 13:50:53.201: INFO: stderr: "+ nc -v -t -w 2 10.152.183.86 80\n+ echo hostName\nConnection to 10.152.183.86 80 port [tcp/http] succeeded!\n"
  Oct 21 13:50:53.201: INFO: stdout: "externalname-service-6kh9c"
  Oct 21 13:50:53.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-3978 exec execpodm4tzw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.152 30493'
  Oct 21 13:50:53.326: INFO: stderr: "+ nc -v -t -w 2 172.31.41.152 30493\n+ echo hostName\nConnection to 172.31.41.152 30493 port [tcp/*] succeeded!\n"
  Oct 21 13:50:53.326: INFO: stdout: "externalname-service-lnrcl"
  Oct 21 13:50:53.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-3978 exec execpodm4tzw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.52 30493'
  Oct 21 13:50:53.449: INFO: stderr: "+ nc -v -t -w 2 172.31.83.52 30493\n+ echo hostName\nConnection to 172.31.83.52 30493 port [tcp/*] succeeded!\n"
  Oct 21 13:50:53.449: INFO: stdout: "externalname-service-6kh9c"
  Oct 21 13:50:53.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:50:53.453: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-3978" for this suite. @ 10/21/23 13:50:53.474
• [7.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/21/23 13:50:53.482
  Oct 21 13:50:53.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svc-latency @ 10/21/23 13:50:53.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:50:53.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:50:53.499
  Oct 21 13:50:53.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8766 @ 10/21/23 13:50:53.503
  I1021 13:50:53.509364      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8766, replica count: 1
  E1021 13:50:53.855148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:50:54.559869      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 13:50:54.674: INFO: Created: latency-svc-ql87d
  Oct 21 13:50:54.678: INFO: Got endpoints: latency-svc-ql87d [18.443954ms]
  Oct 21 13:50:54.690: INFO: Created: latency-svc-4crpx
  Oct 21 13:50:54.695: INFO: Got endpoints: latency-svc-4crpx [16.72489ms]
  Oct 21 13:50:54.706: INFO: Created: latency-svc-6426c
  Oct 21 13:50:54.714: INFO: Created: latency-svc-4skff
  Oct 21 13:50:54.720: INFO: Got endpoints: latency-svc-6426c [41.64938ms]
  Oct 21 13:50:54.725: INFO: Got endpoints: latency-svc-4skff [46.462231ms]
  Oct 21 13:50:54.727: INFO: Created: latency-svc-97vrl
  Oct 21 13:50:54.730: INFO: Created: latency-svc-6l88k
  Oct 21 13:50:54.735: INFO: Got endpoints: latency-svc-97vrl [56.546952ms]
  Oct 21 13:50:54.736: INFO: Got endpoints: latency-svc-6l88k [56.86866ms]
  Oct 21 13:50:54.743: INFO: Created: latency-svc-5fk99
  Oct 21 13:50:54.749: INFO: Got endpoints: latency-svc-5fk99 [70.063657ms]
  Oct 21 13:50:54.750: INFO: Created: latency-svc-mg9l8
  Oct 21 13:50:54.759: INFO: Got endpoints: latency-svc-mg9l8 [80.215943ms]
  Oct 21 13:50:54.762: INFO: Created: latency-svc-mwsf2
  Oct 21 13:50:54.766: INFO: Got endpoints: latency-svc-mwsf2 [87.610587ms]
  Oct 21 13:50:54.770: INFO: Created: latency-svc-vzmk2
  Oct 21 13:50:54.779: INFO: Got endpoints: latency-svc-vzmk2 [99.761932ms]
  Oct 21 13:50:54.782: INFO: Created: latency-svc-sbksf
  Oct 21 13:50:54.787: INFO: Got endpoints: latency-svc-sbksf [107.78198ms]
  Oct 21 13:50:54.790: INFO: Created: latency-svc-nt9kb
  Oct 21 13:50:54.795: INFO: Created: latency-svc-wfnds
  Oct 21 13:50:54.796: INFO: Got endpoints: latency-svc-nt9kb [116.676031ms]
  Oct 21 13:50:54.802: INFO: Got endpoints: latency-svc-wfnds [122.920844ms]
  Oct 21 13:50:54.805: INFO: Created: latency-svc-26c95
  Oct 21 13:50:54.809: INFO: Got endpoints: latency-svc-26c95 [129.61277ms]
  Oct 21 13:50:54.810: INFO: Created: latency-svc-4q95j
  Oct 21 13:50:54.819: INFO: Got endpoints: latency-svc-4q95j [139.679022ms]
  Oct 21 13:50:54.822: INFO: Created: latency-svc-tmkfz
  Oct 21 13:50:54.827: INFO: Got endpoints: latency-svc-tmkfz [148.003223ms]
  Oct 21 13:50:54.831: INFO: Created: latency-svc-fhdkg
  Oct 21 13:50:54.835: INFO: Got endpoints: latency-svc-fhdkg [139.422241ms]
  Oct 21 13:50:54.839: INFO: Created: latency-svc-nkl9b
  Oct 21 13:50:54.847: INFO: Got endpoints: latency-svc-nkl9b [127.07072ms]
  Oct 21 13:50:54.849: INFO: Created: latency-svc-d7hh5
  Oct 21 13:50:54.854: INFO: Got endpoints: latency-svc-d7hh5 [128.762273ms]
  E1021 13:50:54.855322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:54.858: INFO: Created: latency-svc-6xp5w
  Oct 21 13:50:54.862: INFO: Got endpoints: latency-svc-6xp5w [126.895217ms]
  Oct 21 13:50:54.865: INFO: Created: latency-svc-rbdw8
  Oct 21 13:50:54.872: INFO: Got endpoints: latency-svc-rbdw8 [136.52958ms]
  Oct 21 13:50:54.874: INFO: Created: latency-svc-5gb9c
  Oct 21 13:50:54.879: INFO: Created: latency-svc-gcf8d
  Oct 21 13:50:54.882: INFO: Got endpoints: latency-svc-5gb9c [132.625355ms]
  Oct 21 13:50:54.883: INFO: Got endpoints: latency-svc-gcf8d [124.385778ms]
  Oct 21 13:50:54.888: INFO: Created: latency-svc-b2kg8
  Oct 21 13:50:54.897: INFO: Got endpoints: latency-svc-b2kg8 [130.12635ms]
  Oct 21 13:50:54.902: INFO: Created: latency-svc-rh8pl
  Oct 21 13:50:54.905: INFO: Got endpoints: latency-svc-rh8pl [126.708501ms]
  Oct 21 13:50:54.908: INFO: Created: latency-svc-svm6r
  Oct 21 13:50:54.913: INFO: Got endpoints: latency-svc-svm6r [125.938879ms]
  Oct 21 13:50:54.918: INFO: Created: latency-svc-5qc8k
  Oct 21 13:50:54.928: INFO: Created: latency-svc-7tdcx
  Oct 21 13:50:54.928: INFO: Got endpoints: latency-svc-5qc8k [132.538755ms]
  Oct 21 13:50:54.929: INFO: Got endpoints: latency-svc-7tdcx [126.850435ms]
  Oct 21 13:50:54.934: INFO: Created: latency-svc-jvvqq
  Oct 21 13:50:54.939: INFO: Got endpoints: latency-svc-jvvqq [130.390805ms]
  Oct 21 13:50:54.995: INFO: Created: latency-svc-7h27t
  Oct 21 13:50:54.996: INFO: Created: latency-svc-vzhb5
  Oct 21 13:50:54.998: INFO: Created: latency-svc-gl8b5
  Oct 21 13:50:54.998: INFO: Created: latency-svc-rfgqf
  Oct 21 13:50:54.999: INFO: Created: latency-svc-d5kmp
  Oct 21 13:50:55.001: INFO: Created: latency-svc-rjfpd
  Oct 21 13:50:55.002: INFO: Created: latency-svc-cc42j
  Oct 21 13:50:55.002: INFO: Created: latency-svc-tgsbp
  Oct 21 13:50:55.002: INFO: Created: latency-svc-5glzx
  Oct 21 13:50:55.012: INFO: Created: latency-svc-4h6cb
  Oct 21 13:50:55.013: INFO: Created: latency-svc-nm56n
  Oct 21 13:50:55.014: INFO: Created: latency-svc-dvngj
  Oct 21 13:50:55.015: INFO: Created: latency-svc-97cd4
  Oct 21 13:50:55.015: INFO: Got endpoints: latency-svc-7h27t [168.056622ms]
  Oct 21 13:50:55.016: INFO: Created: latency-svc-5xbtc
  Oct 21 13:50:55.016: INFO: Created: latency-svc-57585
  Oct 21 13:50:55.021: INFO: Got endpoints: latency-svc-vzhb5 [115.758366ms]
  Oct 21 13:50:55.021: INFO: Got endpoints: latency-svc-5glzx [137.762579ms]
  Oct 21 13:50:55.027: INFO: Got endpoints: latency-svc-rfgqf [98.372337ms]
  Oct 21 13:50:55.027: INFO: Got endpoints: latency-svc-gl8b5 [114.584116ms]
  Oct 21 13:50:55.029: INFO: Got endpoints: latency-svc-d5kmp [201.485067ms]
  Oct 21 13:50:55.032: INFO: Got endpoints: latency-svc-tgsbp [197.363897ms]
  Oct 21 13:50:55.032: INFO: Got endpoints: latency-svc-4h6cb [150.645989ms]
  Oct 21 13:50:55.038: INFO: Created: latency-svc-b85k8
  Oct 21 13:50:55.066: INFO: Created: latency-svc-2vk2f
  Oct 21 13:50:55.070: INFO: Created: latency-svc-wjt9t
  Oct 21 13:50:55.070: INFO: Created: latency-svc-f8m2n
  Oct 21 13:50:55.070: INFO: Created: latency-svc-hsgkj
  Oct 21 13:50:55.071: INFO: Created: latency-svc-9jhgr
  Oct 21 13:50:55.071: INFO: Created: latency-svc-t26kg
  Oct 21 13:50:55.071: INFO: Created: latency-svc-bwfm6
  Oct 21 13:50:55.077: INFO: Got endpoints: latency-svc-nm56n [214.700307ms]
  Oct 21 13:50:55.089: INFO: Created: latency-svc-fw84k
  Oct 21 13:50:55.127: INFO: Got endpoints: latency-svc-cc42j [187.719925ms]
  Oct 21 13:50:55.136: INFO: Created: latency-svc-6wn2h
  Oct 21 13:50:55.177: INFO: Got endpoints: latency-svc-rjfpd [280.727133ms]
  Oct 21 13:50:55.186: INFO: Created: latency-svc-sz8ff
  Oct 21 13:50:55.225: INFO: Got endpoints: latency-svc-dvngj [406.253995ms]
  Oct 21 13:50:55.236: INFO: Created: latency-svc-q6d82
  Oct 21 13:50:55.275: INFO: Got endpoints: latency-svc-5xbtc [403.146157ms]
  Oct 21 13:50:55.283: INFO: Created: latency-svc-kk9vr
  Oct 21 13:50:55.327: INFO: Got endpoints: latency-svc-57585 [398.750617ms]
  Oct 21 13:50:55.338: INFO: Created: latency-svc-5pqrk
  Oct 21 13:50:55.376: INFO: Got endpoints: latency-svc-97cd4 [522.590409ms]
  Oct 21 13:50:55.385: INFO: Created: latency-svc-9jfp7
  Oct 21 13:50:55.426: INFO: Got endpoints: latency-svc-b85k8 [410.273165ms]
  Oct 21 13:50:55.434: INFO: Created: latency-svc-gmtfg
  Oct 21 13:50:55.476: INFO: Got endpoints: latency-svc-9jhgr [448.511511ms]
  Oct 21 13:50:55.487: INFO: Created: latency-svc-sbzfg
  Oct 21 13:50:55.525: INFO: Got endpoints: latency-svc-wjt9t [503.934077ms]
  Oct 21 13:50:55.536: INFO: Created: latency-svc-tld6d
  Oct 21 13:50:55.576: INFO: Got endpoints: latency-svc-f8m2n [543.768481ms]
  Oct 21 13:50:55.584: INFO: Created: latency-svc-j499h
  Oct 21 13:50:55.628: INFO: Got endpoints: latency-svc-bwfm6 [595.671023ms]
  Oct 21 13:50:55.639: INFO: Created: latency-svc-jbq5r
  Oct 21 13:50:55.675: INFO: Got endpoints: latency-svc-t26kg [653.49585ms]
  Oct 21 13:50:55.685: INFO: Created: latency-svc-wl4w4
  Oct 21 13:50:55.727: INFO: Got endpoints: latency-svc-2vk2f [698.366823ms]
  Oct 21 13:50:55.738: INFO: Created: latency-svc-qtzfz
  Oct 21 13:50:55.777: INFO: Got endpoints: latency-svc-hsgkj [749.680725ms]
  Oct 21 13:50:55.787: INFO: Created: latency-svc-wd747
  Oct 21 13:50:55.827: INFO: Got endpoints: latency-svc-fw84k [749.972402ms]
  Oct 21 13:50:55.839: INFO: Created: latency-svc-wf24p
  E1021 13:50:55.856308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:55.876: INFO: Got endpoints: latency-svc-6wn2h [749.60271ms]
  Oct 21 13:50:55.885: INFO: Created: latency-svc-4qr2g
  Oct 21 13:50:55.926: INFO: Got endpoints: latency-svc-sz8ff [748.632763ms]
  Oct 21 13:50:55.936: INFO: Created: latency-svc-pvwqb
  Oct 21 13:50:55.977: INFO: Got endpoints: latency-svc-q6d82 [751.686581ms]
  Oct 21 13:50:55.988: INFO: Created: latency-svc-wcznc
  Oct 21 13:50:56.026: INFO: Got endpoints: latency-svc-kk9vr [751.141157ms]
  Oct 21 13:50:56.041: INFO: Created: latency-svc-nghcf
  Oct 21 13:50:56.079: INFO: Got endpoints: latency-svc-5pqrk [751.726762ms]
  Oct 21 13:50:56.097: INFO: Created: latency-svc-48jjv
  Oct 21 13:50:56.124: INFO: Got endpoints: latency-svc-9jfp7 [748.028886ms]
  Oct 21 13:50:56.135: INFO: Created: latency-svc-gk5ps
  Oct 21 13:50:56.175: INFO: Got endpoints: latency-svc-gmtfg [749.755084ms]
  Oct 21 13:50:56.187: INFO: Created: latency-svc-5jjnn
  Oct 21 13:50:56.227: INFO: Got endpoints: latency-svc-sbzfg [751.367278ms]
  Oct 21 13:50:56.240: INFO: Created: latency-svc-w29xs
  Oct 21 13:50:56.278: INFO: Got endpoints: latency-svc-tld6d [753.125148ms]
  Oct 21 13:50:56.288: INFO: Created: latency-svc-2dn5h
  Oct 21 13:50:56.326: INFO: Got endpoints: latency-svc-j499h [750.235851ms]
  Oct 21 13:50:56.336: INFO: Created: latency-svc-mxmdj
  Oct 21 13:50:56.377: INFO: Got endpoints: latency-svc-jbq5r [749.386998ms]
  Oct 21 13:50:56.387: INFO: Created: latency-svc-psvn6
  Oct 21 13:50:56.427: INFO: Got endpoints: latency-svc-wl4w4 [752.482108ms]
  Oct 21 13:50:56.438: INFO: Created: latency-svc-z4d7c
  Oct 21 13:50:56.478: INFO: Got endpoints: latency-svc-qtzfz [750.740539ms]
  Oct 21 13:50:56.491: INFO: Created: latency-svc-p6wnq
  Oct 21 13:50:56.526: INFO: Got endpoints: latency-svc-wd747 [749.24131ms]
  Oct 21 13:50:56.536: INFO: Created: latency-svc-bbn9f
  Oct 21 13:50:56.575: INFO: Got endpoints: latency-svc-wf24p [748.478986ms]
  Oct 21 13:50:56.585: INFO: Created: latency-svc-kfx8n
  Oct 21 13:50:56.625: INFO: Got endpoints: latency-svc-4qr2g [749.121291ms]
  Oct 21 13:50:56.633: INFO: Created: latency-svc-bf5kv
  Oct 21 13:50:56.676: INFO: Got endpoints: latency-svc-pvwqb [749.975649ms]
  Oct 21 13:50:56.686: INFO: Created: latency-svc-g5bhk
  Oct 21 13:50:56.725: INFO: Got endpoints: latency-svc-wcznc [747.887041ms]
  Oct 21 13:50:56.735: INFO: Created: latency-svc-zhvn5
  Oct 21 13:50:56.775: INFO: Got endpoints: latency-svc-nghcf [748.800517ms]
  Oct 21 13:50:56.785: INFO: Created: latency-svc-k4fgf
  Oct 21 13:50:56.827: INFO: Got endpoints: latency-svc-48jjv [748.250292ms]
  Oct 21 13:50:56.836: INFO: Created: latency-svc-gdzjg
  E1021 13:50:56.857207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:56.874: INFO: Got endpoints: latency-svc-gk5ps [749.730898ms]
  Oct 21 13:50:56.884: INFO: Created: latency-svc-wqn2x
  Oct 21 13:50:56.927: INFO: Got endpoints: latency-svc-5jjnn [751.040035ms]
  Oct 21 13:50:56.935: INFO: Created: latency-svc-77wcv
  Oct 21 13:50:56.976: INFO: Got endpoints: latency-svc-w29xs [748.088884ms]
  Oct 21 13:50:56.986: INFO: Created: latency-svc-wwk2q
  Oct 21 13:50:57.026: INFO: Got endpoints: latency-svc-2dn5h [748.033012ms]
  Oct 21 13:50:57.035: INFO: Created: latency-svc-lsbl5
  Oct 21 13:50:57.076: INFO: Got endpoints: latency-svc-mxmdj [749.675327ms]
  Oct 21 13:50:57.085: INFO: Created: latency-svc-6462k
  Oct 21 13:50:57.126: INFO: Got endpoints: latency-svc-psvn6 [748.733804ms]
  Oct 21 13:50:57.136: INFO: Created: latency-svc-d5dr7
  Oct 21 13:50:57.177: INFO: Got endpoints: latency-svc-z4d7c [749.590955ms]
  Oct 21 13:50:57.187: INFO: Created: latency-svc-tznbg
  Oct 21 13:50:57.226: INFO: Got endpoints: latency-svc-p6wnq [747.487149ms]
  Oct 21 13:50:57.234: INFO: Created: latency-svc-w48z9
  Oct 21 13:50:57.275: INFO: Got endpoints: latency-svc-bbn9f [748.725328ms]
  Oct 21 13:50:57.286: INFO: Created: latency-svc-ktvl2
  Oct 21 13:50:57.326: INFO: Got endpoints: latency-svc-kfx8n [750.356065ms]
  Oct 21 13:50:57.336: INFO: Created: latency-svc-jwzw2
  Oct 21 13:50:57.377: INFO: Got endpoints: latency-svc-bf5kv [751.287113ms]
  Oct 21 13:50:57.387: INFO: Created: latency-svc-8hrft
  Oct 21 13:50:57.429: INFO: Got endpoints: latency-svc-g5bhk [752.424996ms]
  Oct 21 13:50:57.438: INFO: Created: latency-svc-q9rjd
  Oct 21 13:50:57.477: INFO: Got endpoints: latency-svc-zhvn5 [751.833936ms]
  Oct 21 13:50:57.489: INFO: Created: latency-svc-nq896
  Oct 21 13:50:57.525: INFO: Got endpoints: latency-svc-k4fgf [750.158805ms]
  Oct 21 13:50:57.534: INFO: Created: latency-svc-lz8w8
  Oct 21 13:50:57.576: INFO: Got endpoints: latency-svc-gdzjg [748.766287ms]
  Oct 21 13:50:57.585: INFO: Created: latency-svc-dzp2d
  Oct 21 13:50:57.626: INFO: Got endpoints: latency-svc-wqn2x [751.908494ms]
  Oct 21 13:50:57.635: INFO: Created: latency-svc-rp57d
  Oct 21 13:50:57.678: INFO: Got endpoints: latency-svc-77wcv [750.901627ms]
  Oct 21 13:50:57.686: INFO: Created: latency-svc-8mwgb
  Oct 21 13:50:57.726: INFO: Got endpoints: latency-svc-wwk2q [750.610374ms]
  Oct 21 13:50:57.738: INFO: Created: latency-svc-29kst
  Oct 21 13:50:57.774: INFO: Got endpoints: latency-svc-lsbl5 [747.7925ms]
  Oct 21 13:50:57.787: INFO: Created: latency-svc-952l2
  Oct 21 13:50:57.826: INFO: Got endpoints: latency-svc-6462k [749.355636ms]
  Oct 21 13:50:57.833: INFO: Created: latency-svc-2drkf
  E1021 13:50:57.857762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:57.876: INFO: Got endpoints: latency-svc-d5dr7 [749.747514ms]
  Oct 21 13:50:57.884: INFO: Created: latency-svc-6q6kj
  Oct 21 13:50:57.926: INFO: Got endpoints: latency-svc-tznbg [749.298955ms]
  Oct 21 13:50:57.935: INFO: Created: latency-svc-7gz7d
  Oct 21 13:50:57.975: INFO: Got endpoints: latency-svc-w48z9 [748.750294ms]
  Oct 21 13:50:57.984: INFO: Created: latency-svc-rlmcs
  Oct 21 13:50:58.026: INFO: Got endpoints: latency-svc-ktvl2 [751.53143ms]
  Oct 21 13:50:58.035: INFO: Created: latency-svc-nkkpd
  Oct 21 13:50:58.076: INFO: Got endpoints: latency-svc-jwzw2 [749.774886ms]
  Oct 21 13:50:58.085: INFO: Created: latency-svc-ks6rr
  Oct 21 13:50:58.127: INFO: Got endpoints: latency-svc-8hrft [749.788358ms]
  Oct 21 13:50:58.134: INFO: Created: latency-svc-vzrsz
  Oct 21 13:50:58.177: INFO: Got endpoints: latency-svc-q9rjd [748.469569ms]
  Oct 21 13:50:58.186: INFO: Created: latency-svc-8qf2f
  Oct 21 13:50:58.225: INFO: Got endpoints: latency-svc-nq896 [748.41067ms]
  Oct 21 13:50:58.236: INFO: Created: latency-svc-9jsd4
  Oct 21 13:50:58.275: INFO: Got endpoints: latency-svc-lz8w8 [749.842593ms]
  Oct 21 13:50:58.283: INFO: Created: latency-svc-j4ppb
  Oct 21 13:50:58.327: INFO: Got endpoints: latency-svc-dzp2d [751.398473ms]
  Oct 21 13:50:58.336: INFO: Created: latency-svc-jc8tb
  Oct 21 13:50:58.379: INFO: Got endpoints: latency-svc-rp57d [752.610511ms]
  Oct 21 13:50:58.389: INFO: Created: latency-svc-7h89n
  Oct 21 13:50:58.426: INFO: Got endpoints: latency-svc-8mwgb [747.958317ms]
  Oct 21 13:50:58.434: INFO: Created: latency-svc-qpw4s
  Oct 21 13:50:58.477: INFO: Got endpoints: latency-svc-29kst [750.721969ms]
  Oct 21 13:50:58.491: INFO: Created: latency-svc-jqcpz
  Oct 21 13:50:58.524: INFO: Got endpoints: latency-svc-952l2 [749.791732ms]
  Oct 21 13:50:58.534: INFO: Created: latency-svc-dz6qp
  Oct 21 13:50:58.575: INFO: Got endpoints: latency-svc-2drkf [749.27018ms]
  Oct 21 13:50:58.587: INFO: Created: latency-svc-p8krv
  Oct 21 13:50:58.626: INFO: Got endpoints: latency-svc-6q6kj [749.790203ms]
  Oct 21 13:50:58.636: INFO: Created: latency-svc-wgnzf
  Oct 21 13:50:58.676: INFO: Got endpoints: latency-svc-7gz7d [749.200502ms]
  Oct 21 13:50:58.687: INFO: Created: latency-svc-84qbc
  Oct 21 13:50:58.723: INFO: Got endpoints: latency-svc-rlmcs [748.275791ms]
  Oct 21 13:50:58.731: INFO: Created: latency-svc-nnp4b
  Oct 21 13:50:58.781: INFO: Got endpoints: latency-svc-nkkpd [754.728024ms]
  Oct 21 13:50:58.792: INFO: Created: latency-svc-nt2ng
  Oct 21 13:50:58.828: INFO: Got endpoints: latency-svc-ks6rr [751.976335ms]
  Oct 21 13:50:58.847: INFO: Created: latency-svc-8bx59
  E1021 13:50:58.858403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:58.877: INFO: Got endpoints: latency-svc-vzrsz [750.0419ms]
  Oct 21 13:50:58.889: INFO: Created: latency-svc-9vx7m
  Oct 21 13:50:58.929: INFO: Got endpoints: latency-svc-8qf2f [751.985186ms]
  Oct 21 13:50:58.942: INFO: Created: latency-svc-x67tx
  Oct 21 13:50:58.975: INFO: Got endpoints: latency-svc-9jsd4 [749.496708ms]
  Oct 21 13:50:58.984: INFO: Created: latency-svc-92tkr
  Oct 21 13:50:59.025: INFO: Got endpoints: latency-svc-j4ppb [749.325598ms]
  Oct 21 13:50:59.038: INFO: Created: latency-svc-phx94
  Oct 21 13:50:59.075: INFO: Got endpoints: latency-svc-jc8tb [747.745571ms]
  Oct 21 13:50:59.085: INFO: Created: latency-svc-lz6gp
  Oct 21 13:50:59.129: INFO: Got endpoints: latency-svc-7h89n [749.979616ms]
  Oct 21 13:50:59.140: INFO: Created: latency-svc-tjn9r
  Oct 21 13:50:59.177: INFO: Got endpoints: latency-svc-qpw4s [751.002255ms]
  Oct 21 13:50:59.184: INFO: Created: latency-svc-rsgbc
  Oct 21 13:50:59.225: INFO: Got endpoints: latency-svc-jqcpz [747.73929ms]
  Oct 21 13:50:59.235: INFO: Created: latency-svc-bznvl
  Oct 21 13:50:59.276: INFO: Got endpoints: latency-svc-dz6qp [752.270585ms]
  Oct 21 13:50:59.292: INFO: Created: latency-svc-xwl79
  Oct 21 13:50:59.324: INFO: Got endpoints: latency-svc-p8krv [748.946641ms]
  Oct 21 13:50:59.336: INFO: Created: latency-svc-6kprs
  Oct 21 13:50:59.375: INFO: Got endpoints: latency-svc-wgnzf [749.174725ms]
  Oct 21 13:50:59.387: INFO: Created: latency-svc-8ckb7
  Oct 21 13:50:59.427: INFO: Got endpoints: latency-svc-84qbc [750.898604ms]
  Oct 21 13:50:59.435: INFO: Created: latency-svc-nlrfs
  Oct 21 13:50:59.474: INFO: Got endpoints: latency-svc-nnp4b [751.318403ms]
  Oct 21 13:50:59.488: INFO: Created: latency-svc-65gmv
  Oct 21 13:50:59.527: INFO: Got endpoints: latency-svc-nt2ng [746.120179ms]
  Oct 21 13:50:59.539: INFO: Created: latency-svc-jvnmm
  Oct 21 13:50:59.574: INFO: Got endpoints: latency-svc-8bx59 [746.807834ms]
  Oct 21 13:50:59.583: INFO: Created: latency-svc-czcgm
  Oct 21 13:50:59.626: INFO: Got endpoints: latency-svc-9vx7m [749.07251ms]
  Oct 21 13:50:59.635: INFO: Created: latency-svc-jdjts
  Oct 21 13:50:59.676: INFO: Got endpoints: latency-svc-x67tx [746.551761ms]
  Oct 21 13:50:59.684: INFO: Created: latency-svc-x9f92
  Oct 21 13:50:59.726: INFO: Got endpoints: latency-svc-92tkr [750.812753ms]
  Oct 21 13:50:59.736: INFO: Created: latency-svc-bgqs9
  Oct 21 13:50:59.776: INFO: Got endpoints: latency-svc-phx94 [751.070231ms]
  Oct 21 13:50:59.784: INFO: Created: latency-svc-rp4xv
  Oct 21 13:50:59.825: INFO: Got endpoints: latency-svc-lz6gp [750.2923ms]
  Oct 21 13:50:59.836: INFO: Created: latency-svc-7dbn4
  E1021 13:50:59.861423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:50:59.876: INFO: Got endpoints: latency-svc-tjn9r [747.097222ms]
  Oct 21 13:50:59.886: INFO: Created: latency-svc-xj9lj
  Oct 21 13:50:59.926: INFO: Got endpoints: latency-svc-rsgbc [749.517697ms]
  Oct 21 13:50:59.933: INFO: Created: latency-svc-x6t9c
  Oct 21 13:50:59.976: INFO: Got endpoints: latency-svc-bznvl [750.643207ms]
  Oct 21 13:50:59.986: INFO: Created: latency-svc-xzgpd
  Oct 21 13:51:00.026: INFO: Got endpoints: latency-svc-xwl79 [749.377459ms]
  Oct 21 13:51:00.036: INFO: Created: latency-svc-g8fl5
  Oct 21 13:51:00.076: INFO: Got endpoints: latency-svc-6kprs [751.67285ms]
  Oct 21 13:51:00.087: INFO: Created: latency-svc-klgrd
  Oct 21 13:51:00.126: INFO: Got endpoints: latency-svc-8ckb7 [751.127143ms]
  Oct 21 13:51:00.135: INFO: Created: latency-svc-gvtlh
  Oct 21 13:51:00.177: INFO: Got endpoints: latency-svc-nlrfs [750.343686ms]
  Oct 21 13:51:00.187: INFO: Created: latency-svc-xb7jn
  Oct 21 13:51:00.228: INFO: Got endpoints: latency-svc-65gmv [753.975299ms]
  Oct 21 13:51:00.237: INFO: Created: latency-svc-bcz8r
  Oct 21 13:51:00.277: INFO: Got endpoints: latency-svc-jvnmm [749.82473ms]
  Oct 21 13:51:00.286: INFO: Created: latency-svc-8sg7t
  Oct 21 13:51:00.327: INFO: Got endpoints: latency-svc-czcgm [752.445693ms]
  Oct 21 13:51:00.338: INFO: Created: latency-svc-l2vdl
  Oct 21 13:51:00.376: INFO: Got endpoints: latency-svc-jdjts [750.094214ms]
  Oct 21 13:51:00.386: INFO: Created: latency-svc-6dwfr
  Oct 21 13:51:00.425: INFO: Got endpoints: latency-svc-x9f92 [749.599562ms]
  Oct 21 13:51:00.434: INFO: Created: latency-svc-cx9sq
  Oct 21 13:51:00.480: INFO: Got endpoints: latency-svc-bgqs9 [753.998945ms]
  Oct 21 13:51:00.507: INFO: Created: latency-svc-8vt5q
  Oct 21 13:51:00.528: INFO: Got endpoints: latency-svc-rp4xv [752.495899ms]
  Oct 21 13:51:00.541: INFO: Created: latency-svc-jksdr
  Oct 21 13:51:00.576: INFO: Got endpoints: latency-svc-7dbn4 [750.19587ms]
  Oct 21 13:51:00.587: INFO: Created: latency-svc-76nnd
  Oct 21 13:51:00.626: INFO: Got endpoints: latency-svc-xj9lj [749.732785ms]
  Oct 21 13:51:00.634: INFO: Created: latency-svc-ddbjw
  Oct 21 13:51:00.681: INFO: Got endpoints: latency-svc-x6t9c [755.183361ms]
  Oct 21 13:51:00.692: INFO: Created: latency-svc-lcpnp
  Oct 21 13:51:00.730: INFO: Got endpoints: latency-svc-xzgpd [754.614765ms]
  Oct 21 13:51:00.743: INFO: Created: latency-svc-vjvv6
  Oct 21 13:51:00.776: INFO: Got endpoints: latency-svc-g8fl5 [750.213615ms]
  Oct 21 13:51:00.792: INFO: Created: latency-svc-nrfkr
  Oct 21 13:51:00.830: INFO: Got endpoints: latency-svc-klgrd [753.946324ms]
  Oct 21 13:51:00.839: INFO: Created: latency-svc-zzxsr
  E1021 13:51:00.862000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:00.874: INFO: Got endpoints: latency-svc-gvtlh [747.658646ms]
  Oct 21 13:51:00.883: INFO: Created: latency-svc-cbhbc
  Oct 21 13:51:00.926: INFO: Got endpoints: latency-svc-xb7jn [748.804802ms]
  Oct 21 13:51:00.936: INFO: Created: latency-svc-jfc58
  Oct 21 13:51:00.975: INFO: Got endpoints: latency-svc-bcz8r [746.999237ms]
  Oct 21 13:51:00.985: INFO: Created: latency-svc-qq5v4
  Oct 21 13:51:01.026: INFO: Got endpoints: latency-svc-8sg7t [748.820291ms]
  Oct 21 13:51:01.036: INFO: Created: latency-svc-rtn9b
  Oct 21 13:51:01.075: INFO: Got endpoints: latency-svc-l2vdl [748.259494ms]
  Oct 21 13:51:01.084: INFO: Created: latency-svc-xslbv
  Oct 21 13:51:01.127: INFO: Got endpoints: latency-svc-6dwfr [750.72073ms]
  Oct 21 13:51:01.136: INFO: Created: latency-svc-6d8wm
  Oct 21 13:51:01.175: INFO: Got endpoints: latency-svc-cx9sq [749.584699ms]
  Oct 21 13:51:01.188: INFO: Created: latency-svc-rh6ts
  Oct 21 13:51:01.228: INFO: Got endpoints: latency-svc-8vt5q [747.621082ms]
  Oct 21 13:51:01.241: INFO: Created: latency-svc-ptmbd
  Oct 21 13:51:01.276: INFO: Got endpoints: latency-svc-jksdr [747.915834ms]
  Oct 21 13:51:01.288: INFO: Created: latency-svc-cd6dt
  Oct 21 13:51:01.328: INFO: Got endpoints: latency-svc-76nnd [752.179933ms]
  Oct 21 13:51:01.337: INFO: Created: latency-svc-c65w9
  Oct 21 13:51:01.376: INFO: Got endpoints: latency-svc-ddbjw [750.204171ms]
  Oct 21 13:51:01.389: INFO: Created: latency-svc-96lnd
  Oct 21 13:51:01.426: INFO: Got endpoints: latency-svc-lcpnp [744.500599ms]
  Oct 21 13:51:01.436: INFO: Created: latency-svc-txxnh
  Oct 21 13:51:01.477: INFO: Got endpoints: latency-svc-vjvv6 [746.632107ms]
  Oct 21 13:51:01.488: INFO: Created: latency-svc-ptfdg
  Oct 21 13:51:01.525: INFO: Got endpoints: latency-svc-nrfkr [748.757508ms]
  Oct 21 13:51:01.537: INFO: Created: latency-svc-lb6lq
  Oct 21 13:51:01.576: INFO: Got endpoints: latency-svc-zzxsr [746.745416ms]
  Oct 21 13:51:01.593: INFO: Created: latency-svc-jzxjn
  Oct 21 13:51:01.626: INFO: Got endpoints: latency-svc-cbhbc [752.181274ms]
  Oct 21 13:51:01.635: INFO: Created: latency-svc-2nb88
  Oct 21 13:51:01.676: INFO: Got endpoints: latency-svc-jfc58 [750.093349ms]
  Oct 21 13:51:01.692: INFO: Created: latency-svc-9hmv9
  Oct 21 13:51:01.729: INFO: Got endpoints: latency-svc-qq5v4 [753.666244ms]
  Oct 21 13:51:01.738: INFO: Created: latency-svc-dmh5l
  Oct 21 13:51:01.776: INFO: Got endpoints: latency-svc-rtn9b [750.108561ms]
  Oct 21 13:51:01.787: INFO: Created: latency-svc-gmvd7
  Oct 21 13:51:01.825: INFO: Got endpoints: latency-svc-xslbv [749.593356ms]
  Oct 21 13:51:01.835: INFO: Created: latency-svc-ns5m9
  E1021 13:51:01.862708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:01.879: INFO: Got endpoints: latency-svc-6d8wm [752.061725ms]
  Oct 21 13:51:01.888: INFO: Created: latency-svc-jnkw9
  Oct 21 13:51:01.926: INFO: Got endpoints: latency-svc-rh6ts [751.308498ms]
  Oct 21 13:51:01.936: INFO: Created: latency-svc-q78vv
  Oct 21 13:51:01.976: INFO: Got endpoints: latency-svc-ptmbd [748.544494ms]
  Oct 21 13:51:01.985: INFO: Created: latency-svc-wnj6q
  Oct 21 13:51:02.025: INFO: Got endpoints: latency-svc-cd6dt [748.944685ms]
  Oct 21 13:51:02.035: INFO: Created: latency-svc-w6r5v
  Oct 21 13:51:02.075: INFO: Got endpoints: latency-svc-c65w9 [747.272063ms]
  Oct 21 13:51:02.085: INFO: Created: latency-svc-ncfx9
  Oct 21 13:51:02.126: INFO: Got endpoints: latency-svc-96lnd [750.04358ms]
  Oct 21 13:51:02.137: INFO: Created: latency-svc-dvqgf
  Oct 21 13:51:02.177: INFO: Got endpoints: latency-svc-txxnh [751.343253ms]
  Oct 21 13:51:02.186: INFO: Created: latency-svc-wvf5n
  Oct 21 13:51:02.225: INFO: Got endpoints: latency-svc-ptfdg [747.989908ms]
  Oct 21 13:51:02.236: INFO: Created: latency-svc-2rxfn
  Oct 21 13:51:02.276: INFO: Got endpoints: latency-svc-lb6lq [751.042119ms]
  Oct 21 13:51:02.286: INFO: Created: latency-svc-txgzn
  Oct 21 13:51:02.326: INFO: Got endpoints: latency-svc-jzxjn [750.100581ms]
  Oct 21 13:51:02.336: INFO: Created: latency-svc-5qbtr
  Oct 21 13:51:02.376: INFO: Got endpoints: latency-svc-2nb88 [749.975471ms]
  Oct 21 13:51:02.385: INFO: Created: latency-svc-s27bv
  Oct 21 13:51:02.426: INFO: Got endpoints: latency-svc-9hmv9 [750.098346ms]
  Oct 21 13:51:02.437: INFO: Created: latency-svc-l8s44
  Oct 21 13:51:02.475: INFO: Got endpoints: latency-svc-dmh5l [746.554665ms]
  Oct 21 13:51:02.487: INFO: Created: latency-svc-qjz76
  Oct 21 13:51:02.526: INFO: Got endpoints: latency-svc-gmvd7 [750.148714ms]
  Oct 21 13:51:02.577: INFO: Got endpoints: latency-svc-ns5m9 [752.277777ms]
  Oct 21 13:51:02.626: INFO: Got endpoints: latency-svc-jnkw9 [747.131129ms]
  Oct 21 13:51:02.677: INFO: Got endpoints: latency-svc-q78vv [750.467425ms]
  Oct 21 13:51:02.726: INFO: Got endpoints: latency-svc-wnj6q [749.492214ms]
  Oct 21 13:51:02.778: INFO: Got endpoints: latency-svc-w6r5v [752.729751ms]
  Oct 21 13:51:02.826: INFO: Got endpoints: latency-svc-ncfx9 [750.485092ms]
  E1021 13:51:02.863324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:02.876: INFO: Got endpoints: latency-svc-dvqgf [749.53288ms]
  Oct 21 13:51:02.926: INFO: Got endpoints: latency-svc-wvf5n [748.45767ms]
  Oct 21 13:51:02.976: INFO: Got endpoints: latency-svc-2rxfn [751.312973ms]
  Oct 21 13:51:03.027: INFO: Got endpoints: latency-svc-txgzn [750.816601ms]
  Oct 21 13:51:03.075: INFO: Got endpoints: latency-svc-5qbtr [748.934423ms]
  Oct 21 13:51:03.130: INFO: Got endpoints: latency-svc-s27bv [753.788786ms]
  Oct 21 13:51:03.177: INFO: Got endpoints: latency-svc-l8s44 [750.403964ms]
  Oct 21 13:51:03.225: INFO: Got endpoints: latency-svc-qjz76 [749.680981ms]
  Oct 21 13:51:03.225: INFO: Latencies: [16.72489ms 41.64938ms 46.462231ms 56.546952ms 56.86866ms 70.063657ms 80.215943ms 87.610587ms 98.372337ms 99.761932ms 107.78198ms 114.584116ms 115.758366ms 116.676031ms 122.920844ms 124.385778ms 125.938879ms 126.708501ms 126.850435ms 126.895217ms 127.07072ms 128.762273ms 129.61277ms 130.12635ms 130.390805ms 132.538755ms 132.625355ms 136.52958ms 137.762579ms 139.422241ms 139.679022ms 148.003223ms 150.645989ms 168.056622ms 187.719925ms 197.363897ms 201.485067ms 214.700307ms 280.727133ms 398.750617ms 403.146157ms 406.253995ms 410.273165ms 448.511511ms 503.934077ms 522.590409ms 543.768481ms 595.671023ms 653.49585ms 698.366823ms 744.500599ms 746.120179ms 746.551761ms 746.554665ms 746.632107ms 746.745416ms 746.807834ms 746.999237ms 747.097222ms 747.131129ms 747.272063ms 747.487149ms 747.621082ms 747.658646ms 747.73929ms 747.745571ms 747.7925ms 747.887041ms 747.915834ms 747.958317ms 747.989908ms 748.028886ms 748.033012ms 748.088884ms 748.250292ms 748.259494ms 748.275791ms 748.41067ms 748.45767ms 748.469569ms 748.478986ms 748.544494ms 748.632763ms 748.725328ms 748.733804ms 748.750294ms 748.757508ms 748.766287ms 748.800517ms 748.804802ms 748.820291ms 748.934423ms 748.944685ms 748.946641ms 749.07251ms 749.121291ms 749.174725ms 749.200502ms 749.24131ms 749.27018ms 749.298955ms 749.325598ms 749.355636ms 749.377459ms 749.386998ms 749.492214ms 749.496708ms 749.517697ms 749.53288ms 749.584699ms 749.590955ms 749.593356ms 749.599562ms 749.60271ms 749.675327ms 749.680725ms 749.680981ms 749.730898ms 749.732785ms 749.747514ms 749.755084ms 749.774886ms 749.788358ms 749.790203ms 749.791732ms 749.82473ms 749.842593ms 749.972402ms 749.975471ms 749.975649ms 749.979616ms 750.0419ms 750.04358ms 750.093349ms 750.094214ms 750.098346ms 750.100581ms 750.108561ms 750.148714ms 750.158805ms 750.19587ms 750.204171ms 750.213615ms 750.235851ms 750.2923ms 750.343686ms 750.356065ms 750.403964ms 750.467425ms 750.485092ms 750.610374ms 750.643207ms 750.72073ms 750.721969ms 750.740539ms 750.812753ms 750.816601ms 750.898604ms 750.901627ms 751.002255ms 751.040035ms 751.042119ms 751.070231ms 751.127143ms 751.141157ms 751.287113ms 751.308498ms 751.312973ms 751.318403ms 751.343253ms 751.367278ms 751.398473ms 751.53143ms 751.67285ms 751.686581ms 751.726762ms 751.833936ms 751.908494ms 751.976335ms 751.985186ms 752.061725ms 752.179933ms 752.181274ms 752.270585ms 752.277777ms 752.424996ms 752.445693ms 752.482108ms 752.495899ms 752.610511ms 752.729751ms 753.125148ms 753.666244ms 753.788786ms 753.946324ms 753.975299ms 753.998945ms 754.614765ms 754.728024ms 755.183361ms]
  Oct 21 13:51:03.226: INFO: 50 %ile: 749.298955ms
  Oct 21 13:51:03.226: INFO: 90 %ile: 752.061725ms
  Oct 21 13:51:03.226: INFO: 99 %ile: 754.728024ms
  Oct 21 13:51:03.226: INFO: Total sample count: 200
  Oct 21 13:51:03.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8766" for this suite. @ 10/21/23 13:51:03.231
• [9.754 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 10/21/23 13:51:03.236
  Oct 21 13:51:03.236: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replication-controller @ 10/21/23 13:51:03.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:51:03.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:51:03.255
  Oct 21 13:51:03.260: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1021 13:51:03.863515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/21/23 13:51:04.274
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/21/23 13:51:04.279
  E1021 13:51:04.863660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/21/23 13:51:05.285
  Oct 21 13:51:05.294: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/21/23 13:51:05.294
  E1021 13:51:05.863682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:06.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2157" for this suite. @ 10/21/23 13:51:06.306
• [3.076 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/21/23 13:51:06.312
  Oct 21 13:51:06.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename projected @ 10/21/23 13:51:06.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:51:06.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:51:06.329
  STEP: Creating secret with name projected-secret-test-e6830dbc-33e9-4a11-90f5-a80d5132e15a @ 10/21/23 13:51:06.332
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:51:06.336
  E1021 13:51:06.863780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:07.863873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:08.864754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:09.864849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:51:10.359
  Oct 21 13:51:10.364: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-projected-secrets-d486b4ab-df1c-49c6-9381-d0443254d6c6 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:51:10.371
  Oct 21 13:51:10.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2898" for this suite. @ 10/21/23 13:51:10.401
• [4.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 10/21/23 13:51:10.408
  Oct 21 13:51:10.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:51:10.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:51:10.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:51:10.434
  STEP: creating secret secrets-3552/secret-test-69de6704-2ab5-4cfe-97de-dba37f056c50 @ 10/21/23 13:51:10.437
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:51:10.441
  E1021 13:51:10.865408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:11.865483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:12.865608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:13.865680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:51:14.46
  Oct 21 13:51:14.463: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-15408378-a31c-4af5-ada6-463d7d9267bf container env-test: <nil>
  STEP: delete the pod @ 10/21/23 13:51:14.469
  Oct 21 13:51:14.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3552" for this suite. @ 10/21/23 13:51:14.486
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 10/21/23 13:51:14.492
  Oct 21 13:51:14.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename var-expansion @ 10/21/23 13:51:14.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:51:14.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:51:14.511
  STEP: Creating a pod to test substitution in volume subpath @ 10/21/23 13:51:14.514
  E1021 13:51:14.866139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:15.866320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:16.866369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:17.867432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:51:18.539
  Oct 21 13:51:18.542: INFO: Trying to get logs from node ip-172-31-83-52 pod var-expansion-96a32e6b-e2b7-4061-9475-6a46e6d30610 container dapi-container: <nil>
  STEP: delete the pod @ 10/21/23 13:51:18.546
  Oct 21 13:51:18.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7986" for this suite. @ 10/21/23 13:51:18.564
• [4.078 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 10/21/23 13:51:18.571
  Oct 21 13:51:18.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:51:18.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:51:18.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:51:18.589
  STEP: Creating configMap configmap-3921/configmap-test-fcaab1bf-29f9-4725-b896-6d5401258cc9 @ 10/21/23 13:51:18.592
  STEP: Creating a pod to test consume configMaps @ 10/21/23 13:51:18.596
  E1021 13:51:18.868119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:19.868800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:20.869431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:21.869521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:51:22.616
  Oct 21 13:51:22.619: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-configmaps-cdfeff10-1f4a-4d39-a94d-6f04716bccce container env-test: <nil>
  STEP: delete the pod @ 10/21/23 13:51:22.624
  Oct 21 13:51:22.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3921" for this suite. @ 10/21/23 13:51:22.641
• [4.076 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 10/21/23 13:51:22.647
  Oct 21 13:51:22.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-probe @ 10/21/23 13:51:22.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:51:22.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:51:22.667
  STEP: Creating pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037 @ 10/21/23 13:51:22.67
  E1021 13:51:22.869911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:23.870111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/21/23 13:51:24.683
  Oct 21 13:51:24.687: INFO: Initial restart count of pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 is 0
  Oct 21 13:51:24.690: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:24.870448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:25.870539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:26.694: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:26.871279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:27.871459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:28.698: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:28.871632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:29.871725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:30.701: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:30.872271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:31.872361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:32.706: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:32.873390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:33.873464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:34.709: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:34.873853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:35.874084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:36.714: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:36.874672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:37.874766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:38.719: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:38.875285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:39.875473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:40.723: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:40.876052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:41.876232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:42.727: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:42.877067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:43.878063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:44.731: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:44.878786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:45.878883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:46.736: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:46.879281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:47.879518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:48.739: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:48.880029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:49.880185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:50.744: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:50.880284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:51.880481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:52.748: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:52.880535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:53.880951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:54.752: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:54.881558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:55.881754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:56.757: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:56.882300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:57.882357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:51:58.760: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:51:58.882989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:51:59.883429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:00.764: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:00.883777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:01.884328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:02.768: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:02.884635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:03.884891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:04.771: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:04.885692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:05.886334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:06.778: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:06.886753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:07.887429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:08.784: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:08.887568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:09.887581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:10.788: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:10.888556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:11.888714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:12.792: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:12.889766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:13.889855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:14.795: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:14.890128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:15.890213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:16.802: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:16.890445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:17.890543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:18.807: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:18.891603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:19.891694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:20.811: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:20.891930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:21.892075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:22.815: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:22.892524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:23.892774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:24.819: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:24.893227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:25.893318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:26.823: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:26.894298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:27.894361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:28.827: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:28.895086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:29.895411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:30.832: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:30.896227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:31.896452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:32.836: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:32.897368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:33.897676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:34.839: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:34.898032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:35.898713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:36.844: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:36.899196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:37.899589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:38.848: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:38.899745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:39.899888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:40.852: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:40.900306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:41.900471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:42.856: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:42.901372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:43.901580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:44.860: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:44.902330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:45.903410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:46.864: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:46.903443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:47.904169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:48.868: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:48.904878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:49.905034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:50.872: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:50.905301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:51.905554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:52.875: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:52.906016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:53.906335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:54.879: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:54.906810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:55.906915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:56.884: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:56.907222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:57.907377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:52:58.888: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:52:58.908361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:52:59.909361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:00.891: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:00.909953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:01.910316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:02.895: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:02.911337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:03.911441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:04.898: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:04.911800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:05.911954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:06.903: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:06.912598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:07.912676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:08.907: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:08.912864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:09.912989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:10.911: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:10.913697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:11.913832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:12.914076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:12.915: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:13.914350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:14.915411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:14.920: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:15.916365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:16.916447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:16.924: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:17.916537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:18.916625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:18.928: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:19.917439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:20.917709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:20.932: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:21.918372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:22.919430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:22.937: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:23.919969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:24.920167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:24.942: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:25.920272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:26.920360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:26.946: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:27.920675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:28.920784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:28.951: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:29.921714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:30.921853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:30.955: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:31.922340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:32.922375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:32.959: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:33.923414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:34.923681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:34.963: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:35.924182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:36.924867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:36.968: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:37.924972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:38.925294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:38.972: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:39.925383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:40.925533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:40.976: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:41.926372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:42.926469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:42.980: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:43.927423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:44.927522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:44.984: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:45.928225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:46.928327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:46.989: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:47.929073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:48.929141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:48.993: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:49.929401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:50.929630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:50.997: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:51.929714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:52.929809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:53.001: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:53.929907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:54.930073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:55.005: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:55.930374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:56.930453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:57.010: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:57.930743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:53:58.931419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:53:59.013: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:53:59.931533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:00.931610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:01.017: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:01.932597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:02.932775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:03.021: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:03.933632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:04.933725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:05.025: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:05.934482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:06.935430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:07.030: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:07.936434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:08.936765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:09.035: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:09.937556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:10.937681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:11.039: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:11.937754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:12.937847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:13.043: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:13.938346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:14.939364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:15.048: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:15.939402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:16.939569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:17.053: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:17.940242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:18.940738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:19.057: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:19.941781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:20.941940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:21.060: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:21.942347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:22.943385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:23.065: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:23.944192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:24.945185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:25.068: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:25.945843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:26.945931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:27.072: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:27.946350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:28.946440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:29.077: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:29.946525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:30.947407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:31.081: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:31.948255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:32.948729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:33.085: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:33.949752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:34.949845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:35.089: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:35.950388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:36.950475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:37.093: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:37.951418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:38.951512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:39.097: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:39.951606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:40.951761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:41.101: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:41.952537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:42.953326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:43.106: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:43.954344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:44.954359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:45.110: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:45.954498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:46.955413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:47.114: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:47.955757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:48.955847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:49.119: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:49.956047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:50.956138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:51.123: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:51.956240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:52.956460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:53.127: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:53.956568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:54.957195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:55.132: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:55.958227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:56.958350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:57.136: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:57.958767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:54:58.959410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:54:59.140: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:54:59.959963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:00.960027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:01.144: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:01.960402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:02.961083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:03.149: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:03.961108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:04.961263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:05.153: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:05.962301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:06.962390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:07.158: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:07.962984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:08.963218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:09.163: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:09.963271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:10.964149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:11.168: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:11.964234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:12.964391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:13.172: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:13.964946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:14.965073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:15.176: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:15.965975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:16.966169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:17.180: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:17.966349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:18.967416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:19.183: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:19.967900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:20.968064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:21.188: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:21.968105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:22.968278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:23.192: INFO: Get pod liveness-08d2997d-3471-41b3-9546-c008e8559a87 in namespace container-probe-3037
  E1021 13:55:23.969263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:24.969429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:25.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/21/23 13:55:25.197
  STEP: Destroying namespace "container-probe-3037" for this suite. @ 10/21/23 13:55:25.21
• [242.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 10/21/23 13:55:25.218
  Oct 21 13:55:25.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename resourcequota @ 10/21/23 13:55:25.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:55:25.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:55:25.233
  STEP: Counting existing ResourceQuota @ 10/21/23 13:55:25.236
  E1021 13:55:25.970362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:26.971216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:27.971302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:28.971451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:29.971547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/21/23 13:55:30.24
  STEP: Ensuring resource quota status is calculated @ 10/21/23 13:55:30.246
  E1021 13:55:30.972224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:31.972329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 10/21/23 13:55:32.25
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/21/23 13:55:32.268
  E1021 13:55:32.972525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:33.973532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/21/23 13:55:34.271
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/21/23 13:55:34.274
  STEP: Ensuring a pod cannot update its resource requirements @ 10/21/23 13:55:34.276
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/21/23 13:55:34.28
  E1021 13:55:34.974592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:35.974684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/21/23 13:55:36.284
  STEP: Ensuring resource quota status released the pod usage @ 10/21/23 13:55:36.302
  E1021 13:55:36.974771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:37.975427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:55:38.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8436" for this suite. @ 10/21/23 13:55:38.31
• [13.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/21/23 13:55:38.317
  Oct 21 13:55:38.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-runtime @ 10/21/23 13:55:38.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:55:38.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:55:38.335
  STEP: create the container @ 10/21/23 13:55:38.339
  W1021 13:55:38.346601      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/21/23 13:55:38.346
  E1021 13:55:38.976478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:39.977404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:40.977496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/21/23 13:55:41.363
  STEP: the container should be terminated @ 10/21/23 13:55:41.366
  STEP: the termination message should be set @ 10/21/23 13:55:41.366
  Oct 21 13:55:41.366: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/21/23 13:55:41.366
  Oct 21 13:55:41.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3327" for this suite. @ 10/21/23 13:55:41.385
• [3.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 10/21/23 13:55:41.391
  Oct 21 13:55:41.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename configmap @ 10/21/23 13:55:41.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:55:41.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:55:41.409
  STEP: Creating configMap with name cm-test-opt-del-a20743ce-a940-4f9b-89ad-81a37d382f87 @ 10/21/23 13:55:41.415
  STEP: Creating configMap with name cm-test-opt-upd-f973dbcb-4be5-4229-b65d-e1ffc18213e5 @ 10/21/23 13:55:41.419
  STEP: Creating the pod @ 10/21/23 13:55:41.423
  E1021 13:55:41.977518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:42.977605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-a20743ce-a940-4f9b-89ad-81a37d382f87 @ 10/21/23 13:55:43.471
  STEP: Updating configmap cm-test-opt-upd-f973dbcb-4be5-4229-b65d-e1ffc18213e5 @ 10/21/23 13:55:43.477
  STEP: Creating configMap with name cm-test-opt-create-704b620c-902a-4e57-b11f-95b9517414fb @ 10/21/23 13:55:43.483
  STEP: waiting to observe update in volume @ 10/21/23 13:55:43.487
  E1021 13:55:43.977853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:44.977947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:45.978022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:46.978198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:47.979047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:48.980056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:49.980089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:50.980192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:51.981111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:52.981266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:53.981924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:54.982078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:55.982986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:56.983091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:57.984090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:58.984709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:55:59.985132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:00.985240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:01.986021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:02.986124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:03.986977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:04.987432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:05.988205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:06.988463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:07.988549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:08.988776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:09.989807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:10.989867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:11.990078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:12.990446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:13.991406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:14.991502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:15.991621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:16.992598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:17.993555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:18.993640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:19.994610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:20.995415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:21.996025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:22.996167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:23.997016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:24.997938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:25.998534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:26.998628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:27.999074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:28.999167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:29.999411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:30.999563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:32.000147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:33.000310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:34.000490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:35.000642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:36.001304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:37.001454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:38.002187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:39.002352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:40.002932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:41.003977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:42.005024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:43.005189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:44.005822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:45.005914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:46.005977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:47.006067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:56:47.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3302" for this suite. @ 10/21/23 13:56:47.724
• [66.338 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 10/21/23 13:56:47.73
  Oct 21 13:56:47.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:56:47.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:56:47.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:56:47.748
  STEP: Creating the pod @ 10/21/23 13:56:47.751
  E1021 13:56:48.006722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:49.007441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:50.008325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:56:50.300: INFO: Successfully updated pod "labelsupdate025b80dd-19f1-4f04-a781-3634b4b53990"
  E1021 13:56:51.008401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:52.008529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:53.009469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:54.009770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:56:54.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9323" for this suite. @ 10/21/23 13:56:54.325
• [6.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 10/21/23 13:56:54.331
  Oct 21 13:56:54.331: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:56:54.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:56:54.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:56:54.348
  STEP: creating service in namespace services-8673 @ 10/21/23 13:56:54.351
  STEP: creating service affinity-nodeport-transition in namespace services-8673 @ 10/21/23 13:56:54.352
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8673 @ 10/21/23 13:56:54.367
  I1021 13:56:54.378636      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-8673, replica count: 3
  E1021 13:56:55.009861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:56.010428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:57.010514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:56:57.428851      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 13:56:57.438: INFO: Creating new exec pod
  E1021 13:56:58.011442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:56:59.011825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:00.011995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:57:00.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-8673 exec execpod-affinityjpk4m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Oct 21 13:57:00.575: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Oct 21 13:57:00.575: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:57:00.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-8673 exec execpod-affinityjpk4m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.195 80'
  Oct 21 13:57:00.691: INFO: stderr: "+ nc -v -t -w 2 10.152.183.195 80\nConnection to 10.152.183.195 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 21 13:57:00.691: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:57:00.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-8673 exec execpod-affinityjpk4m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.2 31734'
  Oct 21 13:57:00.810: INFO: stderr: "+ nc -v -t -w 2 172.31.65.2 31734\n+ echo hostName\nConnection to 172.31.65.2 31734 port [tcp/*] succeeded!\n"
  Oct 21 13:57:00.810: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:57:00.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-8673 exec execpod-affinityjpk4m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.52 31734'
  Oct 21 13:57:00.923: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.52 31734\nConnection to 172.31.83.52 31734 port [tcp/*] succeeded!\n"
  Oct 21 13:57:00.924: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 13:57:00.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-8673 exec execpod-affinityjpk4m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.41.152:31734/ ; done'
  E1021 13:57:01.012857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:57:01.130: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n"
  Oct 21 13:57:01.130: INFO: stdout: "\naffinity-nodeport-transition-rrsv5\naffinity-nodeport-transition-bnz62\naffinity-nodeport-transition-bnz62\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-rrsv5\naffinity-nodeport-transition-rrsv5\naffinity-nodeport-transition-rrsv5\naffinity-nodeport-transition-bnz62\naffinity-nodeport-transition-bnz62\naffinity-nodeport-transition-rrsv5\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-rrsv5\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-rrsv5"
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-rrsv5
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-bnz62
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-bnz62
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-rrsv5
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-rrsv5
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-rrsv5
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-bnz62
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-bnz62
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-rrsv5
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-rrsv5
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.130: INFO: Received response from host: affinity-nodeport-transition-rrsv5
  Oct 21 13:57:01.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-8673 exec execpod-affinityjpk4m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.41.152:31734/ ; done'
  Oct 21 13:57:01.333: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.41.152:31734/\n"
  Oct 21 13:57:01.334: INFO: stdout: "\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj\naffinity-nodeport-transition-k62nj"
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Received response from host: affinity-nodeport-transition-k62nj
  Oct 21 13:57:01.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:57:01.337: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8673, will wait for the garbage collector to delete the pods @ 10/21/23 13:57:01.35
  Oct 21 13:57:01.410: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.784338ms
  Oct 21 13:57:01.510: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.405569ms
  E1021 13:57:02.013542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:03.014541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:04.014945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8673" for this suite. @ 10/21/23 13:57:04.23
• [9.904 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/21/23 13:57:04.237
  Oct 21 13:57:04.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename container-runtime @ 10/21/23 13:57:04.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:57:04.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:57:04.257
  STEP: create the container @ 10/21/23 13:57:04.26
  W1021 13:57:04.267641      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/21/23 13:57:04.267
  E1021 13:57:05.015613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:06.016461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/21/23 13:57:06.277
  STEP: the container should be terminated @ 10/21/23 13:57:06.28
  STEP: the termination message should be set @ 10/21/23 13:57:06.281
  Oct 21 13:57:06.281: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/21/23 13:57:06.281
  Oct 21 13:57:06.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5792" for this suite. @ 10/21/23 13:57:06.298
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/21/23 13:57:06.304
  Oct 21 13:57:06.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename subpath @ 10/21/23 13:57:06.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:57:06.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:57:06.32
  STEP: Setting up data @ 10/21/23 13:57:06.326
  STEP: Creating pod pod-subpath-test-downwardapi-vsbv @ 10/21/23 13:57:06.335
  STEP: Creating a pod to test atomic-volume-subpath @ 10/21/23 13:57:06.335
  E1021 13:57:07.016660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:08.016829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:09.017603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:10.017680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:11.018507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:12.019439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:13.019515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:14.019610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:15.020548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:16.020714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:17.020810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:18.020897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:19.021826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:20.021916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:21.021999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:22.022191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:23.022788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:24.023419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:25.024382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:26.024489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:27.025100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:28.025186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:57:28.395
  Oct 21 13:57:28.398: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-subpath-test-downwardapi-vsbv container test-container-subpath-downwardapi-vsbv: <nil>
  STEP: delete the pod @ 10/21/23 13:57:28.403
  STEP: Deleting pod pod-subpath-test-downwardapi-vsbv @ 10/21/23 13:57:28.416
  Oct 21 13:57:28.416: INFO: Deleting pod "pod-subpath-test-downwardapi-vsbv" in namespace "subpath-9177"
  Oct 21 13:57:28.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9177" for this suite. @ 10/21/23 13:57:28.422
• [22.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 10/21/23 13:57:28.43
  Oct 21 13:57:28.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename webhook @ 10/21/23 13:57:28.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:57:28.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:57:28.448
  STEP: Setting up server cert @ 10/21/23 13:57:28.473
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/21/23 13:57:28.872
  STEP: Deploying the webhook pod @ 10/21/23 13:57:28.881
  STEP: Wait for the deployment to be ready @ 10/21/23 13:57:28.893
  Oct 21 13:57:28.900: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1021 13:57:29.025576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:30.025682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:57:30.91
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:57:30.92
  E1021 13:57:31.025912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:57:31.920: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/21/23 13:57:31.926
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/21/23 13:57:31.926
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/21/23 13:57:31.939
  E1021 13:57:32.026617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/21/23 13:57:32.949
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/21/23 13:57:32.949
  E1021 13:57:33.026936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 10/21/23 13:57:33.973
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/21/23 13:57:33.973
  E1021 13:57:34.027534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:35.027652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:36.027801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:37.027949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:38.028056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/21/23 13:57:39.001
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/21/23 13:57:39.001
  E1021 13:57:39.028981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:40.029214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:41.029301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:42.029370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:43.029536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:57:44.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1021 13:57:44.029858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-2905" for this suite. @ 10/21/23 13:57:44.089
  STEP: Destroying namespace "webhook-markers-9673" for this suite. @ 10/21/23 13:57:44.093
• [15.669 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/21/23 13:57:44.1
  Oct 21 13:57:44.100: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 13:57:44.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:57:44.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:57:44.118
  STEP: creating the pod @ 10/21/23 13:57:44.122
  STEP: setting up watch @ 10/21/23 13:57:44.122
  STEP: submitting the pod to kubernetes @ 10/21/23 13:57:44.225
  STEP: verifying the pod is in kubernetes @ 10/21/23 13:57:44.235
  STEP: verifying pod creation was observed @ 10/21/23 13:57:44.241
  E1021 13:57:45.029993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:46.030087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/21/23 13:57:46.254
  STEP: verifying pod deletion was observed @ 10/21/23 13:57:46.268
  E1021 13:57:47.030673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:57:47.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6706" for this suite. @ 10/21/23 13:57:47.324
• [3.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 10/21/23 13:57:47.33
  Oct 21 13:57:47.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename svcaccounts @ 10/21/23 13:57:47.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:57:47.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:57:47.345
  STEP: Creating a pod to test service account token:  @ 10/21/23 13:57:47.348
  E1021 13:57:48.031279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:49.031464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:50.032147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:51.032328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:57:51.365
  Oct 21 13:57:51.368: INFO: Trying to get logs from node ip-172-31-83-52 pod test-pod-aaf18d66-e2f1-49be-81e3-6f7039116587 container agnhost-container: <nil>
  STEP: delete the pod @ 10/21/23 13:57:51.374
  Oct 21 13:57:51.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4602" for this suite. @ 10/21/23 13:57:51.391
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 10/21/23 13:57:51.398
  Oct 21 13:57:51.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubectl @ 10/21/23 13:57:51.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:57:51.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:57:51.414
  Oct 21 13:57:51.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-2475 create -f -'
  Oct 21 13:57:51.562: INFO: stderr: ""
  Oct 21 13:57:51.562: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Oct 21 13:57:51.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-2475 create -f -'
  Oct 21 13:57:51.710: INFO: stderr: ""
  Oct 21 13:57:51.710: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/21/23 13:57:51.71
  E1021 13:57:52.032377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:57:52.714: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 13:57:52.714: INFO: Found 0 / 1
  E1021 13:57:53.033336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:57:53.715: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 13:57:53.715: INFO: Found 1 / 1
  Oct 21 13:57:53.715: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct 21 13:57:53.718: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 21 13:57:53.718: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 21 13:57:53.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-2475 describe pod agnhost-primary-h5gvj'
  Oct 21 13:57:53.772: INFO: stderr: ""
  Oct 21 13:57:53.772: INFO: stdout: "Name:             agnhost-primary-h5gvj\nNamespace:        kubectl-2475\nPriority:         0\nService Account:  default\nNode:             ip-172-31-83-52/172.31.83.52\nStart Time:       Sat, 21 Oct 2023 13:57:51 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.47.187\nIPs:\n  IP:           192.168.47.187\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4815edfd96c02d74b6d3900c0edf05fc0d697f7fc0309e0f0c3e41c935228fd8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 21 Oct 2023 13:57:52 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-zhd9j (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-zhd9j:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-2475/agnhost-primary-h5gvj to ip-172-31-83-52\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Oct 21 13:57:53.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-2475 describe rc agnhost-primary'
  Oct 21 13:57:53.828: INFO: stderr: ""
  Oct 21 13:57:53.828: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2475\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-h5gvj\n"
  Oct 21 13:57:53.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-2475 describe service agnhost-primary'
  Oct 21 13:57:53.883: INFO: stderr: ""
  Oct 21 13:57:53.883: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2475\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.50\nIPs:               10.152.183.50\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.47.187:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Oct 21 13:57:53.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-2475 describe node ip-172-31-10-176'
  Oct 21 13:57:53.956: INFO: stderr: ""
  Oct 21 13:57:53.956: INFO: stdout: "Name:               ip-172-31-10-176\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-10-176\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 21 Oct 2023 12:07:47 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-10-176\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 21 Oct 2023 13:57:45 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 21 Oct 2023 12:08:28 +0000   Sat, 21 Oct 2023 12:08:28 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 21 Oct 2023 13:54:10 +0000   Sat, 21 Oct 2023 12:14:48 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 21 Oct 2023 13:54:10 +0000   Sat, 21 Oct 2023 12:14:48 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 21 Oct 2023 13:54:10 +0000   Sat, 21 Oct 2023 12:14:48 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 21 Oct 2023 13:54:10 +0000   Sat, 21 Oct 2023 12:14:48 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.10.176\n  Hostname:    ip-172-31-10-176\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16094900Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15992500Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec27a1f591f7b76ae4d5515c6ca27286\n  System UUID:                ec27a1f5-91f7-b76a-e4d5-515c6ca27286\n  Boot ID:                    f1bb83a4-d022-4055-b480-66313ac671a6\n  Kernel Version:             6.2.0-1014-aws\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.28.3\n  Kube-Proxy Version:         v1.28.3\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-7mcjn                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         110m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-497088b1692046a9-792dr    0 (0%)        0 (0%)      0 (0%)           0 (0%)         96m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Oct 21 13:57:53.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=kubectl-2475 describe namespace kubectl-2475'
  Oct 21 13:57:54.010: INFO: stderr: ""
  Oct 21 13:57:54.010: INFO: stdout: "Name:         kubectl-2475\nLabels:       e2e-framework=kubectl\n              e2e-run=7d7a92f8-d48a-4491-a070-3e4a900a55a3\n              kubernetes.io/metadata.name=kubectl-2475\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Oct 21 13:57:54.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2475" for this suite. @ 10/21/23 13:57:54.014
• [2.623 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 10/21/23 13:57:54.021
  Oct 21 13:57:54.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-preemption @ 10/21/23 13:57:54.021
  E1021 13:57:54.033495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:57:54.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:57:54.04
  Oct 21 13:57:54.054: INFO: Waiting up to 1m0s for all nodes to be ready
  E1021 13:57:55.034311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:56.034401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:57.035430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:58.035466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:57:59.035538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:00.035980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:01.036084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:02.036183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:03.036252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:04.036637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:05.036706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:06.036796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:07.036916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:08.037563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:09.037916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:10.037752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:11.037882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:12.037955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:13.038051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:14.038341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:15.038443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:16.039413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:17.040008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:18.040340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:19.041137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:20.041226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:21.041314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:22.041467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:23.042498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:24.042590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:25.043077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:26.043171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:27.043368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:28.043515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:29.043604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:30.044161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:31.045110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:32.045202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:33.045367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:34.046057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:35.046136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:36.046310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:37.046358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:38.046685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:39.046759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:40.047419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:41.047499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:42.047659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:43.048503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:44.048597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:45.048684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:46.048782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:47.048882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:48.049066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:49.049618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:50.049776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:51.050776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:52.051413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:53.051457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:54.051548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:58:54.074: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/21/23 13:58:54.077
  Oct 21 13:58:54.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/21/23 13:58:54.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:58:54.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:58:54.123
  STEP: Finding an available node @ 10/21/23 13:58:54.126
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/21/23 13:58:54.126
  E1021 13:58:55.051646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:56.054758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/21/23 13:58:56.157
  Oct 21 13:58:56.169: INFO: found a healthy node: ip-172-31-83-52
  E1021 13:58:57.055433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:58.056312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:58:59.056399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:00.056500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:01.056678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:02.056762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:02.241: INFO: pods created so far: [1 1 1]
  Oct 21 13:59:02.241: INFO: length of pods created so far: 3
  E1021 13:59:03.057386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:04.057984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:04.254: INFO: pods created so far: [2 2 1]
  E1021 13:59:05.058372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:06.058470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:07.058560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:08.059617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:09.059702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:10.059860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:11.060055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:11.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 13:59:11.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-93" for this suite. @ 10/21/23 13:59:11.317
  STEP: Destroying namespace "sched-preemption-8231" for this suite. @ 10/21/23 13:59:11.324
• [77.308 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/21/23 13:59:11.329
  Oct 21 13:59:11.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename kubelet-test @ 10/21/23 13:59:11.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:11.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:11.348
  E1021 13:59:12.060131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:13.060949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:14.061062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:15.061374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:15.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3365" for this suite. @ 10/21/23 13:59:15.37
• [4.047 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 10/21/23 13:59:15.376
  Oct 21 13:59:15.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename namespaces @ 10/21/23 13:59:15.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:15.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:15.395
  STEP: Read namespace status @ 10/21/23 13:59:15.399
  Oct 21 13:59:15.402: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/21/23 13:59:15.402
  Oct 21 13:59:15.408: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/21/23 13:59:15.408
  Oct 21 13:59:15.415: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Oct 21 13:59:15.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5148" for this suite. @ 10/21/23 13:59:15.419
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 10/21/23 13:59:15.425
  Oct 21 13:59:15.425: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 13:59:15.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:15.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:15.442
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-518 @ 10/21/23 13:59:15.446
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/21/23 13:59:15.454
  STEP: creating service externalsvc in namespace services-518 @ 10/21/23 13:59:15.455
  STEP: creating replication controller externalsvc in namespace services-518 @ 10/21/23 13:59:15.471
  I1021 13:59:15.481447      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-518, replica count: 2
  E1021 13:59:16.061662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:17.061983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:18.062208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 13:59:18.532880      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/21/23 13:59:18.536
  Oct 21 13:59:18.547: INFO: Creating new exec pod
  E1021 13:59:19.063149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:20.063228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:20.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-518 exec execpodj9h27 -- /bin/sh -x -c nslookup clusterip-service.services-518.svc.cluster.local'
  Oct 21 13:59:20.690: INFO: stderr: "+ nslookup clusterip-service.services-518.svc.cluster.local\n"
  Oct 21 13:59:20.690: INFO: stdout: "Server:\t\t10.152.183.118\nAddress:\t10.152.183.118#53\n\nclusterip-service.services-518.svc.cluster.local\tcanonical name = externalsvc.services-518.svc.cluster.local.\nName:\texternalsvc.services-518.svc.cluster.local\nAddress: 10.152.183.216\n\n"
  Oct 21 13:59:20.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-518, will wait for the garbage collector to delete the pods @ 10/21/23 13:59:20.695
  Oct 21 13:59:20.756: INFO: Deleting ReplicationController externalsvc took: 7.574567ms
  Oct 21 13:59:20.857: INFO: Terminating ReplicationController externalsvc pods took: 100.205729ms
  E1021 13:59:21.063687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:22.064641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:23.065653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:23.573: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-518" for this suite. @ 10/21/23 13:59:23.585
• [8.166 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 10/21/23 13:59:23.591
  Oct 21 13:59:23.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename security-context-test @ 10/21/23 13:59:23.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:23.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:23.607
  E1021 13:59:24.066432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:25.066516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:26.066624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:27.066706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:27.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7281" for this suite. @ 10/21/23 13:59:27.632
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 10/21/23 13:59:27.639
  Oct 21 13:59:27.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename replicaset @ 10/21/23 13:59:27.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:27.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:27.653
  Oct 21 13:59:27.673: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1021 13:59:28.067603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:29.068611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:30.068784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:31.068885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:32.068951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:32.678: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/21/23 13:59:32.678
  STEP: Scaling up "test-rs" replicaset  @ 10/21/23 13:59:32.678
  Oct 21 13:59:32.687: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/21/23 13:59:32.687
  Oct 21 13:59:32.696: INFO: observed ReplicaSet test-rs in namespace replicaset-3523 with ReadyReplicas 1, AvailableReplicas 1
  Oct 21 13:59:32.710: INFO: observed ReplicaSet test-rs in namespace replicaset-3523 with ReadyReplicas 1, AvailableReplicas 1
  Oct 21 13:59:32.727: INFO: observed ReplicaSet test-rs in namespace replicaset-3523 with ReadyReplicas 1, AvailableReplicas 1
  Oct 21 13:59:32.735: INFO: observed ReplicaSet test-rs in namespace replicaset-3523 with ReadyReplicas 1, AvailableReplicas 1
  E1021 13:59:33.069798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:33.402: INFO: observed ReplicaSet test-rs in namespace replicaset-3523 with ReadyReplicas 2, AvailableReplicas 2
  Oct 21 13:59:33.916: INFO: observed Replicaset test-rs in namespace replicaset-3523 with ReadyReplicas 3 found true
  Oct 21 13:59:33.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3523" for this suite. @ 10/21/23 13:59:33.919
• [6.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 10/21/23 13:59:33.926
  Oct 21 13:59:33.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename gc @ 10/21/23 13:59:33.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:33.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:33.945
  STEP: create the rc @ 10/21/23 13:59:33.951
  W1021 13:59:33.958033      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1021 13:59:34.070275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:35.070369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:36.071447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:37.072117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:38.072563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/21/23 13:59:38.961
  STEP: wait for all pods to be garbage collected @ 10/21/23 13:59:38.968
  E1021 13:59:39.072741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:40.072846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:41.072940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:42.073026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:43.073452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/21/23 13:59:43.975
  W1021 13:59:43.980461      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 21 13:59:43.980: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 21 13:59:43.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9660" for this suite. @ 10/21/23 13:59:43.984
• [10.063 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 10/21/23 13:59:43.991
  Oct 21 13:59:43.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:59:43.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:44.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:44.008
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:59:44.011
  E1021 13:59:44.073889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:45.074015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:46.074955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:47.075027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:59:48.03
  Oct 21 13:59:48.033: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-f73a6ec6-9d0f-45b3-9cec-6e39a8ef6233 container client-container: <nil>
  STEP: delete the pod @ 10/21/23 13:59:48.044
  Oct 21 13:59:48.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4752" for this suite. @ 10/21/23 13:59:48.067
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/21/23 13:59:48.074
  Oct 21 13:59:48.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename events @ 10/21/23 13:59:48.075
  E1021 13:59:48.075334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:48.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:48.091
  STEP: creating a test event @ 10/21/23 13:59:48.094
  STEP: listing events in all namespaces @ 10/21/23 13:59:48.102
  STEP: listing events in test namespace @ 10/21/23 13:59:48.105
  STEP: listing events with field selection filtering on source @ 10/21/23 13:59:48.108
  STEP: listing events with field selection filtering on reportingController @ 10/21/23 13:59:48.111
  STEP: getting the test event @ 10/21/23 13:59:48.113
  STEP: patching the test event @ 10/21/23 13:59:48.116
  STEP: getting the test event @ 10/21/23 13:59:48.124
  STEP: updating the test event @ 10/21/23 13:59:48.127
  STEP: getting the test event @ 10/21/23 13:59:48.133
  STEP: deleting the test event @ 10/21/23 13:59:48.135
  STEP: listing events in all namespaces @ 10/21/23 13:59:48.141
  STEP: listing events in test namespace @ 10/21/23 13:59:48.144
  Oct 21 13:59:48.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9698" for this suite. @ 10/21/23 13:59:48.15
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/21/23 13:59:48.162
  Oct 21 13:59:48.162: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename secrets @ 10/21/23 13:59:48.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:48.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:48.183
  STEP: Creating secret with name secret-test-e40211ac-b44b-429b-b683-e10dc558f1ff @ 10/21/23 13:59:48.185
  STEP: Creating a pod to test consume secrets @ 10/21/23 13:59:48.19
  E1021 13:59:49.075467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:50.075563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:51.075657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:52.075741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 13:59:52.214
  Oct 21 13:59:52.217: INFO: Trying to get logs from node ip-172-31-83-52 pod pod-secrets-5f252d70-155a-477f-8518-562eca345d9d container secret-volume-test: <nil>
  STEP: delete the pod @ 10/21/23 13:59:52.223
  Oct 21 13:59:52.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-782" for this suite. @ 10/21/23 13:59:52.24
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 10/21/23 13:59:52.251
  Oct 21 13:59:52.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename crd-webhook @ 10/21/23 13:59:52.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:52.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:52.269
  STEP: Setting up server cert @ 10/21/23 13:59:52.272
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/21/23 13:59:52.582
  STEP: Deploying the custom resource conversion webhook pod @ 10/21/23 13:59:52.589
  STEP: Wait for the deployment to be ready @ 10/21/23 13:59:52.602
  Oct 21 13:59:52.609: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1021 13:59:53.076531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:54.077315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/21/23 13:59:54.62
  STEP: Verifying the service has paired with the endpoint @ 10/21/23 13:59:54.631
  E1021 13:59:55.077342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 13:59:55.633: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct 21 13:59:55.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  E1021 13:59:56.078058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:57.079108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 13:59:58.079476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/21/23 13:59:58.197
  STEP: Create a v2 custom resource @ 10/21/23 13:59:58.213
  STEP: List CRs in v1 @ 10/21/23 13:59:58.247
  STEP: List CRs in v2 @ 10/21/23 13:59:58.251
  Oct 21 13:59:58.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7143" for this suite. @ 10/21/23 13:59:58.815
• [6.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 10/21/23 13:59:58.823
  Oct 21 13:59:58.823: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename downward-api @ 10/21/23 13:59:58.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 13:59:58.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 13:59:58.866
  STEP: Creating a pod to test downward API volume plugin @ 10/21/23 13:59:58.869
  E1021 13:59:59.080023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:00.080116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:01.080717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:02.080809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 14:00:02.895
  Oct 21 14:00:02.899: INFO: Trying to get logs from node ip-172-31-83-52 pod downwardapi-volume-724a1ba2-e3cb-4197-9b49-c5541a6133cb container client-container: <nil>
  STEP: delete the pod @ 10/21/23 14:00:02.905
  Oct 21 14:00:02.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3696" for this suite. @ 10/21/23 14:00:02.92
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 10/21/23 14:00:02.927
  Oct 21 14:00:02.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename services @ 10/21/23 14:00:02.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 14:00:02.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 14:00:02.945
  STEP: creating service in namespace services-6744 @ 10/21/23 14:00:02.948
  STEP: creating service affinity-clusterip-transition in namespace services-6744 @ 10/21/23 14:00:02.948
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6744 @ 10/21/23 14:00:02.957
  I1021 14:00:02.970804      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-6744, replica count: 3
  E1021 14:00:03.081271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:04.081504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:05.081604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1021 14:00:06.021642      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 21 14:00:06.029: INFO: Creating new exec pod
  E1021 14:00:06.081754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:07.081931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:08.082467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 14:00:09.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-6744 exec execpod-affinitys2jbf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E1021 14:00:09.082944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 21 14:00:09.169: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Oct 21 14:00:09.169: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 14:00:09.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-6744 exec execpod-affinitys2jbf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  Oct 21 14:00:09.296: INFO: stderr: "+ nc -v -t -w 2 10.152.183.40 80\n+ echo hostName\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  Oct 21 14:00:09.296: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 21 14:00:09.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-6744 exec execpod-affinitys2jbf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.40:80/ ; done'
  Oct 21 14:00:09.475: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n"
  Oct 21 14:00:09.475: INFO: stdout: "\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-d428f\naffinity-clusterip-transition-xjs46\naffinity-clusterip-transition-xjs46\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-xjs46\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-xjs46\naffinity-clusterip-transition-xjs46\naffinity-clusterip-transition-d428f\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-d428f\naffinity-clusterip-transition-xjs46\naffinity-clusterip-transition-d428f\naffinity-clusterip-transition-xjs46\naffinity-clusterip-transition-lxrvc"
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-d428f
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-xjs46
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-xjs46
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-xjs46
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-xjs46
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-xjs46
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-d428f
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-d428f
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-xjs46
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-d428f
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-xjs46
  Oct 21 14:00:09.475: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3739877478 --namespace=services-6744 exec execpod-affinitys2jbf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.40:80/ ; done'
  Oct 21 14:00:09.652: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.40:80/\n"
  Oct 21 14:00:09.652: INFO: stdout: "\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc\naffinity-clusterip-transition-lxrvc"
  Oct 21 14:00:09.652: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.652: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Received response from host: affinity-clusterip-transition-lxrvc
  Oct 21 14:00:09.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 21 14:00:09.657: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6744, will wait for the garbage collector to delete the pods @ 10/21/23 14:00:09.67
  Oct 21 14:00:09.731: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.29281ms
  Oct 21 14:00:09.832: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.773513ms
  E1021 14:00:10.083238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:11.083616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:12.083990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-6744" for this suite. @ 10/21/23 14:00:12.553
• [9.632 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/21/23 14:00:12.559
  Oct 21 14:00:12.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3739877478
  STEP: Building a namespace api object, basename pods @ 10/21/23 14:00:12.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/21/23 14:00:12.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/21/23 14:00:12.578
  E1021 14:00:13.084450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:14.084681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:15.085558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:16.085618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:17.085715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1021 14:00:18.086622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/21/23 14:00:18.639
  Oct 21 14:00:18.642: INFO: Trying to get logs from node ip-172-31-41-152 pod client-envvars-1b195897-2378-44a3-9c41-a282897ad772 container env3cont: <nil>
  STEP: delete the pod @ 10/21/23 14:00:18.656
  Oct 21 14:00:18.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4691" for this suite. @ 10/21/23 14:00:18.67
• [6.118 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Oct 21 14:00:18.678: INFO: Running AfterSuite actions on node 1
  Oct 21 14:00:18.678: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.031 seconds]
------------------------------

Ran 380 of 7387 Specs in 5900.479 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h38m20.735019879s
Test Suite Passed
