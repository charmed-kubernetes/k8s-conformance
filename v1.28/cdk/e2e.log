  I1014 12:19:46.039105      19 e2e.go:117] Starting e2e run "8554ae27-d7aa-42b5-815e-f33729f793c8" on Ginkgo node 1
  Oct 14 12:19:46.092: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1697285985 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Oct 14 12:19:46.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:19:46.548: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Oct 14 12:19:46.623: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Oct 14 12:19:46.630: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Oct 14 12:19:46.630: INFO: e2e test version: v1.28.2
  Oct 14 12:19:46.632: INFO: kube-apiserver version: v1.28.2
  Oct 14 12:19:46.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:19:46.640: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 10/14/23 12:19:47.401
  Oct 14 12:19:47.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:19:47.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:19:47.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:19:47.432
  STEP: Creating a pod to test downward api env vars @ 10/14/23 12:19:47.436
  STEP: Saw pod success @ 10/14/23 12:19:55.475
  Oct 14 12:19:55.480: INFO: Trying to get logs from node ip-172-31-35-21 pod downward-api-39b801de-c661-4162-bd7c-08cc3a78922e container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 12:19:55.509
  Oct 14 12:19:55.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2422" for this suite. @ 10/14/23 12:19:55.532
• [8.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 10/14/23 12:19:55.541
  Oct 14 12:19:55.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/23 12:19:55.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:19:55.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:19:55.567
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/23 12:19:55.575
  STEP: create the pod with lifecycle hook @ 10/14/23 12:19:59.607
  STEP: check poststart hook @ 10/14/23 12:20:05.642
  STEP: delete the pod with lifecycle hook @ 10/14/23 12:20:05.67
  Oct 14 12:20:09.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5784" for this suite. @ 10/14/23 12:20:09.708
• [14.178 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 10/14/23 12:20:09.721
  Oct 14 12:20:09.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:20:09.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:09.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:09.748
  STEP: Creating configMap with name projected-configmap-test-volume-4ab7a10e-c682-44ce-b25a-3ce04da4770e @ 10/14/23 12:20:09.755
  STEP: Creating a pod to test consume configMaps @ 10/14/23 12:20:09.763
  STEP: Saw pod success @ 10/14/23 12:20:13.794
  Oct 14 12:20:13.798: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-configmaps-9a3457af-2c4b-4dcd-91f6-6d6a6bf66e7b container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 12:20:13.807
  Oct 14 12:20:13.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6711" for this suite. @ 10/14/23 12:20:13.83
• [4.118 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/14/23 12:20:13.839
  Oct 14 12:20:13.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 12:20:13.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:13.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:13.866
  Oct 14 12:20:13.876: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Oct 14 12:20:13.887: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct 14 12:20:18.893: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/23 12:20:18.893
  Oct 14 12:20:20.902: INFO: Creating deployment "test-rolling-update-deployment"
  Oct 14 12:20:20.910: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Oct 14 12:20:20.919: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Oct 14 12:20:22.929: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Oct 14 12:20:22.933: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Oct 14 12:20:22.945: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6986fc37-d98e-4bab-bde2-afd74b906506",
      ResourceVersion: (string) (len=4) "2811",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 14 12:20:22.953: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4f05eca-4988-497c-8c35-73e46d380e04",
      ResourceVersion: (string) (len=4) "2801",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6986fc37-d98e-4bab-bde2-afd74b906506",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 38 36 66 63  33 37 2d 64 39 38 65 2d  |\"6986fc37-d98e-|
              00000120  34 62 61 62 2d 62 64 65  32 2d 61 66 64 37 34 62  |4bab-bde2-afd74b|
              00000130  39 30 36 35 30 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |906506\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:20:22.956: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Oct 14 12:20:22.956: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "374c14e5-44f2-46be-b359-1d1e2628f754",
      ResourceVersion: (string) (len=4) "2810",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882813,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6986fc37-d98e-4bab-bde2-afd74b906506",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 39 38 36 66 63 33  |"uid\":\"6986fc3|
              000000b0  37 2d 64 39 38 65 2d 34  62 61 62 2d 62 64 65 32  |7-d98e-4bab-bde2|
              000000c0  2d 61 66 64 37 34 62 39  30 36 35 30 36 5c 22 7d  |-afd74b906506\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:20:22.963: INFO: Pod "test-rolling-update-deployment-7f5c55c64-xwfvx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-xwfvx",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=14) "deployment-201",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "254f5c03-d25c-468e-9350-51b20c9fe090",
      ResourceVersion: (string) (len=4) "2800",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "b4f05eca-4988-497c-8c35-73e46d380e04",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  66 30 35 65 63 61 2d 34  |d\":\"b4f05eca-4|
              00000090  39 38 38 2d 34 39 37 63  2d 38 63 33 35 2d 37 33  |988-497c-8c35-73|
              000000a0  65 34 36 64 33 38 30 65  30 34 5c 22 7d 22 3a 7b  |e46d380e04\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 32 37 2e 31 33 34 5c  |192.168.127.134\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nz8bc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nz8bc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832882821,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://4fbeb11298d5002af2a0b4e43d34298ba734744fc146840d2c63731393d50841",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:20:22.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-201" for this suite. @ 10/14/23 12:20:22.976
• [9.146 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 10/14/23 12:20:22.987
  Oct 14 12:20:22.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 12:20:22.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:23.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:23.012
  STEP: creating a Deployment @ 10/14/23 12:20:23.02
  Oct 14 12:20:23.021: INFO: Creating simple deployment test-deployment-z7kh8
  Oct 14 12:20:23.036: INFO: deployment "test-deployment-z7kh8" doesn't have the required revision set
  Oct 14 12:20:25.048: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-z7kh8-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:20:27.059: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-z7kh8-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 10/14/23 12:20:29.057
  Oct 14 12:20:29.064: INFO: Deployment test-deployment-z7kh8 has Conditions: [{Available True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7kh8-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/14/23 12:20:29.065
  Oct 14 12:20:29.079: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 20, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 20, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 20, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 20, 23, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-z7kh8-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/14/23 12:20:29.079
  Oct 14 12:20:29.082: INFO: Observed &Deployment event: ADDED
  Oct 14 12:20:29.082: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7kh8-5d576bd769"}
  Oct 14 12:20:29.083: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.083: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7kh8-5d576bd769"}
  Oct 14 12:20:29.083: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 14 12:20:29.084: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.084: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 14 12:20:29.084: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z7kh8-5d576bd769" is progressing.}
  Oct 14 12:20:29.085: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.085: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 14 12:20:29.085: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7kh8-5d576bd769" has successfully progressed.}
  Oct 14 12:20:29.086: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.086: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 14 12:20:29.086: INFO: Observed Deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7kh8-5d576bd769" has successfully progressed.}
  Oct 14 12:20:29.086: INFO: Found Deployment test-deployment-z7kh8 in namespace deployment-3708 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 14 12:20:29.086: INFO: Deployment test-deployment-z7kh8 has an updated status
  STEP: patching the Statefulset Status @ 10/14/23 12:20:29.086
  Oct 14 12:20:29.086: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 14 12:20:29.094: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/14/23 12:20:29.095
  Oct 14 12:20:29.098: INFO: Observed &Deployment event: ADDED
  Oct 14 12:20:29.098: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7kh8-5d576bd769"}
  Oct 14 12:20:29.099: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.099: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7kh8-5d576bd769"}
  Oct 14 12:20:29.099: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 14 12:20:29.099: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.099: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 14 12:20:29.100: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:23 +0000 UTC 2023-10-14 12:20:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z7kh8-5d576bd769" is progressing.}
  Oct 14 12:20:29.100: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.100: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 14 12:20:29.100: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7kh8-5d576bd769" has successfully progressed.}
  Oct 14 12:20:29.101: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.101: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 14 12:20:29.101: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-14 12:20:28 +0000 UTC 2023-10-14 12:20:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7kh8-5d576bd769" has successfully progressed.}
  Oct 14 12:20:29.101: INFO: Observed deployment test-deployment-z7kh8 in namespace deployment-3708 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 14 12:20:29.102: INFO: Observed &Deployment event: MODIFIED
  Oct 14 12:20:29.102: INFO: Found deployment test-deployment-z7kh8 in namespace deployment-3708 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Oct 14 12:20:29.102: INFO: Deployment test-deployment-z7kh8 has a patched status
  Oct 14 12:20:29.107: INFO: Deployment "test-deployment-z7kh8":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-z7kh8",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3708",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cc97d5b-47d8-4627-9643-5e8016ca2ca6",
      ResourceVersion: (string) (len=4) "2888",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-z7kh8-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 14 12:20:29.116: INFO: New ReplicaSet "test-deployment-z7kh8-5d576bd769" of Deployment "test-deployment-z7kh8":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-z7kh8-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3708",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6879acb-ed5a-42cd-82ca-24fa7c85d22e",
      ResourceVersion: (string) (len=4) "2880",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-z7kh8",
          UID: (types.UID) (len=36) "6cc97d5b-47d8-4627-9643-5e8016ca2ca6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 63 63  |k:{\"uid\":\"6cc|
              00000120  39 37 64 35 62 2d 34 37  64 38 2d 34 36 32 37 2d  |97d5b-47d8-4627-|
              00000130  39 36 34 33 2d 35 65 38  30 31 36 63 61 32 63 61  |9643-5e8016ca2ca|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:20:29.130: INFO: Pod "test-deployment-z7kh8-5d576bd769-zcvxx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-z7kh8-5d576bd769-zcvxx",
      GenerateName: (string) (len=33) "test-deployment-z7kh8-5d576bd769-",
      Namespace: (string) (len=15) "deployment-3708",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da1d9145-8671-4ea4-a415-cd2a2f30f1cf",
      ResourceVersion: (string) (len=4) "2879",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-z7kh8-5d576bd769",
          UID: (types.UID) (len=36) "c6879acb-ed5a-42cd-82ca-24fa7c85d22e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 36 38 37 39 61 63  62 2d 65 64 35 61 2d 34  |"c6879acb-ed5a-4|
              000000a0  32 63 64 2d 38 32 63 61  2d 32 34 66 61 37 63 38  |2cd-82ca-24fa7c8|
              000000b0  35 64 32 32 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |5d22e\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 31 2e 33 5c 22 7d  |192.168.151.3\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4zsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4zsd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832882823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.151.3",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.151.3"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832882823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832882827,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f99cd40af0355ea763f2d16e2aa06800272281215bdc0f5398d8a53cec020984",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:20:29.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3708" for this suite. @ 10/14/23 12:20:29.141
• [6.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 10/14/23 12:20:29.149
  Oct 14 12:20:29.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename namespaces @ 10/14/23 12:20:29.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:29.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:29.18
  STEP: Read namespace status @ 10/14/23 12:20:29.184
  Oct 14 12:20:29.189: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/14/23 12:20:29.189
  Oct 14 12:20:29.195: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/14/23 12:20:29.195
  Oct 14 12:20:29.211: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Oct 14 12:20:29.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4008" for this suite. @ 10/14/23 12:20:29.216
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/14/23 12:20:29.229
  Oct 14 12:20:29.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:20:29.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:29.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:29.258
  STEP: Creating configMap with name configmap-projected-all-test-volume-295d1ecb-28a6-483a-b15e-eba3397aac51 @ 10/14/23 12:20:29.262
  STEP: Creating secret with name secret-projected-all-test-volume-d4913453-4205-4e01-9eb3-a038f0773ded @ 10/14/23 12:20:29.271
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/14/23 12:20:29.276
  STEP: Saw pod success @ 10/14/23 12:20:33.302
  Oct 14 12:20:33.305: INFO: Trying to get logs from node ip-172-31-35-21 pod projected-volume-08f9d6e7-9c30-4e30-babb-d36d46123b69 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 12:20:33.314
  Oct 14 12:20:33.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6146" for this suite. @ 10/14/23 12:20:33.345
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 10/14/23 12:20:33.355
  Oct 14 12:20:33.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:20:33.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:33.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:33.38
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:20:33.384
  STEP: Saw pod success @ 10/14/23 12:20:37.41
  Oct 14 12:20:37.414: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-8706d22b-6946-4e84-8150-730afdf2ac34 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:20:37.423
  Oct 14 12:20:37.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8839" for this suite. @ 10/14/23 12:20:37.446
• [4.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/14/23 12:20:37.456
  Oct 14 12:20:37.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:20:37.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:37.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:37.49
  STEP: Creating projection with secret that has name projected-secret-test-f4a41d3e-137c-4315-a319-b24039a4d07e @ 10/14/23 12:20:37.497
  STEP: Creating a pod to test consume secrets @ 10/14/23 12:20:37.503
  STEP: Saw pod success @ 10/14/23 12:20:41.534
  Oct 14 12:20:41.538: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-secrets-04ea2100-c6a8-4862-a9f2-97278d94af1f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 12:20:41.547
  Oct 14 12:20:41.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9473" for this suite. @ 10/14/23 12:20:41.572
• [4.124 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 10/14/23 12:20:41.582
  Oct 14 12:20:41.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 12:20:41.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:41.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:41.609
  STEP: Creating configMap that has name configmap-test-emptyKey-24012f17-3656-458e-abef-4167e631526d @ 10/14/23 12:20:41.617
  Oct 14 12:20:41.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2856" for this suite. @ 10/14/23 12:20:41.631
• [0.060 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 10/14/23 12:20:41.642
  Oct 14 12:20:41.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename security-context-test @ 10/14/23 12:20:41.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:41.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:41.67
  Oct 14 12:20:45.712: INFO: Got logs for pod "busybox-privileged-false-db3a4461-ea84-4466-9437-3afdb919fab1": "ip: RTNETLINK answers: Operation not permitted\n"
  Oct 14 12:20:45.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9004" for this suite. @ 10/14/23 12:20:45.718
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 10/14/23 12:20:45.732
  Oct 14 12:20:45.732: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/23 12:20:45.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:20:45.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:20:45.758
  STEP: Performing setup for networking test in namespace pod-network-test-6157 @ 10/14/23 12:20:45.762
  STEP: creating a selector @ 10/14/23 12:20:45.762
  STEP: Creating the service pods in kubernetes @ 10/14/23 12:20:45.762
  Oct 14 12:20:45.762: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/14/23 12:21:07.891
  Oct 14 12:21:09.915: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 14 12:21:09.915: INFO: Breadth first check of 192.168.9.7 on host 172.31.16.199...
  Oct 14 12:21:09.919: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.140:9080/dial?request=hostname&protocol=http&host=192.168.9.7&port=8083&tries=1'] Namespace:pod-network-test-6157 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:21:09.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:21:09.920: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:21:09.921: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6157/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.140%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.9.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 14 12:21:10.047: INFO: Waiting for responses: map[]
  Oct 14 12:21:10.047: INFO: reached 192.168.9.7 after 0/1 tries
  Oct 14 12:21:10.047: INFO: Breadth first check of 192.168.127.139 on host 172.31.35.21...
  Oct 14 12:21:10.051: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.140:9080/dial?request=hostname&protocol=http&host=192.168.127.139&port=8083&tries=1'] Namespace:pod-network-test-6157 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:21:10.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:21:10.052: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:21:10.052: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6157/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.140%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.127.139%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 14 12:21:10.146: INFO: Waiting for responses: map[]
  Oct 14 12:21:10.146: INFO: reached 192.168.127.139 after 0/1 tries
  Oct 14 12:21:10.146: INFO: Breadth first check of 192.168.151.4 on host 172.31.80.101...
  Oct 14 12:21:10.151: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.140:9080/dial?request=hostname&protocol=http&host=192.168.151.4&port=8083&tries=1'] Namespace:pod-network-test-6157 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:21:10.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:21:10.151: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:21:10.151: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6157/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.140%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.151.4%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 14 12:21:10.257: INFO: Waiting for responses: map[]
  Oct 14 12:21:10.257: INFO: reached 192.168.151.4 after 0/1 tries
  Oct 14 12:21:10.257: INFO: Going to retry 0 out of 3 pods....
  Oct 14 12:21:10.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6157" for this suite. @ 10/14/23 12:21:10.263
• [24.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 10/14/23 12:21:10.277
  Oct 14 12:21:10.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename gc @ 10/14/23 12:21:10.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:21:10.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:21:10.305
  STEP: create the rc @ 10/14/23 12:21:10.315
  W1014 12:21:10.322229      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/14/23 12:21:16.326
  STEP: wait for the rc to be deleted @ 10/14/23 12:21:16.335
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/14/23 12:21:21.346
  STEP: Gathering metrics @ 10/14/23 12:21:51.363
  W1014 12:21:51.371641      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 14 12:21:51.371: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 14 12:21:51.372: INFO: Deleting pod "simpletest.rc-24j7z" in namespace "gc-2392"
  Oct 14 12:21:51.387: INFO: Deleting pod "simpletest.rc-25n8k" in namespace "gc-2392"
  Oct 14 12:21:51.401: INFO: Deleting pod "simpletest.rc-2cnht" in namespace "gc-2392"
  Oct 14 12:21:51.414: INFO: Deleting pod "simpletest.rc-2n7gc" in namespace "gc-2392"
  Oct 14 12:21:51.438: INFO: Deleting pod "simpletest.rc-2r42g" in namespace "gc-2392"
  Oct 14 12:21:51.456: INFO: Deleting pod "simpletest.rc-2whtl" in namespace "gc-2392"
  Oct 14 12:21:51.471: INFO: Deleting pod "simpletest.rc-4999n" in namespace "gc-2392"
  Oct 14 12:21:51.488: INFO: Deleting pod "simpletest.rc-4jmh8" in namespace "gc-2392"
  Oct 14 12:21:51.507: INFO: Deleting pod "simpletest.rc-4lrwf" in namespace "gc-2392"
  Oct 14 12:21:51.523: INFO: Deleting pod "simpletest.rc-4rrf4" in namespace "gc-2392"
  Oct 14 12:21:51.541: INFO: Deleting pod "simpletest.rc-577qs" in namespace "gc-2392"
  Oct 14 12:21:51.560: INFO: Deleting pod "simpletest.rc-5gltz" in namespace "gc-2392"
  Oct 14 12:21:51.573: INFO: Deleting pod "simpletest.rc-5jkvg" in namespace "gc-2392"
  Oct 14 12:21:51.588: INFO: Deleting pod "simpletest.rc-5mn6v" in namespace "gc-2392"
  Oct 14 12:21:51.607: INFO: Deleting pod "simpletest.rc-5qkk7" in namespace "gc-2392"
  Oct 14 12:21:51.620: INFO: Deleting pod "simpletest.rc-65mqg" in namespace "gc-2392"
  Oct 14 12:21:51.634: INFO: Deleting pod "simpletest.rc-6fn46" in namespace "gc-2392"
  Oct 14 12:21:51.647: INFO: Deleting pod "simpletest.rc-6lwfv" in namespace "gc-2392"
  Oct 14 12:21:51.670: INFO: Deleting pod "simpletest.rc-7qmld" in namespace "gc-2392"
  Oct 14 12:21:51.685: INFO: Deleting pod "simpletest.rc-7rgdr" in namespace "gc-2392"
  Oct 14 12:21:51.700: INFO: Deleting pod "simpletest.rc-7tn4k" in namespace "gc-2392"
  Oct 14 12:21:51.717: INFO: Deleting pod "simpletest.rc-7v96q" in namespace "gc-2392"
  Oct 14 12:21:51.736: INFO: Deleting pod "simpletest.rc-82tjz" in namespace "gc-2392"
  Oct 14 12:21:51.755: INFO: Deleting pod "simpletest.rc-8cjdr" in namespace "gc-2392"
  Oct 14 12:21:51.769: INFO: Deleting pod "simpletest.rc-8ngbn" in namespace "gc-2392"
  Oct 14 12:21:51.784: INFO: Deleting pod "simpletest.rc-8qm82" in namespace "gc-2392"
  Oct 14 12:21:51.801: INFO: Deleting pod "simpletest.rc-8xnpd" in namespace "gc-2392"
  Oct 14 12:21:51.815: INFO: Deleting pod "simpletest.rc-99gfx" in namespace "gc-2392"
  Oct 14 12:21:51.832: INFO: Deleting pod "simpletest.rc-9khtm" in namespace "gc-2392"
  Oct 14 12:21:51.848: INFO: Deleting pod "simpletest.rc-9n7px" in namespace "gc-2392"
  Oct 14 12:21:51.864: INFO: Deleting pod "simpletest.rc-bj9wd" in namespace "gc-2392"
  Oct 14 12:21:51.880: INFO: Deleting pod "simpletest.rc-btcz5" in namespace "gc-2392"
  Oct 14 12:21:51.897: INFO: Deleting pod "simpletest.rc-c9h5t" in namespace "gc-2392"
  Oct 14 12:21:51.913: INFO: Deleting pod "simpletest.rc-c9scn" in namespace "gc-2392"
  Oct 14 12:21:51.929: INFO: Deleting pod "simpletest.rc-cf2ks" in namespace "gc-2392"
  Oct 14 12:21:51.945: INFO: Deleting pod "simpletest.rc-dwpn5" in namespace "gc-2392"
  Oct 14 12:21:51.963: INFO: Deleting pod "simpletest.rc-f2rdx" in namespace "gc-2392"
  Oct 14 12:21:51.977: INFO: Deleting pod "simpletest.rc-fbt52" in namespace "gc-2392"
  Oct 14 12:21:51.989: INFO: Deleting pod "simpletest.rc-fd8zc" in namespace "gc-2392"
  Oct 14 12:21:52.006: INFO: Deleting pod "simpletest.rc-fgvst" in namespace "gc-2392"
  Oct 14 12:21:52.020: INFO: Deleting pod "simpletest.rc-fhzwl" in namespace "gc-2392"
  Oct 14 12:21:52.038: INFO: Deleting pod "simpletest.rc-fj7f7" in namespace "gc-2392"
  Oct 14 12:21:52.055: INFO: Deleting pod "simpletest.rc-fk4jc" in namespace "gc-2392"
  Oct 14 12:21:52.070: INFO: Deleting pod "simpletest.rc-fpnhl" in namespace "gc-2392"
  Oct 14 12:21:52.085: INFO: Deleting pod "simpletest.rc-fzvt2" in namespace "gc-2392"
  Oct 14 12:21:52.101: INFO: Deleting pod "simpletest.rc-g4knk" in namespace "gc-2392"
  Oct 14 12:21:52.116: INFO: Deleting pod "simpletest.rc-hjlfc" in namespace "gc-2392"
  Oct 14 12:21:52.137: INFO: Deleting pod "simpletest.rc-jfsbm" in namespace "gc-2392"
  Oct 14 12:21:52.154: INFO: Deleting pod "simpletest.rc-jkg92" in namespace "gc-2392"
  Oct 14 12:21:52.170: INFO: Deleting pod "simpletest.rc-jwjz2" in namespace "gc-2392"
  Oct 14 12:21:52.185: INFO: Deleting pod "simpletest.rc-ktfvp" in namespace "gc-2392"
  Oct 14 12:21:52.200: INFO: Deleting pod "simpletest.rc-kvvcd" in namespace "gc-2392"
  Oct 14 12:21:52.215: INFO: Deleting pod "simpletest.rc-kxb25" in namespace "gc-2392"
  Oct 14 12:21:52.229: INFO: Deleting pod "simpletest.rc-kztbk" in namespace "gc-2392"
  Oct 14 12:21:52.245: INFO: Deleting pod "simpletest.rc-l962w" in namespace "gc-2392"
  Oct 14 12:21:52.273: INFO: Deleting pod "simpletest.rc-l9fvn" in namespace "gc-2392"
  Oct 14 12:21:52.297: INFO: Deleting pod "simpletest.rc-ldg6f" in namespace "gc-2392"
  Oct 14 12:21:52.324: INFO: Deleting pod "simpletest.rc-m8gms" in namespace "gc-2392"
  Oct 14 12:21:52.348: INFO: Deleting pod "simpletest.rc-m9bvw" in namespace "gc-2392"
  Oct 14 12:21:52.376: INFO: Deleting pod "simpletest.rc-mg52r" in namespace "gc-2392"
  Oct 14 12:21:52.391: INFO: Deleting pod "simpletest.rc-mh49l" in namespace "gc-2392"
  Oct 14 12:21:52.416: INFO: Deleting pod "simpletest.rc-nr7ht" in namespace "gc-2392"
  Oct 14 12:21:52.440: INFO: Deleting pod "simpletest.rc-nzpv7" in namespace "gc-2392"
  Oct 14 12:21:52.457: INFO: Deleting pod "simpletest.rc-pb2c7" in namespace "gc-2392"
  Oct 14 12:21:52.479: INFO: Deleting pod "simpletest.rc-pbxl7" in namespace "gc-2392"
  Oct 14 12:21:52.493: INFO: Deleting pod "simpletest.rc-pc5kf" in namespace "gc-2392"
  Oct 14 12:21:52.506: INFO: Deleting pod "simpletest.rc-pc6pm" in namespace "gc-2392"
  Oct 14 12:21:52.523: INFO: Deleting pod "simpletest.rc-pg8j6" in namespace "gc-2392"
  Oct 14 12:21:52.542: INFO: Deleting pod "simpletest.rc-q7ms5" in namespace "gc-2392"
  Oct 14 12:21:52.558: INFO: Deleting pod "simpletest.rc-qj9x9" in namespace "gc-2392"
  Oct 14 12:21:52.576: INFO: Deleting pod "simpletest.rc-rhxt8" in namespace "gc-2392"
  Oct 14 12:21:52.603: INFO: Deleting pod "simpletest.rc-rl9qj" in namespace "gc-2392"
  Oct 14 12:21:52.621: INFO: Deleting pod "simpletest.rc-rqhvc" in namespace "gc-2392"
  Oct 14 12:21:52.636: INFO: Deleting pod "simpletest.rc-rxgch" in namespace "gc-2392"
  Oct 14 12:21:52.666: INFO: Deleting pod "simpletest.rc-sb7kh" in namespace "gc-2392"
  Oct 14 12:21:52.724: INFO: Deleting pod "simpletest.rc-sddhh" in namespace "gc-2392"
  Oct 14 12:21:52.764: INFO: Deleting pod "simpletest.rc-sj67x" in namespace "gc-2392"
  Oct 14 12:21:52.816: INFO: Deleting pod "simpletest.rc-tjtm9" in namespace "gc-2392"
  Oct 14 12:21:52.867: INFO: Deleting pod "simpletest.rc-tqqk9" in namespace "gc-2392"
  Oct 14 12:21:52.918: INFO: Deleting pod "simpletest.rc-trn24" in namespace "gc-2392"
  Oct 14 12:21:52.965: INFO: Deleting pod "simpletest.rc-tvst7" in namespace "gc-2392"
  Oct 14 12:21:53.012: INFO: Deleting pod "simpletest.rc-v299w" in namespace "gc-2392"
  Oct 14 12:21:53.069: INFO: Deleting pod "simpletest.rc-v7rjr" in namespace "gc-2392"
  Oct 14 12:21:53.150: INFO: Deleting pod "simpletest.rc-v9scr" in namespace "gc-2392"
  Oct 14 12:21:53.167: INFO: Deleting pod "simpletest.rc-vph89" in namespace "gc-2392"
  Oct 14 12:21:53.218: INFO: Deleting pod "simpletest.rc-vrwwq" in namespace "gc-2392"
  Oct 14 12:21:53.275: INFO: Deleting pod "simpletest.rc-vsdch" in namespace "gc-2392"
  Oct 14 12:21:53.330: INFO: Deleting pod "simpletest.rc-vwq6k" in namespace "gc-2392"
  Oct 14 12:21:53.368: INFO: Deleting pod "simpletest.rc-w2hmk" in namespace "gc-2392"
  Oct 14 12:21:53.412: INFO: Deleting pod "simpletest.rc-w2sm4" in namespace "gc-2392"
  Oct 14 12:21:53.462: INFO: Deleting pod "simpletest.rc-wgvkq" in namespace "gc-2392"
  Oct 14 12:21:53.511: INFO: Deleting pod "simpletest.rc-wsbbh" in namespace "gc-2392"
  Oct 14 12:21:53.566: INFO: Deleting pod "simpletest.rc-wwmsg" in namespace "gc-2392"
  Oct 14 12:21:53.611: INFO: Deleting pod "simpletest.rc-wxksg" in namespace "gc-2392"
  Oct 14 12:21:53.664: INFO: Deleting pod "simpletest.rc-xcw85" in namespace "gc-2392"
  Oct 14 12:21:53.712: INFO: Deleting pod "simpletest.rc-xtvrr" in namespace "gc-2392"
  Oct 14 12:21:53.770: INFO: Deleting pod "simpletest.rc-zm58p" in namespace "gc-2392"
  Oct 14 12:21:53.815: INFO: Deleting pod "simpletest.rc-zs76q" in namespace "gc-2392"
  Oct 14 12:21:53.863: INFO: Deleting pod "simpletest.rc-zwq5t" in namespace "gc-2392"
  Oct 14 12:21:53.934: INFO: Deleting pod "simpletest.rc-zxhrb" in namespace "gc-2392"
  Oct 14 12:21:53.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2392" for this suite. @ 10/14/23 12:21:54.014
• [43.808 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/14/23 12:21:54.086
  Oct 14 12:21:54.086: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/14/23 12:21:54.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:21:54.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:21:54.125
  STEP: creating @ 10/14/23 12:21:54.131
  STEP: getting @ 10/14/23 12:21:54.153
  STEP: listing in namespace @ 10/14/23 12:21:54.16
  STEP: patching @ 10/14/23 12:21:54.165
  STEP: deleting @ 10/14/23 12:21:54.175
  Oct 14 12:21:54.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2462" for this suite. @ 10/14/23 12:21:54.203
• [0.127 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 10/14/23 12:21:54.214
  Oct 14 12:21:54.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/23 12:21:54.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:21:54.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:21:54.245
  STEP: reading a file in the container @ 10/14/23 12:22:06.338
  Oct 14 12:22:06.338: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5656 pod-service-account-49611491-bb5c-4e3e-ab41-92dafa69c0bd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/14/23 12:22:06.554
  Oct 14 12:22:06.554: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5656 pod-service-account-49611491-bb5c-4e3e-ab41-92dafa69c0bd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/14/23 12:22:06.754
  Oct 14 12:22:06.754: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5656 pod-service-account-49611491-bb5c-4e3e-ab41-92dafa69c0bd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Oct 14 12:22:06.964: INFO: Got root ca configmap in namespace "svcaccounts-5656"
  Oct 14 12:22:06.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5656" for this suite. @ 10/14/23 12:22:06.972
• [12.768 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 10/14/23 12:22:06.981
  Oct 14 12:22:06.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:22:06.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:22:07.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:22:07.014
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:22:07.019
  STEP: Saw pod success @ 10/14/23 12:22:11.049
  Oct 14 12:22:11.054: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-31c11dcf-a187-4916-a24b-0220a2b6ac96 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:22:11.082
  Oct 14 12:22:11.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3114" for this suite. @ 10/14/23 12:22:11.108
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 10/14/23 12:22:11.117
  Oct 14 12:22:11.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 12:22:11.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:22:11.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:22:11.146
  STEP: Creating pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854 @ 10/14/23 12:22:11.15
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 12:22:13.171
  Oct 14 12:22:13.175: INFO: Initial restart count of pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f is 0
  Oct 14 12:22:13.179: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:15.185: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:17.189: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:19.198: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:21.204: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:23.214: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:25.219: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:27.225: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:29.230: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:31.235: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:33.241: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:35.248: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:37.253: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:39.258: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:41.263: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:43.271: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:45.276: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:47.282: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:49.289: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:51.295: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:53.301: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:55.308: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:57.313: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:22:59.319: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:01.325: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:03.330: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:05.336: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:07.343: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:09.348: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:11.356: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:13.362: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:15.368: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:17.374: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:19.378: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:21.383: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:23.389: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:25.394: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:27.399: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:29.404: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:31.410: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:33.416: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:35.420: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:37.442: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:39.448: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:41.454: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:43.460: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:45.466: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:47.471: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:49.476: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:51.483: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:53.491: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:55.496: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:57.501: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:23:59.507: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:01.514: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:03.520: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:05.526: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:07.533: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:09.538: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:11.544: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:13.549: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:15.555: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:17.560: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:19.565: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:21.570: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:23.575: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:25.580: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:27.584: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:29.589: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:31.595: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:33.601: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:35.605: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:37.612: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:39.616: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:41.622: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:43.629: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:45.635: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:47.640: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:49.644: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:51.650: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:53.656: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:55.661: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:57.667: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:24:59.673: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:01.677: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:03.684: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:05.689: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:07.695: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:09.700: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:11.706: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:13.712: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:15.717: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:17.722: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:19.727: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:21.732: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:23.738: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:25.743: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:27.748: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:29.754: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:31.759: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:33.765: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:35.771: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:37.776: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:39.781: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:41.786: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:43.792: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:45.797: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:47.803: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:49.808: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:51.815: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:53.822: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:55.829: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:57.835: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:25:59.841: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:26:01.846: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:26:03.852: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:26:05.857: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:26:07.864: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:26:09.869: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:26:11.875: INFO: Get pod liveness-e212ca15-e54e-4141-b3ce-7977b410b14f in namespace container-probe-8854
  Oct 14 12:26:13.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 12:26:13.882
  STEP: Destroying namespace "container-probe-8854" for this suite. @ 10/14/23 12:26:13.898
• [242.795 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 10/14/23 12:26:13.913
  Oct 14 12:26:13.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:26:13.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:13.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:13.942
  STEP: validating api versions @ 10/14/23 12:26:13.946
  Oct 14 12:26:13.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9579 api-versions'
  Oct 14 12:26:14.036: INFO: stderr: ""
  Oct 14 12:26:14.036: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Oct 14 12:26:14.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9579" for this suite. @ 10/14/23 12:26:14.041
• [0.136 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 10/14/23 12:26:14.049
  Oct 14 12:26:14.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename podtemplate @ 10/14/23 12:26:14.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:14.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:14.077
  STEP: Create a pod template @ 10/14/23 12:26:14.081
  STEP: Replace a pod template @ 10/14/23 12:26:14.09
  Oct 14 12:26:14.101: INFO: Found updated podtemplate annotation: "true"

  Oct 14 12:26:14.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-297" for this suite. @ 10/14/23 12:26:14.108
• [0.067 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 10/14/23 12:26:14.117
  Oct 14 12:26:14.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename gc @ 10/14/23 12:26:14.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:14.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:14.143
  STEP: create the deployment @ 10/14/23 12:26:14.147
  W1014 12:26:14.155413      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/14/23 12:26:14.155
  STEP: delete the deployment @ 10/14/23 12:26:14.668
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/14/23 12:26:14.678
  STEP: Gathering metrics @ 10/14/23 12:26:15.205
  W1014 12:26:15.212640      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 14 12:26:15.212: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 14 12:26:15.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4996" for this suite. @ 10/14/23 12:26:15.22
• [1.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 10/14/23 12:26:15.231
  Oct 14 12:26:15.231: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:26:15.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:15.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:15.259
  STEP: create deployment with httpd image @ 10/14/23 12:26:15.264
  Oct 14 12:26:15.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8581 create -f -'
  Oct 14 12:26:15.529: INFO: stderr: ""
  Oct 14 12:26:15.529: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/14/23 12:26:15.529
  Oct 14 12:26:15.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8581 diff -f -'
  Oct 14 12:26:16.238: INFO: rc: 1
  Oct 14 12:26:16.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8581 delete -f -'
  Oct 14 12:26:16.337: INFO: stderr: ""
  Oct 14 12:26:16.337: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Oct 14 12:26:16.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8581" for this suite. @ 10/14/23 12:26:16.342
• [1.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 10/14/23 12:26:16.353
  Oct 14 12:26:16.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 12:26:16.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:16.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:16.382
  STEP: creating a Service @ 10/14/23 12:26:16.39
  STEP: watching for the Service to be added @ 10/14/23 12:26:16.407
  Oct 14 12:26:16.410: INFO: Found Service test-service-prf48 in namespace services-136 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Oct 14 12:26:16.411: INFO: Service test-service-prf48 created
  STEP: Getting /status @ 10/14/23 12:26:16.412
  Oct 14 12:26:16.419: INFO: Service test-service-prf48 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/14/23 12:26:16.42
  STEP: watching for the Service to be patched @ 10/14/23 12:26:16.431
  Oct 14 12:26:16.433: INFO: observed Service test-service-prf48 in namespace services-136 with annotations: map[] & LoadBalancer: {[]}
  Oct 14 12:26:16.433: INFO: Found Service test-service-prf48 in namespace services-136 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Oct 14 12:26:16.433: INFO: Service test-service-prf48 has service status patched
  STEP: updating the ServiceStatus @ 10/14/23 12:26:16.433
  Oct 14 12:26:16.453: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/14/23 12:26:16.453
  Oct 14 12:26:16.455: INFO: Observed Service test-service-prf48 in namespace services-136 with annotations: map[] & Conditions: {[]}
  Oct 14 12:26:16.455: INFO: Observed event: &Service{ObjectMeta:{test-service-prf48  services-136  8b2ede1a-24d2-46e8-ac94-f825e50a0253 6863 0 2023-10-14 12:26:16 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-10-14 12:26:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-10-14 12:26:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.40,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.40],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Oct 14 12:26:16.456: INFO: Found Service test-service-prf48 in namespace services-136 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 14 12:26:16.456: INFO: Service test-service-prf48 has service status updated
  STEP: patching the service @ 10/14/23 12:26:16.456
  STEP: watching for the Service to be patched @ 10/14/23 12:26:16.471
  Oct 14 12:26:16.474: INFO: observed Service test-service-prf48 in namespace services-136 with labels: map[test-service-static:true]
  Oct 14 12:26:16.474: INFO: observed Service test-service-prf48 in namespace services-136 with labels: map[test-service-static:true]
  Oct 14 12:26:16.474: INFO: observed Service test-service-prf48 in namespace services-136 with labels: map[test-service-static:true]
  Oct 14 12:26:16.474: INFO: Found Service test-service-prf48 in namespace services-136 with labels: map[test-service:patched test-service-static:true]
  Oct 14 12:26:16.474: INFO: Service test-service-prf48 patched
  STEP: deleting the service @ 10/14/23 12:26:16.475
  STEP: watching for the Service to be deleted @ 10/14/23 12:26:16.489
  Oct 14 12:26:16.491: INFO: Observed event: ADDED
  Oct 14 12:26:16.491: INFO: Observed event: MODIFIED
  Oct 14 12:26:16.492: INFO: Observed event: MODIFIED
  Oct 14 12:26:16.492: INFO: Observed event: MODIFIED
  Oct 14 12:26:16.492: INFO: Found Service test-service-prf48 in namespace services-136 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Oct 14 12:26:16.492: INFO: Service test-service-prf48 deleted
  Oct 14 12:26:16.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-136" for this suite. @ 10/14/23 12:26:16.497
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 10/14/23 12:26:16.511
  Oct 14 12:26:16.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename security-context-test @ 10/14/23 12:26:16.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:16.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:16.54
  Oct 14 12:26:20.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7782" for this suite. @ 10/14/23 12:26:20.604
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/14/23 12:26:20.621
  Oct 14 12:26:20.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 12:26:20.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:20.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:20.657
  STEP: Creating secret with name secret-test-58f8bf06-564d-4c01-a0f8-f2d8a07c9428 @ 10/14/23 12:26:20.662
  STEP: Creating a pod to test consume secrets @ 10/14/23 12:26:20.678
  STEP: Saw pod success @ 10/14/23 12:26:24.713
  Oct 14 12:26:24.718: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-6088d25f-efc1-40d5-8ee5-dbf63bc1e1e7 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 12:26:24.739
  Oct 14 12:26:24.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9338" for this suite. @ 10/14/23 12:26:24.767
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 10/14/23 12:26:24.776
  Oct 14 12:26:24.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 12:26:24.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:24.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:24.813
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/14/23 12:26:24.818
  Oct 14 12:26:24.832: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1918  f2ff07cb-b217-4e7e-83c4-b70b89edfced 7019 0 2023-10-14 12:26:24 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-10-14 12:26:24 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hd2kc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hd2kc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/14/23 12:26:26.844
  Oct 14 12:26:26.844: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1918 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:26:26.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:26:26.845: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:26:26.845: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1918/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 10/14/23 12:26:26.972
  Oct 14 12:26:26.973: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1918 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:26:26.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:26:26.975: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:26:26.975: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1918/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 14 12:26:27.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 12:26:27.104: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-1918" for this suite. @ 10/14/23 12:26:27.121
• [2.359 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 10/14/23 12:26:27.138
  Oct 14 12:26:27.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 12:26:27.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:27.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:27.167
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/14/23 12:26:27.172
  STEP: Saw pod success @ 10/14/23 12:26:31.201
  Oct 14 12:26:31.205: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-29fcbf49-0615-4b23-852b-c72dc17c3733 container test-container: <nil>
  STEP: delete the pod @ 10/14/23 12:26:31.214
  Oct 14 12:26:31.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8709" for this suite. @ 10/14/23 12:26:31.241
• [4.111 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 10/14/23 12:26:31.25
  Oct 14 12:26:31.250: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 12:26:31.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:31.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:31.278
  STEP: Creating a test headless service @ 10/14/23 12:26:31.282
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1643.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1643.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/14/23 12:26:31.291
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1643.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1643.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/14/23 12:26:31.291
  STEP: creating a pod to probe DNS @ 10/14/23 12:26:31.291
  STEP: submitting the pod to kubernetes @ 10/14/23 12:26:31.291
  STEP: retrieving the pod @ 10/14/23 12:26:41.334
  STEP: looking for the results for each expected name from probers @ 10/14/23 12:26:41.339
  Oct 14 12:26:41.363: INFO: DNS probes using dns-1643/dns-test-4a8d0b2c-f5e6-4114-8e8c-c8ca043039ac succeeded

  Oct 14 12:26:41.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 12:26:41.369
  STEP: deleting the test headless service @ 10/14/23 12:26:41.384
  STEP: Destroying namespace "dns-1643" for this suite. @ 10/14/23 12:26:41.403
• [10.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 10/14/23 12:26:41.415
  Oct 14 12:26:41.415: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename cronjob @ 10/14/23 12:26:41.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:26:41.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:26:41.445
  STEP: Creating a ReplaceConcurrent cronjob @ 10/14/23 12:26:41.449
  STEP: Ensuring a job is scheduled @ 10/14/23 12:26:41.457
  STEP: Ensuring exactly one is scheduled @ 10/14/23 12:27:01.463
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/14/23 12:27:01.468
  STEP: Ensuring the job is replaced with a new one @ 10/14/23 12:27:01.472
  STEP: Removing cronjob @ 10/14/23 12:28:01.479
  Oct 14 12:28:01.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5495" for this suite. @ 10/14/23 12:28:01.492
• [80.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/14/23 12:28:01.508
  Oct 14 12:28:01.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 12:28:01.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:01.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:01.655
  Oct 14 12:28:01.660: INFO: Creating deployment "webserver-deployment"
  Oct 14 12:28:01.668: INFO: Waiting for observed generation 1
  Oct 14 12:28:03.678: INFO: Waiting for all required pods to come up
  Oct 14 12:28:03.684: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/14/23 12:28:03.684
  Oct 14 12:28:09.713: INFO: Waiting for deployment "webserver-deployment" to complete
  Oct 14 12:28:09.722: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Oct 14 12:28:09.740: INFO: Updating deployment webserver-deployment
  Oct 14 12:28:09.740: INFO: Waiting for observed generation 2
  Oct 14 12:28:11.754: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Oct 14 12:28:11.759: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Oct 14 12:28:11.763: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct 14 12:28:11.780: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Oct 14 12:28:11.780: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Oct 14 12:28:11.787: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct 14 12:28:11.797: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Oct 14 12:28:11.797: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Oct 14 12:28:11.810: INFO: Updating deployment webserver-deployment
  Oct 14 12:28:11.810: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Oct 14 12:28:11.822: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Oct 14 12:28:11.826: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Oct 14 12:28:11.840: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88292a0e-1d8b-49a0-94d8-b2ef3a21ef09",
      ResourceVersion: (string) (len=4) "7690",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 14 12:28:11.853: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed631a93-8055-4037-8c49-94fe774ce729",
      ResourceVersion: (string) (len=4) "7692",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "88292a0e-1d8b-49a0-94d8-b2ef3a21ef09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 32 39 32 61  30 65 2d 31 64 38 62 2d  |\"88292a0e-1d8b-|
              00000120  34 39 61 30 2d 39 34 64  38 2d 62 32 65 66 33 61  |49a0-94d8-b2ef3a|
              00000130  32 31 65 66 30 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |21ef09\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:28:11.855: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Oct 14 12:28:11.856: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
      ResourceVersion: (string) (len=4) "7691",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "88292a0e-1d8b-49a0-94d8-b2ef3a21ef09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 32 39 32 61  30 65 2d 31 64 38 62 2d  |\"88292a0e-1d8b-|
              00000120  34 39 61 30 2d 39 34 64  38 2d 62 32 65 66 33 61  |49a0-94d8-b2ef3a|
              00000130  32 31 65 66 30 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |21ef09\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:28:11.892: INFO: Pod "webserver-deployment-557759b7c7-4ntzg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4ntzg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b89b7217-e013-4cf9-a51c-24187cac9437",
      ResourceVersion: (string) (len=4) "7572",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  39 2e 34 32 5c 22 7d 22  |192.168.9.42\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lk528",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lk528",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.199",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.9.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.9.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883287,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1dcbab843a2962690a82fb6a7c13ce732c8be8ab8d965d0811af9dc3ae45aed0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.898: INFO: Pod "webserver-deployment-557759b7c7-5hptj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5hptj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ac80353-01d8-4600-8232-7794cf20201f",
      ResourceVersion: (string) (len=4) "7511",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 31 2e 34 33 5c 22  |192.168.151.43\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zpb6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zpb6b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.151.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.151.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883283,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4c6b9d54fd5412431b88fa85e2120679d09e5e4dcaf7ba1736f81d71b9c3f502",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.906: INFO: Pod "webserver-deployment-557759b7c7-6dls2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6dls2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ccdb27e-96fc-447e-a27a-4b2ef2838174",
      ResourceVersion: (string) (len=4) "7578",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  39 2e 34 31 5c 22 7d 22  |192.168.9.41\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5tvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5tvv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.199",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.9.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.9.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883286,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f7c8586a1dfcde65ed15314517e661c3fe135502742e012f49f7fb20747b98a9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.910: INFO: Pod "webserver-deployment-557759b7c7-c96jc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c96jc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3480ebd6-04eb-4026-a4d8-d398a0ea1995",
      ResourceVersion: (string) (len=4) "7519",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 31 2e 34 34 5c 22  |192.168.151.44\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h474s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h474s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.151.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.151.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883283,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2da00e981b5ae9f7802aec9728e8c642ef66e3b20ec6a9eced54d3221ec7370c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.914: INFO: Pod "webserver-deployment-557759b7c7-lz5f4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lz5f4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b7816ef-79d0-4bfe-a29d-fa378e1ecbef",
      ResourceVersion: (string) (len=4) "7534",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 32 37 2e 31 38 34 5c  |192.168.127.184\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxmfn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxmfn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.184",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.184"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883283,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://05bb6e7a76a49231ada305ec4d0bd3be5f2f1ceeb34f266869374d7472feca9d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.919: INFO: Pod "webserver-deployment-557759b7c7-pfxlh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pfxlh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02b8d117-104b-4b87-9445-8a47fe1e2a1f",
      ResourceVersion: (string) (len=4) "7695",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883291,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d54sf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d54sf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.921: INFO: Pod "webserver-deployment-557759b7c7-qk9js" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qk9js",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85d5c708-857e-405f-b1eb-eeb9343538c9",
      ResourceVersion: (string) (len=4) "7575",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  39 2e 34 33 5c 22 7d 22  |192.168.9.43\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t7l2p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t7l2p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.199",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.9.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.9.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883287,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://517d860a74cd633329e4e92fe51baa6ddedd27b2a9b201364fae5de4faad2dad",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.929: INFO: Pod "webserver-deployment-557759b7c7-tnbwq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tnbwq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56c9ab5b-2a04-4769-8bf4-a7fa62a4e4ee",
      ResourceVersion: (string) (len=4) "7515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 31 2e 34 35 5c 22  |192.168.151.45\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fr5ln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fr5ln",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.151.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.151.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883283,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://caa0e9ce9822caa0451b23af5f9038c9c36b44f46738142a0a6da9a23563a4d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.936: INFO: Pod "webserver-deployment-557759b7c7-vnsxr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vnsxr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca9ed498-8c18-4bb8-959c-07613e3ca9aa",
      ResourceVersion: (string) (len=4) "7699",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883291,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lzzvs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lzzvs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.939: INFO: Pod "webserver-deployment-557759b7c7-xb49l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xb49l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b82e4dd-81b0-43ac-b9c0-568f9d30cb05",
      ResourceVersion: (string) (len=4) "7703",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883291,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4p87m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4p87m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.949: INFO: Pod "webserver-deployment-557759b7c7-zxwlv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zxwlv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b865f27-bf9f-4ac3-8caa-93bf1d457fca",
      ResourceVersion: (string) (len=4) "7532",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "958eb586-e1f6-4439-ac03-41054afd4ff9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  38 65 62 35 38 36 2d 65  |d\":\"958eb586-e|
              00000090  31 66 36 2d 34 34 33 39  2d 61 63 30 33 2d 34 31  |1f6-4439-ac03-41|
              000000a0  30 35 34 61 66 64 34 66  66 39 5c 22 7d 22 3a 7b  |054afd4ff9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 32 37 2e 31 38 36 5c  |192.168.127.186\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wr2p2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wr2p2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.186",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.186"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832883283,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3eb1e43b39a4dae90104a3bedb99018281a83ca10a450040ba273b74fef67017",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.956: INFO: Pod "webserver-deployment-9b4f5bf69-57xd2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-57xd2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0da2fe87-1b38-45d8-8fd7-a933304bbd9b",
      ResourceVersion: (string) (len=4) "7683",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ed631a93-8055-4037-8c49-94fe774ce729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 33 31 61 39 33 2d 38  |d\":\"ed631a93-8|
              00000090  30 35 35 2d 34 30 33 37  2d 38 63 34 39 2d 39 34  |055-4037-8c49-94|
              000000a0  66 65 37 37 34 63 65 37  32 39 5c 22 7d 22 3a 7b  |fe774ce729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 35 31  2e 34 37 5c 22 7d 22 3a  |.168.151.47\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6h5g4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6h5g4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.151.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.151.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.965: INFO: Pod "webserver-deployment-9b4f5bf69-89s9p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-89s9p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c82f46d-6ded-49ab-a638-fa9196e58d10",
      ResourceVersion: (string) (len=4) "7686",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ed631a93-8055-4037-8c49-94fe774ce729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 33 31 61 39 33 2d 38  |d\":\"ed631a93-8|
              00000090  30 35 35 2d 34 30 33 37  2d 38 63 34 39 2d 39 34  |055-4037-8c49-94|
              000000a0  66 65 37 37 34 63 65 37  32 39 5c 22 7d 22 3a 7b  |fe774ce729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 32 37  2e 31 38 37 5c 22 7d 22  |.168.127.187\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpdkz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpdkz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.970: INFO: Pod "webserver-deployment-9b4f5bf69-8j6js" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8j6js",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83aaa93b-2edc-49c9-ac84-a0a1cf67e2d5",
      ResourceVersion: (string) (len=4) "7700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883291,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ed631a93-8055-4037-8c49-94fe774ce729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 33 31 61 39 33 2d 38  |d\":\"ed631a93-8|
              00000090  30 35 35 2d 34 30 33 37  2d 38 63 34 39 2d 39 34  |055-4037-8c49-94|
              000000a0  66 65 37 37 34 63 65 37  32 39 5c 22 7d 22 3a 7b  |fe774ce729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wqlp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wqlp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.974: INFO: Pod "webserver-deployment-9b4f5bf69-jlsv7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jlsv7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "475e0d98-2707-450b-b76b-e06c6d7b81ce",
      ResourceVersion: (string) (len=4) "7689",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ed631a93-8055-4037-8c49-94fe774ce729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 33 31 61 39 33 2d 38  |d\":\"ed631a93-8|
              00000090  30 35 35 2d 34 30 33 37  2d 38 63 34 39 2d 39 34  |055-4037-8c49-94|
              000000a0  66 65 37 37 34 63 65 37  32 39 5c 22 7d 22 3a 7b  |fe774ce729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 32 37  2e 31 38 38 5c 22 7d 22  |.168.127.188\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j7pb5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j7pb5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.977: INFO: Pod "webserver-deployment-9b4f5bf69-tcf98" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tcf98",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c2a690c-854f-4c0c-9e0c-eb09df54d7cf",
      ResourceVersion: (string) (len=4) "7679",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ed631a93-8055-4037-8c49-94fe774ce729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 33 31 61 39 33 2d 38  |d\":\"ed631a93-8|
              00000090  30 35 35 2d 34 30 33 37  2d 38 63 34 39 2d 39 34  |055-4037-8c49-94|
              000000a0  66 65 37 37 34 63 65 37  32 39 5c 22 7d 22 3a 7b  |fe774ce729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 35 31  2e 34 36 5c 22 7d 22 3a  |.168.151.46\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mkqs4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mkqs4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.151.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.151.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.980: INFO: Pod "webserver-deployment-9b4f5bf69-vhmkf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vhmkf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9790",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b1c02b3-545a-4417-a6e6-5a1a3b8a6457",
      ResourceVersion: (string) (len=4) "7660",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ed631a93-8055-4037-8c49-94fe774ce729",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  36 33 31 61 39 33 2d 38  |d\":\"ed631a93-8|
              00000090  30 35 35 2d 34 30 33 37  2d 38 63 34 39 2d 39 34  |055-4037-8c49-94|
              000000a0  66 65 37 37 34 63 65 37  32 39 5c 22 7d 22 3a 7b  |fe774ce729\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 39 2e 34  34 5c 22 7d 22 3a 7b 22  |.168.9.44\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtjkq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtjkq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-16-199",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.16.199",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.9.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.9.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883289,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:28:11.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9790" for this suite. @ 10/14/23 12:28:12.033
• [10.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 10/14/23 12:28:12.058
  Oct 14 12:28:12.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/23 12:28:12.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:12.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:12.242
  STEP: Performing setup for networking test in namespace pod-network-test-2127 @ 10/14/23 12:28:12.249
  STEP: creating a selector @ 10/14/23 12:28:12.25
  STEP: Creating the service pods in kubernetes @ 10/14/23 12:28:12.25
  Oct 14 12:28:12.250: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/14/23 12:28:34.402
  Oct 14 12:28:36.445: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 14 12:28:36.445: INFO: Going to poll 192.168.9.45 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 14 12:28:36.449: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.9.45 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2127 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:28:36.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:28:36.450: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:28:36.450: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2127/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.9.45+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 14 12:28:37.556: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct 14 12:28:37.556: INFO: Going to poll 192.168.127.190 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 14 12:28:37.561: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.127.190 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2127 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:28:37.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:28:37.562: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:28:37.562: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2127/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.127.190+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 14 12:28:38.662: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct 14 12:28:38.662: INFO: Going to poll 192.168.151.49 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 14 12:28:38.666: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.151.49 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2127 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:28:38.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:28:38.667: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:28:38.667: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2127/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.151.49+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 14 12:28:39.769: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct 14 12:28:39.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2127" for this suite. @ 10/14/23 12:28:39.777
• [27.728 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 10/14/23 12:28:39.788
  Oct 14 12:28:39.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename endpointslice @ 10/14/23 12:28:39.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:39.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:39.824
  STEP: getting /apis @ 10/14/23 12:28:39.829
  STEP: getting /apis/discovery.k8s.io @ 10/14/23 12:28:39.838
  STEP: getting /apis/discovery.k8s.iov1 @ 10/14/23 12:28:39.841
  STEP: creating @ 10/14/23 12:28:39.844
  STEP: getting @ 10/14/23 12:28:39.868
  STEP: listing @ 10/14/23 12:28:39.874
  STEP: watching @ 10/14/23 12:28:39.88
  Oct 14 12:28:39.880: INFO: starting watch
  STEP: cluster-wide listing @ 10/14/23 12:28:39.883
  STEP: cluster-wide watching @ 10/14/23 12:28:39.889
  Oct 14 12:28:39.889: INFO: starting watch
  STEP: patching @ 10/14/23 12:28:39.892
  STEP: updating @ 10/14/23 12:28:39.901
  Oct 14 12:28:39.916: INFO: waiting for watch events with expected annotations
  Oct 14 12:28:39.917: INFO: saw patched and updated annotations
  STEP: deleting @ 10/14/23 12:28:39.917
  STEP: deleting a collection @ 10/14/23 12:28:39.937
  Oct 14 12:28:39.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3391" for this suite. @ 10/14/23 12:28:39.962
• [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/14/23 12:28:39.978
  Oct 14 12:28:39.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/23 12:28:39.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:40.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:40.012
  Oct 14 12:28:42.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6826" for this suite. @ 10/14/23 12:28:42.066
• [2.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 10/14/23 12:28:42.077
  Oct 14 12:28:42.078: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:28:42.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:42.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:42.106
  STEP: Starting the proxy @ 10/14/23 12:28:42.114
  Oct 14 12:28:42.114: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7815 proxy --unix-socket=/tmp/kubectl-proxy-unix3895366067/test'
  STEP: retrieving proxy /api/ output @ 10/14/23 12:28:42.185
  Oct 14 12:28:42.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7815" for this suite. @ 10/14/23 12:28:42.191
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 10/14/23 12:28:42.201
  Oct 14 12:28:42.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename endpointslice @ 10/14/23 12:28:42.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:42.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:42.232
  Oct 14 12:28:42.248: INFO: Endpoints addresses: [172.31.15.236 172.31.19.33] , ports: [6443]
  Oct 14 12:28:42.248: INFO: EndpointSlices addresses: [172.31.15.236 172.31.19.33] , ports: [6443]
  Oct 14 12:28:42.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4603" for this suite. @ 10/14/23 12:28:42.254
• [0.133 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 10/14/23 12:28:42.335
  Oct 14 12:28:42.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:28:42.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:42.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:42.365
  STEP: Creating the pod @ 10/14/23 12:28:42.37
  Oct 14 12:28:44.921: INFO: Successfully updated pod "annotationupdateed6e04a3-2f85-4a77-92fc-38d4f2313706"
  Oct 14 12:28:46.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7316" for this suite. @ 10/14/23 12:28:46.948
• [4.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 10/14/23 12:28:46.959
  Oct 14 12:28:46.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 12:28:46.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:46.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:46.983
  STEP: Creating configMap with name configmap-test-upd-0971a12f-0e02-4821-8981-ebeb16116fcc @ 10/14/23 12:28:46.995
  STEP: Creating the pod @ 10/14/23 12:28:47.001
  STEP: Waiting for pod with text data @ 10/14/23 12:28:49.021
  STEP: Waiting for pod with binary data @ 10/14/23 12:28:49.05
  Oct 14 12:28:49.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1300" for this suite. @ 10/14/23 12:28:49.065
• [2.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 10/14/23 12:28:49.082
  Oct 14 12:28:49.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 12:28:49.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:49.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:49.108
  STEP: creating a ConfigMap @ 10/14/23 12:28:49.113
  STEP: fetching the ConfigMap @ 10/14/23 12:28:49.118
  STEP: patching the ConfigMap @ 10/14/23 12:28:49.123
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/14/23 12:28:49.13
  STEP: deleting the ConfigMap by collection with a label selector @ 10/14/23 12:28:49.135
  STEP: listing all ConfigMaps in test namespace @ 10/14/23 12:28:49.145
  Oct 14 12:28:49.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-299" for this suite. @ 10/14/23 12:28:49.156
• [0.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 10/14/23 12:28:49.168
  Oct 14 12:28:49.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 12:28:49.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:49.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:49.196
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/14/23 12:28:49.201
  STEP: Saw pod success @ 10/14/23 12:28:53.229
  Oct 14 12:28:53.233: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-282ac07d-6e56-4cc8-a4a9-b2d3cc13b53f container test-container: <nil>
  STEP: delete the pod @ 10/14/23 12:28:53.243
  Oct 14 12:28:53.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5410" for this suite. @ 10/14/23 12:28:53.268
• [4.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 10/14/23 12:28:53.278
  Oct 14 12:28:53.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:28:53.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:53.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:53.324
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:28:53.33
  STEP: Saw pod success @ 10/14/23 12:28:57.36
  Oct 14 12:28:57.364: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-c2789e3f-ca55-4900-afeb-c82307c050bd container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:28:57.373
  Oct 14 12:28:57.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1706" for this suite. @ 10/14/23 12:28:57.399
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/14/23 12:28:57.41
  Oct 14 12:28:57.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename subpath @ 10/14/23 12:28:57.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:28:57.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:28:57.44
  STEP: Setting up data @ 10/14/23 12:28:57.445
  STEP: Creating pod pod-subpath-test-configmap-7dc7 @ 10/14/23 12:28:57.465
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/23 12:28:57.465
  STEP: Saw pod success @ 10/14/23 12:29:21.551
  Oct 14 12:29:21.555: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-subpath-test-configmap-7dc7 container test-container-subpath-configmap-7dc7: <nil>
  STEP: delete the pod @ 10/14/23 12:29:21.565
  STEP: Deleting pod pod-subpath-test-configmap-7dc7 @ 10/14/23 12:29:21.586
  Oct 14 12:29:21.586: INFO: Deleting pod "pod-subpath-test-configmap-7dc7" in namespace "subpath-4681"
  Oct 14 12:29:21.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4681" for this suite. @ 10/14/23 12:29:21.596
• [24.195 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/14/23 12:29:21.608
  Oct 14 12:29:21.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename subjectreview @ 10/14/23 12:29:21.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:29:21.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:29:21.639
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3245" @ 10/14/23 12:29:21.645
  Oct 14 12:29:21.653: INFO: saUsername: "system:serviceaccount:subjectreview-3245:e2e"
  Oct 14 12:29:21.653: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3245"}
  Oct 14 12:29:21.653: INFO: saUID: "9742147b-a75f-4ea4-8f38-1384b4749e76"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3245:e2e" @ 10/14/23 12:29:21.653
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3245:e2e" @ 10/14/23 12:29:21.654
  Oct 14 12:29:21.657: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3245:e2e" api 'list' configmaps in "subjectreview-3245" namespace @ 10/14/23 12:29:21.657
  Oct 14 12:29:21.661: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3245:e2e" @ 10/14/23 12:29:21.661
  Oct 14 12:29:21.664: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Oct 14 12:29:21.664: INFO: LocalSubjectAccessReview has been verified
  Oct 14 12:29:21.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3245" for this suite. @ 10/14/23 12:29:21.671
• [0.070 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 10/14/23 12:29:21.683
  Oct 14 12:29:21.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename job @ 10/14/23 12:29:21.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:29:21.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:29:21.712
  STEP: Creating Indexed job @ 10/14/23 12:29:21.717
  STEP: Ensuring job reaches completions @ 10/14/23 12:29:21.725
  STEP: Ensuring pods with index for job exist @ 10/14/23 12:29:31.731
  Oct 14 12:29:31.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1960" for this suite. @ 10/14/23 12:29:31.742
• [10.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 10/14/23 12:29:31.754
  Oct 14 12:29:31.754: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename aggregator @ 10/14/23 12:29:31.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:29:31.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:29:31.785
  Oct 14 12:29:31.789: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Registering the sample API server. @ 10/14/23 12:29:31.791
  Oct 14 12:29:32.452: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Oct 14 12:29:32.491: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Oct 14 12:29:34.552: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:36.558: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:38.559: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:40.559: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:42.558: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:44.558: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:46.558: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:48.559: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:50.560: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:52.558: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:54.558: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:29:56.682: INFO: Waited 115.840743ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/14/23 12:29:56.74
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/14/23 12:29:56.746
  STEP: List APIServices @ 10/14/23 12:29:56.755
  Oct 14 12:29:56.762: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/14/23 12:29:56.762
  Oct 14 12:29:56.780: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/14/23 12:29:56.78
  Oct 14 12:29:56.794: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.October, 14, 12, 29, 56, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/14/23 12:29:56.794
  Oct 14 12:29:56.799: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-10-14 12:29:56 +0000 UTC Passed all checks passed}
  Oct 14 12:29:56.799: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 14 12:29:56.799: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/14/23 12:29:56.799
  Oct 14 12:29:56.814: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1652301984" @ 10/14/23 12:29:56.814
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/14/23 12:29:56.83
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/14/23 12:29:56.84
  STEP: Patch APIService Status @ 10/14/23 12:29:56.846
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/14/23 12:29:56.855
  Oct 14 12:29:56.861: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-10-14 12:29:56 +0000 UTC Passed all checks passed}
  Oct 14 12:29:56.861: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 14 12:29:56.862: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Oct 14 12:29:56.862: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 10/14/23 12:29:56.862
  STEP: Confirm that the generated APIService has been deleted @ 10/14/23 12:29:56.869
  Oct 14 12:29:56.869: INFO: Requesting list of APIServices to confirm quantity
  Oct 14 12:29:56.875: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Oct 14 12:29:56.875: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Oct 14 12:29:56.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5612" for this suite. @ 10/14/23 12:29:57.031
• [25.287 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 10/14/23 12:29:57.042
  Oct 14 12:29:57.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:29:57.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:29:57.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:29:57.077
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:29:57.084
  STEP: Saw pod success @ 10/14/23 12:30:01.115
  Oct 14 12:30:01.119: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-d00cbd04-439d-4e50-81a6-b9ba7fa8e9f2 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:30:01.127
  Oct 14 12:30:01.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8711" for this suite. @ 10/14/23 12:30:01.151
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 10/14/23 12:30:01.163
  Oct 14 12:30:01.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename gc @ 10/14/23 12:30:01.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:30:01.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:30:01.19
  STEP: create the rc1 @ 10/14/23 12:30:01.2
  STEP: create the rc2 @ 10/14/23 12:30:01.206
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/14/23 12:30:07.239
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/14/23 12:30:08.091
  STEP: wait for the rc to be deleted @ 10/14/23 12:30:08.138
  Oct 14 12:30:13.156: INFO: 67 pods remaining
  Oct 14 12:30:13.156: INFO: 67 pods has nil DeletionTimestamp
  Oct 14 12:30:13.156: INFO: 
  STEP: Gathering metrics @ 10/14/23 12:30:18.154
  W1014 12:30:18.162833      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 14 12:30:18.162: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 14 12:30:18.163: INFO: Deleting pod "simpletest-rc-to-be-deleted-2r5qz" in namespace "gc-6830"
  Oct 14 12:30:18.182: INFO: Deleting pod "simpletest-rc-to-be-deleted-2v6df" in namespace "gc-6830"
  Oct 14 12:30:18.196: INFO: Deleting pod "simpletest-rc-to-be-deleted-44d96" in namespace "gc-6830"
  Oct 14 12:30:18.217: INFO: Deleting pod "simpletest-rc-to-be-deleted-4h7pg" in namespace "gc-6830"
  Oct 14 12:30:18.237: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tlgj" in namespace "gc-6830"
  Oct 14 12:30:18.261: INFO: Deleting pod "simpletest-rc-to-be-deleted-4x9lh" in namespace "gc-6830"
  Oct 14 12:30:18.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-54sxt" in namespace "gc-6830"
  Oct 14 12:30:18.316: INFO: Deleting pod "simpletest-rc-to-be-deleted-555b9" in namespace "gc-6830"
  Oct 14 12:30:18.336: INFO: Deleting pod "simpletest-rc-to-be-deleted-598kf" in namespace "gc-6830"
  Oct 14 12:30:18.350: INFO: Deleting pod "simpletest-rc-to-be-deleted-5l7qc" in namespace "gc-6830"
  Oct 14 12:30:18.364: INFO: Deleting pod "simpletest-rc-to-be-deleted-5xdr9" in namespace "gc-6830"
  Oct 14 12:30:18.385: INFO: Deleting pod "simpletest-rc-to-be-deleted-68d6g" in namespace "gc-6830"
  Oct 14 12:30:18.399: INFO: Deleting pod "simpletest-rc-to-be-deleted-6d769" in namespace "gc-6830"
  Oct 14 12:30:18.418: INFO: Deleting pod "simpletest-rc-to-be-deleted-6thf2" in namespace "gc-6830"
  Oct 14 12:30:18.434: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bdcn" in namespace "gc-6830"
  Oct 14 12:30:18.456: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cqfn" in namespace "gc-6830"
  Oct 14 12:30:18.471: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mzkq" in namespace "gc-6830"
  Oct 14 12:30:18.490: INFO: Deleting pod "simpletest-rc-to-be-deleted-7pzlv" in namespace "gc-6830"
  Oct 14 12:30:18.505: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qgg6" in namespace "gc-6830"
  Oct 14 12:30:18.517: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tbvt" in namespace "gc-6830"
  Oct 14 12:30:18.537: INFO: Deleting pod "simpletest-rc-to-be-deleted-8cwj8" in namespace "gc-6830"
  Oct 14 12:30:18.554: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dn8m" in namespace "gc-6830"
  Oct 14 12:30:18.571: INFO: Deleting pod "simpletest-rc-to-be-deleted-8rpz2" in namespace "gc-6830"
  Oct 14 12:30:18.595: INFO: Deleting pod "simpletest-rc-to-be-deleted-952mx" in namespace "gc-6830"
  Oct 14 12:30:18.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-97bcg" in namespace "gc-6830"
  Oct 14 12:30:18.637: INFO: Deleting pod "simpletest-rc-to-be-deleted-9pdf7" in namespace "gc-6830"
  Oct 14 12:30:18.653: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rx45" in namespace "gc-6830"
  Oct 14 12:30:18.679: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tsrq" in namespace "gc-6830"
  Oct 14 12:30:18.695: INFO: Deleting pod "simpletest-rc-to-be-deleted-b75b6" in namespace "gc-6830"
  Oct 14 12:30:18.712: INFO: Deleting pod "simpletest-rc-to-be-deleted-bj94b" in namespace "gc-6830"
  Oct 14 12:30:18.744: INFO: Deleting pod "simpletest-rc-to-be-deleted-c82bw" in namespace "gc-6830"
  Oct 14 12:30:18.759: INFO: Deleting pod "simpletest-rc-to-be-deleted-cg55p" in namespace "gc-6830"
  Oct 14 12:30:18.774: INFO: Deleting pod "simpletest-rc-to-be-deleted-cqlx8" in namespace "gc-6830"
  Oct 14 12:30:18.792: INFO: Deleting pod "simpletest-rc-to-be-deleted-cszmj" in namespace "gc-6830"
  Oct 14 12:30:18.816: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgrrq" in namespace "gc-6830"
  Oct 14 12:30:18.833: INFO: Deleting pod "simpletest-rc-to-be-deleted-dr8jt" in namespace "gc-6830"
  Oct 14 12:30:18.852: INFO: Deleting pod "simpletest-rc-to-be-deleted-drg9n" in namespace "gc-6830"
  Oct 14 12:30:18.864: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4vbz" in namespace "gc-6830"
  Oct 14 12:30:18.880: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwrrt" in namespace "gc-6830"
  Oct 14 12:30:18.893: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2t7j" in namespace "gc-6830"
  Oct 14 12:30:18.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-g49fx" in namespace "gc-6830"
  Oct 14 12:30:18.973: INFO: Deleting pod "simpletest-rc-to-be-deleted-g6srs" in namespace "gc-6830"
  Oct 14 12:30:18.998: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfqtv" in namespace "gc-6830"
  Oct 14 12:30:19.055: INFO: Deleting pod "simpletest-rc-to-be-deleted-h62rz" in namespace "gc-6830"
  Oct 14 12:30:19.083: INFO: Deleting pod "simpletest-rc-to-be-deleted-h78lc" in namespace "gc-6830"
  Oct 14 12:30:19.097: INFO: Deleting pod "simpletest-rc-to-be-deleted-hht2t" in namespace "gc-6830"
  Oct 14 12:30:19.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpqg4" in namespace "gc-6830"
  Oct 14 12:30:19.167: INFO: Deleting pod "simpletest-rc-to-be-deleted-hsg5m" in namespace "gc-6830"
  Oct 14 12:30:19.210: INFO: Deleting pod "simpletest-rc-to-be-deleted-hsmb9" in namespace "gc-6830"
  Oct 14 12:30:19.249: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbhk9" in namespace "gc-6830"
  Oct 14 12:30:19.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6830" for this suite. @ 10/14/23 12:30:19.281
• [18.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 10/14/23 12:30:19.408
  Oct 14 12:30:19.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 12:30:19.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:30:19.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:30:19.583
  STEP: Setting up server cert @ 10/14/23 12:30:19.66
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 12:30:20.851
  STEP: Deploying the webhook pod @ 10/14/23 12:30:20.861
  STEP: Wait for the deployment to be ready @ 10/14/23 12:30:20.876
  Oct 14 12:30:20.886: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Oct 14 12:30:22.905: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:30:24.930: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 14 12:30:26.914: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 30, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/14/23 12:30:28.911
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 12:30:28.924
  Oct 14 12:30:29.924: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 14 12:30:29.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6347-crds.webhook.example.com via the AdmissionRegistration API @ 10/14/23 12:30:30.452
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/14/23 12:30:30.474
  Oct 14 12:30:32.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5661" for this suite. @ 10/14/23 12:30:33.117
  STEP: Destroying namespace "webhook-markers-6677" for this suite. @ 10/14/23 12:30:33.126
• [13.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 10/14/23 12:30:33.136
  Oct 14 12:30:33.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/23 12:30:33.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:30:33.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:30:33.161
  Oct 14 12:30:33.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:30:36.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7643" for this suite. @ 10/14/23 12:30:36.34
• [3.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 10/14/23 12:30:36.353
  Oct 14 12:30:36.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 12:30:36.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:30:36.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:30:36.379
  STEP: Setting up server cert @ 10/14/23 12:30:36.416
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 12:30:37.501
  STEP: Deploying the webhook pod @ 10/14/23 12:30:37.507
  STEP: Wait for the deployment to be ready @ 10/14/23 12:30:37.522
  Oct 14 12:30:37.532: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/23 12:30:39.546
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 12:30:39.565
  Oct 14 12:30:40.565: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/14/23 12:30:40.574
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/23 12:30:40.574
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/14/23 12:30:40.596
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/14/23 12:30:41.614
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/23 12:30:41.614
  STEP: Having no error when timeout is longer than webhook latency @ 10/14/23 12:30:42.659
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/23 12:30:42.659
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/14/23 12:30:47.706
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/23 12:30:47.706
  Oct 14 12:30:52.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8403" for this suite. @ 10/14/23 12:30:52.828
  STEP: Destroying namespace "webhook-markers-1601" for this suite. @ 10/14/23 12:30:52.835
• [16.502 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 10/14/23 12:30:52.861
  Oct 14 12:30:52.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/23 12:30:52.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:30:52.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:30:52.886
  STEP: Deleting RuntimeClass runtimeclass-361-delete-me @ 10/14/23 12:30:52.901
  STEP: Waiting for the RuntimeClass to disappear @ 10/14/23 12:30:52.911
  Oct 14 12:30:52.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-361" for this suite. @ 10/14/23 12:30:52.931
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/14/23 12:30:52.943
  Oct 14 12:30:52.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-runtime @ 10/14/23 12:30:52.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:30:52.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:30:52.974
  STEP: create the container @ 10/14/23 12:30:52.982
  W1014 12:30:52.992866      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/14/23 12:30:52.993
  STEP: get the container status @ 10/14/23 12:30:56.017
  STEP: the container should be terminated @ 10/14/23 12:30:56.022
  STEP: the termination message should be set @ 10/14/23 12:30:56.022
  Oct 14 12:30:56.022: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/14/23 12:30:56.022
  Oct 14 12:30:56.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6806" for this suite. @ 10/14/23 12:30:56.054
• [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 10/14/23 12:30:56.066
  Oct 14 12:30:56.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:30:56.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:30:56.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:30:56.094
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/23 12:30:56.099
  Oct 14 12:30:56.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7917 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct 14 12:30:56.206: INFO: stderr: ""
  Oct 14 12:30:56.206: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/14/23 12:30:56.206
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/14/23 12:31:01.257
  Oct 14 12:31:01.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7917 get pod e2e-test-httpd-pod -o json'
  Oct 14 12:31:01.352: INFO: stderr: ""
  Oct 14 12:31:01.352: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-10-14T12:30:56Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7917\",\n        \"resourceVersion\": \"11725\",\n        \"uid\": \"7d093112-ccda-4032-a705-6dc1b55fe519\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-r8gcm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-35-21\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-r8gcm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-14T12:30:56Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-14T12:30:57Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-14T12:30:57Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-14T12:30:56Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://e7c27c11b0a2beb480271ad25cfcd89c149f0c5f73394300b40e446f613401a2\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-10-14T12:30:57Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.35.21\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.127.148\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.127.148\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-10-14T12:30:56Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/14/23 12:31:01.353
  Oct 14 12:31:01.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7917 replace -f -'
  Oct 14 12:31:01.693: INFO: stderr: ""
  Oct 14 12:31:01.693: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 10/14/23 12:31:01.693
  Oct 14 12:31:01.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7917 delete pods e2e-test-httpd-pod'
  Oct 14 12:31:03.577: INFO: stderr: ""
  Oct 14 12:31:03.577: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 14 12:31:03.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7917" for this suite. @ 10/14/23 12:31:03.584
• [7.529 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 10/14/23 12:31:03.595
  Oct 14 12:31:03.595: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/23 12:31:03.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:03.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:03.623
  STEP: Performing setup for networking test in namespace pod-network-test-50 @ 10/14/23 12:31:03.628
  STEP: creating a selector @ 10/14/23 12:31:03.628
  STEP: Creating the service pods in kubernetes @ 10/14/23 12:31:03.628
  Oct 14 12:31:03.628: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/14/23 12:31:25.749
  Oct 14 12:31:27.796: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 14 12:31:27.796: INFO: Going to poll 192.168.9.26 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 14 12:31:27.800: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.9.26:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-50 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:31:27.800: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:31:27.801: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:31:27.801: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-50/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.9.26%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 14 12:31:27.973: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct 14 12:31:27.973: INFO: Going to poll 192.168.127.174 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 14 12:31:27.981: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.127.174:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-50 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:31:27.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:31:27.981: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:31:27.981: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-50/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.127.174%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 14 12:31:28.139: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct 14 12:31:28.140: INFO: Going to poll 192.168.151.30 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 14 12:31:28.144: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.151.30:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-50 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:31:28.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:31:28.145: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:31:28.145: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-50/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.151.30%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 14 12:31:28.270: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct 14 12:31:28.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-50" for this suite. @ 10/14/23 12:31:28.277
• [24.692 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 10/14/23 12:31:28.29
  Oct 14 12:31:28.290: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 12:31:28.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:28.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:28.326
  STEP: creating service endpoint-test2 in namespace services-7297 @ 10/14/23 12:31:28.33
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7297 to expose endpoints map[] @ 10/14/23 12:31:28.353
  Oct 14 12:31:28.359: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Oct 14 12:31:29.369: INFO: successfully validated that service endpoint-test2 in namespace services-7297 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7297 @ 10/14/23 12:31:29.369
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7297 to expose endpoints map[pod1:[80]] @ 10/14/23 12:31:31.399
  Oct 14 12:31:31.413: INFO: successfully validated that service endpoint-test2 in namespace services-7297 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/14/23 12:31:31.413
  Oct 14 12:31:31.413: INFO: Creating new exec pod
  Oct 14 12:31:34.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-7297 exec execpodxzwjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 14 12:31:34.678: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 14 12:31:34.678: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:31:34.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-7297 exec execpodxzwjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.179 80'
  Oct 14 12:31:34.873: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.179 80\nConnection to 10.152.183.179 80 port [tcp/http] succeeded!\n"
  Oct 14 12:31:34.873: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7297 @ 10/14/23 12:31:34.873
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7297 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/14/23 12:31:36.894
  Oct 14 12:31:36.909: INFO: successfully validated that service endpoint-test2 in namespace services-7297 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/14/23 12:31:36.91
  Oct 14 12:31:37.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-7297 exec execpodxzwjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 14 12:31:38.115: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 14 12:31:38.115: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:31:38.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-7297 exec execpodxzwjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.179 80'
  Oct 14 12:31:38.304: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.179 80\nConnection to 10.152.183.179 80 port [tcp/http] succeeded!\n"
  Oct 14 12:31:38.304: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7297 @ 10/14/23 12:31:38.304
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7297 to expose endpoints map[pod2:[80]] @ 10/14/23 12:31:38.317
  Oct 14 12:31:38.339: INFO: successfully validated that service endpoint-test2 in namespace services-7297 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/14/23 12:31:38.339
  Oct 14 12:31:39.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-7297 exec execpodxzwjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 14 12:31:39.555: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 14 12:31:39.555: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:31:39.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-7297 exec execpodxzwjs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.179 80'
  Oct 14 12:31:39.760: INFO: stderr: "+ nc -v -t -w 2 10.152.183.179 80\n+ echo hostName\nConnection to 10.152.183.179 80 port [tcp/http] succeeded!\n"
  Oct 14 12:31:39.760: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7297 @ 10/14/23 12:31:39.76
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7297 to expose endpoints map[] @ 10/14/23 12:31:39.775
  Oct 14 12:31:40.819: INFO: successfully validated that service endpoint-test2 in namespace services-7297 exposes endpoints map[]
  Oct 14 12:31:40.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7297" for this suite. @ 10/14/23 12:31:40.843
• [12.565 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/14/23 12:31:40.858
  Oct 14 12:31:40.858: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 12:31:40.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:40.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:40.89
  STEP: Create set of pods @ 10/14/23 12:31:40.969
  Oct 14 12:31:40.978: INFO: created test-pod-1
  Oct 14 12:31:40.986: INFO: created test-pod-2
  Oct 14 12:31:40.993: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/14/23 12:31:40.993
  STEP: waiting for all pods to be deleted @ 10/14/23 12:31:43.057
  Oct 14 12:31:43.062: INFO: Pod quantity 3 is different from expected quantity 0
  Oct 14 12:31:44.068: INFO: Pod quantity 3 is different from expected quantity 0
  Oct 14 12:31:45.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9323" for this suite. @ 10/14/23 12:31:45.073
• [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 10/14/23 12:31:45.087
  Oct 14 12:31:45.088: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:31:45.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:45.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:45.112
  STEP: Creating configMap with name projected-configmap-test-volume-e03ce4c6-81cc-441e-a418-92647eb70fde @ 10/14/23 12:31:45.117
  STEP: Creating a pod to test consume configMaps @ 10/14/23 12:31:45.127
  STEP: Saw pod success @ 10/14/23 12:31:49.152
  Oct 14 12:31:49.157: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-configmaps-c5b52fb9-ca93-4f5b-b8ef-6e70d05aed75 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 12:31:49.179
  Oct 14 12:31:49.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9502" for this suite. @ 10/14/23 12:31:49.204
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 10/14/23 12:31:49.225
  Oct 14 12:31:49.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename server-version @ 10/14/23 12:31:49.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:49.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:49.261
  STEP: Request ServerVersion @ 10/14/23 12:31:49.265
  STEP: Confirm major version @ 10/14/23 12:31:49.267
  Oct 14 12:31:49.267: INFO: Major version: 1
  STEP: Confirm minor version @ 10/14/23 12:31:49.267
  Oct 14 12:31:49.268: INFO: cleanMinorVersion: 28
  Oct 14 12:31:49.268: INFO: Minor version: 28
  Oct 14 12:31:49.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8635" for this suite. @ 10/14/23 12:31:49.274
• [0.059 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 10/14/23 12:31:49.284
  Oct 14 12:31:49.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename field-validation @ 10/14/23 12:31:49.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:49.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:49.314
  Oct 14 12:31:49.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  W1014 12:31:51.988377      19 warnings.go:70] unknown field "alpha"
  W1014 12:31:51.988554      19 warnings.go:70] unknown field "beta"
  W1014 12:31:51.988673      19 warnings.go:70] unknown field "delta"
  W1014 12:31:51.988997      19 warnings.go:70] unknown field "epsilon"
  W1014 12:31:51.989010      19 warnings.go:70] unknown field "gamma"
  Oct 14 12:31:52.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7981" for this suite. @ 10/14/23 12:31:52.565
• [3.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 10/14/23 12:31:52.579
  Oct 14 12:31:52.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:31:52.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:52.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:52.61
  Oct 14 12:31:52.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1210 create -f -'
  Oct 14 12:31:52.921: INFO: stderr: ""
  Oct 14 12:31:52.921: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Oct 14 12:31:52.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1210 create -f -'
  Oct 14 12:31:53.273: INFO: stderr: ""
  Oct 14 12:31:53.273: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/14/23 12:31:53.273
  Oct 14 12:31:54.278: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 12:31:54.278: INFO: Found 0 / 1
  Oct 14 12:31:55.277: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 12:31:55.277: INFO: Found 1 / 1
  Oct 14 12:31:55.277: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct 14 12:31:55.283: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 12:31:55.283: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 14 12:31:55.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1210 describe pod agnhost-primary-hgdd9'
  Oct 14 12:31:55.390: INFO: stderr: ""
  Oct 14 12:31:55.390: INFO: stdout: "Name:             agnhost-primary-hgdd9\nNamespace:        kubectl-1210\nPriority:         0\nService Account:  default\nNode:             ip-172-31-35-21/172.31.35.21\nStart Time:       Sat, 14 Oct 2023 12:31:52 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.127.180\nIPs:\n  IP:           192.168.127.180\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://bfeadfa782b6c672eb8fcd369c32f4cc5e9269390184c269c4d7138f270ae04c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 14 Oct 2023 12:31:53 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-d7fgp (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-d7fgp:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-1210/agnhost-primary-hgdd9 to ip-172-31-35-21\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Oct 14 12:31:55.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1210 describe rc agnhost-primary'
  Oct 14 12:31:55.504: INFO: stderr: ""
  Oct 14 12:31:55.504: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1210\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-hgdd9\n"
  Oct 14 12:31:55.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1210 describe service agnhost-primary'
  Oct 14 12:31:55.616: INFO: stderr: ""
  Oct 14 12:31:55.616: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1210\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.249\nIPs:               10.152.183.249\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.127.180:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Oct 14 12:31:55.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1210 describe node ip-172-31-15-236'
  Oct 14 12:31:55.764: INFO: stderr: ""
  Oct 14 12:31:55.764: INFO: stdout: "Name:               ip-172-31-15-236\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-15-236\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 14 Oct 2023 12:13:24 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-15-236\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 14 Oct 2023 12:31:47 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 14 Oct 2023 12:14:38 +0000   Sat, 14 Oct 2023 12:14:38 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 14 Oct 2023 12:30:13 +0000   Sat, 14 Oct 2023 12:13:24 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 14 Oct 2023 12:30:13 +0000   Sat, 14 Oct 2023 12:13:24 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 14 Oct 2023 12:30:13 +0000   Sat, 14 Oct 2023 12:13:24 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 14 Oct 2023 12:30:13 +0000   Sat, 14 Oct 2023 12:14:35 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.15.236\n  Hostname:    ip-172-31-15-236\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16111292Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16008892Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2abd702b9b04a9c4fd3a9477a725f6\n  System UUID:                ec2abd70-2b9b-04a9-c4fd-3a9477a725f6\n  Boot ID:                    98978f3b-7b4a-45c3-a88e-d38bd0accbc2\n  Kernel Version:             6.2.0-1013-aws\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.28.2\n  Kube-Proxy Version:         v1.28.2\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-p4dn6                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         18m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-2dxjr    0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason          Age   From             Message\n  ----    ------          ----  ----             -------\n  Normal  RegisteredNode  18m   node-controller  Node ip-172-31-15-236 event: Registered Node ip-172-31-15-236 in Controller\n"
  Oct 14 12:31:55.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1210 describe namespace kubectl-1210'
  Oct 14 12:31:55.885: INFO: stderr: ""
  Oct 14 12:31:55.885: INFO: stdout: "Name:         kubectl-1210\nLabels:       e2e-framework=kubectl\n              e2e-run=8554ae27-d7aa-42b5-815e-f33729f793c8\n              kubernetes.io/metadata.name=kubectl-1210\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Oct 14 12:31:55.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1210" for this suite. @ 10/14/23 12:31:55.892
• [3.325 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 10/14/23 12:31:55.904
  Oct 14 12:31:55.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename job @ 10/14/23 12:31:55.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:31:55.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:31:55.945
  STEP: Creating a suspended job @ 10/14/23 12:31:55.963
  STEP: Patching the Job @ 10/14/23 12:31:55.974
  STEP: Watching for Job to be patched @ 10/14/23 12:31:55.997
  Oct 14 12:31:56.000: INFO: Event ADDED observed for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-job-label:e2e-fqqgf] and annotations: map[]
  Oct 14 12:31:56.000: INFO: Event MODIFIED observed for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-job-label:e2e-fqqgf] and annotations: map[]
  Oct 14 12:31:56.001: INFO: Event MODIFIED found for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[]
  STEP: Updating the job @ 10/14/23 12:31:56.001
  STEP: Watching for Job to be updated @ 10/14/23 12:31:56.015
  Oct 14 12:31:56.017: INFO: Event MODIFIED found for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[updated:true]
  Oct 14 12:31:56.017: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/14/23 12:31:56.018
  Oct 14 12:31:56.024: INFO: Job: e2e-fqqgf as labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf]
  STEP: Waiting for job to complete @ 10/14/23 12:31:56.025
  STEP: Delete a job collection with a labelselector @ 10/14/23 12:32:04.031
  STEP: Watching for Job to be deleted @ 10/14/23 12:32:04.041
  Oct 14 12:32:04.043: INFO: Event MODIFIED observed for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[updated:true]
  Oct 14 12:32:04.043: INFO: Event MODIFIED observed for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[updated:true]
  Oct 14 12:32:04.043: INFO: Event MODIFIED observed for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[updated:true]
  Oct 14 12:32:04.044: INFO: Event MODIFIED observed for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[updated:true]
  Oct 14 12:32:04.044: INFO: Event MODIFIED observed for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[updated:true]
  Oct 14 12:32:04.044: INFO: Event DELETED found for Job e2e-fqqgf in namespace job-412 with labels: map[e2e-fqqgf:patched e2e-job-label:e2e-fqqgf] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/14/23 12:32:04.044
  Oct 14 12:32:04.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-412" for this suite. @ 10/14/23 12:32:04.054
• [8.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 10/14/23 12:32:04.073
  Oct 14 12:32:04.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-pred @ 10/14/23 12:32:04.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:04.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:04.114
  Oct 14 12:32:04.120: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 14 12:32:04.133: INFO: Waiting for terminating namespaces to be deleted...
  Oct 14 12:32:04.138: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-199 before test
  Oct 14 12:32:04.149: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-9c4nk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: nginx-ingress-controller-kubernetes-worker-2jwtx from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: calico-node-ffpcs from kube-system started at 2023-10-14 12:13:47 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: coredns-59cfb5bf46-rzv4m from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container coredns ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: kube-state-metrics-775d9f4f79-tpb2t from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: metrics-server-v0.6.3-69d7fbfdf8-wlkcq from kube-system started at 2023-10-14 12:14:07 +0000 UTC (2 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: dashboard-metrics-scraper-5dd7cb5fc-qbkfw from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: kubernetes-dashboard-7b899cb9d9-gzbsl from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 14 12:32:04.149: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-vvgmm from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:32:04.149: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:32:04.150: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 12:32:04.150: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-21 before test
  Oct 14 12:32:04.160: INFO: nginx-ingress-controller-kubernetes-worker-f7w62 from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:13 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.160: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 12:32:04.160: INFO: calico-node-gzndl from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.160: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 12:32:04.160: INFO: sonobuoy from sonobuoy started at 2023-10-14 12:19:26 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.160: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 14 12:32:04.160: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-89gbh from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:32:04.160: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:32:04.160: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 12:32:04.160: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-101 before test
  Oct 14 12:32:04.169: INFO: nginx-ingress-controller-kubernetes-worker-w9mvk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:12 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.169: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 12:32:04.169: INFO: calico-node-87d2x from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 12:32:04.169: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 12:32:04.169: INFO: sonobuoy-e2e-job-78ddb03d82ed452b from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:32:04.169: INFO: 	Container e2e ready: true, restart count 0
  Oct 14 12:32:04.169: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:32:04.169: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-gmddl from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:32:04.169: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:32:04.169: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-16-199 @ 10/14/23 12:32:04.197
  STEP: verifying the node has the label node ip-172-31-35-21 @ 10/14/23 12:32:04.216
  STEP: verifying the node has the label node ip-172-31-80-101 @ 10/14/23 12:32:04.317
  Oct 14 12:32:04.340: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-9c4nk requesting resource cpu=10m on Node ip-172-31-16-199
  Oct 14 12:32:04.342: INFO: Pod nginx-ingress-controller-kubernetes-worker-2jwtx requesting resource cpu=0m on Node ip-172-31-16-199
  Oct 14 12:32:04.342: INFO: Pod nginx-ingress-controller-kubernetes-worker-f7w62 requesting resource cpu=0m on Node ip-172-31-35-21
  Oct 14 12:32:04.343: INFO: Pod nginx-ingress-controller-kubernetes-worker-w9mvk requesting resource cpu=0m on Node ip-172-31-80-101
  Oct 14 12:32:04.343: INFO: Pod calico-node-87d2x requesting resource cpu=250m on Node ip-172-31-80-101
  Oct 14 12:32:04.343: INFO: Pod calico-node-ffpcs requesting resource cpu=250m on Node ip-172-31-16-199
  Oct 14 12:32:04.343: INFO: Pod calico-node-gzndl requesting resource cpu=250m on Node ip-172-31-35-21
  Oct 14 12:32:04.343: INFO: Pod coredns-59cfb5bf46-rzv4m requesting resource cpu=100m on Node ip-172-31-16-199
  Oct 14 12:32:04.343: INFO: Pod kube-state-metrics-775d9f4f79-tpb2t requesting resource cpu=0m on Node ip-172-31-16-199
  Oct 14 12:32:04.343: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-wlkcq requesting resource cpu=5m on Node ip-172-31-16-199
  Oct 14 12:32:04.343: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-qbkfw requesting resource cpu=0m on Node ip-172-31-16-199
  Oct 14 12:32:04.343: INFO: Pod kubernetes-dashboard-7b899cb9d9-gzbsl requesting resource cpu=0m on Node ip-172-31-16-199
  Oct 14 12:32:04.343: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-35-21
  Oct 14 12:32:04.344: INFO: Pod sonobuoy-e2e-job-78ddb03d82ed452b requesting resource cpu=0m on Node ip-172-31-80-101
  Oct 14 12:32:04.344: INFO: Pod sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-89gbh requesting resource cpu=0m on Node ip-172-31-35-21
  Oct 14 12:32:04.344: INFO: Pod sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-gmddl requesting resource cpu=0m on Node ip-172-31-80-101
  Oct 14 12:32:04.344: INFO: Pod sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-vvgmm requesting resource cpu=0m on Node ip-172-31-16-199
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/14/23 12:32:04.344
  Oct 14 12:32:04.344: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-16-199
  Oct 14 12:32:04.356: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-35-21
  Oct 14 12:32:04.367: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-80-101
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/14/23 12:32:08.403
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a.178df948816c0df7], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6496/filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a to ip-172-31-80-101] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a.178df948adb9dcaa], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a.178df948c02e35a4], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 309ms (309ms including waiting)] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a.178df948c146a350], Reason = [Created], Message = [Created container filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a.178df948c8cb05c8], Reason = [Started], Message = [Started container filler-pod-1f5090af-b1d5-49dc-9e60-755dc3f49e1a] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115.178df94880c531ba], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6496/filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115 to ip-172-31-35-21] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115.178df948ae3d3348], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115.178df948c8967487], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 442ms (442ms including waiting)] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115.178df948c9fe9343], Reason = [Created], Message = [Created container filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115.178df948d1a4d7ff], Reason = [Started], Message = [Started container filler-pod-6fd86653-aa0c-407b-b4d4-328a8f2e9115] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627.178df9487fc87de3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6496/filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627 to ip-172-31-16-199] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627.178df948aba4c21d], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627.178df948c30b4db3], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 392ms (392ms including waiting)] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627.178df948c47c113f], Reason = [Created], Message = [Created container filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627.178df948cc432a5f], Reason = [Started], Message = [Started container filler-pod-9dccbcc0-c163-4a76-9abb-20fa69951627] @ 10/14/23 12:32:08.409
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.178df949718e1e30], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 10/14/23 12:32:08.434
  STEP: removing the label node off the node ip-172-31-16-199 @ 10/14/23 12:32:09.427
  STEP: verifying the node doesn't have the label node @ 10/14/23 12:32:09.454
  STEP: removing the label node off the node ip-172-31-35-21 @ 10/14/23 12:32:09.459
  STEP: verifying the node doesn't have the label node @ 10/14/23 12:32:09.484
  STEP: removing the label node off the node ip-172-31-80-101 @ 10/14/23 12:32:09.489
  STEP: verifying the node doesn't have the label node @ 10/14/23 12:32:09.512
  Oct 14 12:32:09.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6496" for this suite. @ 10/14/23 12:32:09.529
• [5.465 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/14/23 12:32:09.539
  Oct 14 12:32:09.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-runtime @ 10/14/23 12:32:09.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:09.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:09.585
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/14/23 12:32:09.651
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/14/23 12:32:26.766
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/14/23 12:32:26.771
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/14/23 12:32:26.78
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 10/14/23 12:32:26.78
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/14/23 12:32:26.809
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/14/23 12:32:29.831
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/14/23 12:32:30.842
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/14/23 12:32:30.851
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 10/14/23 12:32:30.851
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/14/23 12:32:30.881
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/14/23 12:32:31.892
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/14/23 12:32:33.912
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/14/23 12:32:33.921
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 10/14/23 12:32:33.921
  Oct 14 12:32:33.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2752" for this suite. @ 10/14/23 12:32:33.959
• [24.428 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 10/14/23 12:32:33.97
  Oct 14 12:32:33.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/23 12:32:33.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:34.004
  Oct 14 12:32:34.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:32:40.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2205" for this suite. @ 10/14/23 12:32:40.346
• [6.385 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/14/23 12:32:40.356
  Oct 14 12:32:40.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 12:32:40.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:40.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:40.392
  STEP: Creating secret with name secret-test-map-19099072-c8c2-4d68-95a6-74ac9545b3a9 @ 10/14/23 12:32:40.396
  STEP: Creating a pod to test consume secrets @ 10/14/23 12:32:40.402
  STEP: Saw pod success @ 10/14/23 12:32:44.426
  Oct 14 12:32:44.429: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-587f07a7-2f29-4017-ae28-a716bb533c24 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 12:32:44.439
  Oct 14 12:32:44.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6786" for this suite. @ 10/14/23 12:32:44.464
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 10/14/23 12:32:44.477
  Oct 14 12:32:44.477: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename controllerrevisions @ 10/14/23 12:32:44.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:44.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:44.513
  STEP: Creating DaemonSet "e2e-9lhc2-daemon-set" @ 10/14/23 12:32:44.542
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/23 12:32:44.551
  Oct 14 12:32:44.556: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:32:44.556: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:32:44.561: INFO: Number of nodes with available pods controlled by daemonset e2e-9lhc2-daemon-set: 0
  Oct 14 12:32:44.561: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  Oct 14 12:32:45.567: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:32:45.567: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:32:45.572: INFO: Number of nodes with available pods controlled by daemonset e2e-9lhc2-daemon-set: 0
  Oct 14 12:32:45.572: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  Oct 14 12:32:46.566: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:32:46.566: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:32:46.571: INFO: Number of nodes with available pods controlled by daemonset e2e-9lhc2-daemon-set: 3
  Oct 14 12:32:46.571: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-9lhc2-daemon-set
  STEP: Confirm DaemonSet "e2e-9lhc2-daemon-set" successfully created with "daemonset-name=e2e-9lhc2-daemon-set" label @ 10/14/23 12:32:46.575
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-9lhc2-daemon-set" @ 10/14/23 12:32:46.584
  Oct 14 12:32:46.588: INFO: Located ControllerRevision: "e2e-9lhc2-daemon-set-77f87dd557"
  STEP: Patching ControllerRevision "e2e-9lhc2-daemon-set-77f87dd557" @ 10/14/23 12:32:46.592
  Oct 14 12:32:46.602: INFO: e2e-9lhc2-daemon-set-77f87dd557 has been patched
  STEP: Create a new ControllerRevision @ 10/14/23 12:32:46.602
  Oct 14 12:32:46.608: INFO: Created ControllerRevision: e2e-9lhc2-daemon-set-86cc594cd9
  STEP: Confirm that there are two ControllerRevisions @ 10/14/23 12:32:46.609
  Oct 14 12:32:46.609: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 14 12:32:46.612: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-9lhc2-daemon-set-77f87dd557" @ 10/14/23 12:32:46.613
  STEP: Confirm that there is only one ControllerRevision @ 10/14/23 12:32:46.62
  Oct 14 12:32:46.620: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 14 12:32:46.624: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-9lhc2-daemon-set-86cc594cd9" @ 10/14/23 12:32:46.628
  Oct 14 12:32:46.639: INFO: e2e-9lhc2-daemon-set-86cc594cd9 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/14/23 12:32:46.639
  W1014 12:32:46.647867      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/14/23 12:32:46.648
  Oct 14 12:32:46.648: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 14 12:32:47.655: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 14 12:32:47.661: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-9lhc2-daemon-set-86cc594cd9=updated" @ 10/14/23 12:32:47.661
  STEP: Confirm that there is only one ControllerRevision @ 10/14/23 12:32:47.671
  Oct 14 12:32:47.671: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 14 12:32:47.676: INFO: Found 1 ControllerRevisions
  Oct 14 12:32:47.680: INFO: ControllerRevision "e2e-9lhc2-daemon-set-857d676dfb" has revision 3
  STEP: Deleting DaemonSet "e2e-9lhc2-daemon-set" @ 10/14/23 12:32:47.684
  STEP: deleting DaemonSet.extensions e2e-9lhc2-daemon-set in namespace controllerrevisions-64, will wait for the garbage collector to delete the pods @ 10/14/23 12:32:47.684
  Oct 14 12:32:47.746: INFO: Deleting DaemonSet.extensions e2e-9lhc2-daemon-set took: 8.393325ms
  Oct 14 12:32:47.848: INFO: Terminating DaemonSet.extensions e2e-9lhc2-daemon-set pods took: 101.519342ms
  Oct 14 12:32:49.353: INFO: Number of nodes with available pods controlled by daemonset e2e-9lhc2-daemon-set: 0
  Oct 14 12:32:49.353: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-9lhc2-daemon-set
  Oct 14 12:32:49.357: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12943"},"items":null}

  Oct 14 12:32:49.362: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12943"},"items":null}

  Oct 14 12:32:49.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-64" for this suite. @ 10/14/23 12:32:49.382
• [4.917 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 10/14/23 12:32:49.398
  Oct 14 12:32:49.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:32:49.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:49.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:49.428
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:32:49.432
  STEP: Saw pod success @ 10/14/23 12:32:53.464
  Oct 14 12:32:53.468: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-8bc3975d-f4fd-42ba-8a57-12ac0e1f8b8f container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:32:53.476
  Oct 14 12:32:53.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6697" for this suite. @ 10/14/23 12:32:53.503
• [4.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 10/14/23 12:32:53.511
  Oct 14 12:32:53.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename podtemplate @ 10/14/23 12:32:53.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:53.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:53.536
  Oct 14 12:32:53.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2912" for this suite. @ 10/14/23 12:32:53.582
• [0.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/14/23 12:32:53.592
  Oct 14 12:32:53.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:32:53.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:53.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:53.619
  STEP: Creating projection with secret that has name projected-secret-test-map-513b79da-7e6b-492d-bd0e-67737257f5bc @ 10/14/23 12:32:53.624
  STEP: Creating a pod to test consume secrets @ 10/14/23 12:32:53.63
  STEP: Saw pod success @ 10/14/23 12:32:57.657
  Oct 14 12:32:57.661: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-secrets-b71c2039-d0c9-45a6-8d8c-5aa831077e1c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 12:32:57.67
  Oct 14 12:32:57.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8163" for this suite. @ 10/14/23 12:32:57.693
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 10/14/23 12:32:57.705
  Oct 14 12:32:57.705: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 12:32:57.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:32:57.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:32:57.735
  STEP: Creating a pod to test env composition @ 10/14/23 12:32:57.739
  STEP: Saw pod success @ 10/14/23 12:33:01.768
  Oct 14 12:33:01.772: INFO: Trying to get logs from node ip-172-31-35-21 pod var-expansion-158d4132-7531-4b69-8eeb-c17e8be9c064 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 12:33:01.78
  Oct 14 12:33:01.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-282" for this suite. @ 10/14/23 12:33:01.807
• [4.111 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 10/14/23 12:33:01.816
  Oct 14 12:33:01.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 12:33:01.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:33:01.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:33:01.843
  STEP: Setting up server cert @ 10/14/23 12:33:01.882
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 12:33:02.499
  STEP: Deploying the webhook pod @ 10/14/23 12:33:02.508
  STEP: Wait for the deployment to be ready @ 10/14/23 12:33:02.525
  Oct 14 12:33:02.535: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/23 12:33:04.548
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 12:33:04.563
  Oct 14 12:33:05.563: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/14/23 12:33:05.66
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/23 12:33:05.721
  STEP: Deleting the collection of validation webhooks @ 10/14/23 12:33:05.78
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/23 12:33:05.841
  Oct 14 12:33:05.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-909" for this suite. @ 10/14/23 12:33:05.902
  STEP: Destroying namespace "webhook-markers-4478" for this suite. @ 10/14/23 12:33:05.91
• [4.104 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 10/14/23 12:33:05.92
  Oct 14 12:33:05.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename gc @ 10/14/23 12:33:05.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:33:05.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:33:05.962
  STEP: create the deployment @ 10/14/23 12:33:05.969
  W1014 12:33:05.975937      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/14/23 12:33:05.976
  STEP: delete the deployment @ 10/14/23 12:33:05.987
  STEP: wait for all rs to be garbage collected @ 10/14/23 12:33:05.998
  STEP: expected 0 pods, got 1 pods @ 10/14/23 12:33:06.005
  STEP: expected 0 rs, got 1 rs @ 10/14/23 12:33:06.015
  STEP: Gathering metrics @ 10/14/23 12:33:06.528
  W1014 12:33:06.535445      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 14 12:33:06.535: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 14 12:33:06.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3856" for this suite. @ 10/14/23 12:33:06.542
• [0.631 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 10/14/23 12:33:06.554
  Oct 14 12:33:06.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replication-controller @ 10/14/23 12:33:06.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:33:06.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:33:06.58
  STEP: creating a ReplicationController @ 10/14/23 12:33:06.589
  STEP: waiting for RC to be added @ 10/14/23 12:33:06.596
  STEP: waiting for available Replicas @ 10/14/23 12:33:06.596
  STEP: patching ReplicationController @ 10/14/23 12:33:08.046
  STEP: waiting for RC to be modified @ 10/14/23 12:33:08.056
  STEP: patching ReplicationController status @ 10/14/23 12:33:08.056
  STEP: waiting for RC to be modified @ 10/14/23 12:33:08.065
  STEP: waiting for available Replicas @ 10/14/23 12:33:08.066
  STEP: fetching ReplicationController status @ 10/14/23 12:33:08.074
  STEP: patching ReplicationController scale @ 10/14/23 12:33:08.078
  STEP: waiting for RC to be modified @ 10/14/23 12:33:08.089
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/14/23 12:33:08.089
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/14/23 12:33:09.78
  STEP: updating ReplicationController status @ 10/14/23 12:33:09.784
  STEP: waiting for RC to be modified @ 10/14/23 12:33:09.794
  STEP: listing all ReplicationControllers @ 10/14/23 12:33:09.795
  STEP: checking that ReplicationController has expected values @ 10/14/23 12:33:09.8
  STEP: deleting ReplicationControllers by collection @ 10/14/23 12:33:09.8
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/14/23 12:33:09.812
  Oct 14 12:33:09.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 12:33:09.871465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3343" for this suite. @ 10/14/23 12:33:09.879
• [3.334 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/14/23 12:33:09.889
  Oct 14 12:33:09.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename containers @ 10/14/23 12:33:09.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:33:09.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:33:09.922
  STEP: Creating a pod to test override all @ 10/14/23 12:33:09.926
  E1014 12:33:10.871903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:11.872029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:12.873106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:13.873234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:33:13.953
  Oct 14 12:33:13.959: INFO: Trying to get logs from node ip-172-31-35-21 pod client-containers-a04980ab-3aab-4b22-a1c6-0c9f9b3cccb2 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 12:33:13.969
  Oct 14 12:33:14.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6632" for this suite. @ 10/14/23 12:33:14.008
• [4.129 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 10/14/23 12:33:14.019
  Oct 14 12:33:14.019: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 12:33:14.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:33:14.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:33:14.059
  STEP: Setting up server cert @ 10/14/23 12:33:14.107
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 12:33:14.576
  STEP: Deploying the webhook pod @ 10/14/23 12:33:14.582
  STEP: Wait for the deployment to be ready @ 10/14/23 12:33:14.598
  Oct 14 12:33:14.607: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 12:33:14.874026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:15.874256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 12:33:16.621
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 12:33:16.637
  E1014 12:33:16.874357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:33:17.638: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/14/23 12:33:17.646
  STEP: create a pod @ 10/14/23 12:33:17.67
  E1014 12:33:17.875278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:18.875407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/14/23 12:33:19.695
  Oct 14 12:33:19.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=webhook-1896 attach --namespace=webhook-1896 to-be-attached-pod -i -c=container1'
  Oct 14 12:33:19.819: INFO: rc: 1
  Oct 14 12:33:19.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 12:33:19.875850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1896" for this suite. @ 10/14/23 12:33:19.893
  STEP: Destroying namespace "webhook-markers-7917" for this suite. @ 10/14/23 12:33:19.91
• [5.903 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 10/14/23 12:33:19.924
  Oct 14 12:33:19.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 12:33:19.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:33:19.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:33:19.954
  STEP: creating service in namespace services-2605 @ 10/14/23 12:33:19.963
  STEP: creating service affinity-nodeport-transition in namespace services-2605 @ 10/14/23 12:33:19.963
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2605 @ 10/14/23 12:33:19.982
  I1014 12:33:19.993703      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-2605, replica count: 3
  E1014 12:33:20.876050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:21.876161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:22.876527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 12:33:23.045936      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 12:33:23.058: INFO: Creating new exec pod
  E1014 12:33:23.876601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:24.876710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:25.877616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:33:26.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2605 exec execpod-affinityfmgzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Oct 14 12:33:26.296: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Oct 14 12:33:26.296: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:33:26.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2605 exec execpod-affinityfmgzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.112 80'
  Oct 14 12:33:26.501: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.112 80\nConnection to 10.152.183.112 80 port [tcp/http] succeeded!\n"
  Oct 14 12:33:26.501: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:33:26.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2605 exec execpod-affinityfmgzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 30755'
  Oct 14 12:33:26.718: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.35.21 30755\nConnection to 172.31.35.21 30755 port [tcp/*] succeeded!\n"
  Oct 14 12:33:26.718: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:33:26.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2605 exec execpod-affinityfmgzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.80.101 30755'
  E1014 12:33:26.878645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:33:26.917: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.80.101 30755\nConnection to 172.31.80.101 30755 port [tcp/*] succeeded!\n"
  Oct 14 12:33:26.917: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:33:26.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2605 exec execpod-affinityfmgzf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.199:30755/ ; done'
  Oct 14 12:33:27.315: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n"
  Oct 14 12:33:27.315: INFO: stdout: "\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-cxzwm\naffinity-nodeport-transition-x9kmv\naffinity-nodeport-transition-cxzwm\naffinity-nodeport-transition-cxzwm\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-x9kmv\naffinity-nodeport-transition-x9kmv\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-x9kmv\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-x9kmv\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-x9kmv"
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-cxzwm
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-x9kmv
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-cxzwm
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-cxzwm
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-x9kmv
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-x9kmv
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-x9kmv
  Oct 14 12:33:27.315: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.316: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.316: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.316: INFO: Received response from host: affinity-nodeport-transition-x9kmv
  Oct 14 12:33:27.316: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.316: INFO: Received response from host: affinity-nodeport-transition-x9kmv
  Oct 14 12:33:27.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2605 exec execpod-affinityfmgzf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.199:30755/ ; done'
  Oct 14 12:33:27.692: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:30755/\n"
  Oct 14 12:33:27.692: INFO: stdout: "\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68\naffinity-nodeport-transition-tsx68"
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.692: INFO: Received response from host: affinity-nodeport-transition-tsx68
  Oct 14 12:33:27.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 12:33:27.698: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2605, will wait for the garbage collector to delete the pods @ 10/14/23 12:33:27.718
  Oct 14 12:33:27.785: INFO: Deleting ReplicationController affinity-nodeport-transition took: 10.526335ms
  E1014 12:33:27.878900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:33:27.886: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.538576ms
  E1014 12:33:28.879388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:29.880270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:30.880585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-2605" for this suite. @ 10/14/23 12:33:31.213
• [11.300 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 10/14/23 12:33:31.226
  Oct 14 12:33:31.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 12:33:31.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:33:31.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:33:31.257
  STEP: creating the pod with failed condition @ 10/14/23 12:33:31.262
  E1014 12:33:31.881571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:32.881948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:33.882111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:34.882851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:35.882977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:36.883081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:37.883843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:38.883930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:39.884756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:40.884869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:41.885136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:42.885242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:43.885389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:44.885471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:45.885590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:46.885714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:47.886459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:48.886510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:49.886812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:50.887860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:51.888965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:52.889986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:53.890132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:54.890497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:55.890599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:56.890798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:57.890922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:58.891038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:33:59.891884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:00.891997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:01.892255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:02.892532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:03.893437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:04.893720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:05.894579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:06.894800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:07.895432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:08.895565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:09.895858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:10.895982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:11.896884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:12.897609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:13.897711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:14.897876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:15.897942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:16.898522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:17.899011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:18.899120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:19.899857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:20.899985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:21.900935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:22.901130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:23.902164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:24.902800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:25.903800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:26.904085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:27.904780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:28.905164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:29.905925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:30.906027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:31.906725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:32.906818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:33.907709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:34.908298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:35.908488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:36.908586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:37.908700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:38.908840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:39.909639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:40.909891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:41.910042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:42.910139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:43.910242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:44.910378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:45.910709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:46.910817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:47.911768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:48.911914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:49.912021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:50.912103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:51.912209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:52.912898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:53.913840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:54.914335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:55.914790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:56.914891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:57.915847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:58.915970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:34:59.916609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:00.916988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:01.917078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:02.919679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:03.920176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:04.920547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:05.921682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:06.921861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:07.921972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:08.922088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:09.922315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:10.922433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:11.923397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:12.923515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:13.924287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:14.924406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:15.925594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:16.925733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:17.926364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:18.926760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:19.927493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:20.928413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:21.928803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:22.928934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:23.929769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:24.929891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:25.930045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:26.930147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:27.930903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:28.931018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:29.931324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:30.931464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 10/14/23 12:35:31.274
  Oct 14 12:35:31.790: INFO: Successfully updated pod "var-expansion-c558bcdb-d4cd-42f4-b6e2-af1de1b12dc7"
  STEP: waiting for pod running @ 10/14/23 12:35:31.791
  E1014 12:35:31.932421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:32.932608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/14/23 12:35:33.801
  Oct 14 12:35:33.801: INFO: Deleting pod "var-expansion-c558bcdb-d4cd-42f4-b6e2-af1de1b12dc7" in namespace "var-expansion-3697"
  Oct 14 12:35:33.812: INFO: Wait up to 5m0s for pod "var-expansion-c558bcdb-d4cd-42f4-b6e2-af1de1b12dc7" to be fully deleted
  E1014 12:35:33.932709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:34.932882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:35.932997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:36.933085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:37.934146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:38.934253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:39.934360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:40.934806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:41.935724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:42.935848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:43.936302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:44.936391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:45.937266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:46.937352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:47.938391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:48.938801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:49.939492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:50.939732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:51.940265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:52.940657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:53.941496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:54.941905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:55.942923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:56.943855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:57.944298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:58.944720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:35:59.945467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:00.945588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:01.945980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:02.946241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:03.946797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:04.947310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:05.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3697" for this suite. @ 10/14/23 12:36:05.913
• [154.696 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/14/23 12:36:05.93
  Oct 14 12:36:05.931: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 12:36:05.932
  E1014 12:36:05.947595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:05.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:05.96
  Oct 14 12:36:05.967: INFO: Creating deployment "test-recreate-deployment"
  Oct 14 12:36:05.974: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Oct 14 12:36:05.985: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E1014 12:36:06.947711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:07.947961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:07.997: INFO: Waiting deployment "test-recreate-deployment" to complete
  Oct 14 12:36:08.001: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Oct 14 12:36:08.014: INFO: Updating deployment test-recreate-deployment
  Oct 14 12:36:08.015: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Oct 14 12:36:08.129: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8750940-b80f-4dc2-96dc-32301afb16e4",
      ResourceVersion: (string) (len=5) "14079",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 14 12:36:08.139: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fd56297-3cf9-4f5e-a62b-9a9407b5d9df",
      ResourceVersion: (string) (len=5) "14077",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f8750940-b80f-4dc2-96dc-32301afb16e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 37 35 30 39  34 30 2d 62 38 30 66 2d  |\"f8750940-b80f-|
              00000120  34 64 63 32 2d 39 36 64  63 2d 33 32 33 30 31 61  |4dc2-96dc-32301a|
              00000130  66 62 31 36 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb16e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:36:08.141: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Oct 14 12:36:08.141: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55354c5c-6b7b-43e2-8587-75f2cba7ae5f",
      ResourceVersion: (string) (len=5) "14067",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f8750940-b80f-4dc2-96dc-32301afb16e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 37 35 30 39  34 30 2d 62 38 30 66 2d  |\"f8750940-b80f-|
              00000120  34 64 63 32 2d 39 36 64  63 2d 33 32 33 30 31 61  |4dc2-96dc-32301a|
              00000130  66 62 31 36 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb16e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:36:08.148: INFO: Pod "test-recreate-deployment-76fb77d45-xkrjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-xkrjb",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-8206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16721a59-422a-411f-af6a-0d1ec9f56c87",
      ResourceVersion: (string) (len=5) "14078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "0fd56297-3cf9-4f5e-a62b-9a9407b5d9df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 66  64 35 36 32 39 37 2d 33  |d\":\"0fd56297-3|
              00000090  63 66 39 2d 34 66 35 65  2d 61 36 32 62 2d 39 61  |cf9-4f5e-a62b-9a|
              000000a0  39 34 30 37 62 35 64 39  64 66 5c 22 7d 22 3a 7b  |9407b5d9df\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxvzc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxvzc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832883768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832883768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:36:08.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8206" for this suite. @ 10/14/23 12:36:08.158
• [2.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/14/23 12:36:08.17
  Oct 14 12:36:08.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename init-container @ 10/14/23 12:36:08.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:08.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:08.199
  STEP: creating the pod @ 10/14/23 12:36:08.204
  Oct 14 12:36:08.204: INFO: PodSpec: initContainers in spec.initContainers
  E1014 12:36:08.948075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:09.948140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:10.948273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:11.949335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:12.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4979" for this suite. @ 10/14/23 12:36:12.482
• [4.321 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 10/14/23 12:36:12.491
  Oct 14 12:36:12.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/23 12:36:12.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:12.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:12.522
  E1014 12:36:12.949580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:13.949651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:14.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3941" for this suite. @ 10/14/23 12:36:14.571
• [2.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 10/14/23 12:36:14.583
  Oct 14 12:36:14.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:36:14.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:14.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:14.619
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:36:14.625
  E1014 12:36:14.950108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:15.950856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:16.951839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:17.951929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:36:18.654
  Oct 14 12:36:18.658: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-c9be7677-1cc2-4c78-b35a-e779d1d2af4f container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:36:18.688
  Oct 14 12:36:18.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5314" for this suite. @ 10/14/23 12:36:18.714
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 10/14/23 12:36:18.725
  Oct 14 12:36:18.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename field-validation @ 10/14/23 12:36:18.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:18.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:18.757
  Oct 14 12:36:18.763: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:36:18.952762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:19.953734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:20.953864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:21.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-804" for this suite. @ 10/14/23 12:36:21.94
• [3.224 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/14/23 12:36:21.951
  Oct 14 12:36:21.951: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-runtime @ 10/14/23 12:36:21.952
  E1014 12:36:21.954805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:21.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:21.983
  STEP: create the container @ 10/14/23 12:36:21.987
  W1014 12:36:22.001195      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/14/23 12:36:22.001
  E1014 12:36:22.954962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:23.955082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:24.955221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/14/23 12:36:25.023
  STEP: the container should be terminated @ 10/14/23 12:36:25.027
  STEP: the termination message should be set @ 10/14/23 12:36:25.027
  Oct 14 12:36:25.027: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/14/23 12:36:25.027
  Oct 14 12:36:25.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5709" for this suite. @ 10/14/23 12:36:25.052
• [3.112 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 10/14/23 12:36:25.064
  Oct 14 12:36:25.064: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 12:36:25.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:25.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:25.094
  STEP: Setting up server cert @ 10/14/23 12:36:25.13
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 12:36:25.754
  STEP: Deploying the webhook pod @ 10/14/23 12:36:25.766
  STEP: Wait for the deployment to be ready @ 10/14/23 12:36:25.784
  Oct 14 12:36:25.793: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 12:36:25.955829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:26.956315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 12:36:27.806
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 12:36:27.823
  E1014 12:36:27.957213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:28.823: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/14/23 12:36:28.833
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/14/23 12:36:28.835
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/14/23 12:36:28.835
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/14/23 12:36:28.835
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/14/23 12:36:28.837
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/14/23 12:36:28.837
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/14/23 12:36:28.839
  Oct 14 12:36:28.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6241" for this suite. @ 10/14/23 12:36:28.906
  STEP: Destroying namespace "webhook-markers-3035" for this suite. @ 10/14/23 12:36:28.914
• [3.863 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/14/23 12:36:28.93
  Oct 14 12:36:28.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename prestop @ 10/14/23 12:36:28.931
  E1014 12:36:28.957645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:28.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:28.964
  STEP: Creating server pod server in namespace prestop-4877 @ 10/14/23 12:36:28.972
  STEP: Waiting for pods to come up. @ 10/14/23 12:36:28.982
  E1014 12:36:29.957808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:30.958074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4877 @ 10/14/23 12:36:31
  E1014 12:36:31.958562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:32.958911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 10/14/23 12:36:33.02
  E1014 12:36:33.958902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:34.959169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:35.959647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:36.959745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:37.959889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:38.038: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Oct 14 12:36:38.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 10/14/23 12:36:38.045
  STEP: Destroying namespace "prestop-4877" for this suite. @ 10/14/23 12:36:38.063
• [9.142 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/14/23 12:36:38.072
  Oct 14 12:36:38.072: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:36:38.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:38.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:38.104
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:36:38.109
  E1014 12:36:38.960589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:39.960988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:40.961119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:41.961742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:36:42.144
  Oct 14 12:36:42.148: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-53f8bf9c-5d0b-4ca7-9e4d-b7765c3eab63 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:36:42.157
  Oct 14 12:36:42.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2975" for this suite. @ 10/14/23 12:36:42.181
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 10/14/23 12:36:42.192
  Oct 14 12:36:42.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 12:36:42.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:42.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:42.219
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/14/23 12:36:42.224
  Oct 14 12:36:42.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:36:42.961794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:43.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:36:43.962814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:44.963461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:45.963987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:46.965046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:47.965726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:48.966738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:36:49.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6556" for this suite. @ 10/14/23 12:36:49.909
• [7.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 10/14/23 12:36:49.922
  Oct 14 12:36:49.922: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 12:36:49.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:36:49.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:36:49.948
  E1014 12:36:49.966806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:50.967376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:51.967660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:52.968210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:53.968911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:54.969753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:55.970813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:56.971007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:57.971987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:58.972623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:36:59.973365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:00.973746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:01.974012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:02.974540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:03.974919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:04.975872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:05.977479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/14/23 12:37:06.956
  E1014 12:37:06.977743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:07.978099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:08.978959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:09.979255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:10.979525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/23 12:37:11.96
  STEP: Ensuring resource quota status is calculated @ 10/14/23 12:37:11.968
  E1014 12:37:11.980066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:12.980203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 10/14/23 12:37:13.973
  E1014 12:37:13.980877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures configMap creation @ 10/14/23 12:37:13.989
  E1014 12:37:14.981300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:15.982205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 10/14/23 12:37:15.994
  STEP: Ensuring resource quota status released usage @ 10/14/23 12:37:16.002
  E1014 12:37:16.982824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:17.982968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:37:18.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8979" for this suite. @ 10/14/23 12:37:18.014
• [28.135 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/14/23 12:37:18.058
  Oct 14 12:37:18.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename subpath @ 10/14/23 12:37:18.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:37:18.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:37:18.089
  STEP: Setting up data @ 10/14/23 12:37:18.093
  STEP: Creating pod pod-subpath-test-secret-pcdh @ 10/14/23 12:37:18.127
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/23 12:37:18.127
  E1014 12:37:18.983101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:19.983201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:20.983852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:21.984141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:22.984254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:23.984389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:24.984484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:25.985797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:26.986455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:27.986795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:28.987531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:29.988511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:30.988880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:31.989491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:32.989634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:33.990431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:34.990794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:35.990888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:36.991951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:37.992052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:38.992196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:39.992272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:40.992420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:41.992452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:37:42.213
  Oct 14 12:37:42.218: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-subpath-test-secret-pcdh container test-container-subpath-secret-pcdh: <nil>
  STEP: delete the pod @ 10/14/23 12:37:42.248
  STEP: Deleting pod pod-subpath-test-secret-pcdh @ 10/14/23 12:37:42.269
  Oct 14 12:37:42.269: INFO: Deleting pod "pod-subpath-test-secret-pcdh" in namespace "subpath-1231"
  Oct 14 12:37:42.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1231" for this suite. @ 10/14/23 12:37:42.293
• [24.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 10/14/23 12:37:42.304
  Oct 14 12:37:42.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 12:37:42.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:37:42.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:37:42.334
  STEP: creating a secret @ 10/14/23 12:37:42.339
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/14/23 12:37:42.348
  STEP: patching the secret @ 10/14/23 12:37:42.354
  STEP: deleting the secret using a LabelSelector @ 10/14/23 12:37:42.366
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/14/23 12:37:42.378
  Oct 14 12:37:42.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7436" for this suite. @ 10/14/23 12:37:42.389
• [0.096 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 10/14/23 12:37:42.399
  Oct 14 12:37:42.399: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:37:42.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:37:42.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:37:42.433
  STEP: creating a replication controller @ 10/14/23 12:37:42.44
  Oct 14 12:37:42.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 create -f -'
  Oct 14 12:37:42.734: INFO: stderr: ""
  Oct 14 12:37:42.734: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/23 12:37:42.734
  Oct 14 12:37:42.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 14 12:37:42.843: INFO: stderr: ""
  Oct 14 12:37:42.843: INFO: stdout: "update-demo-nautilus-hgbhm update-demo-nautilus-qgp2f "
  Oct 14 12:37:42.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-hgbhm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 12:37:42.940: INFO: stderr: ""
  Oct 14 12:37:42.940: INFO: stdout: ""
  Oct 14 12:37:42.940: INFO: update-demo-nautilus-hgbhm is created but not running
  E1014 12:37:42.992961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:43.993220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:44.993473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:45.998772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:46.999880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:37:47.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1014 12:37:48.000505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:37:48.043: INFO: stderr: ""
  Oct 14 12:37:48.043: INFO: stdout: "update-demo-nautilus-hgbhm update-demo-nautilus-qgp2f "
  Oct 14 12:37:48.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-hgbhm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 12:37:48.144: INFO: stderr: ""
  Oct 14 12:37:48.144: INFO: stdout: "true"
  Oct 14 12:37:48.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-hgbhm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 14 12:37:48.235: INFO: stderr: ""
  Oct 14 12:37:48.235: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 14 12:37:48.235: INFO: validating pod update-demo-nautilus-hgbhm
  Oct 14 12:37:48.242: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 14 12:37:48.242: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 14 12:37:48.242: INFO: update-demo-nautilus-hgbhm is verified up and running
  Oct 14 12:37:48.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-qgp2f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 12:37:48.336: INFO: stderr: ""
  Oct 14 12:37:48.336: INFO: stdout: "true"
  Oct 14 12:37:48.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-qgp2f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 14 12:37:48.430: INFO: stderr: ""
  Oct 14 12:37:48.430: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 14 12:37:48.430: INFO: validating pod update-demo-nautilus-qgp2f
  Oct 14 12:37:48.438: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 14 12:37:48.438: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 14 12:37:48.438: INFO: update-demo-nautilus-qgp2f is verified up and running
  STEP: scaling down the replication controller @ 10/14/23 12:37:48.438
  Oct 14 12:37:48.441: INFO: scanned /root for discovery docs: <nil>
  Oct 14 12:37:48.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1014 12:37:49.000623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:37:49.561: INFO: stderr: ""
  Oct 14 12:37:49.562: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/23 12:37:49.562
  Oct 14 12:37:49.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 14 12:37:49.675: INFO: stderr: ""
  Oct 14 12:37:49.675: INFO: stdout: "update-demo-nautilus-hgbhm update-demo-nautilus-qgp2f "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 10/14/23 12:37:49.675
  E1014 12:37:50.001677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:51.001786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:52.001920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:53.002041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:54.002209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:37:54.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 14 12:37:54.780: INFO: stderr: ""
  Oct 14 12:37:54.780: INFO: stdout: "update-demo-nautilus-qgp2f "
  Oct 14 12:37:54.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-qgp2f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 12:37:54.878: INFO: stderr: ""
  Oct 14 12:37:54.878: INFO: stdout: "true"
  Oct 14 12:37:54.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-qgp2f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 14 12:37:54.976: INFO: stderr: ""
  Oct 14 12:37:54.976: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 14 12:37:54.976: INFO: validating pod update-demo-nautilus-qgp2f
  Oct 14 12:37:54.982: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 14 12:37:54.982: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 14 12:37:54.982: INFO: update-demo-nautilus-qgp2f is verified up and running
  STEP: scaling up the replication controller @ 10/14/23 12:37:54.982
  Oct 14 12:37:54.984: INFO: scanned /root for discovery docs: <nil>
  Oct 14 12:37:54.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1014 12:37:55.003097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:56.006874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:37:56.110: INFO: stderr: ""
  Oct 14 12:37:56.110: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/23 12:37:56.11
  Oct 14 12:37:56.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 14 12:37:56.211: INFO: stderr: ""
  Oct 14 12:37:56.211: INFO: stdout: "update-demo-nautilus-dld2h update-demo-nautilus-qgp2f "
  Oct 14 12:37:56.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-dld2h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 12:37:56.311: INFO: stderr: ""
  Oct 14 12:37:56.311: INFO: stdout: ""
  Oct 14 12:37:56.311: INFO: update-demo-nautilus-dld2h is created but not running
  E1014 12:37:57.006670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:58.006831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:37:59.006930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:00.007024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:01.007265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:01.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 14 12:38:01.412: INFO: stderr: ""
  Oct 14 12:38:01.412: INFO: stdout: "update-demo-nautilus-dld2h update-demo-nautilus-qgp2f "
  Oct 14 12:38:01.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-dld2h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 12:38:01.508: INFO: stderr: ""
  Oct 14 12:38:01.508: INFO: stdout: "true"
  Oct 14 12:38:01.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-dld2h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 14 12:38:01.603: INFO: stderr: ""
  Oct 14 12:38:01.603: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 14 12:38:01.603: INFO: validating pod update-demo-nautilus-dld2h
  Oct 14 12:38:01.610: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 14 12:38:01.610: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 14 12:38:01.610: INFO: update-demo-nautilus-dld2h is verified up and running
  Oct 14 12:38:01.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-qgp2f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 12:38:01.705: INFO: stderr: ""
  Oct 14 12:38:01.705: INFO: stdout: "true"
  Oct 14 12:38:01.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods update-demo-nautilus-qgp2f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 14 12:38:01.802: INFO: stderr: ""
  Oct 14 12:38:01.802: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 14 12:38:01.802: INFO: validating pod update-demo-nautilus-qgp2f
  Oct 14 12:38:01.808: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 14 12:38:01.808: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 14 12:38:01.808: INFO: update-demo-nautilus-qgp2f is verified up and running
  STEP: using delete to clean up resources @ 10/14/23 12:38:01.808
  Oct 14 12:38:01.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 delete --grace-period=0 --force -f -'
  Oct 14 12:38:01.933: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 12:38:01.933: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct 14 12:38:01.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get rc,svc -l name=update-demo --no-headers'
  E1014 12:38:02.007737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:02.090: INFO: stderr: "No resources found in kubectl-6262 namespace.\n"
  Oct 14 12:38:02.090: INFO: stdout: ""
  Oct 14 12:38:02.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-6262 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 14 12:38:02.239: INFO: stderr: ""
  Oct 14 12:38:02.239: INFO: stdout: ""
  Oct 14 12:38:02.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6262" for this suite. @ 10/14/23 12:38:02.249
• [19.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 10/14/23 12:38:02.258
  Oct 14 12:38:02.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replicaset @ 10/14/23 12:38:02.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:02.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:02.33
  Oct 14 12:38:02.343: INFO: Creating ReplicaSet my-hostname-basic-bcdd3ad9-b5b2-45b1-9182-04cd58df4cfd
  Oct 14 12:38:02.357: INFO: Pod name my-hostname-basic-bcdd3ad9-b5b2-45b1-9182-04cd58df4cfd: Found 0 pods out of 1
  E1014 12:38:03.008814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:04.009071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:05.009462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:06.009881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:07.009994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:07.363: INFO: Pod name my-hostname-basic-bcdd3ad9-b5b2-45b1-9182-04cd58df4cfd: Found 1 pods out of 1
  Oct 14 12:38:07.364: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-bcdd3ad9-b5b2-45b1-9182-04cd58df4cfd" is running
  Oct 14 12:38:07.368: INFO: Pod "my-hostname-basic-bcdd3ad9-b5b2-45b1-9182-04cd58df4cfd-hmd6z" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 12:38:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 12:38:03 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 12:38:03 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 12:38:02 +0000 UTC Reason: Message:}])
  Oct 14 12:38:07.368: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/14/23 12:38:07.368
  Oct 14 12:38:07.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5805" for this suite. @ 10/14/23 12:38:07.393
• [5.146 seconds]
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 10/14/23 12:38:07.405
  Oct 14 12:38:07.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename discovery @ 10/14/23 12:38:07.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:07.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:07.436
  STEP: Setting up server cert @ 10/14/23 12:38:07.444
  E1014 12:38:08.010177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:08.025: INFO: Checking APIGroup: apiregistration.k8s.io
  Oct 14 12:38:08.027: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Oct 14 12:38:08.027: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Oct 14 12:38:08.027: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Oct 14 12:38:08.027: INFO: Checking APIGroup: apps
  Oct 14 12:38:08.028: INFO: PreferredVersion.GroupVersion: apps/v1
  Oct 14 12:38:08.028: INFO: Versions found [{apps/v1 v1}]
  Oct 14 12:38:08.028: INFO: apps/v1 matches apps/v1
  Oct 14 12:38:08.028: INFO: Checking APIGroup: events.k8s.io
  Oct 14 12:38:08.030: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Oct 14 12:38:08.030: INFO: Versions found [{events.k8s.io/v1 v1}]
  Oct 14 12:38:08.030: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Oct 14 12:38:08.030: INFO: Checking APIGroup: authentication.k8s.io
  Oct 14 12:38:08.033: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Oct 14 12:38:08.033: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Oct 14 12:38:08.033: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Oct 14 12:38:08.033: INFO: Checking APIGroup: authorization.k8s.io
  Oct 14 12:38:08.034: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Oct 14 12:38:08.035: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Oct 14 12:38:08.035: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Oct 14 12:38:08.035: INFO: Checking APIGroup: autoscaling
  Oct 14 12:38:08.036: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Oct 14 12:38:08.036: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Oct 14 12:38:08.036: INFO: autoscaling/v2 matches autoscaling/v2
  Oct 14 12:38:08.036: INFO: Checking APIGroup: batch
  Oct 14 12:38:08.038: INFO: PreferredVersion.GroupVersion: batch/v1
  Oct 14 12:38:08.038: INFO: Versions found [{batch/v1 v1}]
  Oct 14 12:38:08.038: INFO: batch/v1 matches batch/v1
  Oct 14 12:38:08.038: INFO: Checking APIGroup: certificates.k8s.io
  Oct 14 12:38:08.040: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Oct 14 12:38:08.040: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Oct 14 12:38:08.040: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Oct 14 12:38:08.040: INFO: Checking APIGroup: networking.k8s.io
  Oct 14 12:38:08.042: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Oct 14 12:38:08.042: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Oct 14 12:38:08.042: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Oct 14 12:38:08.042: INFO: Checking APIGroup: policy
  Oct 14 12:38:08.044: INFO: PreferredVersion.GroupVersion: policy/v1
  Oct 14 12:38:08.044: INFO: Versions found [{policy/v1 v1}]
  Oct 14 12:38:08.044: INFO: policy/v1 matches policy/v1
  Oct 14 12:38:08.045: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Oct 14 12:38:08.046: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Oct 14 12:38:08.046: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Oct 14 12:38:08.046: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Oct 14 12:38:08.046: INFO: Checking APIGroup: storage.k8s.io
  Oct 14 12:38:08.049: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Oct 14 12:38:08.049: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Oct 14 12:38:08.049: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Oct 14 12:38:08.049: INFO: Checking APIGroup: admissionregistration.k8s.io
  Oct 14 12:38:08.050: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Oct 14 12:38:08.050: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Oct 14 12:38:08.050: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Oct 14 12:38:08.050: INFO: Checking APIGroup: apiextensions.k8s.io
  Oct 14 12:38:08.052: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Oct 14 12:38:08.052: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Oct 14 12:38:08.052: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Oct 14 12:38:08.052: INFO: Checking APIGroup: scheduling.k8s.io
  Oct 14 12:38:08.053: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Oct 14 12:38:08.053: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Oct 14 12:38:08.053: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Oct 14 12:38:08.053: INFO: Checking APIGroup: coordination.k8s.io
  Oct 14 12:38:08.055: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Oct 14 12:38:08.055: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Oct 14 12:38:08.055: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Oct 14 12:38:08.055: INFO: Checking APIGroup: node.k8s.io
  Oct 14 12:38:08.057: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Oct 14 12:38:08.057: INFO: Versions found [{node.k8s.io/v1 v1}]
  Oct 14 12:38:08.057: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Oct 14 12:38:08.057: INFO: Checking APIGroup: discovery.k8s.io
  Oct 14 12:38:08.059: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Oct 14 12:38:08.060: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Oct 14 12:38:08.060: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Oct 14 12:38:08.060: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Oct 14 12:38:08.062: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Oct 14 12:38:08.062: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Oct 14 12:38:08.062: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Oct 14 12:38:08.062: INFO: Checking APIGroup: metrics.k8s.io
  Oct 14 12:38:08.064: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Oct 14 12:38:08.064: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Oct 14 12:38:08.064: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Oct 14 12:38:08.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2576" for this suite. @ 10/14/23 12:38:08.072
• [0.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 10/14/23 12:38:08.085
  Oct 14 12:38:08.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 12:38:08.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:08.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:08.12
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/14/23 12:38:08.124
  E1014 12:38:09.010945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:10.012103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:11.012234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:12.012321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:38:12.15
  Oct 14 12:38:12.154: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-14dcd40a-b960-48a5-a4bf-2477a616277d container test-container: <nil>
  STEP: delete the pod @ 10/14/23 12:38:12.174
  Oct 14 12:38:12.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9515" for this suite. @ 10/14/23 12:38:12.2
• [4.124 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/14/23 12:38:12.21
  Oct 14 12:38:12.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename tables @ 10/14/23 12:38:12.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:12.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:12.239
  Oct 14 12:38:12.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5109" for this suite. @ 10/14/23 12:38:12.254
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/14/23 12:38:12.265
  Oct 14 12:38:12.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename proxy @ 10/14/23 12:38:12.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:12.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:12.292
  Oct 14 12:38:12.297: INFO: Creating pod...
  E1014 12:38:13.012451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:14.012611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:14.326: INFO: Creating service...
  Oct 14 12:38:14.340: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/pods/agnhost/proxy/some/path/with/DELETE
  Oct 14 12:38:14.349: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 14 12:38:14.349: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/pods/agnhost/proxy/some/path/with/GET
  Oct 14 12:38:14.364: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct 14 12:38:14.364: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/pods/agnhost/proxy/some/path/with/HEAD
  Oct 14 12:38:14.370: INFO: http.Client request:HEAD | StatusCode:200
  Oct 14 12:38:14.371: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/pods/agnhost/proxy/some/path/with/OPTIONS
  Oct 14 12:38:14.381: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 14 12:38:14.381: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/pods/agnhost/proxy/some/path/with/PATCH
  Oct 14 12:38:14.389: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 14 12:38:14.389: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/pods/agnhost/proxy/some/path/with/POST
  Oct 14 12:38:14.396: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 14 12:38:14.396: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/pods/agnhost/proxy/some/path/with/PUT
  Oct 14 12:38:14.401: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 14 12:38:14.401: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/services/test-service/proxy/some/path/with/DELETE
  Oct 14 12:38:14.409: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 14 12:38:14.409: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/services/test-service/proxy/some/path/with/GET
  Oct 14 12:38:14.417: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct 14 12:38:14.417: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/services/test-service/proxy/some/path/with/HEAD
  Oct 14 12:38:14.424: INFO: http.Client request:HEAD | StatusCode:200
  Oct 14 12:38:14.424: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/services/test-service/proxy/some/path/with/OPTIONS
  Oct 14 12:38:14.432: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 14 12:38:14.432: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/services/test-service/proxy/some/path/with/PATCH
  Oct 14 12:38:14.440: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 14 12:38:14.441: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/services/test-service/proxy/some/path/with/POST
  Oct 14 12:38:14.448: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 14 12:38:14.448: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6194/services/test-service/proxy/some/path/with/PUT
  Oct 14 12:38:14.456: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 14 12:38:14.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6194" for this suite. @ 10/14/23 12:38:14.462
• [2.206 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/14/23 12:38:14.473
  Oct 14 12:38:14.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename daemonsets @ 10/14/23 12:38:14.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:14.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:14.502
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/14/23 12:38:14.532
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/23 12:38:14.54
  Oct 14 12:38:14.546: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:14.546: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:14.551: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 12:38:14.551: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 12:38:15.012735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:15.558: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:15.558: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:15.564: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 12:38:15.564: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 12:38:16.013067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:16.557: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:16.558: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:16.562: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 12:38:16.562: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/14/23 12:38:16.567
  Oct 14 12:38:16.590: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:16.590: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:38:16.597: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 12:38:16.597: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/14/23 12:38:16.597
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/23 12:38:16.617
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-624, will wait for the garbage collector to delete the pods @ 10/14/23 12:38:16.617
  Oct 14 12:38:16.688: INFO: Deleting DaemonSet.extensions daemon-set took: 8.215734ms
  Oct 14 12:38:16.789: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.051102ms
  E1014 12:38:17.013579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:18.014358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:18.595: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 12:38:18.595: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 14 12:38:18.599: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15114"},"items":null}

  Oct 14 12:38:18.604: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15114"},"items":null}

  Oct 14 12:38:18.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-624" for this suite. @ 10/14/23 12:38:18.629
• [4.166 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 10/14/23 12:38:18.641
  Oct 14 12:38:18.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 12:38:18.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:18.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:18.672
  STEP: Creating configMap with name cm-test-opt-del-e97383e7-6b45-45a7-b313-08713072375d @ 10/14/23 12:38:18.682
  STEP: Creating configMap with name cm-test-opt-upd-14eca717-c261-4f12-8243-43dfb13c2ffd @ 10/14/23 12:38:18.689
  STEP: Creating the pod @ 10/14/23 12:38:18.695
  E1014 12:38:19.015046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:20.015123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-e97383e7-6b45-45a7-b313-08713072375d @ 10/14/23 12:38:20.754
  STEP: Updating configmap cm-test-opt-upd-14eca717-c261-4f12-8243-43dfb13c2ffd @ 10/14/23 12:38:20.763
  STEP: Creating configMap with name cm-test-opt-create-58179412-c471-4734-acd9-dcb7bcdb843f @ 10/14/23 12:38:20.77
  STEP: waiting to observe update in volume @ 10/14/23 12:38:20.775
  E1014 12:38:21.016139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:22.016689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:22.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-557" for this suite. @ 10/14/23 12:38:22.816
• [4.183 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 10/14/23 12:38:22.824
  Oct 14 12:38:22.824: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename field-validation @ 10/14/23 12:38:22.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:22.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:22.858
  STEP: apply creating a deployment @ 10/14/23 12:38:22.863
  Oct 14 12:38:22.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1948" for this suite. @ 10/14/23 12:38:22.887
• [0.072 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/14/23 12:38:22.898
  Oct 14 12:38:22.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/14/23 12:38:22.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:22.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:22.926
  STEP: mirroring a new custom Endpoint @ 10/14/23 12:38:22.946
  Oct 14 12:38:22.960: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E1014 12:38:23.017019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:24.017480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/14/23 12:38:24.968
  Oct 14 12:38:24.979: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1014 12:38:25.018510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:26.018979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 10/14/23 12:38:26.984
  Oct 14 12:38:27.001: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E1014 12:38:27.019988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:28.020093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:29.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8318" for this suite. @ 10/14/23 12:38:29.011
• [6.121 seconds]
------------------------------
SS  E1014 12:38:29.020667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
SSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 10/14/23 12:38:29.021
  Oct 14 12:38:29.022: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 12:38:29.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:29.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:29.052
  STEP: Creating configMap configmap-5644/configmap-test-2f38ffa9-3f2e-476e-ac5c-183ec83ce9c3 @ 10/14/23 12:38:29.056
  STEP: Creating a pod to test consume configMaps @ 10/14/23 12:38:29.063
  E1014 12:38:30.020822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:31.021040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:32.021182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:33.021467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:38:33.092
  Oct 14 12:38:33.097: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-configmaps-dcee46d3-74d7-45df-9614-d9615254f572 container env-test: <nil>
  STEP: delete the pod @ 10/14/23 12:38:33.106
  Oct 14 12:38:33.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5644" for this suite. @ 10/14/23 12:38:33.13
• [4.119 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 10/14/23 12:38:33.141
  Oct 14 12:38:33.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 12:38:33.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:33.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:33.168
  STEP: Creating a ResourceQuota with best effort scope @ 10/14/23 12:38:33.173
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/23 12:38:33.181
  E1014 12:38:34.021942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:35.022223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 10/14/23 12:38:35.187
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/23 12:38:35.198
  E1014 12:38:36.022238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:37.022786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 10/14/23 12:38:37.203
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/14/23 12:38:37.221
  E1014 12:38:38.022930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:39.023108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/14/23 12:38:39.228
  E1014 12:38:40.023945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:41.023989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/23 12:38:41.232
  STEP: Ensuring resource quota status released the pod usage @ 10/14/23 12:38:41.251
  E1014 12:38:42.024565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:43.025223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 10/14/23 12:38:43.257
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/14/23 12:38:43.27
  E1014 12:38:44.025358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:45.025995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/14/23 12:38:45.277
  E1014 12:38:46.026430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:47.026874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/23 12:38:47.282
  STEP: Ensuring resource quota status released the pod usage @ 10/14/23 12:38:47.296
  E1014 12:38:48.027007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:49.027046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:49.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7854" for this suite. @ 10/14/23 12:38:49.308
• [16.175 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 10/14/23 12:38:49.317
  Oct 14 12:38:49.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 12:38:49.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:49.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:49.35
  STEP: Creating configMap configmap-7996/configmap-test-df2ec48d-a986-48e4-9f4f-e69e5cb7bdff @ 10/14/23 12:38:49.355
  STEP: Creating a pod to test consume configMaps @ 10/14/23 12:38:49.361
  E1014 12:38:50.027248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:51.027476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:52.028021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:53.028106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:38:53.394
  Oct 14 12:38:53.399: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-configmaps-0f68fdb2-9adf-4962-80da-7b5afeb6b575 container env-test: <nil>
  STEP: delete the pod @ 10/14/23 12:38:53.408
  Oct 14 12:38:53.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7996" for this suite. @ 10/14/23 12:38:53.433
• [4.125 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/14/23 12:38:53.443
  Oct 14 12:38:53.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 12:38:53.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:53.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:53.479
  STEP: creating the pod @ 10/14/23 12:38:53.485
  STEP: setting up watch @ 10/14/23 12:38:53.485
  STEP: submitting the pod to kubernetes @ 10/14/23 12:38:53.591
  STEP: verifying the pod is in kubernetes @ 10/14/23 12:38:53.606
  STEP: verifying pod creation was observed @ 10/14/23 12:38:53.611
  E1014 12:38:54.028205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:38:55.028842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/14/23 12:38:55.629
  STEP: verifying pod deletion was observed @ 10/14/23 12:38:55.639
  E1014 12:38:56.029793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:56.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-974" for this suite. @ 10/14/23 12:38:56.944
• [3.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 10/14/23 12:38:56.958
  Oct 14 12:38:56.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-pred @ 10/14/23 12:38:56.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:56.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:56.988
  Oct 14 12:38:56.998: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 14 12:38:57.018: INFO: Waiting for terminating namespaces to be deleted...
  Oct 14 12:38:57.025: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-199 before test
  E1014 12:38:57.030730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:57.035: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-9c4nk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: nginx-ingress-controller-kubernetes-worker-2jwtx from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: calico-node-ffpcs from kube-system started at 2023-10-14 12:13:47 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: coredns-59cfb5bf46-rzv4m from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container coredns ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: kube-state-metrics-775d9f4f79-tpb2t from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: metrics-server-v0.6.3-69d7fbfdf8-wlkcq from kube-system started at 2023-10-14 12:14:07 +0000 UTC (2 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: dashboard-metrics-scraper-5dd7cb5fc-qbkfw from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: kubernetes-dashboard-7b899cb9d9-gzbsl from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-vvgmm from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:38:57.036: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 12:38:57.036: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-21 before test
  Oct 14 12:38:57.047: INFO: nginx-ingress-controller-kubernetes-worker-f7w62 from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:13 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.048: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 12:38:57.049: INFO: calico-node-gzndl from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.049: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 12:38:57.050: INFO: sonobuoy from sonobuoy started at 2023-10-14 12:19:26 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.050: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 14 12:38:57.051: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-89gbh from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:38:57.052: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:38:57.052: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 12:38:57.053: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-101 before test
  Oct 14 12:38:57.065: INFO: nginx-ingress-controller-kubernetes-worker-w9mvk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:12 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.065: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 12:38:57.065: INFO: calico-node-87d2x from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 12:38:57.065: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 12:38:57.065: INFO: sonobuoy-e2e-job-78ddb03d82ed452b from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:38:57.065: INFO: 	Container e2e ready: true, restart count 0
  Oct 14 12:38:57.065: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:38:57.065: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-gmddl from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 12:38:57.065: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 12:38:57.065: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/14/23 12:38:57.065
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.178df9a898e974ea], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 10/14/23 12:38:57.192
  E1014 12:38:58.030792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:38:58.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6354" for this suite. @ 10/14/23 12:38:58.115
• [1.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/14/23 12:38:58.127
  Oct 14 12:38:58.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/23 12:38:58.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:38:58.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:38:58.156
  E1014 12:38:59.030913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:00.031898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:39:00.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3054" for this suite. @ 10/14/23 12:39:00.204
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 10/14/23 12:39:00.218
  Oct 14 12:39:00.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename gc @ 10/14/23 12:39:00.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:39:00.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:39:00.254
  STEP: create the rc @ 10/14/23 12:39:00.258
  W1014 12:39:00.266945      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1014 12:39:01.033103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:02.033264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:03.033359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:04.033476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:05.033609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/14/23 12:39:05.273
  STEP: wait for all pods to be garbage collected @ 10/14/23 12:39:05.284
  E1014 12:39:06.034441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:07.035118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:08.035173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:09.035318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:10.035823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/14/23 12:39:10.295
  W1014 12:39:10.302295      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 14 12:39:10.302: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 14 12:39:10.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6637" for this suite. @ 10/14/23 12:39:10.307
• [10.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 10/14/23 12:39:10.32
  Oct 14 12:39:10.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/23 12:39:10.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:39:10.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:39:10.351
  Oct 14 12:39:10.375: INFO: Waiting up to 1m0s for all nodes to be ready
  E1014 12:39:11.035932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:12.036969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:13.037156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:14.037266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:15.037364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:16.037824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:17.037945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:18.038023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:19.038167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:20.038246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:21.038365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:22.038486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:23.038813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:24.039018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:25.040091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:26.040230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:27.040340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:28.040440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:29.040588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:30.040685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:31.040996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:32.041420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:33.041535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:34.041925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:35.042029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:36.042687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:37.042847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:38.042919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:39.043031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:40.043149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:41.043487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:42.043571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:43.044752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:44.044753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:45.044924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:46.045711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:47.046943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:48.049671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:49.049657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:50.050015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:51.050326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:52.050719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:53.050831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:54.051880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:55.051993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:56.052927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:57.054008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:58.054231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:39:59.055222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:00.055879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:01.056365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:02.056480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:03.056702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:04.056822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:05.056988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:06.057390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:07.057771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:08.057966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:09.058791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:10.059104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:10.407: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/14/23 12:40:10.412
  Oct 14 12:40:10.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/14/23 12:40:10.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:40:10.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:40:10.441
  Oct 14 12:40:10.463: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Oct 14 12:40:10.467: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Oct 14 12:40:10.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 12:40:10.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2119" for this suite. @ 10/14/23 12:40:10.569
  STEP: Destroying namespace "sched-preemption-4402" for this suite. @ 10/14/23 12:40:10.577
• [60.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 10/14/23 12:40:10.594
  Oct 14 12:40:10.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-webhook @ 10/14/23 12:40:10.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:40:10.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:40:10.622
  STEP: Setting up server cert @ 10/14/23 12:40:10.627
  E1014 12:40:11.059419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/14/23 12:40:11.403
  STEP: Deploying the custom resource conversion webhook pod @ 10/14/23 12:40:11.412
  STEP: Wait for the deployment to be ready @ 10/14/23 12:40:11.431
  Oct 14 12:40:11.444: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1014 12:40:12.059667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:13.059618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 12:40:13.459
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 12:40:13.474
  E1014 12:40:14.059814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:14.475: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct 14 12:40:14.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:40:15.060351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:16.061293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/14/23 12:40:17.043
  E1014 12:40:17.062781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create a v2 custom resource @ 10/14/23 12:40:17.072
  STEP: List CRs in v1 @ 10/14/23 12:40:17.155
  STEP: List CRs in v2 @ 10/14/23 12:40:17.165
  Oct 14 12:40:17.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8983" for this suite. @ 10/14/23 12:40:17.791
• [7.221 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/14/23 12:40:17.816
  Oct 14 12:40:17.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename daemonsets @ 10/14/23 12:40:17.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:40:17.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:40:17.851
  Oct 14 12:40:17.888: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/23 12:40:17.895
  Oct 14 12:40:17.900: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:17.901: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:17.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 12:40:17.911: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 12:40:18.063148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:18.917: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:18.917: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:18.922: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 12:40:18.922: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 12:40:19.063257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:19.916: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:19.916: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:19.921: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 12:40:19.921: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/14/23 12:40:19.94
  STEP: Check that daemon pods images are updated. @ 10/14/23 12:40:19.953
  Oct 14 12:40:19.957: INFO: Wrong image for pod: daemon-set-64rm6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:19.957: INFO: Wrong image for pod: daemon-set-8jskw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:19.958: INFO: Wrong image for pod: daemon-set-pmz47. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:19.964: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:19.964: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 12:40:20.064253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:20.970: INFO: Wrong image for pod: daemon-set-64rm6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:20.970: INFO: Wrong image for pod: daemon-set-pmz47. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:20.970: INFO: Pod daemon-set-q7jzk is not available
  Oct 14 12:40:20.975: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:20.975: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 12:40:21.064850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:21.971: INFO: Wrong image for pod: daemon-set-64rm6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:21.971: INFO: Wrong image for pod: daemon-set-pmz47. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:21.971: INFO: Pod daemon-set-q7jzk is not available
  Oct 14 12:40:21.977: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:21.977: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 12:40:22.065464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:22.972: INFO: Wrong image for pod: daemon-set-64rm6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:22.972: INFO: Pod daemon-set-tj4mn is not available
  Oct 14 12:40:22.978: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:22.978: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 12:40:23.066142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:23.971: INFO: Wrong image for pod: daemon-set-64rm6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 14 12:40:23.971: INFO: Pod daemon-set-tj4mn is not available
  Oct 14 12:40:23.976: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:23.976: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 12:40:24.066567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:24.976: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:24.977: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 12:40:25.066824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:25.973: INFO: Pod daemon-set-djn4h is not available
  Oct 14 12:40:25.979: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:25.980: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/14/23 12:40:25.98
  Oct 14 12:40:25.985: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:25.986: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:25.990: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 14 12:40:25.990: INFO: Node ip-172-31-35-21 is running 0 daemon pod, expected 1
  E1014 12:40:26.067092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:26.998: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:26.998: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 12:40:27.003: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 12:40:27.003: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/23 12:40:27.025
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1348, will wait for the garbage collector to delete the pods @ 10/14/23 12:40:27.026
  E1014 12:40:27.067571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:27.094: INFO: Deleting DaemonSet.extensions daemon-set took: 12.863332ms
  Oct 14 12:40:27.195: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.197759ms
  E1014 12:40:28.067556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:28.400: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 12:40:28.400: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 14 12:40:28.405: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16038"},"items":null}

  Oct 14 12:40:28.409: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16038"},"items":null}

  Oct 14 12:40:28.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1348" for this suite. @ 10/14/23 12:40:28.432
• [10.624 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 10/14/23 12:40:28.441
  Oct 14 12:40:28.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename disruption @ 10/14/23 12:40:28.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:40:28.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:40:28.468
  STEP: Waiting for the pdb to be processed @ 10/14/23 12:40:28.481
  E1014 12:40:29.067657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:30.067789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 10/14/23 12:40:30.49
  STEP: Waiting for all pods to be running @ 10/14/23 12:40:30.504
  Oct 14 12:40:30.512: INFO: running pods: 0 < 1
  E1014 12:40:31.068430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:32.068542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/14/23 12:40:32.517
  STEP: Waiting for the pdb to be processed @ 10/14/23 12:40:32.531
  STEP: Patching PodDisruptionBudget status @ 10/14/23 12:40:32.54
  STEP: Waiting for the pdb to be processed @ 10/14/23 12:40:32.554
  Oct 14 12:40:32.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7471" for this suite. @ 10/14/23 12:40:32.57
• [4.137 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/14/23 12:40:32.578
  Oct 14 12:40:32.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename subpath @ 10/14/23 12:40:32.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:40:32.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:40:32.653
  STEP: Setting up data @ 10/14/23 12:40:32.657
  STEP: Creating pod pod-subpath-test-downwardapi-gtf9 @ 10/14/23 12:40:32.684
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/23 12:40:32.684
  E1014 12:40:33.068699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:34.069204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:35.069320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:36.069977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:37.070101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:38.070817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:39.071034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:40.071216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:41.071361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:42.071469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:43.071608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:44.071714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:45.072708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:46.073448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:47.073590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:48.073720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:49.073843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:50.074089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:51.074859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:52.074958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:53.075893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:54.075971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:55.076592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:40:56.077292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:40:56.764
  Oct 14 12:40:56.769: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-subpath-test-downwardapi-gtf9 container test-container-subpath-downwardapi-gtf9: <nil>
  STEP: delete the pod @ 10/14/23 12:40:56.792
  STEP: Deleting pod pod-subpath-test-downwardapi-gtf9 @ 10/14/23 12:40:56.81
  Oct 14 12:40:56.810: INFO: Deleting pod "pod-subpath-test-downwardapi-gtf9" in namespace "subpath-1956"
  Oct 14 12:40:56.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1956" for this suite. @ 10/14/23 12:40:56.825
• [24.257 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/14/23 12:40:56.837
  Oct 14 12:40:56.837: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename events @ 10/14/23 12:40:56.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:40:56.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:40:56.864
  STEP: creating a test event @ 10/14/23 12:40:56.869
  STEP: listing events in all namespaces @ 10/14/23 12:40:56.878
  STEP: listing events in test namespace @ 10/14/23 12:40:56.89
  STEP: listing events with field selection filtering on source @ 10/14/23 12:40:56.895
  STEP: listing events with field selection filtering on reportingController @ 10/14/23 12:40:56.9
  STEP: getting the test event @ 10/14/23 12:40:56.903
  STEP: patching the test event @ 10/14/23 12:40:56.908
  STEP: getting the test event @ 10/14/23 12:40:56.919
  STEP: updating the test event @ 10/14/23 12:40:56.923
  STEP: getting the test event @ 10/14/23 12:40:56.931
  STEP: deleting the test event @ 10/14/23 12:40:56.935
  STEP: listing events in all namespaces @ 10/14/23 12:40:56.945
  STEP: listing events in test namespace @ 10/14/23 12:40:56.987
  Oct 14 12:40:57.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4511" for this suite. @ 10/14/23 12:40:57.013
• [0.194 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 10/14/23 12:40:57.036
  Oct 14 12:40:57.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 12:40:57.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:40:57.069
  E1014 12:40:57.078310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:40:57.084
  Oct 14 12:40:57.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:40:58.078485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/14/23 12:40:58.673
  Oct 14 12:40:58.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-2146 --namespace=crd-publish-openapi-2146 create -f -'
  E1014 12:40:59.078694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:40:59.230: INFO: stderr: ""
  Oct 14 12:40:59.230: INFO: stdout: "e2e-test-crd-publish-openapi-3180-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct 14 12:40:59.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-2146 --namespace=crd-publish-openapi-2146 delete e2e-test-crd-publish-openapi-3180-crds test-cr'
  Oct 14 12:40:59.360: INFO: stderr: ""
  Oct 14 12:40:59.360: INFO: stdout: "e2e-test-crd-publish-openapi-3180-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Oct 14 12:40:59.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-2146 --namespace=crd-publish-openapi-2146 apply -f -'
  Oct 14 12:40:59.577: INFO: stderr: ""
  Oct 14 12:40:59.577: INFO: stdout: "e2e-test-crd-publish-openapi-3180-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct 14 12:40:59.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-2146 --namespace=crd-publish-openapi-2146 delete e2e-test-crd-publish-openapi-3180-crds test-cr'
  Oct 14 12:40:59.680: INFO: stderr: ""
  Oct 14 12:40:59.680: INFO: stdout: "e2e-test-crd-publish-openapi-3180-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/14/23 12:40:59.68
  Oct 14 12:40:59.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-2146 explain e2e-test-crd-publish-openapi-3180-crds'
  E1014 12:41:00.078800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:41:00.236: INFO: stderr: ""
  Oct 14 12:41:00.236: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3180-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1014 12:41:01.079429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:41:01.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2146" for this suite. @ 10/14/23 12:41:01.826
• [4.800 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 10/14/23 12:41:01.84
  Oct 14 12:41:01.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename limitrange @ 10/14/23 12:41:01.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:41:01.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:41:01.871
  STEP: Creating a LimitRange @ 10/14/23 12:41:01.875
  STEP: Setting up watch @ 10/14/23 12:41:01.876
  STEP: Submitting a LimitRange @ 10/14/23 12:41:01.983
  STEP: Verifying LimitRange creation was observed @ 10/14/23 12:41:01.99
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/14/23 12:41:01.991
  Oct 14 12:41:01.995: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct 14 12:41:01.995: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/14/23 12:41:01.995
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/14/23 12:41:02.006
  Oct 14 12:41:02.015: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct 14 12:41:02.015: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/14/23 12:41:02.015
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/14/23 12:41:02.024
  Oct 14 12:41:02.032: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Oct 14 12:41:02.032: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/14/23 12:41:02.032
  STEP: Failing to create a Pod with more than max resources @ 10/14/23 12:41:02.039
  STEP: Updating a LimitRange @ 10/14/23 12:41:02.044
  STEP: Verifying LimitRange updating is effective @ 10/14/23 12:41:02.052
  E1014 12:41:02.079970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:03.080043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 10/14/23 12:41:04.057
  STEP: Failing to create a Pod with more than max resources @ 10/14/23 12:41:04.066
  STEP: Deleting a LimitRange @ 10/14/23 12:41:04.069
  E1014 12:41:04.080282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the LimitRange was deleted @ 10/14/23 12:41:04.116
  E1014 12:41:05.080381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:06.080753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:07.080878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:08.081043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:09.081603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:41:09.120: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/14/23 12:41:09.12
  Oct 14 12:41:09.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9545" for this suite. @ 10/14/23 12:41:09.147
• [7.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/14/23 12:41:09.162
  Oct 14 12:41:09.162: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename cronjob @ 10/14/23 12:41:09.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:41:09.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:41:09.191
  STEP: Creating a suspended cronjob @ 10/14/23 12:41:09.195
  STEP: Ensuring no jobs are scheduled @ 10/14/23 12:41:09.203
  E1014 12:41:10.082517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:11.082846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:12.083948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:13.084069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:14.084200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:15.084327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:16.084391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:17.088208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:18.088293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:19.088392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:20.088522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:21.089333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:22.089805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:23.090682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:24.090808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:25.091890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:26.092759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:27.094874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:28.094954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:29.095040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:30.095170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:31.095568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:32.096103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:33.096218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:34.096538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:35.097077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:36.097417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:37.098226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:38.098138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:39.098225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:40.098403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:41.099483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:42.099576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:43.099741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:44.100708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:45.100775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:46.101577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:47.101558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:48.101681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:49.101799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:50.102877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:51.103678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:52.104370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:53.104533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:54.105252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:55.105352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:56.105733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:57.106298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:58.106838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:41:59.107556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:00.107687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:01.108423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:02.108989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:03.109136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:04.109221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:05.109398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:06.110252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:07.115591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:08.116416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:09.116534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:10.116568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:11.116751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:12.116895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:13.116997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:14.117089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:15.117136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:16.117367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:17.117629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:18.117697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:19.117838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:20.118154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:21.118980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:22.119081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:23.119469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:24.119889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:25.120022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:26.120638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:27.121532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:28.121644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:29.121731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:30.121887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:31.122145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:32.122253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:33.122528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:34.122816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:35.123880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:36.124458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:37.124497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:38.124583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:39.125021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:40.126041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:41.126477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:42.126808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:43.126897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:44.127003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:45.127899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:46.128322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:47.128441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:48.128585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:49.128663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:50.128749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:51.129395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:52.129635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:53.129731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:54.129812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:55.129908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:56.130417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:57.130688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:58.130867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:42:59.130929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:00.131897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:01.132086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:02.133043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:03.133171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:04.133298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:05.133417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:06.134384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:07.134780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:08.135369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:09.135654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:10.135773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:11.136066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:12.136200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:13.136312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:14.136559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:15.136840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:16.137690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:17.138500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:18.138778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:19.138887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:20.139593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:21.140135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:22.140279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:23.140417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:24.140492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:25.140612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:26.141399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:27.141519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:28.141634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:29.142751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:30.142887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:31.143000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:32.143140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:33.143606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:34.144504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:35.144915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:36.145341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:37.146039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:38.146523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:39.146758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:40.147843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:41.148490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:42.148992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:43.150065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:44.150922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:45.151045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:46.151432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:47.151555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:48.152094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:49.153038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:50.153191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:51.153221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:52.153321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:53.153760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:54.154337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:55.154461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:56.155410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:57.155617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:58.155736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:43:59.155872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:00.156233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:01.156832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:02.157329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:03.157525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:04.157597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:05.157961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:06.159033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:07.159317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:08.159432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:09.159546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:10.159662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:11.160458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:12.160789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:13.160911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:14.161042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:15.161518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:16.162162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:17.162360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:18.162448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:19.162761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:20.163847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:21.164190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:22.165070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:23.165185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:24.165503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:25.166255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:26.166934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:27.167862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:28.168242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:29.168656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:30.169591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:31.170503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:32.170770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:33.170881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:34.171467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:35.171845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:36.172021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:37.172398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:38.172515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:39.172624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:40.172739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:41.173141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:42.173346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:43.174124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:44.174504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:45.174760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:46.175330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:47.175451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:48.176133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:49.176692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:50.176927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:51.177506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:52.177575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:53.177697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:54.177886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:55.178242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:56.178372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:57.178835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:58.178953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:44:59.179075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:00.179215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:01.179522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:02.180290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:03.180644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:04.181253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:05.181698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:06.182451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:07.182574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:08.182747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:09.182792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:10.183386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:11.183696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:12.183820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:13.183933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:14.184048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:15.184165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:16.184724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:17.184833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:18.184964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:19.185942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:20.186051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:21.186491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:22.186675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:23.186774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:24.187862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:25.188914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:26.189058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:27.189835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:28.190253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:29.190386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:30.190512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:31.191482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:32.191616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:33.192696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:34.193025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:35.193294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:36.193371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:37.193455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:38.193641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:39.193744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:40.193884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:41.194522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:42.194784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:43.195217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:44.196107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:45.196294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:46.196779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:47.197335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:48.197497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:49.197721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:50.197892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:51.198567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:52.198766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:53.198983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:54.199048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:55.199197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:56.199737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:57.200786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:58.200858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:45:59.201253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:00.201686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:01.202760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:02.202787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:03.202998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:04.203880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:05.204203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:06.204542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:07.204495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:08.204724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:09.204743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/14/23 12:46:09.213
  STEP: Removing cronjob @ 10/14/23 12:46:09.217
  Oct 14 12:46:09.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4707" for this suite. @ 10/14/23 12:46:09.232
• [300.078 seconds]
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/14/23 12:46:09.24
  Oct 14 12:46:09.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 12:46:09.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:46:09.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:46:09.269
  STEP: Create a pod @ 10/14/23 12:46:09.275
  E1014 12:46:10.205295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:11.205582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/14/23 12:46:11.298
  Oct 14 12:46:11.309: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Oct 14 12:46:11.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6736" for this suite. @ 10/14/23 12:46:11.315
• [2.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 10/14/23 12:46:11.326
  Oct 14 12:46:11.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 12:46:11.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:46:11.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:46:11.357
  STEP: Creating projection with secret that has name secret-emptykey-test-c9b97f46-7aba-4117-88cb-2c1b18352cab @ 10/14/23 12:46:11.361
  Oct 14 12:46:11.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8109" for this suite. @ 10/14/23 12:46:11.37
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 10/14/23 12:46:11.386
  Oct 14 12:46:11.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 12:46:11.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:46:11.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:46:11.414
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/14/23 12:46:11.419
  E1014 12:46:12.206570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:13.206801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:14.206913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:15.207029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:46:15.444
  Oct 14 12:46:15.449: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-8de17a1b-fbc4-4758-aa9e-2aa721956278 container test-container: <nil>
  STEP: delete the pod @ 10/14/23 12:46:15.476
  Oct 14 12:46:15.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9383" for this suite. @ 10/14/23 12:46:15.5
• [4.122 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 10/14/23 12:46:15.508
  Oct 14 12:46:15.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 12:46:15.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:46:15.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:46:15.537
  STEP: Creating pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637 @ 10/14/23 12:46:15.542
  E1014 12:46:16.207124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:17.207407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 12:46:17.569
  Oct 14 12:46:17.575: INFO: Initial restart count of pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c is 0
  Oct 14 12:46:17.579: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:18.207834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:19.207955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:19.584: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:20.208643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:21.209581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:21.589: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:22.209713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:23.210207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:23.595: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:24.210876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:25.211877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:25.601: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:26.212792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:27.212914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:27.607: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:28.213052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:29.213181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:29.612: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:30.213290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:31.213457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:31.619: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:32.213617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:33.213739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:33.624: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:34.213850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:35.214236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:35.631: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:36.214875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:37.214988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:37.636: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:38.215110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:39.215858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:39.642: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:40.216454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:41.216492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:41.649: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:42.217227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:43.217358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:43.655: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:44.217472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:45.217739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:45.661: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:46.217813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:47.218230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:47.667: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:48.218929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:49.219327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:49.671: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:50.219413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:51.220467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:51.677: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:52.220572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:53.220759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:53.683: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:54.220836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:55.220966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:55.688: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:56.221480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:57.221858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:57.694: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:46:58.221987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:46:59.222303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:46:59.700: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:00.223096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:01.223843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:01.707: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:02.224804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:03.224942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:03.712: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:04.225005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:05.225292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:05.717: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:06.226360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:07.226497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:07.722: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:08.227163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:09.227281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:09.727: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:10.227399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:11.227546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:11.733: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:12.227666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:13.227779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:13.737: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:14.228861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:15.229253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:15.744: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:16.230166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:17.230476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:17.749: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:18.230595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:19.230758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:19.754: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:20.230969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:21.231105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:21.760: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:22.231615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:23.231691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:23.766: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:24.232372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:25.232493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:25.771: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:26.233304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:27.233446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:27.776: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:28.234267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:29.234610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:29.782: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:30.235549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:31.235611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:31.787: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:32.236317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:33.236444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:33.794: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:34.237366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:35.237537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:35.799: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:36.238506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:37.238776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:37.805: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:38.239859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:39.239980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:39.810: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:40.240416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:41.241002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:41.816: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:42.241873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:43.242000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:43.820: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:44.242749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:45.242869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:45.826: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:46.243773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:47.244202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:47.833: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:48.244735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:49.244852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:49.839: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:50.244938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:51.245388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:51.844: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:52.246045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:53.246158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:53.850: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:54.247027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:55.247142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:55.856: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:56.247590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:57.248017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:57.862: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:47:58.248221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:47:59.248331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:47:59.867: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:00.249152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:01.249349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:01.873: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:02.249450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:03.249561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:03.878: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:04.250176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:05.250297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:05.884: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:06.251049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:07.251163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:07.888: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:08.251855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:09.252353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:09.893: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:10.253451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:11.253519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:11.899: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:12.254488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:13.254762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:13.906: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:14.254813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:15.254894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:15.911: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:16.255021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:17.255136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:17.918: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:18.255447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:19.255800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:19.923: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:20.255925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:21.256253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:21.929: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:22.256820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:23.257106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:23.934: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:24.258065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:25.258345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:25.939: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:26.259148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:27.259256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:27.944: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:28.259846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:29.259966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:29.949: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:30.260087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:31.260516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:31.955: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:32.260958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:33.261073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:33.959: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:34.261193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:35.261321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:35.964: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:36.261421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:37.261539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:37.968: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:38.262272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:39.262386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:39.973: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:40.262669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:41.263397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:41.983: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:42.264472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:43.264704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:43.987: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:44.265238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:45.265459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:45.992: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:46.266329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:47.266763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:47.997: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:48.267431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:49.267559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:50.002: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:50.267670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:51.268556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:52.009: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:52.268814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:53.269293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:54.015: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:54.269702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:55.270572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:56.020: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:56.271492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:57.271856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:48:58.025: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:48:58.272076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:48:59.272475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:00.030: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:00.272857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:01.273235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:02.037: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:02.273439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:03.273661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:04.042: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:04.273751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:05.273930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:06.048: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:06.274065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:07.274437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:08.055: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:08.274564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:09.274777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:10.060: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:10.275791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:11.276574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:12.067: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:12.277181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:13.277591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:14.072: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:14.278171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:15.278516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:16.078: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:16.279310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:17.280333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:18.084: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:18.280866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:19.281415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:20.093: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:20.281919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:21.282199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:22.099: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:22.282989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:23.283849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:24.104: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:24.284383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:25.284907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:26.110: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:26.285076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:27.285233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:28.116: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:28.285933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:29.286052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:30.122: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:30.286209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:31.286648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:32.127: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:32.287335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:33.287447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:34.132: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:34.287564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:35.287689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:36.138: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:36.287723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:37.288012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:38.143: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:38.288375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:39.289074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:40.148: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:40.290118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:41.290336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:42.158: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:42.291385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:43.291483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:44.164: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:44.292274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:45.292389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:46.169: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:46.292536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:47.292595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:48.173: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:48.293203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:49.293332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:50.179: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:50.293443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:51.293657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:52.184: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:52.294239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:53.294536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:54.190: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:54.294639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:55.294784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:56.195: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:56.295885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:57.296358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:49:58.201: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:49:58.296870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:49:59.297139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:00.206: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:00.297765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:01.298739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:02.212: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:02.299073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:03.300068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:04.218: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:04.300881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:05.301013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:06.224: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:06.301909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:07.302038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:08.230: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:08.302072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:09.302696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:10.236: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:10.303372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:11.303494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:12.241: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:12.304017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:13.304139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:14.246: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:14.305024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:15.305138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:16.251: INFO: Get pod busybox-5d9a4a1a-7273-4dc1-9e12-250c7c682b6c in namespace container-probe-6637
  E1014 12:50:16.305212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:17.305465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:18.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 12:50:18.258
  STEP: Destroying namespace "container-probe-6637" for this suite. @ 10/14/23 12:50:18.278
• [242.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 10/14/23 12:50:18.289
  Oct 14 12:50:18.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 12:50:18.291
  E1014 12:50:18.305863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:50:18.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:50:18.32
  STEP: creating service nodeport-test with type=NodePort in namespace services-2737 @ 10/14/23 12:50:18.326
  STEP: creating replication controller nodeport-test in namespace services-2737 @ 10/14/23 12:50:18.345
  I1014 12:50:18.365684      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-2737, replica count: 2
  E1014 12:50:19.305816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:20.306755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:21.307300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 12:50:21.416684      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 12:50:21.416: INFO: Creating new exec pod
  E1014 12:50:22.307448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:23.307559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:24.308225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:24.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Oct 14 12:50:24.670: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Oct 14 12:50:24.670: INFO: stdout: "nodeport-test-2dbn7"
  Oct 14 12:50:24.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.168 80'
  Oct 14 12:50:24.879: INFO: stderr: "+ nc -v -t -w 2 10.152.183.168 80\nConnection to 10.152.183.168 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 14 12:50:24.879: INFO: stdout: ""
  E1014 12:50:25.309104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:25.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.168 80'
  Oct 14 12:50:26.156: INFO: stderr: "+ nc -v -t -w 2 10.152.183.168 80\n+ echo hostName\nConnection to 10.152.183.168 80 port [tcp/http] succeeded!\n"
  Oct 14 12:50:26.156: INFO: stdout: ""
  E1014 12:50:26.309259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:26.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.168 80'
  Oct 14 12:50:27.103: INFO: stderr: "+ nc -v -t -w 2 10.152.183.168 80\n+ echo hostName\nConnection to 10.152.183.168 80 port [tcp/http] succeeded!\n"
  Oct 14 12:50:27.103: INFO: stdout: ""
  E1014 12:50:27.310016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:27.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.168 80'
  Oct 14 12:50:28.076: INFO: stderr: "+ nc -v -t -w 2 10.152.183.168 80\n+ echo hostName\nConnection to 10.152.183.168 80 port [tcp/http] succeeded!\n"
  Oct 14 12:50:28.076: INFO: stdout: "nodeport-test-2dbn7"
  Oct 14 12:50:28.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 30549'
  Oct 14 12:50:28.288: INFO: stderr: "+ nc -v -t -w 2 172.31.35.21 30549\nConnection to 172.31.35.21 30549 port [tcp/*] succeeded!\n+ echo hostName\n"
  Oct 14 12:50:28.288: INFO: stdout: "nodeport-test-68x9d"
  Oct 14 12:50:28.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.199 30549'
  E1014 12:50:28.310538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:28.493: INFO: stderr: "+ nc -v -t -w 2 172.31.16.199 30549\n+ echo hostName\nConnection to 172.31.16.199 30549 port [tcp/*] succeeded!\n"
  Oct 14 12:50:28.493: INFO: stdout: ""
  E1014 12:50:29.311131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:29.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-2737 exec execpodh62dj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.199 30549'
  Oct 14 12:50:29.742: INFO: stderr: "+ nc -v -t -w 2 172.31.16.199 30549\n+ echo hostName\nConnection to 172.31.16.199 30549 port [tcp/*] succeeded!\n"
  Oct 14 12:50:29.742: INFO: stdout: "nodeport-test-2dbn7"
  Oct 14 12:50:29.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2737" for this suite. @ 10/14/23 12:50:29.749
• [11.467 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/14/23 12:50:29.758
  Oct 14 12:50:29.758: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename watch @ 10/14/23 12:50:29.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:50:29.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:50:29.786
  STEP: creating a watch on configmaps with label A @ 10/14/23 12:50:29.792
  STEP: creating a watch on configmaps with label B @ 10/14/23 12:50:29.793
  STEP: creating a watch on configmaps with label A or B @ 10/14/23 12:50:29.795
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/14/23 12:50:29.797
  Oct 14 12:50:29.804: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17581 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 12:50:29.804: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17581 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/14/23 12:50:29.805
  Oct 14 12:50:29.816: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17582 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 12:50:29.816: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17582 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/14/23 12:50:29.816
  Oct 14 12:50:29.828: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17583 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 12:50:29.828: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17583 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/14/23 12:50:29.828
  Oct 14 12:50:29.836: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17584 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 12:50:29.836: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5885  14f01783-810a-428b-9e73-eb8d68315b1b 17584 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/14/23 12:50:29.836
  Oct 14 12:50:29.843: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5885  4cba4898-e651-4807-aa53-a154bc36a969 17585 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 12:50:29.843: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5885  4cba4898-e651-4807-aa53-a154bc36a969 17585 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1014 12:50:30.311894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:31.312018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:32.312591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:33.312747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:34.312947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:35.313190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:36.313727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:37.314837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:38.315039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:39.315648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/14/23 12:50:39.844
  Oct 14 12:50:39.857: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5885  4cba4898-e651-4807-aa53-a154bc36a969 17658 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 12:50:39.857: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5885  4cba4898-e651-4807-aa53-a154bc36a969 17658 0 2023-10-14 12:50:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-14 12:50:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1014 12:50:40.315759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:41.315879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:42.316009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:43.316129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:44.316759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:45.316897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:46.317709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:47.318261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:48.318567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:49.318799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:49.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5885" for this suite. @ 10/14/23 12:50:49.866
• [20.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 10/14/23 12:50:49.878
  Oct 14 12:50:49.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replicaset @ 10/14/23 12:50:49.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:50:49.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:50:49.905
  STEP: Create a Replicaset @ 10/14/23 12:50:49.915
  STEP: Verify that the required pods have come up. @ 10/14/23 12:50:49.923
  Oct 14 12:50:49.927: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1014 12:50:50.319275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:51.319382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:52.320130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:53.320235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:54.320374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:54.934: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/23 12:50:54.934
  STEP: Getting /status @ 10/14/23 12:50:54.934
  Oct 14 12:50:54.940: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/14/23 12:50:54.94
  Oct 14 12:50:54.952: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/14/23 12:50:54.953
  Oct 14 12:50:54.956: INFO: Observed &ReplicaSet event: ADDED
  Oct 14 12:50:54.956: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 14 12:50:54.956: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 14 12:50:54.956: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 14 12:50:54.957: INFO: Found replicaset test-rs in namespace replicaset-4984 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 14 12:50:54.957: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/14/23 12:50:54.957
  Oct 14 12:50:54.957: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 14 12:50:54.969: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/14/23 12:50:54.969
  Oct 14 12:50:54.974: INFO: Observed &ReplicaSet event: ADDED
  Oct 14 12:50:54.974: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 14 12:50:54.974: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 14 12:50:54.975: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 14 12:50:54.975: INFO: Observed replicaset test-rs in namespace replicaset-4984 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 14 12:50:54.975: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 14 12:50:54.975: INFO: Found replicaset test-rs in namespace replicaset-4984 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Oct 14 12:50:54.975: INFO: Replicaset test-rs has a patched status
  Oct 14 12:50:54.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4984" for this suite. @ 10/14/23 12:50:54.981
• [5.116 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 10/14/23 12:50:54.996
  Oct 14 12:50:54.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 12:50:54.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:50:55.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:50:55.034
  Oct 14 12:50:55.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:50:55.320581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:50:56.321130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/14/23 12:50:56.636
  Oct 14 12:50:56.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-7911 --namespace=crd-publish-openapi-7911 create -f -'
  E1014 12:50:57.321266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:57.417: INFO: stderr: ""
  Oct 14 12:50:57.417: INFO: stdout: "e2e-test-crd-publish-openapi-1757-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct 14 12:50:57.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-7911 --namespace=crd-publish-openapi-7911 delete e2e-test-crd-publish-openapi-1757-crds test-cr'
  Oct 14 12:50:57.581: INFO: stderr: ""
  Oct 14 12:50:57.581: INFO: stdout: "e2e-test-crd-publish-openapi-1757-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Oct 14 12:50:57.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-7911 --namespace=crd-publish-openapi-7911 apply -f -'
  Oct 14 12:50:57.905: INFO: stderr: ""
  Oct 14 12:50:57.905: INFO: stdout: "e2e-test-crd-publish-openapi-1757-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct 14 12:50:57.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-7911 --namespace=crd-publish-openapi-7911 delete e2e-test-crd-publish-openapi-1757-crds test-cr'
  Oct 14 12:50:58.062: INFO: stderr: ""
  Oct 14 12:50:58.062: INFO: stdout: "e2e-test-crd-publish-openapi-1757-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/14/23 12:50:58.062
  Oct 14 12:50:58.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-7911 explain e2e-test-crd-publish-openapi-1757-crds'
  E1014 12:50:58.322024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:50:58.379: INFO: stderr: ""
  Oct 14 12:50:58.379: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1757-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1014 12:50:59.322177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:51:00.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7911" for this suite. @ 10/14/23 12:51:00.096
• [5.111 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/14/23 12:51:00.108
  Oct 14 12:51:00.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/23 12:51:00.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:51:00.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:51:00.142
  STEP: Waiting for pod completion @ 10/14/23 12:51:00.161
  E1014 12:51:00.322993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:01.323144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:02.323285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:03.323469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:51:04.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5580" for this suite. @ 10/14/23 12:51:04.204
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/14/23 12:51:04.215
  Oct 14 12:51:04.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename init-container @ 10/14/23 12:51:04.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:51:04.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:51:04.244
  STEP: creating the pod @ 10/14/23 12:51:04.249
  Oct 14 12:51:04.249: INFO: PodSpec: initContainers in spec.initContainers
  E1014 12:51:04.323801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:05.324404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:06.324505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:07.325455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:51:07.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8383" for this suite. @ 10/14/23 12:51:07.516
• [3.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 10/14/23 12:51:07.527
  Oct 14 12:51:07.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:51:07.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:51:07.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:51:07.552
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:51:07.557
  E1014 12:51:08.325583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:09.325968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:10.326132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:11.326687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:51:11.593
  Oct 14 12:51:11.598: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-33232207-c9c3-4823-b2a0-ebf014a01ba4 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:51:11.625
  Oct 14 12:51:11.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8207" for this suite. @ 10/14/23 12:51:11.653
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/14/23 12:51:11.665
  Oct 14 12:51:11.665: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 12:51:11.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:51:11.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:51:11.699
  STEP: Creating secret with name s-test-opt-del-9d10e601-7f8c-4c6f-bd85-d8377d921419 @ 10/14/23 12:51:11.71
  STEP: Creating secret with name s-test-opt-upd-74e3f788-b7ec-42ed-b987-97c83073bf63 @ 10/14/23 12:51:11.718
  STEP: Creating the pod @ 10/14/23 12:51:11.725
  E1014 12:51:12.327445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:13.327521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-9d10e601-7f8c-4c6f-bd85-d8377d921419 @ 10/14/23 12:51:13.777
  STEP: Updating secret s-test-opt-upd-74e3f788-b7ec-42ed-b987-97c83073bf63 @ 10/14/23 12:51:13.786
  STEP: Creating secret with name s-test-opt-create-0a2ab2ee-b77b-41f4-9e4c-cf24cc2cd0c0 @ 10/14/23 12:51:13.798
  STEP: waiting to observe update in volume @ 10/14/23 12:51:13.805
  E1014 12:51:14.327690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:15.327758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:16.327922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:17.328010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:18.329066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:19.329188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:20.329915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:21.330287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:22.331117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:23.331323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:24.331412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:25.331879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:26.332684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:27.332809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:28.332910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:29.332963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:30.333603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:31.333758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:32.333722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:33.334071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:34.334939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:35.335366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:36.335553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:37.335697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:38.335755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:39.335852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:40.336703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:41.337477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:42.338074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:43.338612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:44.338745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:45.338820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:46.338891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:47.339187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:48.339828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:49.340098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:50.340513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:51.341055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:52.341915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:53.342307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:54.342479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:55.342773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:56.342892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:57.343875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:58.343953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:51:59.344056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:00.344714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:01.345687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:02.346089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:03.346197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:04.347129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:05.347260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:06.347952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:07.348599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:08.349048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:09.349135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:10.349897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:11.350443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:12.350830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:13.350923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:14.351690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:15.351971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:16.352518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:17.352591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:18.352927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:19.353055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:20.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6810" for this suite. @ 10/14/23 12:52:20.223
• [68.567 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 10/14/23 12:52:20.233
  Oct 14 12:52:20.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:52:20.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:52:20.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:52:20.275
  STEP: Creating a pod to test downward api env vars @ 10/14/23 12:52:20.28
  E1014 12:52:20.353455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:21.353489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:22.354521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:23.354690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:52:24.313
  Oct 14 12:52:24.317: INFO: Trying to get logs from node ip-172-31-35-21 pod downward-api-d391ad34-71dc-41a2-a4de-7a587d438dd0 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 12:52:24.333
  E1014 12:52:24.354978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:24.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9438" for this suite. @ 10/14/23 12:52:24.362
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 10/14/23 12:52:24.375
  Oct 14 12:52:24.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:52:24.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:52:24.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:52:24.403
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/23 12:52:24.407
  Oct 14 12:52:24.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-2331 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Oct 14 12:52:24.515: INFO: stderr: ""
  Oct 14 12:52:24.515: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/14/23 12:52:24.515
  Oct 14 12:52:24.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-2331 delete pods e2e-test-httpd-pod'
  E1014 12:52:25.355885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:25.701: INFO: stderr: ""
  Oct 14 12:52:25.701: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 14 12:52:25.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2331" for this suite. @ 10/14/23 12:52:25.707
• [1.341 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/14/23 12:52:25.716
  Oct 14 12:52:25.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 12:52:25.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:52:25.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:52:25.743
  Oct 14 12:52:25.799: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E1014 12:52:26.356071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:27.356660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:28.357119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:29.357298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:30.357425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:30.806: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/23 12:52:30.806
  Oct 14 12:52:30.806: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1014 12:52:31.357968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:32.358057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:32.818: INFO: Creating deployment "test-rollover-deployment"
  Oct 14 12:52:32.834: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E1014 12:52:33.359207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:34.359340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:34.843: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Oct 14 12:52:34.852: INFO: Ensure that both replica sets have 1 created replica
  Oct 14 12:52:34.861: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Oct 14 12:52:34.874: INFO: Updating deployment test-rollover-deployment
  Oct 14 12:52:34.874: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1014 12:52:35.359922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:36.360559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:36.891: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Oct 14 12:52:36.901: INFO: Make sure deployment "test-rollover-deployment" is complete
  Oct 14 12:52:36.911: INFO: all replica sets need to contain the pod-template-hash label
  Oct 14 12:52:36.911: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 12:52:37.360677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:38.360803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:38.921: INFO: all replica sets need to contain the pod-template-hash label
  Oct 14 12:52:38.922: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 12:52:39.361041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:40.361219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:40.920: INFO: all replica sets need to contain the pod-template-hash label
  Oct 14 12:52:40.920: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 12:52:41.362220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:42.362674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:42.923: INFO: all replica sets need to contain the pod-template-hash label
  Oct 14 12:52:42.923: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 12:52:43.363423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:44.363885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:44.921: INFO: all replica sets need to contain the pod-template-hash label
  Oct 14 12:52:44.922: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 12, 52, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 12, 52, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 12:52:45.364807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:46.365593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:52:46.923: INFO: 
  Oct 14 12:52:46.923: INFO: Ensure that both old replica sets have no replicas
  Oct 14 12:52:46.936: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64305235-9ffd-4d91-8332-2604eb05a4e4",
      ResourceVersion: (string) (len=5) "18293",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832884752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 14 12:52:46.946: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5d46b77-f15e-4886-9318-c6cfa1902132",
      ResourceVersion: (string) (len=5) "18283",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832884754,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "64305235-9ffd-4d91-8332-2604eb05a4e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 33 30 35 32  33 35 2d 39 66 66 64 2d  |\"64305235-9ffd-|
              00000120  34 64 39 31 2d 38 33 33  32 2d 32 36 30 34 65 62  |4d91-8332-2604eb|
              00000130  30 35 61 34 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |05a4e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:52:46.950: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Oct 14 12:52:46.951: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abd52b79-f3c4-4dd3-961a-832a4d9265ff",
      ResourceVersion: (string) (len=5) "18292",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832884745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "64305235-9ffd-4d91-8332-2604eb05a4e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 34 33 30 35 32 33 35  2d 39 66 66 64 2d 34 64  |64305235-9ffd-4d|
              000000c0  39 31 2d 38 33 33 32 2d  32 36 30 34 65 62 30 35  |91-8332-2604eb05|
              000000d0  61 34 65 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |a4e4\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:52:46.955: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3e9e0c5-cf1a-40ab-b667-72e385b9b91b",
      ResourceVersion: (string) (len=5) "18242",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832884752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "64305235-9ffd-4d91-8332-2604eb05a4e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 33 30 35 32  33 35 2d 39 66 66 64 2d  |\"64305235-9ffd-|
              00000120  34 64 39 31 2d 38 33 33  32 2d 32 36 30 34 65 62  |4d91-8332-2604eb|
              00000130  30 35 61 34 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |05a4e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 12:52:46.963: INFO: Pod "test-rollover-deployment-5d484bf7f9-578cs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-578cs",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-3552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d058e304-cd23-43b7-93bc-943fb8590f93",
      ResourceVersion: (string) (len=5) "18261",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832884754,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "d5d46b77-f15e-4886-9318-c6cfa1902132",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  64 34 36 62 37 37 2d 66  |d\":\"d5d46b77-f|
              00000090  31 35 65 2d 34 38 38 36  2d 39 33 31 38 2d 63 36  |15e-4886-9318-c6|
              000000a0  63 66 61 31 39 30 32 31  33 32 5c 22 7d 22 3a 7b  |cfa1902132\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 31 2e 35 32 5c 22  |192.168.151.52\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s74h2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s74h2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884756,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832884754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.151.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.151.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832884754,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832884755,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://c64f1f968ea4c17a12ae48f74ce8ac046417d5322cc5edc6aa5e76f351ad65dd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 12:52:46.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3552" for this suite. @ 10/14/23 12:52:46.984
• [21.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/14/23 12:52:47.023
  Oct 14 12:52:47.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename cronjob @ 10/14/23 12:52:47.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:52:47.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:52:47.055
  STEP: Creating a cronjob @ 10/14/23 12:52:47.065
  STEP: Ensuring more than one job is running at a time @ 10/14/23 12:52:47.072
  E1014 12:52:47.365841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:48.366018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:49.366790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:50.367878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:51.368471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:52.387043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:53.387324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:54.387443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:55.387931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:56.388699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:57.388827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:58.389340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:52:59.389496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:00.389615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:01.389847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:02.389980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:03.390193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:04.390668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:05.391553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:06.391850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:07.392411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:08.392783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:09.392861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:10.393549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:11.393711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:12.393814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:13.393925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:14.394473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:15.395150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:16.395902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:17.397883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:18.397993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:19.398123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:20.398347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:21.399248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:22.399407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:23.400092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:24.400300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:25.400981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:26.401121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:27.401216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:28.401344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:29.402343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:30.402822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:31.403543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:32.404002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:33.404699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:34.404812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:35.405905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:36.406210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:37.406848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:38.406952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:39.407099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:40.407787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:41.408462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:42.409004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:43.410004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:44.410115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:45.410241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:46.410592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:47.410672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:48.410831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:49.411852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:50.412701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:51.413438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:52.413564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:53.413677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:54.414074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:55.414069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:56.414849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:57.415666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:58.415781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:53:59.416813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:00.417094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/14/23 12:54:01.079
  STEP: Removing cronjob @ 10/14/23 12:54:01.084
  Oct 14 12:54:01.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9431" for this suite. @ 10/14/23 12:54:01.101
• [74.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 10/14/23 12:54:01.116
  Oct 14 12:54:01.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 12:54:01.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:01.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:01.166
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:54:01.171
  E1014 12:54:01.417904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:02.418107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:03.418742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:04.418775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:54:05.205
  Oct 14 12:54:05.211: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-10df90a4-ea88-49c0-aace-26d87f63a135 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:54:05.236
  Oct 14 12:54:05.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4439" for this suite. @ 10/14/23 12:54:05.264
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/14/23 12:54:05.278
  Oct 14 12:54:05.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 12:54:05.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:05.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:05.311
  Oct 14 12:54:05.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2526" for this suite. @ 10/14/23 12:54:05.388
• [0.120 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 10/14/23 12:54:05.398
  Oct 14 12:54:05.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 12:54:05.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:05.419
  E1014 12:54:05.420815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:05.426
  STEP: validating cluster-info @ 10/14/23 12:54:05.43
  Oct 14 12:54:05.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-529 cluster-info'
  Oct 14 12:54:05.583: INFO: stderr: ""
  Oct 14 12:54:05.583: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Oct 14 12:54:05.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-529" for this suite. @ 10/14/23 12:54:05.589
• [0.205 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 10/14/23 12:54:05.603
  Oct 14 12:54:05.603: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 12:54:05.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:05.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:05.631
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 12:54:05.636
  E1014 12:54:06.420494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:07.420602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:08.420707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:09.420897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:54:09.671
  Oct 14 12:54:09.677: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-23644cc5-d039-4f0d-b19d-3e677a2d248a container client-container: <nil>
  STEP: delete the pod @ 10/14/23 12:54:09.686
  Oct 14 12:54:09.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9054" for this suite. @ 10/14/23 12:54:09.715
• [4.123 seconds]
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 10/14/23 12:54:09.726
  Oct 14 12:54:09.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 12:54:09.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:09.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:09.774
  E1014 12:54:10.421192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:11.421324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:12.421524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:13.422486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:14.422535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:15.422955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:16.423594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:17.423861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:18.424399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:19.424476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:20.425121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:21.425690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:22.425817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:23.426491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:24.426839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:25.426935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:26.427886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:27.427979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:28.428096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:29.428197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:30.428355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:31.428436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:54:31.879: INFO: Container started at 2023-10-14 12:54:10 +0000 UTC, pod became ready at 2023-10-14 12:54:30 +0000 UTC
  Oct 14 12:54:31.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8915" for this suite. @ 10/14/23 12:54:31.886
• [22.176 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/14/23 12:54:31.902
  Oct 14 12:54:31.902: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/14/23 12:54:31.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:31.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:31.948
  STEP: creating a target pod @ 10/14/23 12:54:31.96
  E1014 12:54:32.428606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:33.428761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/14/23 12:54:33.996
  E1014 12:54:34.429498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:35.430134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/14/23 12:54:36.02
  Oct 14 12:54:36.021: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7120 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:54:36.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:54:36.021: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:54:36.022: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7120/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Oct 14 12:54:36.110: INFO: Exec stderr: ""
  Oct 14 12:54:36.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7120" for this suite. @ 10/14/23 12:54:36.139
• [4.247 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 10/14/23 12:54:36.151
  Oct 14 12:54:36.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename security-context @ 10/14/23 12:54:36.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:36.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:36.181
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/14/23 12:54:36.187
  E1014 12:54:36.430190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:37.430304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:38.430838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:39.430911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:54:40.217
  Oct 14 12:54:40.222: INFO: Trying to get logs from node ip-172-31-35-21 pod security-context-0096800c-6443-4b87-a188-d912241038cd container test-container: <nil>
  STEP: delete the pod @ 10/14/23 12:54:40.232
  Oct 14 12:54:40.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7928" for this suite. @ 10/14/23 12:54:40.255
• [4.113 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 10/14/23 12:54:40.265
  Oct 14 12:54:40.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 12:54:40.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:54:40.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:54:40.295
  STEP: Creating service test in namespace statefulset-7126 @ 10/14/23 12:54:40.299
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/14/23 12:54:40.311
  STEP: Creating stateful set ss in namespace statefulset-7126 @ 10/14/23 12:54:40.317
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7126 @ 10/14/23 12:54:40.326
  Oct 14 12:54:40.331: INFO: Found 0 stateful pods, waiting for 1
  E1014 12:54:40.431997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:41.432663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:42.432795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:43.432876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:44.433115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:45.433413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:46.434198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:47.434732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:48.434461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:49.434773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:54:50.337: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/14/23 12:54:50.337
  Oct 14 12:54:50.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1014 12:54:50.434833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:54:50.549: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 12:54:50.549: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 12:54:50.549: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 12:54:50.554: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1014 12:54:51.435725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:52.436338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:53.436426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:54.436563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:55.436758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:56.437342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:57.437448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:58.437579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:54:59.437697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:00.437818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:00.560: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 12:55:00.560: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 14 12:55:00.584: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999955s
  E1014 12:55:01.438355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:01.589: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.993004193s
  E1014 12:55:02.439394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:02.594: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.987868829s
  E1014 12:55:03.439658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:03.600: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.982449892s
  E1014 12:55:04.440692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:04.606: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.976571028s
  E1014 12:55:05.441081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:05.613: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.970164809s
  E1014 12:55:06.441488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:06.618: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.963623307s
  E1014 12:55:07.441616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:07.624: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.958644886s
  E1014 12:55:08.441817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:08.631: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.952284473s
  E1014 12:55:09.441968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:09.637: INFO: Verifying statefulset ss doesn't scale past 1 for another 945.840734ms
  E1014 12:55:10.442090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7126 @ 10/14/23 12:55:10.637
  Oct 14 12:55:10.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 12:55:10.860: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 14 12:55:10.860: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 12:55:10.860: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 14 12:55:10.865: INFO: Found 1 stateful pods, waiting for 3
  E1014 12:55:11.442214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:12.442335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:13.442480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:14.442591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:15.442766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:16.442819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:17.442906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:18.443180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:19.443878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:20.443980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:20.872: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 12:55:20.872: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 12:55:20.872: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/14/23 12:55:20.872
  STEP: Scale down will halt with unhealthy stateful pod @ 10/14/23 12:55:20.872
  Oct 14 12:55:20.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 14 12:55:21.097: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 12:55:21.097: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 12:55:21.097: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 12:55:21.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 14 12:55:21.335: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 12:55:21.335: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 12:55:21.335: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 12:55:21.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1014 12:55:21.444385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:21.536: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 12:55:21.536: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 12:55:21.536: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 12:55:21.536: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 14 12:55:21.541: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1014 12:55:22.445354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:23.445456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:24.446215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:25.446333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:26.446461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:27.447544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:28.447815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:29.448310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:30.448626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:31.448735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:31.553: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 12:55:31.553: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 12:55:31.553: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 12:55:31.574: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999964s
  E1014 12:55:32.449009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:32.580: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99141453s
  E1014 12:55:33.449957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:33.587: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.984705085s
  E1014 12:55:34.450731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:34.593: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.977758585s
  E1014 12:55:35.450812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:35.599: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.971713158s
  E1014 12:55:36.450921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:36.604: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.966339189s
  E1014 12:55:37.451036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:37.610: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.961263684s
  E1014 12:55:38.451966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:38.615: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.955513941s
  E1014 12:55:39.452225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:39.621: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.950341894s
  E1014 12:55:40.452330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:40.627: INFO: Verifying statefulset ss doesn't scale past 3 for another 944.200476ms
  E1014 12:55:41.453317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7126 @ 10/14/23 12:55:41.627
  Oct 14 12:55:41.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 12:55:41.835: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 14 12:55:41.835: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 12:55:41.835: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 14 12:55:41.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 12:55:42.034: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 14 12:55:42.035: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 12:55:42.035: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 14 12:55:42.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7126 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 12:55:42.237: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 14 12:55:42.237: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 12:55:42.237: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 14 12:55:42.237: INFO: Scaling statefulset ss to 0
  E1014 12:55:42.453878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:43.454814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:44.455266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:45.456009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:46.456893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:47.457646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:48.457759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:49.457899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:50.457985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:51.458591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/14/23 12:55:52.258
  Oct 14 12:55:52.258: INFO: Deleting all statefulset in ns statefulset-7126
  Oct 14 12:55:52.263: INFO: Scaling statefulset ss to 0
  Oct 14 12:55:52.278: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 12:55:52.284: INFO: Deleting statefulset ss
  Oct 14 12:55:52.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7126" for this suite. @ 10/14/23 12:55:52.309
• [72.054 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 10/14/23 12:55:52.32
  Oct 14 12:55:52.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replicaset @ 10/14/23 12:55:52.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:55:52.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:55:52.347
  Oct 14 12:55:52.372: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1014 12:55:52.459737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:53.459849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:54.459860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:55.459970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:55:56.460244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:57.378: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/23 12:55:57.378
  STEP: Scaling up "test-rs" replicaset  @ 10/14/23 12:55:57.378
  Oct 14 12:55:57.390: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/14/23 12:55:57.39
  Oct 14 12:55:57.408: INFO: observed ReplicaSet test-rs in namespace replicaset-8241 with ReadyReplicas 1, AvailableReplicas 1
  Oct 14 12:55:57.426: INFO: observed ReplicaSet test-rs in namespace replicaset-8241 with ReadyReplicas 1, AvailableReplicas 1
  Oct 14 12:55:57.449: INFO: observed ReplicaSet test-rs in namespace replicaset-8241 with ReadyReplicas 1, AvailableReplicas 1
  E1014 12:55:57.460845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:57.464: INFO: observed ReplicaSet test-rs in namespace replicaset-8241 with ReadyReplicas 1, AvailableReplicas 1
  E1014 12:55:58.461431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:58.774: INFO: observed ReplicaSet test-rs in namespace replicaset-8241 with ReadyReplicas 2, AvailableReplicas 2
  E1014 12:55:59.462137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:55:59.476: INFO: observed Replicaset test-rs in namespace replicaset-8241 with ReadyReplicas 3 found true
  Oct 14 12:55:59.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8241" for this suite. @ 10/14/23 12:55:59.482
• [7.170 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 10/14/23 12:55:59.492
  Oct 14 12:55:59.493: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 12:55:59.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:55:59.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:55:59.519
  STEP: Creating configMap with name configmap-test-upd-2aa59d6e-e806-4584-9cf1-739bce5716b5 @ 10/14/23 12:55:59.538
  STEP: Creating the pod @ 10/14/23 12:55:59.547
  E1014 12:56:00.462291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:01.462461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-2aa59d6e-e806-4584-9cf1-739bce5716b5 @ 10/14/23 12:56:01.701
  STEP: waiting to observe update in volume @ 10/14/23 12:56:01.71
  E1014 12:56:02.463179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:03.463434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:04.463484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:05.463642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:06.464294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:07.464420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:08.464436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:09.464555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:10.465233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:11.465857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:12.465986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:13.466112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:14.466294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:15.466367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:16.467024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:17.467893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:18.468734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:19.468919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:20.469864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:21.470485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:22.470489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:23.470665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:24.471509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:25.471624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:26.471659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:27.471785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:28.472550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:29.472668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:30.473635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:31.473738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:32.474223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:33.474806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:34.474996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:35.475085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:36.475193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:37.475862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:38.476777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:39.476858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:40.477529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:41.477607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:42.477741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:43.477864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:44.478793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:45.478928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:46.479032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:47.479373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:48.479494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:49.479606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:50.480473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:51.480705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:52.481084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:53.481485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:54.481559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:55.481670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:56.482461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:57.482835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:58.482964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:56:59.483125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:00.483760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:01.483920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:02.484491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:03.485025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:04.485627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:05.486116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:06.487089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:07.487167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:08.487753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:09.487836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:10.487930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:11.488004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:12.488825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:13.489720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:14.490538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:15.490821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:16.491564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:17.492085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:18.492881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:19.492979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:20.493650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:21.494050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:22.494739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:23.495029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:57:24.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4092" for this suite. @ 10/14/23 12:57:24.186
• [84.702 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 10/14/23 12:57:24.196
  Oct 14 12:57:24.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/23 12:57:24.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:57:24.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:57:24.243
  Oct 14 12:57:24.266: INFO: Waiting up to 1m0s for all nodes to be ready
  E1014 12:57:24.495845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:25.495947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:26.496460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:27.496564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:28.496728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:29.496793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:30.497198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:31.497365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:32.497939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:33.498332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:34.499041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:35.499865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:36.500889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:37.501015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:38.502023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:39.502121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:40.503181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:41.503400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:42.503768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:43.503883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:44.504732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:45.504803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:46.504907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:47.505183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:48.506164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:49.506280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:50.507057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:51.507138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:52.507549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:53.507631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:54.508401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:55.508497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:56.509163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:57.509241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:58.510365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:57:59.510824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:00.511604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:01.511741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:02.511749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:03.511860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:04.512404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:05.512720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:06.512776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:07.512860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:08.513152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:09.513598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:10.514718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:11.515508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:12.515636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:13.515728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:14.515880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:15.516077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:16.516559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:17.516771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:18.517297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:19.517545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:20.517753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:21.517867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:22.518413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:23.518483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:58:24.298: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/14/23 12:58:24.304
  Oct 14 12:58:24.335: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct 14 12:58:24.346: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct 14 12:58:24.380: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct 14 12:58:24.395: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct 14 12:58:24.428: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct 14 12:58:24.447: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/14/23 12:58:24.447
  E1014 12:58:24.518847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:25.519516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:26.519557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:27.519845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/14/23 12:58:28.492
  E1014 12:58:28.520904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:29.521131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:30.521648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:31.521828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:32.522516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:58:32.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6362" for this suite. @ 10/14/23 12:58:32.637
• [68.451 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 10/14/23 12:58:32.649
  Oct 14 12:58:32.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 12:58:32.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:58:32.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:58:32.682
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/14/23 12:58:32.687
  E1014 12:58:33.522816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:34.522943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:35.523024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:36.523691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:58:36.719
  Oct 14 12:58:36.723: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-74c28168-bfaa-4dee-ba9e-da2b33417ab0 container test-container: <nil>
  STEP: delete the pod @ 10/14/23 12:58:36.738
  Oct 14 12:58:36.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8987" for this suite. @ 10/14/23 12:58:36.763
• [4.123 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/14/23 12:58:36.773
  Oct 14 12:58:36.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-runtime @ 10/14/23 12:58:36.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:58:36.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:58:36.804
  STEP: create the container @ 10/14/23 12:58:36.813
  W1014 12:58:36.826162      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/14/23 12:58:36.826
  E1014 12:58:37.523785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:38.524123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:39.525110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:40.525191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/14/23 12:58:40.856
  STEP: the container should be terminated @ 10/14/23 12:58:40.86
  STEP: the termination message should be set @ 10/14/23 12:58:40.86
  Oct 14 12:58:40.860: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/14/23 12:58:40.86
  Oct 14 12:58:40.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2323" for this suite. @ 10/14/23 12:58:40.886
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 10/14/23 12:58:40.9
  Oct 14 12:58:40.900: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 12:58:40.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:58:40.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:58:40.929
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/14/23 12:58:40.934
  E1014 12:58:41.525326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:42.526272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:43.526347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:44.526460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 12:58:44.96
  Oct 14 12:58:44.965: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-0c77de5b-d4b9-4e26-a13d-3f1697b6a9a5 container test-container: <nil>
  STEP: delete the pod @ 10/14/23 12:58:44.975
  Oct 14 12:58:44.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9416" for this suite. @ 10/14/23 12:58:45.004
• [4.114 seconds]
------------------------------
SSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/14/23 12:58:45.015
  Oct 14 12:58:45.015: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename hostport @ 10/14/23 12:58:45.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:58:45.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:58:45.047
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/14/23 12:58:45.057
  E1014 12:58:45.527090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:46.527530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.35.21 on the node which pod1 resides and expect scheduled @ 10/14/23 12:58:47.079
  E1014 12:58:47.528562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:48.529005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.35.21 but use UDP protocol on the node which pod2 resides @ 10/14/23 12:58:49.101
  E1014 12:58:49.529505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:50.529649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:51.529775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:52.529861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/14/23 12:58:53.143
  Oct 14 12:58:53.143: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.35.21 http://127.0.0.1:54323/hostname] Namespace:hostport-2661 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:58:53.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:58:53.144: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:58:53.144: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2661/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.35.21+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.35.21, port: 54323 @ 10/14/23 12:58:53.26
  Oct 14 12:58:53.260: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.35.21:54323/hostname] Namespace:hostport-2661 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:58:53.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:58:53.261: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:58:53.261: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2661/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.35.21%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.35.21, port: 54323 UDP @ 10/14/23 12:58:53.361
  Oct 14 12:58:53.361: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.35.21 54323] Namespace:hostport-2661 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 12:58:53.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 12:58:53.362: INFO: ExecWithOptions: Clientset creation
  Oct 14 12:58:53.363: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2661/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.35.21+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1014 12:58:53.530911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:54.531238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:55.531305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:56.531383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:58:57.531466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:58:58.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2661" for this suite. @ 10/14/23 12:58:58.47
• [13.464 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 10/14/23 12:58:58.481
  Oct 14 12:58:58.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 12:58:58.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:58:58.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:58:58.512
  STEP: creating service multi-endpoint-test in namespace services-8488 @ 10/14/23 12:58:58.517
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8488 to expose endpoints map[] @ 10/14/23 12:58:58.53
  E1014 12:58:58.531929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:58:58.546: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1014 12:58:59.531976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:58:59.558: INFO: successfully validated that service multi-endpoint-test in namespace services-8488 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8488 @ 10/14/23 12:58:59.558
  E1014 12:59:00.532137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:01.532217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8488 to expose endpoints map[pod1:[100]] @ 10/14/23 12:59:01.587
  Oct 14 12:59:01.601: INFO: successfully validated that service multi-endpoint-test in namespace services-8488 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-8488 @ 10/14/23 12:59:01.601
  E1014 12:59:02.532386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:03.532502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8488 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/14/23 12:59:03.623
  Oct 14 12:59:03.658: INFO: successfully validated that service multi-endpoint-test in namespace services-8488 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/14/23 12:59:03.658
  Oct 14 12:59:03.658: INFO: Creating new exec pod
  E1014 12:59:04.532784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:05.532883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:06.533812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:06.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8488 exec execpod7cr2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Oct 14 12:59:06.890: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Oct 14 12:59:06.890: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:59:06.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8488 exec execpod7cr2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.105 80'
  Oct 14 12:59:07.114: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.105 80\nConnection to 10.152.183.105 80 port [tcp/http] succeeded!\n"
  Oct 14 12:59:07.114: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:59:07.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8488 exec execpod7cr2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Oct 14 12:59:07.320: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Oct 14 12:59:07.320: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 12:59:07.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8488 exec execpod7cr2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.105 81'
  Oct 14 12:59:07.513: INFO: stderr: "+ nc -v -t -w 2 10.152.183.105 81\n+ echo hostName\nConnection to 10.152.183.105 81 port [tcp/*] succeeded!\n"
  Oct 14 12:59:07.513: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8488 @ 10/14/23 12:59:07.513
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8488 to expose endpoints map[pod2:[101]] @ 10/14/23 12:59:07.532
  E1014 12:59:07.534859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:07.560: INFO: successfully validated that service multi-endpoint-test in namespace services-8488 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-8488 @ 10/14/23 12:59:07.56
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8488 to expose endpoints map[] @ 10/14/23 12:59:07.588
  Oct 14 12:59:07.605: INFO: successfully validated that service multi-endpoint-test in namespace services-8488 exposes endpoints map[]
  Oct 14 12:59:07.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8488" for this suite. @ 10/14/23 12:59:07.633
• [9.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/14/23 12:59:07.647
  Oct 14 12:59:07.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 12:59:07.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:59:07.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:59:07.674
  STEP: creating the pod @ 10/14/23 12:59:07.678
  STEP: submitting the pod to kubernetes @ 10/14/23 12:59:07.678
  E1014 12:59:08.535039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:09.535437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/14/23 12:59:09.712
  STEP: updating the pod @ 10/14/23 12:59:09.717
  Oct 14 12:59:10.233: INFO: Successfully updated pod "pod-update-7098be96-504d-400d-ad31-c6cf8bc3761c"
  STEP: verifying the updated pod is in kubernetes @ 10/14/23 12:59:10.237
  Oct 14 12:59:10.245: INFO: Pod update OK
  Oct 14 12:59:10.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7010" for this suite. @ 10/14/23 12:59:10.251
• [2.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 10/14/23 12:59:10.266
  Oct 14 12:59:10.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 12:59:10.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:59:10.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:59:10.304
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/14/23 12:59:10.31
  Oct 14 12:59:10.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:59:10.535612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:11.535645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:12.536265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:13.536512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:14.537032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:15.538311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/14/23 12:59:16.466
  Oct 14 12:59:16.467: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:59:16.539036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:17.539645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:17.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 12:59:18.540679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:19.541120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:20.542072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:21.542266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:22.542605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:23.542859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:24.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4057" for this suite. @ 10/14/23 12:59:24.101
• [13.845 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 10/14/23 12:59:24.112
  Oct 14 12:59:24.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 12:59:24.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 12:59:24.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 12:59:24.186
  STEP: Creating pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136 @ 10/14/23 12:59:24.19
  E1014 12:59:24.543003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:25.543406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 12:59:26.217
  Oct 14 12:59:26.221: INFO: Initial restart count of pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b is 0
  Oct 14 12:59:26.226: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:26.543708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:27.544137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:28.231: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:28.544688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:29.544816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:30.237: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:30.545792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:31.546869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:32.241: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:32.547318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:33.547807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:34.247: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:34.547913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:35.548036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:36.253: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:36.548170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:37.548280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:38.258: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:38.548833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:39.548987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:40.264: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:40.549398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:41.549630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:42.271: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:42.549735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:43.550104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:44.278: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:44.550987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:45.551088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:46.284: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:46.551541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:47.552000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:48.289: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:48.552894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:49.553007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:50.296: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:50.553518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:51.553848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:52.301: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:52.554396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:53.554767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:54.307: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:54.555609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:55.555725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:56.311: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:56.556257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:57.556374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 12:59:58.317: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 12:59:58.557474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 12:59:59.557854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:00.323: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:00.558562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:01.558802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:02.328: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:02.559498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:03.559707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:04.333: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:04.560237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:05.560348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:06.339: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:06.561434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:07.561486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:08.344: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:08.561590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:09.561709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:10.350: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:10.562793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:11.563859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:12.354: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:12.564272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:13.564378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:14.360: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:14.564926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:15.565757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:16.366: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:16.566707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:17.566793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:18.374: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:18.567809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:19.568177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:20.381: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:20.569250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:21.569359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:22.386: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:22.569889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:23.570001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:24.391: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:24.570542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:25.570815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:26.396: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:26.571324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:27.571431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:28.403: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:28.572068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:29.572188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:30.410: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:30.572955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:31.573063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:32.416: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:32.573704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:33.573865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:34.421: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:34.573951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:35.574510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:36.427: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:36.575082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:37.575193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:38.432: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:38.576235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:39.576365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:40.438: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:40.577421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:41.578216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:42.443: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:42.579323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:43.579502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:44.448: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:44.580258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:45.580391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:46.454: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:46.580898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:47.581553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:48.459: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:48.582050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:49.582480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:50.466: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:50.583277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:51.583379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:52.471: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:52.583473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:53.583667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:54.475: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:54.584592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:55.584701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:56.481: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:56.585383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:57.585528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:00:58.486: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:00:58.585818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:00:59.586659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:00.491: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:00.586996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:01.587088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:02.497: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:02.588133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:03.588207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:04.503: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:04.589257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:05.589525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:06.508: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:06.590385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:07.590519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:08.513: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:08.591329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:09.591424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:10.518: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:10.591543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:11.591632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:12.523: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:12.591839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:13.591935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:14.528: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:14.592474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:15.592555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:16.533: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:16.592964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:17.593061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:18.539: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:18.593710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:19.593985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:20.546: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:20.594361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:21.594782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:22.551: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:22.595438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:23.595799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:24.557: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:24.596103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:25.596941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:26.562: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:26.597884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:27.598005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:28.567: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:28.599077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:29.600142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:30.573: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:30.600927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:31.601226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:32.578: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:32.601966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:33.602102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:34.583: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:34.602729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:35.602823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:36.588: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:36.603193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:37.603847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:38.592: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:38.604864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:39.604987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:40.598: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:40.605470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:41.605606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:42.603: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:42.605771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:43.606079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:44.607128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:44.608: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:45.607853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:46.608776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:46.614: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:47.608907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:48.609015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:48.620: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:49.609207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:50.609283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:50.627: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:51.609364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:52.609514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:52.633: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:53.609826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:54.609965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:54.638: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:55.610784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:56.610977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:56.643: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:57.611780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:01:58.611973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:01:58.648: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:01:59.612016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:00.612305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:00.655: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:01.612458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:02.612578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:02.660: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:03.612665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:04.612814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:04.666: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:05.613512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:06.613738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:06.672: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:07.613916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:08.613993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:08.679: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:09.614152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:10.614272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:10.684: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:11.615089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:12.615216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:12.691: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:13.616130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:14.616308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:14.696: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:15.616434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:16.616577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:16.701: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:17.616614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:18.616724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:18.706: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:19.616823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:20.617149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:20.712: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:21.617486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:22.617650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:22.717: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:23.618537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:24.618904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:24.723: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:25.619794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:26.619949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:26.729: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:27.620085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:28.620200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:28.735: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:29.620460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:30.620569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:30.743: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:31.621312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:32.621440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:32.748: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:33.622323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:34.622421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:34.753: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:35.622837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:36.623611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:36.759: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:37.624463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:38.624955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:38.765: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:39.624996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:40.625103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:40.772: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:41.625383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:42.625482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:42.777: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:43.625590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:44.625699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:44.783: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:45.626240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:46.626758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:46.787: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:47.627731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:48.627814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:48.792: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:49.628199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:50.628342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:50.798: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:51.628413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:52.629127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:52.803: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:53.629295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:54.629349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:54.808: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:55.630490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:56.630773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:56.817: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:57.630819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:02:58.630900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:02:58.822: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:02:59.631775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:00.631858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:00.828: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:01.631884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:02.631986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:02.834: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:03.632346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:04.632618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:04.839: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:05.632723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:06.632850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:06.844: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:07.632963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:08.633083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:08.850: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:09.633154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:10.633464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:10.856: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:11.633562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:12.633669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:12.861: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:13.633783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:14.633924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:14.867: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:15.634044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:16.635058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:16.873: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:17.635146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:18.635857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:18.879: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:19.636409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:20.636522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:20.885: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:21.637417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:22.637514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:22.891: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:23.638288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:24.638365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:24.896: INFO: Get pod test-grpc-4730705e-835a-4ad7-b534-93306e41685b in namespace container-probe-3136
  E1014 13:03:25.639050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:26.639091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:26.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:03:26.903
  STEP: Destroying namespace "container-probe-3136" for this suite. @ 10/14/23 13:03:26.923
• [242.822 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 10/14/23 13:03:26.935
  Oct 14 13:03:26.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replicaset @ 10/14/23 13:03:26.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:03:26.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:03:26.963
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/14/23 13:03:26.968
  Oct 14 13:03:26.981: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1014 13:03:27.639902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:28.640460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:29.640652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:30.640730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:31.641470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:31.988: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/23 13:03:31.988
  STEP: getting scale subresource @ 10/14/23 13:03:31.988
  STEP: updating a scale subresource @ 10/14/23 13:03:31.993
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/14/23 13:03:32.003
  STEP: Patch a scale subresource @ 10/14/23 13:03:32.014
  Oct 14 13:03:32.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7711" for this suite. @ 10/14/23 13:03:32.06
• [5.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 10/14/23 13:03:32.082
  Oct 14 13:03:32.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replicaset @ 10/14/23 13:03:32.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:03:32.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:03:32.124
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/14/23 13:03:32.132
  E1014 13:03:32.642226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:33.642862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:34.643925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:35.644050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 10/14/23 13:03:36.169
  STEP: Then the orphan pod is adopted @ 10/14/23 13:03:36.177
  E1014 13:03:36.644587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 10/14/23 13:03:37.186
  Oct 14 13:03:37.192: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/14/23 13:03:37.209
  E1014 13:03:37.644710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:38.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3966" for this suite. @ 10/14/23 13:03:38.234
• [6.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 10/14/23 13:03:38.249
  Oct 14 13:03:38.249: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename job @ 10/14/23 13:03:38.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:03:38.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:03:38.276
  STEP: Creating a job @ 10/14/23 13:03:38.281
  STEP: Ensuring job reaches completions @ 10/14/23 13:03:38.29
  E1014 13:03:38.645574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:39.645799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:40.646141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:41.646287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:42.646545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:43.646840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:44.646931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:45.647924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:46.648047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:47.649101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:48.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8218" for this suite. @ 10/14/23 13:03:48.301
• [10.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 10/14/23 13:03:48.315
  Oct 14 13:03:48.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:03:48.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:03:48.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:03:48.346
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:03:48.352
  E1014 13:03:48.649811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:49.650731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:50.651380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:51.651537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:03:52.384
  Oct 14 13:03:52.391: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-1e334e27-d6be-4450-af53-30ee16660dc4 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:03:52.42
  Oct 14 13:03:52.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9823" for this suite. @ 10/14/23 13:03:52.448
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 10/14/23 13:03:52.46
  Oct 14 13:03:52.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:03:52.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:03:52.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:03:52.488
  STEP: creating all guestbook components @ 10/14/23 13:03:52.493
  Oct 14 13:03:52.493: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Oct 14 13:03:52.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 create -f -'
  E1014 13:03:52.651897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:52.837: INFO: stderr: ""
  Oct 14 13:03:52.837: INFO: stdout: "service/agnhost-replica created\n"
  Oct 14 13:03:52.837: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Oct 14 13:03:52.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 create -f -'
  Oct 14 13:03:53.597: INFO: stderr: ""
  Oct 14 13:03:53.597: INFO: stdout: "service/agnhost-primary created\n"
  Oct 14 13:03:53.597: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Oct 14 13:03:53.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 create -f -'
  E1014 13:03:53.652660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:53.890: INFO: stderr: ""
  Oct 14 13:03:53.890: INFO: stdout: "service/frontend created\n"
  Oct 14 13:03:53.890: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Oct 14 13:03:53.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 create -f -'
  Oct 14 13:03:54.271: INFO: stderr: ""
  Oct 14 13:03:54.271: INFO: stdout: "deployment.apps/frontend created\n"
  Oct 14 13:03:54.271: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct 14 13:03:54.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 create -f -'
  E1014 13:03:54.653459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:03:54.677: INFO: stderr: ""
  Oct 14 13:03:54.677: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Oct 14 13:03:54.677: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct 14 13:03:54.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 create -f -'
  Oct 14 13:03:55.247: INFO: stderr: ""
  Oct 14 13:03:55.247: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/14/23 13:03:55.247
  Oct 14 13:03:55.247: INFO: Waiting for all frontend pods to be Running.
  E1014 13:03:55.653973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:56.654076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:57.654196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:58.654381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:03:59.654666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:04:00.298: INFO: Waiting for frontend to serve content.
  Oct 14 13:04:00.311: INFO: Trying to add a new entry to the guestbook.
  Oct 14 13:04:00.329: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/14/23 13:04:00.343
  Oct 14 13:04:00.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 delete --grace-period=0 --force -f -'
  Oct 14 13:04:00.462: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:04:00.462: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/23 13:04:00.462
  Oct 14 13:04:00.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 delete --grace-period=0 --force -f -'
  Oct 14 13:04:00.586: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:04:00.586: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/23 13:04:00.586
  Oct 14 13:04:00.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 delete --grace-period=0 --force -f -'
  E1014 13:04:00.655743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:04:00.697: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:04:00.697: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/23 13:04:00.697
  Oct 14 13:04:00.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 delete --grace-period=0 --force -f -'
  Oct 14 13:04:00.803: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:04:00.803: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/23 13:04:00.803
  Oct 14 13:04:00.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 delete --grace-period=0 --force -f -'
  Oct 14 13:04:00.933: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:04:00.933: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/23 13:04:00.933
  Oct 14 13:04:00.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-8564 delete --grace-period=0 --force -f -'
  Oct 14 13:04:01.087: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:04:01.087: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Oct 14 13:04:01.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8564" for this suite. @ 10/14/23 13:04:01.094
• [8.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 10/14/23 13:04:01.109
  Oct 14 13:04:01.109: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:04:01.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:04:01.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:04:01.168
  STEP: Setting up server cert @ 10/14/23 13:04:01.235
  E1014 13:04:01.658853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:04:02.046
  STEP: Deploying the webhook pod @ 10/14/23 13:04:02.056
  STEP: Wait for the deployment to be ready @ 10/14/23 13:04:02.071
  Oct 14 13:04:02.081: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 13:04:02.656796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:03.656802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:04:04.095
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:04:04.119
  E1014 13:04:04.657801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:04:05.120: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/14/23 13:04:05.128
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/14/23 13:04:05.151
  STEP: Creating a dummy validating-webhook-configuration object @ 10/14/23 13:04:05.177
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/14/23 13:04:05.193
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/14/23 13:04:05.203
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/14/23 13:04:05.219
  Oct 14 13:04:05.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8620" for this suite. @ 10/14/23 13:04:05.32
  STEP: Destroying namespace "webhook-markers-9" for this suite. @ 10/14/23 13:04:05.328
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 10/14/23 13:04:05.339
  Oct 14 13:04:05.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 13:04:05.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:04:05.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:04:05.367
  STEP: Creating service test in namespace statefulset-6077 @ 10/14/23 13:04:05.373
  STEP: Creating a new StatefulSet @ 10/14/23 13:04:05.383
  Oct 14 13:04:05.402: INFO: Found 0 stateful pods, waiting for 3
  E1014 13:04:05.658486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:06.658782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:07.659026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:08.658968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:09.659146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:10.659565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:11.660530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:12.660622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:13.660728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:14.661149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:04:15.409: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:04:15.409: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:04:15.409: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/14/23 13:04:15.423
  Oct 14 13:04:15.459: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/14/23 13:04:15.459
  E1014 13:04:15.661935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:16.662756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:17.663013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:18.663107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:19.663229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:20.663431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:21.663844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:22.664057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:23.664575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:24.664865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/14/23 13:04:25.479
  STEP: Performing a canary update @ 10/14/23 13:04:25.479
  Oct 14 13:04:25.504: INFO: Updating stateful set ss2
  Oct 14 13:04:25.517: INFO: Waiting for Pod statefulset-6077/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1014 13:04:25.665214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:26.665894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:27.665987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:28.666106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:29.666683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:30.666819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:31.667676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:32.668061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:33.668177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:34.668295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/14/23 13:04:35.528
  Oct 14 13:04:35.577: INFO: Found 1 stateful pods, waiting for 3
  E1014 13:04:35.668694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:36.669553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:37.669967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:38.670048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:39.670786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:40.671903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:41.671981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:42.672095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:43.672209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:44.672317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:04:45.583: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:04:45.584: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:04:45.584: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/14/23 13:04:45.593
  Oct 14 13:04:45.617: INFO: Updating stateful set ss2
  Oct 14 13:04:45.635: INFO: Waiting for Pod statefulset-6077/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1014 13:04:45.672836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:46.672912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:47.673077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:48.673155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:49.674779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:50.674916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:51.677465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:52.677587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:53.677674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:54.678092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:04:55.671: INFO: Updating stateful set ss2
  E1014 13:04:55.679086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:04:55.687: INFO: Waiting for StatefulSet statefulset-6077/ss2 to complete update
  Oct 14 13:04:55.688: INFO: Waiting for Pod statefulset-6077/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1014 13:04:56.679556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:57.679661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:58.679780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:04:59.679902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:00.680043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:01.680145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:02.680235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:03.680386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:04.680546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:05.680620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:05:05.700: INFO: Deleting all statefulset in ns statefulset-6077
  Oct 14 13:05:05.705: INFO: Scaling statefulset ss2 to 0
  E1014 13:05:06.681307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:07.681549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:08.681655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:09.681756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:10.681948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:11.682002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:12.682675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:13.682884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:14.683023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:15.683125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:05:15.733: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 13:05:15.738: INFO: Deleting statefulset ss2
  Oct 14 13:05:15.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6077" for this suite. @ 10/14/23 13:05:15.784
• [70.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/14/23 13:05:15.798
  Oct 14 13:05:15.798: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename init-container @ 10/14/23 13:05:15.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:05:15.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:05:15.853
  STEP: creating the pod @ 10/14/23 13:05:15.862
  Oct 14 13:05:15.862: INFO: PodSpec: initContainers in spec.initContainers
  E1014 13:05:16.683876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:17.683883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:18.684399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:19.684479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:20.684594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:21.684728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:22.684860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:23.685102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:24.685399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:25.685516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:26.685626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:27.685784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:28.686124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:29.687191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:30.687223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:31.687334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:32.687451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:33.688342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:34.688543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:35.688665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:36.689178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:37.689922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:38.689956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:39.690067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:40.690286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:41.690413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:42.690831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:43.691581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:44.692172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:45.692222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:46.692607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:47.692738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:48.692845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:49.693080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:50.693339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:51.693441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:52.693615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:53.694868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:54.694993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:55.695106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:05:55.718: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-018e369a-a996-4d9f-aaac-314e059e1fc3", GenerateName:"", Namespace:"init-container-9714", SelfLink:"", UID:"c60b9aa3-f766-4a4a-b73e-408e42359658", ResourceVersion:"22149", Generation:0, CreationTimestamp:time.Date(2023, time.October, 14, 13, 5, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"862656464"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 14, 13, 5, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dde420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 14, 13, 5, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dde450), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-n29zp", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc001fb60a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n29zp", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n29zp", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n29zp", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000f38c08), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-35-21", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0005582a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000f38c90)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000f38cb0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc000f38cb8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000f38cbc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0060dcb50), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 14, 13, 5, 15, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 14, 13, 5, 15, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 14, 13, 5, 15, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 14, 13, 5, 15, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.35.21", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.127.136", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.127.136"}}, StartTime:time.Date(2023, time.October, 14, 13, 5, 15, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000558380)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005583f0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://4d352f52bd4787966f61eda15f83139742ddadd7aff717a247f8b2b2666a737f", Started:(*bool)(0xc000f38d5a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001fb6120), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc000f38d6f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001fb6100), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc000f38d3f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Oct 14 13:05:55.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9714" for this suite. @ 10/14/23 13:05:55.726
• [39.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/14/23 13:05:55.741
  Oct 14 13:05:55.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename events @ 10/14/23 13:05:55.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:05:55.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:05:55.771
  STEP: Create set of events @ 10/14/23 13:05:55.776
  STEP: get a list of Events with a label in the current namespace @ 10/14/23 13:05:55.799
  STEP: delete a list of events @ 10/14/23 13:05:55.803
  Oct 14 13:05:55.803: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/14/23 13:05:55.83
  Oct 14 13:05:55.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8364" for this suite. @ 10/14/23 13:05:55.841
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/14/23 13:05:55.855
  Oct 14 13:05:55.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:05:55.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:05:55.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:05:55.888
  STEP: Creating projection with secret that has name projected-secret-test-map-00e2a58d-22c9-4ad2-8c74-820b5ad0488b @ 10/14/23 13:05:55.894
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:05:55.903
  E1014 13:05:56.695960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:57.696085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:58.696150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:05:59.696331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:05:59.958
  Oct 14 13:05:59.963: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-projected-secrets-895eb0f6-63c0-4a1b-9cc4-c28826ec3d30 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:05:59.99
  Oct 14 13:06:00.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2261" for this suite. @ 10/14/23 13:06:00.022
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 10/14/23 13:06:00.037
  Oct 14 13:06:00.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 13:06:00.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:06:00.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:06:00.07
  STEP: creating the pod @ 10/14/23 13:06:00.075
  STEP: waiting for pod running @ 10/14/23 13:06:00.088
  E1014 13:06:00.696289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:01.697280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 10/14/23 13:06:02.098
  Oct 14 13:06:02.103: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4186 PodName:var-expansion-e11286fc-c940-4e02-907e-863228b6ced4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:06:02.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:06:02.105: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:06:02.106: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4186/pods/var-expansion-e11286fc-c940-4e02-907e-863228b6ced4/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/14/23 13:06:02.21
  Oct 14 13:06:02.216: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4186 PodName:var-expansion-e11286fc-c940-4e02-907e-863228b6ced4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:06:02.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:06:02.216: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:06:02.216: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4186/pods/var-expansion-e11286fc-c940-4e02-907e-863228b6ced4/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/14/23 13:06:02.317
  E1014 13:06:02.697658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:06:02.836: INFO: Successfully updated pod "var-expansion-e11286fc-c940-4e02-907e-863228b6ced4"
  STEP: waiting for annotated pod running @ 10/14/23 13:06:02.836
  STEP: deleting the pod gracefully @ 10/14/23 13:06:02.84
  Oct 14 13:06:02.841: INFO: Deleting pod "var-expansion-e11286fc-c940-4e02-907e-863228b6ced4" in namespace "var-expansion-4186"
  Oct 14 13:06:02.852: INFO: Wait up to 5m0s for pod "var-expansion-e11286fc-c940-4e02-907e-863228b6ced4" to be fully deleted
  E1014 13:06:03.698328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:04.699257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:05.699434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:06.699501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:07.699674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:08.700759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:09.701105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:10.701521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:11.701681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:12.702048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:13.702192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:14.702394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:15.702809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:16.703842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:17.704078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:18.704228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:19.704439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:20.704579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:21.705118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:22.705264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:23.705381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:24.705459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:25.706424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:26.707308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:27.707873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:28.708186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:29.708854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:30.708995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:31.709071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:32.709120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:33.710108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:34.710816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:06:34.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4186" for this suite. @ 10/14/23 13:06:34.95
• [34.921 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 10/14/23 13:06:34.962
  Oct 14 13:06:34.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:06:34.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:06:34.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:06:34.993
  STEP: Creating the pod @ 10/14/23 13:06:34.997
  E1014 13:06:35.710993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:36.711897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:06:37.579: INFO: Successfully updated pod "labelsupdate0c4e95d7-4b5c-4361-9f31-464a94a4346a"
  E1014 13:06:37.712050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:38.712587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:06:39.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9238" for this suite. @ 10/14/23 13:06:39.607
• [4.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 10/14/23 13:06:39.621
  Oct 14 13:06:39.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename ingressclass @ 10/14/23 13:06:39.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:06:39.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:06:39.65
  STEP: getting /apis @ 10/14/23 13:06:39.655
  STEP: getting /apis/networking.k8s.io @ 10/14/23 13:06:39.661
  STEP: getting /apis/networking.k8s.iov1 @ 10/14/23 13:06:39.663
  STEP: creating @ 10/14/23 13:06:39.665
  STEP: getting @ 10/14/23 13:06:39.684
  STEP: listing @ 10/14/23 13:06:39.689
  STEP: watching @ 10/14/23 13:06:39.693
  Oct 14 13:06:39.694: INFO: starting watch
  STEP: patching @ 10/14/23 13:06:39.696
  STEP: updating @ 10/14/23 13:06:39.705
  Oct 14 13:06:39.712: INFO: waiting for watch events with expected annotations
  Oct 14 13:06:39.712: INFO: saw patched and updated annotations
  STEP: deleting @ 10/14/23 13:06:39.712
  E1014 13:06:39.713391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 10/14/23 13:06:39.732
  Oct 14 13:06:39.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6951" for this suite. @ 10/14/23 13:06:39.765
• [0.159 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/14/23 13:06:39.781
  Oct 14 13:06:39.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:06:39.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:06:39.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:06:39.822
  STEP: Creating projection with secret that has name projected-secret-test-1a3103e8-ecc2-4ff4-b110-e04efcbd65a4 @ 10/14/23 13:06:39.827
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:06:39.833
  E1014 13:06:40.713479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:41.713615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:42.714217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:43.715296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:06:43.86
  Oct 14 13:06:43.865: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-secrets-fe719bdc-73ea-43ca-9597-dde45cde9441 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:06:43.875
  Oct 14 13:06:43.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4110" for this suite. @ 10/14/23 13:06:43.903
• [4.131 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 10/14/23 13:06:43.912
  Oct 14 13:06:43.912: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/23 13:06:43.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:06:43.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:06:43.943
  STEP: Performing setup for networking test in namespace pod-network-test-7378 @ 10/14/23 13:06:43.949
  STEP: creating a selector @ 10/14/23 13:06:43.949
  STEP: Creating the service pods in kubernetes @ 10/14/23 13:06:43.949
  Oct 14 13:06:43.949: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1014 13:06:44.715554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:45.715702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:46.715711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:47.715927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:48.716126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:49.716244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:50.716303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:51.716780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:52.717577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:53.717703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:54.717811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:55.717913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/14/23 13:06:56.073
  E1014 13:06:56.718031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:06:57.718257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:06:58.103: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 14 13:06:58.103: INFO: Breadth first check of 192.168.9.11 on host 172.31.16.199...
  Oct 14 13:06:58.107: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.157:9080/dial?request=hostname&protocol=udp&host=192.168.9.11&port=8081&tries=1'] Namespace:pod-network-test-7378 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:06:58.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:06:58.109: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:06:58.109: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7378/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.9.11%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 14 13:06:58.223: INFO: Waiting for responses: map[]
  Oct 14 13:06:58.224: INFO: reached 192.168.9.11 after 0/1 tries
  Oct 14 13:06:58.224: INFO: Breadth first check of 192.168.127.151 on host 172.31.35.21...
  Oct 14 13:06:58.230: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.157:9080/dial?request=hostname&protocol=udp&host=192.168.127.151&port=8081&tries=1'] Namespace:pod-network-test-7378 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:06:58.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:06:58.230: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:06:58.230: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7378/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.127.151%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 14 13:06:58.325: INFO: Waiting for responses: map[]
  Oct 14 13:06:58.325: INFO: reached 192.168.127.151 after 0/1 tries
  Oct 14 13:06:58.325: INFO: Breadth first check of 192.168.151.12 on host 172.31.80.101...
  Oct 14 13:06:58.330: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.127.157:9080/dial?request=hostname&protocol=udp&host=192.168.151.12&port=8081&tries=1'] Namespace:pod-network-test-7378 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:06:58.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:06:58.331: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:06:58.331: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7378/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.127.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.151.12%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 14 13:06:58.437: INFO: Waiting for responses: map[]
  Oct 14 13:06:58.438: INFO: reached 192.168.151.12 after 0/1 tries
  Oct 14 13:06:58.438: INFO: Going to retry 0 out of 3 pods....
  Oct 14 13:06:58.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7378" for this suite. @ 10/14/23 13:06:58.444
• [14.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 10/14/23 13:06:58.457
  Oct 14 13:06:58.457: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sysctl @ 10/14/23 13:06:58.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:06:58.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:06:58.487
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/14/23 13:06:58.493
  Oct 14 13:06:58.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7718" for this suite. @ 10/14/23 13:06:58.504
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 10/14/23 13:06:58.515
  Oct 14 13:06:58.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:06:58.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:06:58.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:06:58.542
  STEP: Setting up server cert @ 10/14/23 13:06:58.581
  E1014 13:06:58.718793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:06:58.959
  STEP: Deploying the webhook pod @ 10/14/23 13:06:58.969
  STEP: Wait for the deployment to be ready @ 10/14/23 13:06:58.986
  Oct 14 13:06:58.998: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 13:06:59.718941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:00.719050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:07:01.011
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:07:01.027
  E1014 13:07:01.719234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:02.027: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/14/23 13:07:02.036
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/23 13:07:02.059
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/14/23 13:07:02.074
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/23 13:07:02.089
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/14/23 13:07:02.106
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/23 13:07:02.115
  Oct 14 13:07:02.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1794" for this suite. @ 10/14/23 13:07:02.206
  STEP: Destroying namespace "webhook-markers-5651" for this suite. @ 10/14/23 13:07:02.226
• [3.721 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 10/14/23 13:07:02.247
  Oct 14 13:07:02.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:07:02.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:02.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:02.28
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:07:02.284
  E1014 13:07:02.720184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:03.720433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:04.720546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:05.720660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:07:06.313
  Oct 14 13:07:06.318: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-4e19a353-2316-440a-8be2-0d5c49934af3 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:07:06.327
  Oct 14 13:07:06.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5487" for this suite. @ 10/14/23 13:07:06.356
• [4.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 10/14/23 13:07:06.367
  Oct 14 13:07:06.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:07:06.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:06.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:06.407
  STEP: Setting up server cert @ 10/14/23 13:07:06.445
  E1014 13:07:06.721022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:07:06.926
  STEP: Deploying the webhook pod @ 10/14/23 13:07:06.932
  STEP: Wait for the deployment to be ready @ 10/14/23 13:07:06.949
  Oct 14 13:07:06.959: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1014 13:07:07.721183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:08.721286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:07:08.978
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:07:08.991
  E1014 13:07:09.721779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:09.992: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 14 13:07:10.000: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8106-crds.webhook.example.com via the AdmissionRegistration API @ 10/14/23 13:07:10.518
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/14/23 13:07:10.541
  E1014 13:07:10.722817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:11.723223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:12.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 13:07:12.723413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9031" for this suite. @ 10/14/23 13:07:13.198
  STEP: Destroying namespace "webhook-markers-7981" for this suite. @ 10/14/23 13:07:13.207
• [6.848 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 10/14/23 13:07:13.216
  Oct 14 13:07:13.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 13:07:13.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:13.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:13.246
  STEP: set up a multi version CRD @ 10/14/23 13:07:13.251
  Oct 14 13:07:13.252: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:07:13.723956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:14.724291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:15.724765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:16.725456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 10/14/23 13:07:17.182
  STEP: check the unserved version gets removed @ 10/14/23 13:07:17.207
  E1014 13:07:17.726199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 10/14/23 13:07:18.182
  E1014 13:07:18.726474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:19.726585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:20.727306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:21.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-985" for this suite. @ 10/14/23 13:07:21.223
• [8.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 10/14/23 13:07:21.237
  Oct 14 13:07:21.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename lease-test @ 10/14/23 13:07:21.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:21.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:21.266
  Oct 14 13:07:21.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1211" for this suite. @ 10/14/23 13:07:21.355
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 10/14/23 13:07:21.368
  Oct 14 13:07:21.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:07:21.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:21.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:21.399
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/14/23 13:07:21.405
  E1014 13:07:21.727408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:22.727540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:23.728265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:24.728391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:07:25.434
  Oct 14 13:07:25.438: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-3436c5ef-980a-4350-8c99-18a0c0c4f02f container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:07:25.447
  Oct 14 13:07:25.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1491" for this suite. @ 10/14/23 13:07:25.475
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 10/14/23 13:07:25.488
  Oct 14 13:07:25.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/23 13:07:25.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:25.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:25.516
  Oct 14 13:07:25.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6636" for this suite. @ 10/14/23 13:07:25.537
• [0.058 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/14/23 13:07:25.546
  Oct 14 13:07:25.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 13:07:25.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:25.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:25.574
  STEP: creating the pod @ 10/14/23 13:07:25.579
  STEP: submitting the pod to kubernetes @ 10/14/23 13:07:25.58
  W1014 13:07:25.589583      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1014 13:07:25.728856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:26.729546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/14/23 13:07:27.605
  STEP: updating the pod @ 10/14/23 13:07:27.61
  E1014 13:07:27.729615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:28.123: INFO: Successfully updated pod "pod-update-activedeadlineseconds-fc732868-a611-41b2-8382-7f4e45c46155"
  E1014 13:07:28.730140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:29.730458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:30.730745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:31.730852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:32.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3037" for this suite. @ 10/14/23 13:07:32.143
• [6.605 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 10/14/23 13:07:32.152
  Oct 14 13:07:32.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename disruption @ 10/14/23 13:07:32.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:32.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:32.184
  STEP: creating the pdb @ 10/14/23 13:07:32.188
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:07:32.195
  E1014 13:07:32.730983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:33.731110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 10/14/23 13:07:34.205
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:07:34.216
  E1014 13:07:34.731829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:35.731942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 10/14/23 13:07:36.23
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:07:36.244
  E1014 13:07:36.732633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:37.732712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 10/14/23 13:07:38.259
  Oct 14 13:07:38.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9673" for this suite. @ 10/14/23 13:07:38.268
• [6.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 10/14/23 13:07:38.282
  Oct 14 13:07:38.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename gc @ 10/14/23 13:07:38.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:38.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:38.312
  STEP: create the rc @ 10/14/23 13:07:38.322
  W1014 13:07:38.331635      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1014 13:07:38.732816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:39.732935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:40.734666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:41.735590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:42.749910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:43.749884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/14/23 13:07:44.341
  STEP: wait for the rc to be deleted @ 10/14/23 13:07:44.352
  E1014 13:07:44.767983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:45.372: INFO: 80 pods remaining
  Oct 14 13:07:45.372: INFO: 80 pods has nil DeletionTimestamp
  Oct 14 13:07:45.372: INFO: 
  E1014 13:07:45.768091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:46.369: INFO: 72 pods remaining
  Oct 14 13:07:46.370: INFO: 72 pods has nil DeletionTimestamp
  Oct 14 13:07:46.370: INFO: 
  E1014 13:07:46.770979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:47.505: INFO: 60 pods remaining
  Oct 14 13:07:47.505: INFO: 60 pods has nil DeletionTimestamp
  Oct 14 13:07:47.505: INFO: 
  E1014 13:07:47.779061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:48.545: INFO: 40 pods remaining
  Oct 14 13:07:48.560: INFO: 40 pods has nil DeletionTimestamp
  Oct 14 13:07:48.573: INFO: 
  E1014 13:07:48.806433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:49.379: INFO: 31 pods remaining
  Oct 14 13:07:49.380: INFO: 30 pods has nil DeletionTimestamp
  Oct 14 13:07:49.380: INFO: 
  E1014 13:07:49.807469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:07:50.368: INFO: 20 pods remaining
  Oct 14 13:07:50.368: INFO: 20 pods has nil DeletionTimestamp
  Oct 14 13:07:50.368: INFO: 
  E1014 13:07:50.811640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/14/23 13:07:51.392
  W1014 13:07:51.405930      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 14 13:07:51.408: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 14 13:07:51.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5218" for this suite. @ 10/14/23 13:07:51.467
• [13.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/14/23 13:07:51.519
  Oct 14 13:07:51.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:07:51.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:07:51.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:07:51.573
  STEP: Creating projection with secret that has name projected-secret-test-0d056f9c-621e-458e-a245-815f4df872d5 @ 10/14/23 13:07:51.585
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:07:51.598
  E1014 13:07:51.811629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:52.818284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:53.819149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:54.851242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:55.851883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:56.854962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:57.861570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:58.888301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:07:59.915783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:00.917575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:01.921350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:02.921749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:08:03.735
  Oct 14 13:08:03.738: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-secrets-d0e73a3e-6326-42ad-9ee0-722cc2b69a8b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:08:03.751
  Oct 14 13:08:03.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5431" for this suite. @ 10/14/23 13:08:03.789
• [12.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 10/14/23 13:08:03.809
  Oct 14 13:08:03.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 13:08:03.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:08:03.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:08:03.838
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/14/23 13:08:03.843
  Oct 14 13:08:03.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:08:03.922129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:04.922481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:08:05.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:08:05.923014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:06.924029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:07.924253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:08.924386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:09.925017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:10.925207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:08:11.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7930" for this suite. @ 10/14/23 13:08:11.455
• [7.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 10/14/23 13:08:11.468
  Oct 14 13:08:11.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:08:11.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:08:11.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:08:11.501
  STEP: creating service in namespace services-288 @ 10/14/23 13:08:11.505
  STEP: creating service affinity-clusterip-transition in namespace services-288 @ 10/14/23 13:08:11.505
  STEP: creating replication controller affinity-clusterip-transition in namespace services-288 @ 10/14/23 13:08:11.518
  I1014 13:08:11.535346      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-288, replica count: 3
  E1014 13:08:11.925347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:12.925457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:13.925591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:08:14.586250      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 13:08:14.595: INFO: Creating new exec pod
  E1014 13:08:14.925708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:15.927023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:16.927657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:08:17.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-288 exec execpod-affinitytflnb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Oct 14 13:08:17.815: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Oct 14 13:08:17.815: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:08:17.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-288 exec execpod-affinitytflnb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  E1014 13:08:17.927719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:08:18.026: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  Oct 14 13:08:18.026: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:08:18.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-288 exec execpod-affinitytflnb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
  Oct 14 13:08:18.362: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
  Oct 14 13:08:18.362: INFO: stdout: "\naffinity-clusterip-transition-gckpw\naffinity-clusterip-transition-srsn6\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-srsn6\naffinity-clusterip-transition-gckpw\naffinity-clusterip-transition-gckpw\naffinity-clusterip-transition-gckpw\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-srsn6\naffinity-clusterip-transition-srsn6\naffinity-clusterip-transition-srsn6\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-srsn6\naffinity-clusterip-transition-gckpw\naffinity-clusterip-transition-gckpw"
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-gckpw
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-srsn6
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-srsn6
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-gckpw
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-gckpw
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-gckpw
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-srsn6
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-srsn6
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-srsn6
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-srsn6
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-gckpw
  Oct 14 13:08:18.362: INFO: Received response from host: affinity-clusterip-transition-gckpw
  Oct 14 13:08:18.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-288 exec execpod-affinitytflnb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
  Oct 14 13:08:18.691: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
  Oct 14 13:08:18.691: INFO: stdout: "\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4\naffinity-clusterip-transition-8t5z4"
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Received response from host: affinity-clusterip-transition-8t5z4
  Oct 14 13:08:18.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:08:18.697: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-288, will wait for the garbage collector to delete the pods @ 10/14/23 13:08:18.719
  Oct 14 13:08:18.782: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.707718ms
  Oct 14 13:08:18.883: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.716671ms
  E1014 13:08:18.928397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:19.929242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:20.929985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:21.930800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-288" for this suite. @ 10/14/23 13:08:22.316
• [10.872 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 10/14/23 13:08:22.341
  Oct 14 13:08:22.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:08:22.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:08:22.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:08:22.387
  Oct 14 13:08:22.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4973" for this suite. @ 10/14/23 13:08:22.464
• [0.142 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 10/14/23 13:08:22.484
  Oct 14 13:08:22.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 13:08:22.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:08:22.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:08:22.511
  E1014 13:08:22.931874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:23.931997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:24.932151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:25.932251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:26.932337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:27.932577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:28.933123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:29.933812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:30.933928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:31.934435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:32.935054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:33.935170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:34.935314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:35.936264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:36.937142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:37.937754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:38.938761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:39.939396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:40.940367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:41.940490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:42.940617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:43.940727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:44.941635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:45.942951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:46.943477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:47.943844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:48.944672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:49.945283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:50.946090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:51.946788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:52.947506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:53.947572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:54.948517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:55.948811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:56.949222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:57.949909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:58.950388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:08:59.951104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:00.951243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:01.951718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:02.951803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:03.952352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:04.953249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:05.953724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:06.954549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:07.955197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:08.955334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:09.955710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:10.956529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:11.956989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:12.957326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:13.957348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:14.957738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:15.958822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:16.959829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:17.960476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:18.960529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:19.960630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:20.960660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:21.961667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:09:22.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1184" for this suite. @ 10/14/23 13:09:22.54
• [60.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 10/14/23 13:09:22.571
  Oct 14 13:09:22.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 13:09:22.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:09:22.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:09:22.617
  STEP: Creating service test in namespace statefulset-1874 @ 10/14/23 13:09:22.628
  STEP: Creating statefulset ss in namespace statefulset-1874 @ 10/14/23 13:09:22.653
  Oct 14 13:09:22.678: INFO: Found 0 stateful pods, waiting for 1
  E1014 13:09:22.962687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:23.962809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:24.963004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:25.963997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:26.964019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:27.964301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:28.964764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:29.964873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:30.965005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:31.965140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:09:32.684: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/14/23 13:09:32.693
  STEP: Getting /status @ 10/14/23 13:09:32.739
  Oct 14 13:09:32.761: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/14/23 13:09:32.761
  Oct 14 13:09:32.790: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/14/23 13:09:32.791
  Oct 14 13:09:32.794: INFO: Observed &StatefulSet event: ADDED
  Oct 14 13:09:32.795: INFO: Found Statefulset ss in namespace statefulset-1874 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 14 13:09:32.795: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/14/23 13:09:32.795
  Oct 14 13:09:32.795: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 14 13:09:32.823: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/14/23 13:09:32.823
  Oct 14 13:09:32.831: INFO: Observed &StatefulSet event: ADDED
  Oct 14 13:09:32.831: INFO: Deleting all statefulset in ns statefulset-1874
  Oct 14 13:09:32.837: INFO: Scaling statefulset ss to 0
  E1014 13:09:32.965988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:33.966309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:34.966702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:35.966820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:36.967017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:37.967900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:38.968397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:39.968394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:40.968573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:41.969057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:09:42.902: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 13:09:42.907: INFO: Deleting statefulset ss
  Oct 14 13:09:42.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1874" for this suite. @ 10/14/23 13:09:42.939
• [20.377 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 10/14/23 13:09:42.949
  Oct 14 13:09:42.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename security-context-test @ 10/14/23 13:09:42.95
  E1014 13:09:42.969468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:09:42.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:09:42.978
  E1014 13:09:43.970219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:44.970611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:45.971032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:46.971864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:09:47.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3584" for this suite. @ 10/14/23 13:09:47.026
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 10/14/23 13:09:47.044
  Oct 14 13:09:47.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:09:47.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:09:47.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:09:47.081
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9777 @ 10/14/23 13:09:47.088
  STEP: changing the ExternalName service to type=ClusterIP @ 10/14/23 13:09:47.1
  STEP: creating replication controller externalname-service in namespace services-9777 @ 10/14/23 13:09:47.143
  I1014 13:09:47.164014      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9777, replica count: 2
  E1014 13:09:47.972086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:48.972245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:49.972314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:09:50.214859      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 13:09:50.215: INFO: Creating new exec pod
  E1014 13:09:50.972464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:51.972589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:52.973242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:09:53.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-9777 exec execpodgtrqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 14 13:09:53.449: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 14 13:09:53.449: INFO: stdout: "externalname-service-95lhm"
  Oct 14 13:09:53.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-9777 exec execpodgtrqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  Oct 14 13:09:53.640: INFO: stderr: "+ nc -v -t -w 2 10.152.183.241 80\n+ echo hostName\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  Oct 14 13:09:53.640: INFO: stdout: "externalname-service-prh9f"
  Oct 14 13:09:53.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:09:53.647: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-9777" for this suite. @ 10/14/23 13:09:53.687
• [6.658 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 10/14/23 13:09:53.702
  Oct 14 13:09:53.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/23 13:09:53.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:09:53.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:09:53.744
  Oct 14 13:09:53.772: INFO: Waiting up to 1m0s for all nodes to be ready
  E1014 13:09:53.973798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:54.974656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:55.975390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:56.975501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:57.975919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:58.975964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:09:59.976739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:00.977119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:01.977969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:02.978247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:03.978825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:04.978980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:05.979467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:06.980493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:07.981107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:08.981522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:09.981660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:10.982767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:11.983394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:12.983512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:13.984314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:14.984443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:15.984696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:16.984881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:17.985078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:18.985224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:19.985869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:20.985953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:21.986679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:22.986802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:23.987177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:24.987296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:25.988260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:26.988281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:27.988426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:28.989006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:29.990043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:30.990092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:31.990584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:32.990783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:33.991270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:34.991913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:35.992943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:36.993055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:37.994050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:38.994206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:39.994612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:40.994801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:41.994919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:42.995001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:43.995597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:44.995634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:45.996123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:46.996266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:47.997232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:48.997360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:49.997813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:50.997928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:51.998067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:52.998201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:10:53.803: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/14/23 13:10:53.808
  Oct 14 13:10:53.837: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct 14 13:10:53.852: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct 14 13:10:53.876: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct 14 13:10:53.888: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct 14 13:10:53.915: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct 14 13:10:53.927: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/14/23 13:10:53.927
  E1014 13:10:53.998951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:54.999345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/14/23 13:10:55.975
  E1014 13:10:55.999917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:57.000639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:58.001144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:10:59.001491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:00.001971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:00.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7528" for this suite. @ 10/14/23 13:11:00.107
• [66.413 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 10/14/23 13:11:00.116
  Oct 14 13:11:00.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename security-context @ 10/14/23 13:11:00.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:11:00.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:11:00.148
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/14/23 13:11:00.153
  E1014 13:11:01.002041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:02.002425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:03.002826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:04.003191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:11:04.184
  Oct 14 13:11:04.188: INFO: Trying to get logs from node ip-172-31-35-21 pod security-context-76f63025-4790-4ec1-9a66-c0f95c6e046a container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:11:04.214
  Oct 14 13:11:04.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4184" for this suite. @ 10/14/23 13:11:04.244
• [4.136 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 10/14/23 13:11:04.253
  Oct 14 13:11:04.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:11:04.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:11:04.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:11:04.278
  STEP: creating Agnhost RC @ 10/14/23 13:11:04.283
  Oct 14 13:11:04.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-2119 create -f -'
  Oct 14 13:11:04.565: INFO: stderr: ""
  Oct 14 13:11:04.565: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/14/23 13:11:04.566
  E1014 13:11:05.003399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:05.572: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 13:11:05.572: INFO: Found 0 / 1
  E1014 13:11:06.004013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:06.572: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 13:11:06.572: INFO: Found 1 / 1
  Oct 14 13:11:06.572: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/14/23 13:11:06.572
  Oct 14 13:11:06.577: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 13:11:06.577: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 14 13:11:06.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-2119 patch pod agnhost-primary-86828 -p {"metadata":{"annotations":{"x":"y"}}}'
  Oct 14 13:11:06.691: INFO: stderr: ""
  Oct 14 13:11:06.691: INFO: stdout: "pod/agnhost-primary-86828 patched\n"
  STEP: checking annotations @ 10/14/23 13:11:06.691
  Oct 14 13:11:06.696: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 13:11:06.696: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 14 13:11:06.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2119" for this suite. @ 10/14/23 13:11:06.702
• [2.459 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 10/14/23 13:11:06.712
  Oct 14 13:11:06.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename discovery @ 10/14/23 13:11:06.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:11:06.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:11:06.744
  STEP: Setting up server cert @ 10/14/23 13:11:06.752
  E1014 13:11:07.004832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 10/14/23 13:11:07.427
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/14/23 13:11:07.43
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/14/23 13:11:07.432
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/14/23 13:11:07.433
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/14/23 13:11:07.435
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/14/23 13:11:07.438
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/14/23 13:11:07.44
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/14/23 13:11:07.442
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/14/23 13:11:07.444
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/14/23 13:11:07.446
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/14/23 13:11:07.448
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/14/23 13:11:07.45
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/14/23 13:11:07.451
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/14/23 13:11:07.454
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/14/23 13:11:07.456
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/14/23 13:11:07.457
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/14/23 13:11:07.459
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/14/23 13:11:07.461
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/14/23 13:11:07.462
  Oct 14 13:11:07.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5122" for this suite. @ 10/14/23 13:11:07.471
• [0.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 10/14/23 13:11:07.483
  Oct 14 13:11:07.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 13:11:07.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:11:07.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:11:07.512
  STEP: Creating pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770 @ 10/14/23 13:11:07.517
  E1014 13:11:08.005052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:09.005085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 13:11:09.543
  Oct 14 13:11:09.547: INFO: Initial restart count of pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 is 0
  Oct 14 13:11:09.551: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:10.005202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:11.005323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:11.558: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:12.006038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:13.006172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:13.563: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:14.006448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:15.006896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:15.569: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:16.007847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:17.007754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:17.574: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:18.008421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:19.008540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:19.579: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:20.009164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:21.009508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:21.586: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:22.009619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:23.009811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:23.591: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:24.010721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:25.010788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:25.596: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:26.011668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:27.012660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:27.602: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:28.013564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:29.013701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:29.606: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:30.013803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:31.014014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:31.612: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:32.014134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:33.014704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:33.617: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:34.015717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:35.016621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:35.623: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:36.017188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:37.018007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:37.628: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:38.018671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:39.018923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:39.633: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:40.019851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:41.019882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:41.639: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:42.020544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:43.020617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:43.645: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:44.020896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:45.021040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:45.650: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:46.021193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:47.021327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:47.656: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:48.022296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:49.022414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:49.662: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:50.022642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:51.022805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:51.668: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:52.023429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:53.023855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:53.673: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:54.023942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:55.024158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:55.677: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:56.025130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:57.025962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:57.682: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  E1014 13:11:58.026004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:11:59.026097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:11:59.686: INFO: Get pod busybox-76f7be20-625f-47ae-878c-dd7297c86845 in namespace container-probe-4770
  Oct 14 13:11:59.686: INFO: Restart count of pod container-probe-4770/busybox-76f7be20-625f-47ae-878c-dd7297c86845 is now 1 (50.139277634s elapsed)
  Oct 14 13:11:59.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:11:59.691
  STEP: Destroying namespace "container-probe-4770" for this suite. @ 10/14/23 13:11:59.706
• [52.233 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 10/14/23 13:11:59.717
  Oct 14 13:11:59.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:11:59.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:11:59.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:11:59.747
  STEP: Setting up server cert @ 10/14/23 13:11:59.793
  E1014 13:12:00.027057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:12:00.832
  STEP: Deploying the webhook pod @ 10/14/23 13:12:00.843
  STEP: Wait for the deployment to be ready @ 10/14/23 13:12:00.857
  Oct 14 13:12:00.866: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 13:12:01.027552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:02.027819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:12:02.881
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:12:02.897
  E1014 13:12:03.028800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:12:03.897: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 14 13:12:03.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:12:04.032622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5903-crds.webhook.example.com via the AdmissionRegistration API @ 10/14/23 13:12:04.423
  STEP: Creating a custom resource while v1 is storage version @ 10/14/23 13:12:04.446
  E1014 13:12:05.033242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:06.034472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/14/23 13:12:06.52
  STEP: Patching the custom resource while v2 is storage version @ 10/14/23 13:12:06.543
  Oct 14 13:12:06.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 13:12:07.035380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-836" for this suite. @ 10/14/23 13:12:07.2
  STEP: Destroying namespace "webhook-markers-5694" for this suite. @ 10/14/23 13:12:07.209
• [7.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/14/23 13:12:07.224
  Oct 14 13:12:07.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename containers @ 10/14/23 13:12:07.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:12:07.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:12:07.252
  STEP: Creating a pod to test override arguments @ 10/14/23 13:12:07.256
  E1014 13:12:08.035761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:09.036076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:10.036830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:11.036861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:12:11.283
  Oct 14 13:12:11.287: INFO: Trying to get logs from node ip-172-31-35-21 pod client-containers-46dd6abb-596d-47f0-92e0-13af27085385 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:12:11.297
  Oct 14 13:12:11.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1582" for this suite. @ 10/14/23 13:12:11.326
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/14/23 13:12:11.336
  Oct 14 13:12:11.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-watch @ 10/14/23 13:12:11.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:12:11.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:12:11.37
  Oct 14 13:12:11.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:12:12.037874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:13.037934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 10/14/23 13:12:13.936
  Oct 14 13:12:13.943: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-14T13:12:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-14T13:12:13Z]] name:name1 resourceVersion:26384 uid:cbd57e52-ad9d-4177-97fd-5762d343cce1] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 13:12:14.038968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:15.039310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:16.039784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:17.040110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:18.040089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:19.041040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:20.041168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:21.041423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:22.041974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:23.042305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 10/14/23 13:12:23.944
  Oct 14 13:12:23.955: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-14T13:12:23Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-14T13:12:23Z]] name:name2 resourceVersion:26414 uid:26b50e21-4eb0-4080-9699-e634b719a225] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 13:12:24.043008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:25.043214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:26.043507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:27.043743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:28.043864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:29.043980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:30.044284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:31.044360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:32.044508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:33.044950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 10/14/23 13:12:33.956
  Oct 14 13:12:33.964: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-14T13:12:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-14T13:12:33Z]] name:name1 resourceVersion:26437 uid:cbd57e52-ad9d-4177-97fd-5762d343cce1] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 13:12:34.045024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:35.045158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:36.046003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:37.046893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:38.046802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:39.047867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:40.048922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:41.049505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:42.049575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:43.049694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 10/14/23 13:12:43.965
  Oct 14 13:12:43.978: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-14T13:12:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-14T13:12:43Z]] name:name2 resourceVersion:26458 uid:26b50e21-4eb0-4080-9699-e634b719a225] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 13:12:44.049979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:45.050141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:46.050765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:47.050976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:48.051600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:49.051843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:50.052146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:51.052549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:52.052898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:53.053810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 10/14/23 13:12:53.98
  Oct 14 13:12:53.991: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-14T13:12:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-14T13:12:33Z]] name:name1 resourceVersion:26476 uid:cbd57e52-ad9d-4177-97fd-5762d343cce1] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 13:12:54.054119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:55.054426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:56.055130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:57.056497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:58.056649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:12:59.056804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:00.056907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:01.057459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:02.057667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:03.057871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 10/14/23 13:13:03.992
  Oct 14 13:13:04.002: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-14T13:12:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-14T13:12:43Z]] name:name2 resourceVersion:26496 uid:26b50e21-4eb0-4080-9699-e634b719a225] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 13:13:04.058923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:05.059105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:06.060008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:07.060695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:08.060803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:09.061249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:10.061368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:11.062407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:12.062764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:13.062885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:14.063635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:13:14.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-762" for this suite. @ 10/14/23 13:13:14.529
• [63.201 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/14/23 13:13:14.538
  Oct 14 13:13:14.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename containers @ 10/14/23 13:13:14.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:13:14.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:13:14.565
  E1014 13:13:15.063932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:16.064455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:13:16.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9139" for this suite. @ 10/14/23 13:13:16.607
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 10/14/23 13:13:16.623
  Oct 14 13:13:16.623: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename namespaces @ 10/14/23 13:13:16.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:13:16.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:13:16.651
  STEP: Creating a test namespace @ 10/14/23 13:13:16.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:13:16.677
  STEP: Creating a service in the namespace @ 10/14/23 13:13:16.683
  STEP: Deleting the namespace @ 10/14/23 13:13:16.694
  STEP: Waiting for the namespace to be removed. @ 10/14/23 13:13:16.716
  E1014 13:13:17.064934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:18.065427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:19.066453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:20.066862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:21.067174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:22.067327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/14/23 13:13:22.72
  STEP: Verifying there is no service in the namespace @ 10/14/23 13:13:22.743
  Oct 14 13:13:22.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4502" for this suite. @ 10/14/23 13:13:22.758
  STEP: Destroying namespace "nsdeletetest-7810" for this suite. @ 10/14/23 13:13:22.768
  Oct 14 13:13:22.773: INFO: Namespace nsdeletetest-7810 was already deleted
  STEP: Destroying namespace "nsdeletetest-3008" for this suite. @ 10/14/23 13:13:22.773
• [6.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 10/14/23 13:13:22.789
  Oct 14 13:13:22.789: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replication-controller @ 10/14/23 13:13:22.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:13:22.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:13:22.816
  STEP: Creating replication controller my-hostname-basic-ffc4e6b0-dfa7-43fe-b327-c3271bdbe768 @ 10/14/23 13:13:22.821
  Oct 14 13:13:22.835: INFO: Pod name my-hostname-basic-ffc4e6b0-dfa7-43fe-b327-c3271bdbe768: Found 0 pods out of 1
  E1014 13:13:23.067884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:24.068026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:25.068155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:26.068716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:27.069068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:13:27.842: INFO: Pod name my-hostname-basic-ffc4e6b0-dfa7-43fe-b327-c3271bdbe768: Found 1 pods out of 1
  Oct 14 13:13:27.842: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-ffc4e6b0-dfa7-43fe-b327-c3271bdbe768" are running
  Oct 14 13:13:27.847: INFO: Pod "my-hostname-basic-ffc4e6b0-dfa7-43fe-b327-c3271bdbe768-rv4w9" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 13:13:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 13:13:23 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 13:13:23 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-14 13:13:22 +0000 UTC Reason: Message:}])
  Oct 14 13:13:27.847: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/14/23 13:13:27.847
  Oct 14 13:13:27.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6592" for this suite. @ 10/14/23 13:13:27.876
• [5.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 10/14/23 13:13:27.889
  Oct 14 13:13:27.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 13:13:27.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:13:27.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:13:27.924
  STEP: Creating a test externalName service @ 10/14/23 13:13:27.929
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2883.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2883.svc.cluster.local; sleep 1; done
   @ 10/14/23 13:13:27.939
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2883.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2883.svc.cluster.local; sleep 1; done
   @ 10/14/23 13:13:27.939
  STEP: creating a pod to probe DNS @ 10/14/23 13:13:27.939
  STEP: submitting the pod to kubernetes @ 10/14/23 13:13:27.939
  E1014 13:13:28.069156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:29.069304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:30.069828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:31.070426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:13:31.981
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:13:31.985
  Oct 14 13:13:31.999: INFO: DNS probes using dns-test-893bfd9a-b172-4012-a21d-5d1d1d65bfbe succeeded

  STEP: changing the externalName to bar.example.com @ 10/14/23 13:13:31.999
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2883.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2883.svc.cluster.local; sleep 1; done
   @ 10/14/23 13:13:32.013
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2883.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2883.svc.cluster.local; sleep 1; done
   @ 10/14/23 13:13:32.013
  STEP: creating a second pod to probe DNS @ 10/14/23 13:13:32.013
  STEP: submitting the pod to kubernetes @ 10/14/23 13:13:32.013
  E1014 13:13:32.070530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:33.070836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:34.071138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:35.071380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:36.072373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:37.074906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:38.075548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:39.075685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:40.075786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:41.076725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:13:42.061
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:13:42.065
  E1014 13:13:42.077341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:13:42.079: INFO: DNS probes using dns-test-3026c870-aa4b-4fea-a5fe-4f95eea1ef00 succeeded

  STEP: changing the service to type=ClusterIP @ 10/14/23 13:13:42.079
  W1014 13:13:42.100312      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2883.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2883.svc.cluster.local; sleep 1; done
   @ 10/14/23 13:13:42.106
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2883.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2883.svc.cluster.local; sleep 1; done
   @ 10/14/23 13:13:42.106
  STEP: creating a third pod to probe DNS @ 10/14/23 13:13:42.106
  STEP: submitting the pod to kubernetes @ 10/14/23 13:13:42.114
  E1014 13:13:43.077564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:44.077678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:13:44.149
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:13:44.155
  Oct 14 13:13:44.170: INFO: DNS probes using dns-test-4419ca75-5205-4f98-9672-941cb4ac9f60 succeeded

  Oct 14 13:13:44.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:13:44.176
  STEP: deleting the pod @ 10/14/23 13:13:44.192
  STEP: deleting the pod @ 10/14/23 13:13:44.21
  STEP: deleting the test externalName service @ 10/14/23 13:13:44.234
  STEP: Destroying namespace "dns-2883" for this suite. @ 10/14/23 13:13:44.266
• [16.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 10/14/23 13:13:44.28
  Oct 14 13:13:44.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename taint-single-pod @ 10/14/23 13:13:44.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:13:44.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:13:44.32
  Oct 14 13:13:44.325: INFO: Waiting up to 1m0s for all nodes to be ready
  E1014 13:13:45.077765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:46.078105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:47.078379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:48.078362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:49.078690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:50.078800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:51.079440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:52.079761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:53.079821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:54.079924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:55.081022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:56.081719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:57.083169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:58.083160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:13:59.083636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:00.083982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:01.084409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:02.084595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:03.085458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:04.085631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:05.085735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:06.086759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:07.087673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:08.088404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:09.088553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:10.088665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:11.089343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:12.089472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:13.090094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:14.090197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:15.090293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:16.091289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:17.091696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:18.091821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:19.091941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:20.092054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:21.092322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:22.092493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:23.093154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:24.093222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:25.093410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:26.093717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:27.093894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:28.093983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:29.094113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:30.094238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:31.095079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:32.095861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:33.095963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:34.096085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:35.096221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:36.096909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:37.098146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:38.098074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:39.098810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:40.099265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:41.100245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:42.100472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:43.101251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:44.102130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:14:44.358: INFO: Waiting for terminating namespaces to be deleted...
  Oct 14 13:14:44.364: INFO: Starting informer...
  STEP: Starting pod... @ 10/14/23 13:14:44.365
  Oct 14 13:14:44.588: INFO: Pod is running on ip-172-31-35-21. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/14/23 13:14:44.589
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/23 13:14:44.607
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/14/23 13:14:44.616
  Oct 14 13:14:44.616: INFO: Pod wasn't evicted. Proceeding
  Oct 14 13:14:44.616: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/23 13:14:44.648
  STEP: Waiting some time to make sure that toleration time passed. @ 10/14/23 13:14:44.659
  E1014 13:14:45.102530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:46.103316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:47.103329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:48.103562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:49.103880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:50.104053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:51.104527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:52.104649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:53.104786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:54.104945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:55.104963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:56.105597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:57.105706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:58.106017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:14:59.106171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:00.106280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:01.107256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:02.107348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:03.107466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:04.108067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:05.108253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:06.108357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:07.108523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:08.108642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:09.108764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:10.109730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:11.110241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:12.110774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:13.111848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:14.111967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:15.112106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:16.112325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:17.112651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:18.112768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:19.112860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:20.112980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:21.113444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:22.113557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:23.113683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:24.114346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:25.114576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:26.114777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:27.114949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:28.115871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:29.116070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:30.116184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:31.116428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:32.116549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:33.116677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:34.116787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:35.116908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:36.117844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:37.117933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:38.118071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:39.118339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:40.118427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:41.118766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:42.119859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:43.120117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:44.120375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:45.120593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:46.121382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:47.121487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:48.121630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:49.121809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:50.121904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:51.122234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:52.122352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:53.122449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:54.122570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:55.122811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:56.123079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:57.123851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:58.124050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:15:59.124236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:15:59.659: INFO: Pod wasn't evicted. Test successful
  Oct 14 13:15:59.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3972" for this suite. @ 10/14/23 13:15:59.666
• [135.395 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 10/14/23 13:15:59.676
  Oct 14 13:15:59.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:15:59.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:15:59.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:15:59.708
  STEP: creating a replication controller @ 10/14/23 13:15:59.713
  Oct 14 13:15:59.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 create -f -'
  Oct 14 13:16:00.037: INFO: stderr: ""
  Oct 14 13:16:00.037: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/23 13:16:00.037
  Oct 14 13:16:00.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1014 13:16:00.124849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:00.151: INFO: stderr: ""
  Oct 14 13:16:00.151: INFO: stdout: "update-demo-nautilus-ff54p update-demo-nautilus-xms7h "
  Oct 14 13:16:00.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods update-demo-nautilus-ff54p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 13:16:00.250: INFO: stderr: ""
  Oct 14 13:16:00.250: INFO: stdout: ""
  Oct 14 13:16:00.250: INFO: update-demo-nautilus-ff54p is created but not running
  E1014 13:16:01.125546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:02.125675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:03.125813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:04.126162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:05.126273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:05.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 14 13:16:05.352: INFO: stderr: ""
  Oct 14 13:16:05.352: INFO: stdout: "update-demo-nautilus-ff54p update-demo-nautilus-xms7h "
  Oct 14 13:16:05.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods update-demo-nautilus-ff54p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 13:16:05.446: INFO: stderr: ""
  Oct 14 13:16:05.446: INFO: stdout: "true"
  Oct 14 13:16:05.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods update-demo-nautilus-ff54p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 14 13:16:05.546: INFO: stderr: ""
  Oct 14 13:16:05.546: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 14 13:16:05.546: INFO: validating pod update-demo-nautilus-ff54p
  Oct 14 13:16:05.553: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 14 13:16:05.553: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 14 13:16:05.553: INFO: update-demo-nautilus-ff54p is verified up and running
  Oct 14 13:16:05.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods update-demo-nautilus-xms7h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 14 13:16:05.650: INFO: stderr: ""
  Oct 14 13:16:05.650: INFO: stdout: "true"
  Oct 14 13:16:05.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods update-demo-nautilus-xms7h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 14 13:16:05.746: INFO: stderr: ""
  Oct 14 13:16:05.746: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 14 13:16:05.746: INFO: validating pod update-demo-nautilus-xms7h
  Oct 14 13:16:05.753: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 14 13:16:05.754: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 14 13:16:05.754: INFO: update-demo-nautilus-xms7h is verified up and running
  STEP: using delete to clean up resources @ 10/14/23 13:16:05.754
  Oct 14 13:16:05.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 delete --grace-period=0 --force -f -'
  Oct 14 13:16:05.855: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:16:05.855: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct 14 13:16:05.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get rc,svc -l name=update-demo --no-headers'
  Oct 14 13:16:06.101: INFO: stderr: "No resources found in kubectl-1690 namespace.\n"
  Oct 14 13:16:06.101: INFO: stdout: ""
  Oct 14 13:16:06.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-1690 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E1014 13:16:06.127189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:06.313: INFO: stderr: ""
  Oct 14 13:16:06.313: INFO: stdout: ""
  Oct 14 13:16:06.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1690" for this suite. @ 10/14/23 13:16:06.319
• [6.652 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 10/14/23 13:16:06.328
  Oct 14 13:16:06.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/23 13:16:06.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:06.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:06.358
  STEP: Creating a pod to test service account token:  @ 10/14/23 13:16:06.369
  E1014 13:16:07.127486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:08.127682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:09.128709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:10.129050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:16:10.408
  Oct 14 13:16:10.414: INFO: Trying to get logs from node ip-172-31-35-21 pod test-pod-5eb3bcdd-45fa-44e2-b3e3-630378833754 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:16:10.442
  Oct 14 13:16:10.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4262" for this suite. @ 10/14/23 13:16:10.468
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 10/14/23 13:16:10.484
  Oct 14 13:16:10.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:16:10.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:10.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:10.511
  STEP: Setting up server cert @ 10/14/23 13:16:10.553
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:16:11.043
  STEP: Deploying the webhook pod @ 10/14/23 13:16:11.053
  STEP: Wait for the deployment to be ready @ 10/14/23 13:16:11.071
  Oct 14 13:16:11.085: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 13:16:11.129421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:12.130450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:16:13.099
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:16:13.113
  E1014 13:16:13.131104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:14.113: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/14/23 13:16:14.123
  E1014 13:16:14.131414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a namespace for the webhook @ 10/14/23 13:16:14.147
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/14/23 13:16:14.17
  Oct 14 13:16:14.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-932" for this suite. @ 10/14/23 13:16:14.398
  STEP: Destroying namespace "webhook-markers-5164" for this suite. @ 10/14/23 13:16:14.414
  STEP: Destroying namespace "fail-closed-namespace-9476" for this suite. @ 10/14/23 13:16:14.43
• [3.957 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 10/14/23 13:16:14.444
  Oct 14 13:16:14.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename ingress @ 10/14/23 13:16:14.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:14.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:14.657
  STEP: getting /apis @ 10/14/23 13:16:14.663
  STEP: getting /apis/networking.k8s.io @ 10/14/23 13:16:14.669
  STEP: getting /apis/networking.k8s.iov1 @ 10/14/23 13:16:14.672
  STEP: creating @ 10/14/23 13:16:14.675
  STEP: getting @ 10/14/23 13:16:14.707
  STEP: listing @ 10/14/23 13:16:14.712
  STEP: watching @ 10/14/23 13:16:14.727
  Oct 14 13:16:14.727: INFO: starting watch
  STEP: cluster-wide listing @ 10/14/23 13:16:14.73
  STEP: cluster-wide watching @ 10/14/23 13:16:14.734
  Oct 14 13:16:14.734: INFO: starting watch
  STEP: patching @ 10/14/23 13:16:14.737
  STEP: updating @ 10/14/23 13:16:14.75
  Oct 14 13:16:14.771: INFO: waiting for watch events with expected annotations
  Oct 14 13:16:14.771: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/14/23 13:16:14.771
  STEP: updating /status @ 10/14/23 13:16:14.786
  STEP: get /status @ 10/14/23 13:16:14.81
  STEP: deleting @ 10/14/23 13:16:14.815
  STEP: deleting a collection @ 10/14/23 13:16:14.84
  Oct 14 13:16:14.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5755" for this suite. @ 10/14/23 13:16:14.874
• [0.443 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/14/23 13:16:14.888
  Oct 14 13:16:14.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/14/23 13:16:14.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:14.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:14.938
  E1014 13:16:15.131575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:16.132452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:17.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 10/14/23 13:16:17.012
  STEP: Cleaning up the configmap @ 10/14/23 13:16:17.028
  STEP: Cleaning up the pod @ 10/14/23 13:16:17.039
  STEP: Destroying namespace "emptydir-wrapper-2776" for this suite. @ 10/14/23 13:16:17.056
• [2.179 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 10/14/23 13:16:17.072
  Oct 14 13:16:17.072: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:16:17.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:17.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:17.105
  STEP: Creating configMap with name projected-configmap-test-volume-map-e89f2c52-e7a6-400e-bc14-001e982a7b0b @ 10/14/23 13:16:17.111
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:16:17.119
  E1014 13:16:17.133311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:18.133519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:19.134006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:20.134385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:21.134465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:16:21.156
  Oct 14 13:16:21.162: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-configmaps-b1f47a58-cdfc-4c48-9383-45189411124f container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:16:21.171
  Oct 14 13:16:21.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5616" for this suite. @ 10/14/23 13:16:21.202
• [4.139 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/14/23 13:16:21.213
  Oct 14 13:16:21.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 13:16:21.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:21.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:21.242
  STEP: creating pod @ 10/14/23 13:16:21.248
  E1014 13:16:22.134432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:23.134807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:23.278: INFO: Pod pod-hostip-8b3e64c0-3b12-439b-878a-e966d1ec9ff9 has hostIP: 172.31.35.21
  Oct 14 13:16:23.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2536" for this suite. @ 10/14/23 13:16:23.284
• [2.081 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 10/14/23 13:16:23.294
  Oct 14 13:16:23.294: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/23 13:16:23.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:23.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:23.323
  STEP: creating a ServiceAccount @ 10/14/23 13:16:23.327
  STEP: watching for the ServiceAccount to be added @ 10/14/23 13:16:23.342
  STEP: patching the ServiceAccount @ 10/14/23 13:16:23.346
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/14/23 13:16:23.355
  STEP: deleting the ServiceAccount @ 10/14/23 13:16:23.361
  Oct 14 13:16:23.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-765" for this suite. @ 10/14/23 13:16:23.39
• [0.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 10/14/23 13:16:23.399
  Oct 14 13:16:23.399: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 13:16:23.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:16:23.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:16:23.431
  STEP: Creating pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230 @ 10/14/23 13:16:23.436
  E1014 13:16:24.135215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:25.135417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 13:16:25.458
  Oct 14 13:16:25.462: INFO: Initial restart count of pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f is 0
  Oct 14 13:16:25.466: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:26.135870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:27.136063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:27.472: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:28.136619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:29.136798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:29.478: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:30.136990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:31.137117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:31.484: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:32.137173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:33.137295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:33.489: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:34.137658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:35.138005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:35.493: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:36.138744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:37.138803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:37.498: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:38.139428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:39.139564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:39.504: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:40.139678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:41.140125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:41.510: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:42.141156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:43.141334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:43.515: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:44.141938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:45.142025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:45.520: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:46.142260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:47.142380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:47.525: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:48.143483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:49.143614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:49.531: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:50.144210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:51.145116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:51.537: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:52.145246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:53.145601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:53.542: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:54.146569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:55.146788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:55.546: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:56.147475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:57.147957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:57.551: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:16:58.148263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:16:59.148820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:16:59.556: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:00.149760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:01.150454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:01.561: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:02.150564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:03.150779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:03.567: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:04.151417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:05.151537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:05.572: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:06.152463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:07.152875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:07.578: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:08.153857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:09.154099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:09.582: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:10.154201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:11.154463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:11.589: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:12.154600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:13.154760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:13.594: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:14.155862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:15.156169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:15.600: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:16.156998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:17.157340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:17.606: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:18.158082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:19.158439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:19.611: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:20.159235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:21.160120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:21.616: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:22.160702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:23.160891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:23.624: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:24.161982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:25.162102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:25.629: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:26.162412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:27.162767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:27.634: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:28.163460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:29.163588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:29.640: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:30.163997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:31.164432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:31.646: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:32.164930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:33.165065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:33.651: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:34.165186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:35.165621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:35.656: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:36.166445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:37.166774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:37.661: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  E1014 13:17:38.167880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:39.168072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:39.665: INFO: Get pod test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f in namespace container-probe-5230
  Oct 14 13:17:39.666: INFO: Restart count of pod container-probe-5230/test-grpc-0c4acee7-93eb-4281-af63-7c6754dc830f is now 1 (1m14.20345759s elapsed)
  Oct 14 13:17:39.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:17:39.672
  STEP: Destroying namespace "container-probe-5230" for this suite. @ 10/14/23 13:17:39.69
• [76.304 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 10/14/23 13:17:39.705
  Oct 14 13:17:39.705: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 13:17:39.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:17:39.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:17:39.736
  STEP: Creating a pod to test substitution in container's args @ 10/14/23 13:17:39.74
  E1014 13:17:40.169012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:41.169441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:42.169547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:43.169677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:17:43.77
  Oct 14 13:17:43.776: INFO: Trying to get logs from node ip-172-31-35-21 pod var-expansion-d316de0c-0985-405f-9dfa-88d1aa6884b1 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 13:17:43.786
  Oct 14 13:17:43.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-796" for this suite. @ 10/14/23 13:17:43.819
• [4.124 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 10/14/23 13:17:43.83
  Oct 14 13:17:43.830: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:17:43.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:17:43.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:17:43.87
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8565 @ 10/14/23 13:17:43.884
  STEP: changing the ExternalName service to type=NodePort @ 10/14/23 13:17:43.893
  STEP: creating replication controller externalname-service in namespace services-8565 @ 10/14/23 13:17:43.924
  I1014 13:17:43.952714      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8565, replica count: 2
  E1014 13:17:44.170587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:45.170811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:46.171389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:17:47.004039      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 13:17:47.004: INFO: Creating new exec pod
  E1014 13:17:47.172334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:48.173100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:17:49.173208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:50.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1014 13:17:50.173628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:50.261: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 14 13:17:50.261: INFO: stdout: ""
  E1014 13:17:51.174526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:51.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 14 13:17:51.472: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 14 13:17:51.472: INFO: stdout: ""
  E1014 13:17:52.175489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:52.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 14 13:17:52.457: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 14 13:17:52.457: INFO: stdout: ""
  E1014 13:17:53.175588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:53.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 14 13:17:53.460: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 14 13:17:53.460: INFO: stdout: ""
  E1014 13:17:54.175660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:54.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 14 13:17:54.454: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 14 13:17:54.454: INFO: stdout: "externalname-service-bqbsf"
  Oct 14 13:17:54.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.161 80'
  Oct 14 13:17:54.653: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.161 80\nConnection to 10.152.183.161 80 port [tcp/http] succeeded!\n"
  Oct 14 13:17:54.653: INFO: stdout: "externalname-service-dj5kd"
  Oct 14 13:17:54.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.199 32279'
  Oct 14 13:17:54.850: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.199 32279\nConnection to 172.31.16.199 32279 port [tcp/*] succeeded!\n"
  Oct 14 13:17:54.850: INFO: stdout: "externalname-service-bqbsf"
  Oct 14 13:17:54.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 32279'
  Oct 14 13:17:55.051: INFO: stderr: "+ nc -v -t -w 2 172.31.35.21 32279\n+ echo hostName\nConnection to 172.31.35.21 32279 port [tcp/*] succeeded!\n"
  Oct 14 13:17:55.051: INFO: stdout: ""
  E1014 13:17:55.176080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:56.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 32279'
  E1014 13:17:56.176131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:56.263: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.35.21 32279\nConnection to 172.31.35.21 32279 port [tcp/*] succeeded!\n"
  Oct 14 13:17:56.263: INFO: stdout: ""
  Oct 14 13:17:57.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 32279'
  E1014 13:17:57.176419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:57.286: INFO: stderr: "+ nc -v -t -w 2 172.31.35.21 32279\nConnection to 172.31.35.21 32279 port [tcp/*] succeeded!\n+ echo hostName\n"
  Oct 14 13:17:57.286: INFO: stdout: ""
  Oct 14 13:17:58.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 32279'
  E1014 13:17:58.176484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:58.246: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.35.21 32279\nConnection to 172.31.35.21 32279 port [tcp/*] succeeded!\n"
  Oct 14 13:17:58.246: INFO: stdout: ""
  Oct 14 13:17:59.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8565 exec execpod4q9m8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 32279'
  E1014 13:17:59.177034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:17:59.251: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.35.21 32279\nConnection to 172.31.35.21 32279 port [tcp/*] succeeded!\n"
  Oct 14 13:17:59.251: INFO: stdout: "externalname-service-dj5kd"
  Oct 14 13:17:59.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:17:59.258: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-8565" for this suite. @ 10/14/23 13:17:59.3
• [15.591 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 10/14/23 13:17:59.421
  Oct 14 13:17:59.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-pred @ 10/14/23 13:17:59.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:17:59.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:17:59.467
  Oct 14 13:17:59.475: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 14 13:17:59.488: INFO: Waiting for terminating namespaces to be deleted...
  Oct 14 13:17:59.494: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-199 before test
  Oct 14 13:17:59.504: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-9c4nk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: nginx-ingress-controller-kubernetes-worker-2jwtx from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: calico-node-ffpcs from kube-system started at 2023-10-14 12:13:47 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: coredns-59cfb5bf46-rzv4m from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container coredns ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: kube-state-metrics-775d9f4f79-tpb2t from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: metrics-server-v0.6.3-69d7fbfdf8-wlkcq from kube-system started at 2023-10-14 12:14:07 +0000 UTC (2 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: dashboard-metrics-scraper-5dd7cb5fc-qbkfw from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: kubernetes-dashboard-7b899cb9d9-gzbsl from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-vvgmm from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:17:59.504: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 13:17:59.504: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-21 before test
  Oct 14 13:17:59.513: INFO: nginx-ingress-controller-kubernetes-worker-477bb from ingress-nginx-kubernetes-worker started at 2023-10-14 13:14:56 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.513: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 13:17:59.513: INFO: calico-node-gzndl from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.513: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 13:17:59.513: INFO: execpod4q9m8 from services-8565 started at 2023-10-14 13:17:47 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.513: INFO: 	Container agnhost-container ready: true, restart count 0
  Oct 14 13:17:59.513: INFO: externalname-service-bqbsf from services-8565 started at 2023-10-14 13:17:43 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.513: INFO: 	Container externalname-service ready: true, restart count 0
  Oct 14 13:17:59.513: INFO: sonobuoy from sonobuoy started at 2023-10-14 12:19:26 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.513: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 14 13:17:59.513: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-89gbh from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:17:59.513: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:17:59.513: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 13:17:59.513: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-101 before test
  Oct 14 13:17:59.522: INFO: nginx-ingress-controller-kubernetes-worker-w9mvk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:12 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.522: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 13:17:59.522: INFO: calico-node-87d2x from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.522: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 13:17:59.522: INFO: externalname-service-dj5kd from services-8565 started at 2023-10-14 13:17:44 +0000 UTC (1 container statuses recorded)
  Oct 14 13:17:59.523: INFO: 	Container externalname-service ready: true, restart count 0
  Oct 14 13:17:59.523: INFO: sonobuoy-e2e-job-78ddb03d82ed452b from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:17:59.523: INFO: 	Container e2e ready: true, restart count 0
  Oct 14 13:17:59.523: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:17:59.524: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-gmddl from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:17:59.524: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:17:59.524: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/14/23 13:17:59.524
  E1014 13:18:00.177234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:01.177575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/14/23 13:18:01.552
  STEP: Trying to apply a random label on the found node. @ 10/14/23 13:18:01.571
  STEP: verifying the node has the label kubernetes.io/e2e-e5ad2b77-cdf5-4b87-b48b-db99a56dda54 42 @ 10/14/23 13:18:01.585
  STEP: Trying to relaunch the pod, now with labels. @ 10/14/23 13:18:01.591
  E1014 13:18:02.178535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:03.179212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e5ad2b77-cdf5-4b87-b48b-db99a56dda54 off the node ip-172-31-35-21 @ 10/14/23 13:18:03.633
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e5ad2b77-cdf5-4b87-b48b-db99a56dda54 @ 10/14/23 13:18:03.654
  Oct 14 13:18:03.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3989" for this suite. @ 10/14/23 13:18:03.67
• [4.259 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 10/14/23 13:18:03.681
  Oct 14 13:18:03.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/23 13:18:03.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:03.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:03.732
  Oct 14 13:18:03.747: INFO: Got root ca configmap in namespace "svcaccounts-3685"
  Oct 14 13:18:03.756: INFO: Deleted root ca configmap in namespace "svcaccounts-3685"
  E1014 13:18:04.179976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 10/14/23 13:18:04.257
  Oct 14 13:18:04.262: INFO: Recreated root ca configmap in namespace "svcaccounts-3685"
  Oct 14 13:18:04.268: INFO: Updated root ca configmap in namespace "svcaccounts-3685"
  STEP: waiting for the root ca configmap reconciled @ 10/14/23 13:18:04.769
  Oct 14 13:18:04.776: INFO: Reconciled root ca configmap in namespace "svcaccounts-3685"
  Oct 14 13:18:04.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3685" for this suite. @ 10/14/23 13:18:04.783
• [1.121 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 10/14/23 13:18:04.803
  Oct 14 13:18:04.803: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:18:04.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:04.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:04.846
  STEP: Creating resourceQuota "e2e-rq-status-kkzxf" @ 10/14/23 13:18:04.856
  Oct 14 13:18:04.873: INFO: Resource quota "e2e-rq-status-kkzxf" reports spec: hard cpu limit of 500m
  Oct 14 13:18:04.874: INFO: Resource quota "e2e-rq-status-kkzxf" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-kkzxf" /status @ 10/14/23 13:18:04.874
  STEP: Confirm /status for "e2e-rq-status-kkzxf" resourceQuota via watch @ 10/14/23 13:18:04.891
  Oct 14 13:18:04.893: INFO: observed resourceQuota "e2e-rq-status-kkzxf" in namespace "resourcequota-3319" with hard status: v1.ResourceList(nil)
  Oct 14 13:18:04.894: INFO: Found resourceQuota "e2e-rq-status-kkzxf" in namespace "resourcequota-3319" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct 14 13:18:04.894: INFO: ResourceQuota "e2e-rq-status-kkzxf" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/14/23 13:18:04.899
  Oct 14 13:18:04.914: INFO: Resource quota "e2e-rq-status-kkzxf" reports spec: hard cpu limit of 1
  Oct 14 13:18:04.914: INFO: Resource quota "e2e-rq-status-kkzxf" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-kkzxf" /status @ 10/14/23 13:18:04.914
  STEP: Confirm /status for "e2e-rq-status-kkzxf" resourceQuota via watch @ 10/14/23 13:18:04.935
  Oct 14 13:18:04.941: INFO: observed resourceQuota "e2e-rq-status-kkzxf" in namespace "resourcequota-3319" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct 14 13:18:04.941: INFO: Found resourceQuota "e2e-rq-status-kkzxf" in namespace "resourcequota-3319" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Oct 14 13:18:04.941: INFO: ResourceQuota "e2e-rq-status-kkzxf" /status was patched
  STEP: Get "e2e-rq-status-kkzxf" /status @ 10/14/23 13:18:04.941
  Oct 14 13:18:04.952: INFO: Resourcequota "e2e-rq-status-kkzxf" reports status: hard cpu of 1
  Oct 14 13:18:04.953: INFO: Resourcequota "e2e-rq-status-kkzxf" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-kkzxf" /status before checking Spec is unchanged @ 10/14/23 13:18:04.962
  Oct 14 13:18:04.972: INFO: Resourcequota "e2e-rq-status-kkzxf" reports status: hard cpu of 2
  Oct 14 13:18:04.972: INFO: Resourcequota "e2e-rq-status-kkzxf" reports status: hard memory of 2Gi
  Oct 14 13:18:04.974: INFO: Found resourceQuota "e2e-rq-status-kkzxf" in namespace "resourcequota-3319" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E1014 13:18:05.180442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:06.181210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:07.181550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:08.181709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:09.181773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:10.181979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:11.182585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:12.183026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:13.183886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:14.184130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:14.986: INFO: ResourceQuota "e2e-rq-status-kkzxf" Spec was unchanged and /status reset
  Oct 14 13:18:14.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3319" for this suite. @ 10/14/23 13:18:14.991
• [10.199 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 10/14/23 13:18:15.005
  Oct 14 13:18:15.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:18:15.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:15.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:15.036
  STEP: creating Agnhost RC @ 10/14/23 13:18:15.041
  Oct 14 13:18:15.041: INFO: namespace kubectl-7879
  Oct 14 13:18:15.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7879 create -f -'
  E1014 13:18:15.184275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:15.356: INFO: stderr: ""
  Oct 14 13:18:15.356: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/14/23 13:18:15.356
  E1014 13:18:16.185169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:16.362: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 13:18:16.362: INFO: Found 0 / 1
  E1014 13:18:17.185347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:17.363: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 13:18:17.363: INFO: Found 1 / 1
  Oct 14 13:18:17.363: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct 14 13:18:17.366: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 14 13:18:17.366: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 14 13:18:17.366: INFO: wait on agnhost-primary startup in kubectl-7879 
  Oct 14 13:18:17.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7879 logs agnhost-primary-q4zsb agnhost-primary'
  Oct 14 13:18:17.488: INFO: stderr: ""
  Oct 14 13:18:17.488: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 10/14/23 13:18:17.488
  Oct 14 13:18:17.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7879 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Oct 14 13:18:17.615: INFO: stderr: ""
  Oct 14 13:18:17.615: INFO: stdout: "service/rm2 exposed\n"
  Oct 14 13:18:17.623: INFO: Service rm2 in namespace kubectl-7879 found.
  E1014 13:18:18.185419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:19.185540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 10/14/23 13:18:19.631
  Oct 14 13:18:19.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7879 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Oct 14 13:18:19.742: INFO: stderr: ""
  Oct 14 13:18:19.742: INFO: stdout: "service/rm3 exposed\n"
  Oct 14 13:18:19.753: INFO: Service rm3 in namespace kubectl-7879 found.
  E1014 13:18:20.186348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:21.186415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:21.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7879" for this suite. @ 10/14/23 13:18:21.768
• [6.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 10/14/23 13:18:21.776
  Oct 14 13:18:21.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replicaset @ 10/14/23 13:18:21.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:21.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:21.803
  STEP: Create a ReplicaSet @ 10/14/23 13:18:21.809
  STEP: Verify that the required pods have come up @ 10/14/23 13:18:21.816
  Oct 14 13:18:21.821: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1014 13:18:22.187074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:23.187935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:24.188422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:25.188648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:26.188679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:26.829: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/14/23 13:18:26.829
  Oct 14 13:18:26.834: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/14/23 13:18:26.834
  STEP: DeleteCollection of the ReplicaSets @ 10/14/23 13:18:26.841
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/14/23 13:18:26.856
  Oct 14 13:18:26.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4005" for this suite. @ 10/14/23 13:18:26.874
• [5.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/14/23 13:18:26.914
  Oct 14 13:18:26.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-runtime @ 10/14/23 13:18:26.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:26.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:26.966
  STEP: create the container @ 10/14/23 13:18:26.973
  W1014 13:18:26.991641      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/14/23 13:18:26.991
  E1014 13:18:27.189225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:28.189331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:29.190227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:30.191035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/14/23 13:18:31.021
  STEP: the container should be terminated @ 10/14/23 13:18:31.026
  STEP: the termination message should be set @ 10/14/23 13:18:31.026
  Oct 14 13:18:31.026: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/14/23 13:18:31.027
  Oct 14 13:18:31.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1134" for this suite. @ 10/14/23 13:18:31.05
• [4.147 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 10/14/23 13:18:31.062
  Oct 14 13:18:31.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:18:31.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:31.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:31.093
  STEP: Counting existing ResourceQuota @ 10/14/23 13:18:31.101
  E1014 13:18:31.191672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:32.192535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:33.192866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:34.193283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:35.193683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/23 13:18:36.106
  STEP: Ensuring resource quota status is calculated @ 10/14/23 13:18:36.115
  E1014 13:18:36.194148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:37.194587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 10/14/23 13:18:38.12
  STEP: Creating a NodePort Service @ 10/14/23 13:18:38.144
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/14/23 13:18:38.177
  E1014 13:18:38.194858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures service creation @ 10/14/23 13:18:38.205
  E1014 13:18:39.195058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:40.195871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 10/14/23 13:18:40.21
  STEP: Ensuring resource quota status released usage @ 10/14/23 13:18:40.262
  E1014 13:18:41.196172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:42.196306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:42.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6968" for this suite. @ 10/14/23 13:18:42.276
• [11.224 seconds]
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 10/14/23 13:18:42.287
  Oct 14 13:18:42.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 13:18:42.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:42.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:42.315
  STEP: creating secret secrets-4618/secret-test-6b2ca614-b703-4c72-9bf5-bd61c6bacfe7 @ 10/14/23 13:18:42.32
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:18:42.327
  E1014 13:18:43.196491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:44.196674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:45.196869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:46.197636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:18:46.353
  Oct 14 13:18:46.357: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-configmaps-e86ec234-da6b-40aa-bd51-9bc7bf9fb51e container env-test: <nil>
  STEP: delete the pod @ 10/14/23 13:18:46.368
  Oct 14 13:18:46.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4618" for this suite. @ 10/14/23 13:18:46.392
• [4.116 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 10/14/23 13:18:46.405
  Oct 14 13:18:46.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename daemonsets @ 10/14/23 13:18:46.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:46.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:46.545
  STEP: Creating simple DaemonSet "daemon-set" @ 10/14/23 13:18:46.575
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/23 13:18:46.585
  Oct 14 13:18:46.592: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:18:46.592: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:18:46.598: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:18:46.599: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:18:47.198737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:47.605: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:18:47.605: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:18:47.611: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:18:47.611: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:18:48.198805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:48.606: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:18:48.606: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:18:48.611: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 13:18:48.611: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/14/23 13:18:48.615
  STEP: DeleteCollection of the DaemonSets @ 10/14/23 13:18:48.62
  STEP: Verify that ReplicaSets have been deleted @ 10/14/23 13:18:48.63
  Oct 14 13:18:48.650: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28438"},"items":null}

  Oct 14 13:18:48.663: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28441"},"items":[{"metadata":{"name":"daemon-set-9hbmc","generateName":"daemon-set-","namespace":"daemonsets-5646","uid":"cb098fee-2af0-4e76-af0f-f96342888625","resourceVersion":"28441","creationTimestamp":"2023-10-14T13:18:46Z","deletionTimestamp":"2023-10-14T13:19:18Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"20ddb4ff-f360-4226-836d-dcd9462409d7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-14T13:18:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20ddb4ff-f360-4226-836d-dcd9462409d7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-14T13:18:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.127.162\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hwbrw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hwbrw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-35-21","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-35-21"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:46Z"}],"hostIP":"172.31.35.21","podIP":"192.168.127.162","podIPs":[{"ip":"192.168.127.162"}],"startTime":"2023-10-14T13:18:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-14T13:18:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://878a76e23cfc949a5fb218218e99addd2b02fb723cf3f8a6f374d1f3bb4746d7","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-hchcr","generateName":"daemon-set-","namespace":"daemonsets-5646","uid":"c98157bc-55d1-455c-9a7c-4ebeaafb804a","resourceVersion":"28440","creationTimestamp":"2023-10-14T13:18:46Z","deletionTimestamp":"2023-10-14T13:19:18Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"20ddb4ff-f360-4226-836d-dcd9462409d7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-14T13:18:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20ddb4ff-f360-4226-836d-dcd9462409d7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-14T13:18:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.151.51\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kjsgc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kjsgc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-80-101","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-80-101"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:46Z"}],"hostIP":"172.31.80.101","podIP":"192.168.151.51","podIPs":[{"ip":"192.168.151.51"}],"startTime":"2023-10-14T13:18:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-14T13:18:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2cf5c32a4737f21db966cb855047e5873656c6b6fc5e03626c7c4c36e3aa77fe","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mr9nc","generateName":"daemon-set-","namespace":"daemonsets-5646","uid":"84a6bfda-d3fa-442f-baec-3701112ad9bc","resourceVersion":"28432","creationTimestamp":"2023-10-14T13:18:46Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"20ddb4ff-f360-4226-836d-dcd9462409d7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-14T13:18:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20ddb4ff-f360-4226-836d-dcd9462409d7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-14T13:18:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.9.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xgb97","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xgb97","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-16-199","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-16-199"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-14T13:18:46Z"}],"hostIP":"172.31.16.199","podIP":"192.168.9.16","podIPs":[{"ip":"192.168.9.16"}],"startTime":"2023-10-14T13:18:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-14T13:18:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5f4bf39c2599e953ea2876c5078083e582be2ea5fbac5004df9b6dc074eb6f51","started":true}],"qosClass":"BestEffort"}}]}

  Oct 14 13:18:48.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5646" for this suite. @ 10/14/23 13:18:48.693
• [2.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 10/14/23 13:18:48.712
  Oct 14 13:18:48.713: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:18:48.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:48.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:48.744
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6307 @ 10/14/23 13:18:48.748
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/14/23 13:18:48.768
  STEP: creating service externalsvc in namespace services-6307 @ 10/14/23 13:18:48.768
  STEP: creating replication controller externalsvc in namespace services-6307 @ 10/14/23 13:18:48.791
  I1014 13:18:48.804721      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6307, replica count: 2
  E1014 13:18:49.199898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:50.200011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:51.200608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:18:51.855598      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/14/23 13:18:51.86
  Oct 14 13:18:51.882: INFO: Creating new exec pod
  E1014 13:18:52.200787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:53.201090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:53.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-6307 exec execpodmkscq -- /bin/sh -x -c nslookup nodeport-service.services-6307.svc.cluster.local'
  Oct 14 13:18:54.141: INFO: stderr: "+ nslookup nodeport-service.services-6307.svc.cluster.local\n"
  Oct 14 13:18:54.141: INFO: stdout: "Server:\t\t10.152.183.199\nAddress:\t10.152.183.199#53\n\nnodeport-service.services-6307.svc.cluster.local\tcanonical name = externalsvc.services-6307.svc.cluster.local.\nName:\texternalsvc.services-6307.svc.cluster.local\nAddress: 10.152.183.167\n\n"
  Oct 14 13:18:54.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-6307, will wait for the garbage collector to delete the pods @ 10/14/23 13:18:54.148
  E1014 13:18:54.201601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:54.214: INFO: Deleting ReplicationController externalsvc took: 9.646873ms
  Oct 14 13:18:54.315: INFO: Terminating ReplicationController externalsvc pods took: 100.494096ms
  E1014 13:18:55.202424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:56.202762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:18:57.203432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:57.946: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-6307" for this suite. @ 10/14/23 13:18:57.965
• [9.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 10/14/23 13:18:57.975
  Oct 14 13:18:57.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replication-controller @ 10/14/23 13:18:57.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:18:58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:18:58.006
  STEP: Creating ReplicationController "e2e-rc-bg67p" @ 10/14/23 13:18:58.011
  Oct 14 13:18:58.018: INFO: Get Replication Controller "e2e-rc-bg67p" to confirm replicas
  E1014 13:18:58.203997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:18:59.023: INFO: Get Replication Controller "e2e-rc-bg67p" to confirm replicas
  Oct 14 13:18:59.029: INFO: Found 1 replicas for "e2e-rc-bg67p" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-bg67p" @ 10/14/23 13:18:59.03
  STEP: Updating a scale subresource @ 10/14/23 13:18:59.034
  STEP: Verifying replicas where modified for replication controller "e2e-rc-bg67p" @ 10/14/23 13:18:59.043
  Oct 14 13:18:59.043: INFO: Get Replication Controller "e2e-rc-bg67p" to confirm replicas
  E1014 13:18:59.205045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:00.050: INFO: Get Replication Controller "e2e-rc-bg67p" to confirm replicas
  Oct 14 13:19:00.056: INFO: Found 2 replicas for "e2e-rc-bg67p" replication controller
  Oct 14 13:19:00.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8827" for this suite. @ 10/14/23 13:19:00.062
• [2.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 10/14/23 13:19:00.075
  Oct 14 13:19:00.075: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename daemonsets @ 10/14/23 13:19:00.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:19:00.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:19:00.111
  STEP: Creating simple DaemonSet "daemon-set" @ 10/14/23 13:19:00.149
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/23 13:19:00.157
  Oct 14 13:19:00.167: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:19:00.168: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:19:00.172: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:19:00.173: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:19:00.205227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:01.178: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:19:01.178: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:19:01.184: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:19:01.184: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:19:01.205849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:02.179: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:19:02.179: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:19:02.183: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 13:19:02.184: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/14/23 13:19:02.187
  Oct 14 13:19:02.192: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/14/23 13:19:02.192
  Oct 14 13:19:02.206: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/14/23 13:19:02.206
  E1014 13:19:02.206546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:02.209: INFO: Observed &DaemonSet event: ADDED
  Oct 14 13:19:02.210: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.210: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.210: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.211: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.211: INFO: Found daemon set daemon-set in namespace daemonsets-778 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 14 13:19:02.211: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/14/23 13:19:02.211
  STEP: watching for the daemon set status to be patched @ 10/14/23 13:19:02.22
  Oct 14 13:19:02.224: INFO: Observed &DaemonSet event: ADDED
  Oct 14 13:19:02.224: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.224: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.225: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.225: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.225: INFO: Observed daemon set daemon-set in namespace daemonsets-778 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 14 13:19:02.225: INFO: Observed &DaemonSet event: MODIFIED
  Oct 14 13:19:02.225: INFO: Found daemon set daemon-set in namespace daemonsets-778 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Oct 14 13:19:02.225: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/23 13:19:02.231
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-778, will wait for the garbage collector to delete the pods @ 10/14/23 13:19:02.231
  Oct 14 13:19:02.296: INFO: Deleting DaemonSet.extensions daemon-set took: 9.443522ms
  Oct 14 13:19:02.397: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.245473ms
  E1014 13:19:03.206738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:03.901: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:19:03.902: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 14 13:19:03.907: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28770"},"items":null}

  Oct 14 13:19:03.912: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28770"},"items":null}

  Oct 14 13:19:03.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-778" for this suite. @ 10/14/23 13:19:03.937
• [3.871 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 10/14/23 13:19:03.948
  Oct 14 13:19:03.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename disruption @ 10/14/23 13:19:03.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:19:03.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:19:03.978
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:19:03.99
  E1014 13:19:04.207239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:05.207371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/14/23 13:19:06.057
  Oct 14 13:19:06.069: INFO: running pods: 0 < 3
  E1014 13:19:06.208387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:07.208459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:08.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1604" for this suite. @ 10/14/23 13:19:08.084
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 10/14/23 13:19:08.101
  Oct 14 13:19:08.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename events @ 10/14/23 13:19:08.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:19:08.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:19:08.128
  STEP: Create set of events @ 10/14/23 13:19:08.132
  Oct 14 13:19:08.139: INFO: created test-event-1
  Oct 14 13:19:08.145: INFO: created test-event-2
  Oct 14 13:19:08.151: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/14/23 13:19:08.151
  STEP: delete collection of events @ 10/14/23 13:19:08.155
  Oct 14 13:19:08.155: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/14/23 13:19:08.193
  Oct 14 13:19:08.194: INFO: requesting list of events to confirm quantity
  Oct 14 13:19:08.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1455" for this suite. @ 10/14/23 13:19:08.205
  E1014 13:19:08.209226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.113 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 10/14/23 13:19:08.215
  Oct 14 13:19:08.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename namespaces @ 10/14/23 13:19:08.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:19:08.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:19:08.243
  STEP: Creating a test namespace @ 10/14/23 13:19:08.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:19:08.269
  STEP: Creating a pod in the namespace @ 10/14/23 13:19:08.275
  STEP: Waiting for the pod to have running status @ 10/14/23 13:19:08.286
  E1014 13:19:09.209653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:10.210026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 10/14/23 13:19:10.296
  STEP: Waiting for the namespace to be removed. @ 10/14/23 13:19:10.305
  E1014 13:19:11.210485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:12.210832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:13.211923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:14.212001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:15.212160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:16.212508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:17.212897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:18.212992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:19.213049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:20.213154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:21.214134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/14/23 13:19:21.311
  STEP: Verifying there are no pods in the namespace @ 10/14/23 13:19:21.333
  Oct 14 13:19:21.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6917" for this suite. @ 10/14/23 13:19:21.347
  STEP: Destroying namespace "nsdeletetest-5010" for this suite. @ 10/14/23 13:19:21.356
  Oct 14 13:19:21.360: INFO: Namespace nsdeletetest-5010 was already deleted
  STEP: Destroying namespace "nsdeletetest-8075" for this suite. @ 10/14/23 13:19:21.361
• [13.158 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 10/14/23 13:19:21.373
  Oct 14 13:19:21.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 13:19:21.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:19:21.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:19:21.412
  STEP: Creating pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171 @ 10/14/23 13:19:21.418
  E1014 13:19:22.214832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:23.214931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 13:19:23.455
  Oct 14 13:19:23.459: INFO: Initial restart count of pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 is 0
  Oct 14 13:19:23.463: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:24.215010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:25.215120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:25.469: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:26.215442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:27.215521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:27.474: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:28.215646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:29.215739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:29.480: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:30.216733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:31.217186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:31.486: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:32.217463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:33.217547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:33.491: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:34.218597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:35.218792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:35.497: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:36.219421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:37.219542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:37.503: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:38.220262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:39.220341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:39.508: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:40.220449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:41.221125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:41.514: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:42.221201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:43.221917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:43.520: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:44.221978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:45.222073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:45.525: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:46.222794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:47.222917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:47.530: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:48.223096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:49.223851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:49.535: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:50.224738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:51.225519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:51.540: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:52.225633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:53.225791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:53.545: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:54.225870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:55.226062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:55.551: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:56.226487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:57.226757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:57.557: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:19:58.226855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:19:59.227896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:19:59.565: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:00.228997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:01.229382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:01.572: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:02.229471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:03.229615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:03.577: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:04.229703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:05.229832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:05.582: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:06.229946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:07.230201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:07.588: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:08.231008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:09.231045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:09.593: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:10.231834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:11.232299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:11.600: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:12.232945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:13.233086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:13.606: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:14.233514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:15.234311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:15.613: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:16.235048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:17.235144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:17.618: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:18.235556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:19.235664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:19.624: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:20.236109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:21.236179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:21.631: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:22.236998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:23.237130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:23.636: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:24.237611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:25.237723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:25.641: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:26.238461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:27.238833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:27.647: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:28.239911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:29.240753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:29.651: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:30.241137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:31.241533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:31.656: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:32.241653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:33.241741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:33.662: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:34.241868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:35.242008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:35.666: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:36.242782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:37.242904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:37.672: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:38.243016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:39.243124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:39.677: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:40.243857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:41.244110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:41.682: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:42.244227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:43.244346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:43.687: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:44.245401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:45.245516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:45.692: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:46.246411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:47.246763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:47.698: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:48.247095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:49.247724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:49.704: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:50.248277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:51.248388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:51.710: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:52.248982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:53.249092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:53.715: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:54.249647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:55.250200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:55.720: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:56.250554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:57.250769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:57.725: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:20:58.250883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:20:59.251867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:20:59.731: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:00.252688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:01.253592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:01.738: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:02.253729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:03.253847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:03.743: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:04.254878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:05.255264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:05.748: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:06.256201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:07.256513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:07.754: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:08.256690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:09.256941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:09.759: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:10.257936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:11.258593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:11.766: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:12.258714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:13.258782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:13.771: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:14.258880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:15.259866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:15.776: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:16.260510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:17.261124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:17.782: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:18.261576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:19.261992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:19.789: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:20.262051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:21.262837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:21.795: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:22.263460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:23.263890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:23.803: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:24.264261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:25.264399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:25.808: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:26.265014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:27.265208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:27.815: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:28.265351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:29.265944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:29.820: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:30.266754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:31.266785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:31.825: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:32.267570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:33.268084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:33.832: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:34.268555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:35.269106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:35.837: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:36.269861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:37.269992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:37.842: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:38.270347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:39.270701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:39.847: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:40.270793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:41.271716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:41.854: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:42.271768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:43.271843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:43.859: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:44.272905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:45.273026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:45.865: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:46.273165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:47.273625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:47.870: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:48.273801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:49.274068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:49.875: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:50.274245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:51.274705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:51.882: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:52.274869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:53.274941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:53.887: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:54.275022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:55.275895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:55.892: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:56.277006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:57.277132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:57.897: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:21:58.277206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:21:59.277333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:21:59.902: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:00.277943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:01.277988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:01.908: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:02.278202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:03.278449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:03.913: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:04.278679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:05.278884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:05.919: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:06.279083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:07.279888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:07.925: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:08.280408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:09.280654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:09.930: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:10.281538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:11.282672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:11.935: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:12.283445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:13.283872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:13.939: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:14.284049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:15.284289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:15.944: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:16.284393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:17.284521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:17.950: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:18.284651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:19.284767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:19.954: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:20.285410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:21.285493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:21.961: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:22.286281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:23.286458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:23.966: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:24.287014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:25.287928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:25.974: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:26.288518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:27.288636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:27.979: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:28.289392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:29.290137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:29.985: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:30.290753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:31.290794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:31.991: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:32.291875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:33.292423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:33.996: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:34.292513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:35.292851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:36.002: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:36.293826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:37.294285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:38.007: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:38.295263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:39.295866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:40.012: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:40.295997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:41.296112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:42.018: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:42.297209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:43.297467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:44.024: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:44.298482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:45.299016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:46.029: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:46.299218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:47.299261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:48.034: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:48.300036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:49.300162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:50.039: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:50.300609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:51.300891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:52.045: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:52.301598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:53.301763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:54.050: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:54.302373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:55.302932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:56.058: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:56.303935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:57.304972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:22:58.064: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:22:58.305407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:22:59.305744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:00.071: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:00.306232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:01.306690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:02.079: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:02.306770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:03.306792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:04.084: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:04.307908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:05.308975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:06.090: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:06.309595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:07.309676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:08.095: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:08.310299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:09.310713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:10.100: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:10.311005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:11.311891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:12.105: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:12.312347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:13.312441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:14.110: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:14.312984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:15.313114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:16.116: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:16.313715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:17.313833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:18.121: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:18.314262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:19.314409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:20.127: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:20.315482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:21.315541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:22.133: INFO: Get pod test-webserver-2e4c1621-b70c-43c4-b4c2-3216d1075b39 in namespace container-probe-5171
  E1014 13:23:22.316549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:23.316794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:23:24.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:23:24.14
  STEP: Destroying namespace "container-probe-5171" for this suite. @ 10/14/23 13:23:24.156
• [242.796 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 10/14/23 13:23:24.17
  Oct 14 13:23:24.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename namespaces @ 10/14/23 13:23:24.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:23:24.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:23:24.201
  STEP: Creating namespace "e2e-ns-kg24q" @ 10/14/23 13:23:24.205
  Oct 14 13:23:24.224: INFO: Namespace "e2e-ns-kg24q-882" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-kg24q-882" @ 10/14/23 13:23:24.224
  Oct 14 13:23:24.238: INFO: Namespace "e2e-ns-kg24q-882" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-kg24q-882" @ 10/14/23 13:23:24.238
  Oct 14 13:23:24.252: INFO: Namespace "e2e-ns-kg24q-882" has []v1.FinalizerName{"kubernetes"}
  Oct 14 13:23:24.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-601" for this suite. @ 10/14/23 13:23:24.258
  STEP: Destroying namespace "e2e-ns-kg24q-882" for this suite. @ 10/14/23 13:23:24.265
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 10/14/23 13:23:24.276
  Oct 14 13:23:24.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sysctl @ 10/14/23 13:23:24.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:23:24.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:23:24.303
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/14/23 13:23:24.309
  E1014 13:23:24.317122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Watching for error events or started pod @ 10/14/23 13:23:24.32
  E1014 13:23:25.317788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:26.318739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 10/14/23 13:23:26.326
  E1014 13:23:27.319226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:28.319333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 10/14/23 13:23:28.34
  STEP: Getting logs from the pod @ 10/14/23 13:23:28.34
  STEP: Checking that the sysctl is actually updated @ 10/14/23 13:23:28.367
  Oct 14 13:23:28.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7279" for this suite. @ 10/14/23 13:23:28.374
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 10/14/23 13:23:28.387
  Oct 14 13:23:28.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:23:28.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:23:28.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:23:28.423
  STEP: Creating configMap with name projected-configmap-test-volume-map-aca4dad0-fe31-4bbc-a09b-0f165253d672 @ 10/14/23 13:23:28.427
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:23:28.434
  E1014 13:23:29.319466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:30.319596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:31.320379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:32.320501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:23:32.461
  Oct 14 13:23:32.466: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-configmaps-36a3ff48-6584-43a0-87fb-f67e37c5b0f7 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:23:32.475
  Oct 14 13:23:32.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3098" for this suite. @ 10/14/23 13:23:32.502
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 10/14/23 13:23:32.515
  Oct 14 13:23:32.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename endpointslice @ 10/14/23 13:23:32.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:23:32.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:23:32.544
  E1014 13:23:33.321438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:34.321517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:35.321629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:36.322127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:37.322242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 10/14/23 13:23:37.644
  E1014 13:23:38.322767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:39.323895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:40.323977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:41.324552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:42.325548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 10/14/23 13:23:42.656
  E1014 13:23:43.326450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:44.326572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:45.326703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:46.327144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:47.327911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/14/23 13:23:47.667
  E1014 13:23:48.327941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:49.328153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:50.328263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:51.328504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:52.329133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 10/14/23 13:23:52.677
  Oct 14 13:23:52.708: INFO: EndpointSlice for Service endpointslice-4191/example-named-port not found
  E1014 13:23:53.329788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:54.330756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:55.330814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:56.331525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:57.331632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:58.332532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:23:59.332648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:00.332768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:01.333149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:02.333278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:24:02.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4191" for this suite. @ 10/14/23 13:24:02.727
• [30.221 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 10/14/23 13:24:02.738
  Oct 14 13:24:02.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-pred @ 10/14/23 13:24:02.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:24:02.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:24:02.781
  Oct 14 13:24:02.786: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 14 13:24:02.799: INFO: Waiting for terminating namespaces to be deleted...
  Oct 14 13:24:02.804: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-199 before test
  Oct 14 13:24:02.813: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-9c4nk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.813: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 14 13:24:02.813: INFO: nginx-ingress-controller-kubernetes-worker-2jwtx from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.814: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 13:24:02.814: INFO: calico-node-ffpcs from kube-system started at 2023-10-14 12:13:47 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.814: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 13:24:02.814: INFO: coredns-59cfb5bf46-rzv4m from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.814: INFO: 	Container coredns ready: true, restart count 0
  Oct 14 13:24:02.815: INFO: kube-state-metrics-775d9f4f79-tpb2t from kube-system started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.815: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 14 13:24:02.815: INFO: metrics-server-v0.6.3-69d7fbfdf8-wlkcq from kube-system started at 2023-10-14 12:14:07 +0000 UTC (2 container statuses recorded)
  Oct 14 13:24:02.815: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 14 13:24:02.815: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 14 13:24:02.816: INFO: dashboard-metrics-scraper-5dd7cb5fc-qbkfw from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.816: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 14 13:24:02.816: INFO: kubernetes-dashboard-7b899cb9d9-gzbsl from kubernetes-dashboard started at 2023-10-14 12:14:07 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.816: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 14 13:24:02.816: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-vvgmm from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:24:02.817: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:24:02.817: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 13:24:02.817: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-21 before test
  Oct 14 13:24:02.827: INFO: pod1 from endpointslice-4191 started at 2023-10-14 13:23:32 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.827: INFO: 	Container container1 ready: true, restart count 0
  Oct 14 13:24:02.827: INFO: pod2 from endpointslice-4191 started at 2023-10-14 13:23:32 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.827: INFO: 	Container container1 ready: true, restart count 0
  Oct 14 13:24:02.827: INFO: nginx-ingress-controller-kubernetes-worker-477bb from ingress-nginx-kubernetes-worker started at 2023-10-14 13:14:56 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.827: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 13:24:02.827: INFO: calico-node-gzndl from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.827: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 13:24:02.827: INFO: sonobuoy from sonobuoy started at 2023-10-14 12:19:26 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.827: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 14 13:24:02.827: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-89gbh from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:24:02.827: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:24:02.827: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 14 13:24:02.827: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-101 before test
  Oct 14 13:24:02.842: INFO: nginx-ingress-controller-kubernetes-worker-w9mvk from ingress-nginx-kubernetes-worker started at 2023-10-14 12:14:12 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.842: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 14 13:24:02.842: INFO: calico-node-87d2x from kube-system started at 2023-10-14 12:13:52 +0000 UTC (1 container statuses recorded)
  Oct 14 13:24:02.842: INFO: 	Container calico-node ready: true, restart count 0
  Oct 14 13:24:02.843: INFO: sonobuoy-e2e-job-78ddb03d82ed452b from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:24:02.843: INFO: 	Container e2e ready: true, restart count 0
  Oct 14 13:24:02.843: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:24:02.843: INFO: sonobuoy-systemd-logs-daemon-set-5f4ee423016c4bc5-gmddl from sonobuoy started at 2023-10-14 12:19:29 +0000 UTC (2 container statuses recorded)
  Oct 14 13:24:02.843: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 14 13:24:02.843: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/14/23 13:24:02.843
  E1014 13:24:03.334335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:04.334610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/14/23 13:24:04.88
  STEP: Trying to apply a random label on the found node. @ 10/14/23 13:24:04.903
  STEP: verifying the node has the label kubernetes.io/e2e-0498d110-0b61-4b8e-80bc-3e6d35c9d111 95 @ 10/14/23 13:24:04.923
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/14/23 13:24:04.928
  E1014 13:24:05.334831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:06.335028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:07.335892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:08.336212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.80.101 on the node which pod4 resides and expect not scheduled @ 10/14/23 13:24:08.955
  E1014 13:24:09.336700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:10.336982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:11.338004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:12.338121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:13.339019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:14.339128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:15.339249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:16.339336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:17.339498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:18.339885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:19.340554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:20.340628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:21.341279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:22.341411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:23.341898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:24.342008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:25.342492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:26.343398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:27.343846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:28.344220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:29.344293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:30.344401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:31.344533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:32.344691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:33.344816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:34.344947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:35.345781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:36.346329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:37.346879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:38.347143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:39.348080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:40.348099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:41.348971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:42.349113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:43.349377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:44.349342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:45.349974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:46.350279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:47.350889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:48.351032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:49.351171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:50.351886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:51.352480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:52.352593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:53.353204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:54.353389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:55.354432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:56.355286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:57.355930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:58.355939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:24:59.356054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:00.356221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:01.356960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:02.357190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:03.358168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:04.358750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:05.359139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:06.359892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:07.359932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:08.360040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:09.360143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:10.360258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:11.360375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:12.360506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:13.360614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:14.361229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:15.361749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:16.362324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:17.362783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:18.363864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:19.364584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:20.364728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:21.365703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:22.365824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:23.366761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:24.366787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:25.367022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:26.367128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:27.367664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:28.367922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:29.368676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:30.369171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:31.369576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:32.369658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:33.370535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:34.370800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:35.371225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:36.371866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:37.372828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:38.373065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:39.373937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:40.373999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:41.374181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:42.374785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:43.374912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:44.375869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:45.376180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:46.376532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:47.377176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:48.377689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:49.378161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:50.378284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:51.378862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:52.378972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:53.379733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:54.380587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:55.380947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:56.381715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:57.382502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:58.382679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:25:59.383471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:00.383585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:01.384128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:02.385133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:03.385689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:04.385824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:05.386272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:06.386525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:07.387440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:08.387888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:09.388002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:10.388264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:11.388626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:12.388720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:13.389253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:14.389648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:15.390725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:16.391522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:17.392148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:18.392566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:19.392847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:20.393403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:21.394045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:22.394315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:23.394483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:24.394658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:25.395326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:26.395689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:27.396175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:28.396302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:29.396659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:30.396787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:31.397332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:32.397474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:33.397856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:34.397947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:35.398774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:36.399494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:37.399722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:38.400216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:39.401003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:40.401795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:41.402564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:42.402807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:43.403317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:44.403533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:45.403622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:46.404286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:47.405239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:48.405494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:49.405757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:50.405911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:51.406683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:52.406788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:53.407048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:54.407190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:55.407331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:56.408271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:57.408351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:58.408878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:26:59.409072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:00.409194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:01.409653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:02.409722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:03.409794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:04.410593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:05.410779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:06.411815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:07.412158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:08.412839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:09.412972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:10.413470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:11.413884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:12.413984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:13.414791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:14.414806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:15.414920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:16.415079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:17.415167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:18.415330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:19.415422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:20.415518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:21.415849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:22.415993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:23.416378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:24.416493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:25.417573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:26.418707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:27.418979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:28.419090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:29.419192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:30.419867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:31.420346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:32.420629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:33.421063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:34.421191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:35.421533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:36.422301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:37.422408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:38.422792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:39.422903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:40.423515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:41.423631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:42.423795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:43.423898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:44.424037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:45.424107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:46.425198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:47.426313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:48.426402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:49.426786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:50.426939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:51.427536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:52.427646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:53.428209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:54.428297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:55.429173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:56.429518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:57.429588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:58.430168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:27:59.430273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:00.430871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:01.431352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:02.432299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:03.432415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:04.432555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:05.432640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:06.433637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:07.434272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:08.435178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:09.435281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:10.435414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:11.435858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:12.436807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:13.436886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:14.437004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:15.437102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:16.437219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:17.437323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:18.437460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:19.437575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:20.437968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:21.438281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:22.439374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:23.440258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:24.441277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:25.441789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:26.442372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:27.442765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:28.443596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:29.443672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:30.443735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:31.443838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:32.444334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:33.444417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:34.444542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:35.444666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:36.445503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:37.445629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:38.445974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:39.446277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:40.446880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:41.447006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:42.447669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:43.447794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:44.447865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:45.448005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:46.448116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:47.448476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:48.449542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:49.449651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:50.449776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:51.450413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:52.450528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:53.450767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:54.451858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:55.451994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:56.452127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:57.453100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:58.454067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:28:59.454259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:00.454547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:01.454711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:02.454805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:03.455411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:04.455861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:05.456242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:06.456706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:07.457378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:08.457519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-0498d110-0b61-4b8e-80bc-3e6d35c9d111 off the node ip-172-31-80-101 @ 10/14/23 13:29:08.966
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0498d110-0b61-4b8e-80bc-3e6d35c9d111 @ 10/14/23 13:29:08.985
  Oct 14 13:29:08.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6338" for this suite. @ 10/14/23 13:29:09
• [306.271 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 10/14/23 13:29:09.01
  Oct 14 13:29:09.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename gc @ 10/14/23 13:29:09.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:29:09.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:29:09.045
  Oct 14 13:29:09.102: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"3c23c25d-1eb8-4e2d-875d-12bdb9613240", Controller:(*bool)(0xc004fbfd2e), BlockOwnerDeletion:(*bool)(0xc004fbfd2f)}}
  Oct 14 13:29:09.124: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f2d23606-dd6f-4bdf-a284-acba045b5b3f", Controller:(*bool)(0xc004fbffb6), BlockOwnerDeletion:(*bool)(0xc004fbffb7)}}
  Oct 14 13:29:09.145: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"dc7ff170-ce8a-43c4-9f68-98d6e7b124a8", Controller:(*bool)(0xc00387401e), BlockOwnerDeletion:(*bool)(0xc00387401f)}}
  E1014 13:29:09.458765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:10.459202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:11.460050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:12.460133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:13.460257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:14.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5572" for this suite. @ 10/14/23 13:29:14.167
• [5.167 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 10/14/23 13:29:14.178
  Oct 14 13:29:14.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/23 13:29:14.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:29:14.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:29:14.215
  Oct 14 13:29:14.221: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:29:14.460346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:15.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5452" for this suite. @ 10/14/23 13:29:15.272
• [1.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 10/14/23 13:29:15.283
  Oct 14 13:29:15.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename events @ 10/14/23 13:29:15.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:29:15.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:29:15.312
  STEP: creating a test event @ 10/14/23 13:29:15.317
  STEP: listing all events in all namespaces @ 10/14/23 13:29:15.324
  STEP: patching the test event @ 10/14/23 13:29:15.33
  STEP: fetching the test event @ 10/14/23 13:29:15.339
  STEP: updating the test event @ 10/14/23 13:29:15.343
  STEP: getting the test event @ 10/14/23 13:29:15.357
  STEP: deleting the test event @ 10/14/23 13:29:15.362
  STEP: listing all events in all namespaces @ 10/14/23 13:29:15.372
  Oct 14 13:29:15.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5955" for this suite. @ 10/14/23 13:29:15.383
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 10/14/23 13:29:15.393
  Oct 14 13:29:15.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 13:29:15.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:29:15.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:29:15.42
  STEP: Creating service test in namespace statefulset-9963 @ 10/14/23 13:29:15.425
  STEP: Creating statefulset ss in namespace statefulset-9963 @ 10/14/23 13:29:15.433
  Oct 14 13:29:15.453: INFO: Found 0 stateful pods, waiting for 1
  E1014 13:29:15.460692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:16.460770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:17.460888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:18.461012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:19.461163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:20.461690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:21.462175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:22.462361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:23.462741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:24.462781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:25.459: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  E1014 13:29:25.463536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 10/14/23 13:29:25.468
  STEP: updating a scale subresource @ 10/14/23 13:29:25.472
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/14/23 13:29:25.48
  STEP: Patch a scale subresource @ 10/14/23 13:29:25.485
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/14/23 13:29:25.497
  Oct 14 13:29:25.503: INFO: Deleting all statefulset in ns statefulset-9963
  Oct 14 13:29:25.510: INFO: Scaling statefulset ss to 0
  E1014 13:29:26.464657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:27.465139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:28.465329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:29.465364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:30.465568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:31.465976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:32.466140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:33.466214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:34.466342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:35.466462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:35.565: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 13:29:35.569: INFO: Deleting statefulset ss
  Oct 14 13:29:35.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9963" for this suite. @ 10/14/23 13:29:35.594
• [20.210 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 10/14/23 13:29:35.605
  Oct 14 13:29:35.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 13:29:35.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:29:35.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:29:35.634
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/14/23 13:29:35.639
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/14/23 13:29:35.639
  STEP: creating a pod to probe DNS @ 10/14/23 13:29:35.639
  STEP: submitting the pod to kubernetes @ 10/14/23 13:29:35.639
  E1014 13:29:36.467276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:37.467461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:29:37.663
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:29:37.667
  Oct 14 13:29:37.694: INFO: DNS probes using dns-5318/dns-test-937e5e66-bedf-4aa2-9cab-5eb6c39531f6 succeeded

  Oct 14 13:29:37.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:29:37.701
  STEP: Destroying namespace "dns-5318" for this suite. @ 10/14/23 13:29:37.717
• [2.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/14/23 13:29:37.727
  Oct 14 13:29:37.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 13:29:37.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:29:37.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:29:37.756
  STEP: Creating secret with name secret-test-ce91e774-b546-425b-a837-c82573a9a0a6 @ 10/14/23 13:29:37.76
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:29:37.767
  E1014 13:29:38.467513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:39.467630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:40.467760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:41.467939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:29:41.794
  Oct 14 13:29:41.799: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-6ec81d7e-bc15-4934-a85e-1c4fe972cf5e container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:29:41.826
  Oct 14 13:29:41.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9572" for this suite. @ 10/14/23 13:29:41.856
• [4.137 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 10/14/23 13:29:41.865
  Oct 14 13:29:41.865: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 13:29:41.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:29:41.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:29:41.893
  STEP: Creating pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247 @ 10/14/23 13:29:41.898
  E1014 13:29:42.467983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:43.468032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 13:29:43.928
  Oct 14 13:29:43.932: INFO: Initial restart count of pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 is 0
  Oct 14 13:29:43.936: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:44.468235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:45.468450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:45.943: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:46.468646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:47.468875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:47.950: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:48.469003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:49.469707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:49.956: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:50.469827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:51.470566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:51.961: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:52.470740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:53.470797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:53.965: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:54.471607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:55.471734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:55.972: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:56.471864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:57.472294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:57.978: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:29:58.473326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:29:59.473408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:29:59.984: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:00.473785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:01.474769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:01.989: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:02.475527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:03.475646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:03.995: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  Oct 14 13:30:03.995: INFO: Restart count of pod container-probe-7247/liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 is now 1 (20.062788434s elapsed)
  E1014 13:30:04.475998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:05.476321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:06.002: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:06.477342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:07.477436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:08.007: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:08.477584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:09.478202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:10.013: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:10.478860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:11.479866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:12.017: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:12.480068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:13.480194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:14.022: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:14.481302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:15.481389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:16.028: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:16.482399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:17.482530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:18.034: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:18.482800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:19.482956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:20.038: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:20.483422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:21.483501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:22.043: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:22.484384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:23.484487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:24.048: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  Oct 14 13:30:24.048: INFO: Restart count of pod container-probe-7247/liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 is now 2 (40.115734465s elapsed)
  E1014 13:30:24.484603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:25.484818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:26.054: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:26.485108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:27.485578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:28.060: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:28.486563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:29.486796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:30.065: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:30.486903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:31.487016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:32.069: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:32.488988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:33.489067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:34.075: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:34.489854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:35.489969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:36.081: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:36.490702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:37.490786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:38.086: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:38.490873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:39.491856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:40.092: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:40.491968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:41.492092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:42.097: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:42.493105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:43.493221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:44.103: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  Oct 14 13:30:44.103: INFO: Restart count of pod container-probe-7247/liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 is now 3 (1m0.170520743s elapsed)
  E1014 13:30:44.493752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:45.494050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:46.109: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:46.494169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:47.494283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:48.113: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:48.494425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:49.494725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:50.119: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:50.495386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:51.495496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:52.124: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:52.495602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:53.495720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:54.129: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:54.496355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:55.496471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:56.136: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:56.496544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:57.496760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:30:58.141: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:30:58.496882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:30:59.497013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:00.146: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:00.497189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:01.497273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:02.153: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:02.497813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:03.498816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:04.158: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  Oct 14 13:31:04.158: INFO: Restart count of pod container-probe-7247/liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 is now 4 (1m20.225785543s elapsed)
  E1014 13:31:04.498937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:05.499192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:06.164: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:06.500046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:07.500160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:08.170: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:08.501099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:09.501406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:10.175: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:10.501535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:11.501607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:12.180: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:12.502288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:13.502686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:14.186: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:14.503158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:15.503264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:16.192: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:16.504198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:17.504302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:18.198: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:18.504849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:19.505012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:20.203: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:20.506039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:21.506488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:22.209: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:22.507121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:23.507240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:24.214: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:24.507841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:25.507959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:26.220: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:26.508903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:27.509175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:28.226: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:28.509698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:29.509815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:30.231: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:30.509922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:31.510039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:32.237: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:32.510833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:33.511844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:34.242: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:34.512111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:35.512808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:36.248: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:36.513322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:37.513446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:38.254: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:38.513519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:39.513611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:40.259: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:40.514062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:41.514406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:42.264: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:42.514563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:43.514711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:44.270: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:44.515502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:45.515609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:46.275: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:46.516684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:47.516810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:48.279: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:48.517416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:49.517749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:50.285: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:50.518717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:51.519136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:52.290: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:52.521175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:53.521284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:54.296: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:54.521328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:55.521452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:56.301: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:56.521506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:57.521582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:31:58.306: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:31:58.521947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:31:59.522071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:00.311: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:32:00.522703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:01.522812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:02.317: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:32:02.523856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:03.523970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:04.323: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:32:04.524795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:05.524917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:06.328: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:32:06.525756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:07.526023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:08.333: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:32:08.526724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:09.527026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:10.338: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:32:10.528084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:11.528415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:12.344: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  E1014 13:32:12.528915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:13.528959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:14.349: INFO: Get pod liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 in namespace container-probe-7247
  Oct 14 13:32:14.349: INFO: Restart count of pod container-probe-7247/liveness-27ac4ae7-54df-4657-8e31-2b9b86d67619 is now 5 (2m30.417140844s elapsed)
  Oct 14 13:32:14.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:32:14.355
  STEP: Destroying namespace "container-probe-7247" for this suite. @ 10/14/23 13:32:14.371
• [152.515 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 10/14/23 13:32:14.382
  Oct 14 13:32:14.382: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:32:14.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:14.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:14.416
  STEP: starting the proxy server @ 10/14/23 13:32:14.421
  Oct 14 13:32:14.421: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-3668 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/14/23 13:32:14.488
  Oct 14 13:32:14.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3668" for this suite. @ 10/14/23 13:32:14.506
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 10/14/23 13:32:14.515
  Oct 14 13:32:14.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename limitrange @ 10/14/23 13:32:14.516
  E1014 13:32:14.529033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:14.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:14.542
  STEP: Creating LimitRange "e2e-limitrange-p47fv" in namespace "limitrange-9011" @ 10/14/23 13:32:14.547
  STEP: Creating another limitRange in another namespace @ 10/14/23 13:32:14.555
  Oct 14 13:32:14.579: INFO: Namespace "e2e-limitrange-p47fv-1347" created
  Oct 14 13:32:14.580: INFO: Creating LimitRange "e2e-limitrange-p47fv" in namespace "e2e-limitrange-p47fv-1347"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-p47fv" @ 10/14/23 13:32:14.589
  Oct 14 13:32:14.594: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-p47fv" in "limitrange-9011" namespace @ 10/14/23 13:32:14.594
  Oct 14 13:32:14.603: INFO: LimitRange "e2e-limitrange-p47fv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-p47fv" by Collection with labelSelector: "e2e-limitrange-p47fv=patched" @ 10/14/23 13:32:14.603
  STEP: Confirm that the limitRange "e2e-limitrange-p47fv" has been deleted @ 10/14/23 13:32:14.614
  Oct 14 13:32:14.614: INFO: Requesting list of LimitRange to confirm quantity
  Oct 14 13:32:14.619: INFO: Found 0 LimitRange with label "e2e-limitrange-p47fv=patched"
  Oct 14 13:32:14.619: INFO: LimitRange "e2e-limitrange-p47fv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-p47fv" @ 10/14/23 13:32:14.619
  Oct 14 13:32:14.624: INFO: Found 1 limitRange
  Oct 14 13:32:14.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9011" for this suite. @ 10/14/23 13:32:14.629
  STEP: Destroying namespace "e2e-limitrange-p47fv-1347" for this suite. @ 10/14/23 13:32:14.64
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 10/14/23 13:32:14.652
  Oct 14 13:32:14.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:32:14.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:14.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:14.682
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:32:14.687
  E1014 13:32:15.529225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:16.529819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:17.530046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:18.530116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:32:18.722
  Oct 14 13:32:18.727: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-2df5da00-5436-4c2c-8a6d-d8a3a58f9320 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:32:18.751
  Oct 14 13:32:18.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9068" for this suite. @ 10/14/23 13:32:18.78
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 10/14/23 13:32:18.793
  Oct 14 13:32:18.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:32:18.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:18.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:18.823
  STEP: Creating a pod to test downward api env vars @ 10/14/23 13:32:18.828
  E1014 13:32:19.530850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:20.531928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:21.532027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:22.532234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:32:22.865
  Oct 14 13:32:22.871: INFO: Trying to get logs from node ip-172-31-35-21 pod downward-api-31f0eda2-2323-45fd-b322-87c93574b650 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 13:32:22.88
  Oct 14 13:32:22.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4368" for this suite. @ 10/14/23 13:32:22.908
• [4.125 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 10/14/23 13:32:22.919
  Oct 14 13:32:22.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:32:22.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:22.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:22.95
  STEP: Creating configMap with name projected-configmap-test-volume-d511e2c3-c0b3-424d-a85a-d556fa5d17e0 @ 10/14/23 13:32:22.955
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:32:22.961
  E1014 13:32:23.532361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:24.532482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:25.533561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:26.534364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:32:27
  Oct 14 13:32:27.006: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-configmaps-303e761b-0eed-4922-8e5e-149f132432ae container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:32:27.018
  Oct 14 13:32:27.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5113" for this suite. @ 10/14/23 13:32:27.047
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/14/23 13:32:27.064
  Oct 14 13:32:27.064: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 13:32:27.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:27.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:27.105
  Oct 14 13:32:27.113: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: creating the pod @ 10/14/23 13:32:27.114
  STEP: submitting the pod to kubernetes @ 10/14/23 13:32:27.114
  E1014 13:32:27.534944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:28.535055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:29.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5951" for this suite. @ 10/14/23 13:32:29.185
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 10/14/23 13:32:29.197
  Oct 14 13:32:29.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:32:29.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:29.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:29.223
  STEP: Creating configMap with name configmap-test-volume-map-7acd0471-193f-44de-aa1e-98622f970730 @ 10/14/23 13:32:29.227
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:32:29.234
  E1014 13:32:29.535169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:30.535682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:31.536091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:32.535868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:32:33.272
  Oct 14 13:32:33.276: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-configmaps-98417f2d-0e8a-432e-a134-bb48e41ad102 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:32:33.304
  Oct 14 13:32:33.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3683" for this suite. @ 10/14/23 13:32:33.347
• [4.165 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 10/14/23 13:32:33.363
  Oct 14 13:32:33.363: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename disruption @ 10/14/23 13:32:33.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:33.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:33.417
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/14/23 13:32:33.434
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:32:33.451
  E1014 13:32:33.538819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:34.538808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/14/23 13:32:35.466
  STEP: Waiting for all pods to be running @ 10/14/23 13:32:35.466
  Oct 14 13:32:35.471: INFO: pods: 0 < 3
  E1014 13:32:35.538926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:36.538916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/14/23 13:32:37.477
  STEP: Updating the pdb to allow a pod to be evicted @ 10/14/23 13:32:37.491
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:32:37.502
  E1014 13:32:37.539242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:38.539385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/14/23 13:32:39.512
  STEP: Waiting for all pods to be running @ 10/14/23 13:32:39.512
  STEP: Waiting for the pdb to observed all healthy pods @ 10/14/23 13:32:39.516
  E1014 13:32:39.540335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/14/23 13:32:39.555
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:32:39.582
  E1014 13:32:40.540462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:41.541097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/14/23 13:32:41.609
  STEP: locating a running pod @ 10/14/23 13:32:41.615
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/14/23 13:32:41.628
  STEP: Waiting for the pdb to be deleted @ 10/14/23 13:32:41.637
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/14/23 13:32:41.642
  STEP: Waiting for all pods to be running @ 10/14/23 13:32:41.642
  Oct 14 13:32:41.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7094" for this suite. @ 10/14/23 13:32:41.684
• [8.344 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/14/23 13:32:41.708
  Oct 14 13:32:41.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename proxy @ 10/14/23 13:32:41.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:41.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:41.742
  STEP: starting an echo server on multiple ports @ 10/14/23 13:32:41.759
  STEP: creating replication controller proxy-service-fcmv8 in namespace proxy-8166 @ 10/14/23 13:32:41.759
  I1014 13:32:41.780517      19 runners.go:197] Created replication controller with name: proxy-service-fcmv8, namespace: proxy-8166, replica count: 1
  E1014 13:32:42.541659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:32:42.831118      19 runners.go:197] proxy-service-fcmv8 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1014 13:32:43.541758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:32:43.832003      19 runners.go:197] proxy-service-fcmv8 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 13:32:43.837: INFO: setup took 2.090689542s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/14/23 13:32:43.837
  Oct 14 13:32:43.847: INFO: (0) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 9.937325ms)
  Oct 14 13:32:43.848: INFO: (0) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 10.364321ms)
  Oct 14 13:32:43.848: INFO: (0) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 10.532052ms)
  Oct 14 13:32:43.853: INFO: (0) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 15.02837ms)
  Oct 14 13:32:43.853: INFO: (0) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 15.79429ms)
  Oct 14 13:32:43.856: INFO: (0) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 18.24258ms)
  Oct 14 13:32:43.856: INFO: (0) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 18.370762ms)
  Oct 14 13:32:43.856: INFO: (0) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 19.258533ms)
  Oct 14 13:32:43.857: INFO: (0) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 19.834041ms)
  Oct 14 13:32:43.862: INFO: (0) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 24.176956ms)
  Oct 14 13:32:43.862: INFO: (0) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 24.408649ms)
  Oct 14 13:32:43.862: INFO: (0) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 24.617182ms)
  Oct 14 13:32:43.862: INFO: (0) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 24.309477ms)
  Oct 14 13:32:43.862: INFO: (0) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 24.790053ms)
  Oct 14 13:32:43.863: INFO: (0) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 25.093728ms)
  Oct 14 13:32:43.864: INFO: (0) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 26.670137ms)
  Oct 14 13:32:43.871: INFO: (1) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 6.948898ms)
  Oct 14 13:32:43.873: INFO: (1) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 7.538816ms)
  Oct 14 13:32:43.874: INFO: (1) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 9.47944ms)
  Oct 14 13:32:43.875: INFO: (1) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.115358ms)
  Oct 14 13:32:43.877: INFO: (1) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 11.379924ms)
  Oct 14 13:32:43.878: INFO: (1) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 13.201047ms)
  Oct 14 13:32:43.878: INFO: (1) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 13.768474ms)
  Oct 14 13:32:43.878: INFO: (1) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 13.593252ms)
  Oct 14 13:32:43.878: INFO: (1) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 13.372349ms)
  Oct 14 13:32:43.879: INFO: (1) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 14.123099ms)
  Oct 14 13:32:43.879: INFO: (1) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.845175ms)
  Oct 14 13:32:43.879: INFO: (1) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 13.761664ms)
  Oct 14 13:32:43.879: INFO: (1) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 14.406472ms)
  Oct 14 13:32:43.880: INFO: (1) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 15.118761ms)
  Oct 14 13:32:43.880: INFO: (1) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.328273ms)
  Oct 14 13:32:43.881: INFO: (1) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 15.923201ms)
  Oct 14 13:32:43.889: INFO: (2) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 7.375293ms)
  Oct 14 13:32:43.889: INFO: (2) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 7.324603ms)
  Oct 14 13:32:43.892: INFO: (2) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 10.270279ms)
  Oct 14 13:32:43.892: INFO: (2) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.33987ms)
  Oct 14 13:32:43.893: INFO: (2) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 11.593596ms)
  Oct 14 13:32:43.893: INFO: (2) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 11.376984ms)
  Oct 14 13:32:43.893: INFO: (2) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 11.470455ms)
  Oct 14 13:32:43.894: INFO: (2) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 13.041105ms)
  Oct 14 13:32:43.894: INFO: (2) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.390829ms)
  Oct 14 13:32:43.895: INFO: (2) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 12.975274ms)
  Oct 14 13:32:43.895: INFO: (2) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 13.020915ms)
  Oct 14 13:32:43.895: INFO: (2) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 13.336278ms)
  Oct 14 13:32:43.895: INFO: (2) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 13.233808ms)
  Oct 14 13:32:43.895: INFO: (2) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 14.415972ms)
  Oct 14 13:32:43.896: INFO: (2) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 14.630785ms)
  Oct 14 13:32:43.896: INFO: (2) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 15.02419ms)
  Oct 14 13:32:43.909: INFO: (3) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 12.131233ms)
  Oct 14 13:32:43.910: INFO: (3) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 12.987164ms)
  Oct 14 13:32:43.911: INFO: (3) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.557221ms)
  Oct 14 13:32:43.912: INFO: (3) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 14.17638ms)
  Oct 14 13:32:43.912: INFO: (3) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 14.010617ms)
  Oct 14 13:32:43.912: INFO: (3) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 14.811357ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 16.087493ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 16.224695ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 15.82427ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 16.337056ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 15.821161ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 16.309657ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 15.651688ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 16.244036ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 16.649631ms)
  Oct 14 13:32:43.913: INFO: (3) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 16.068903ms)
  Oct 14 13:32:43.923: INFO: (4) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 9.50987ms)
  Oct 14 13:32:43.923: INFO: (4) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 9.623101ms)
  Oct 14 13:32:43.923: INFO: (4) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 9.407638ms)
  Oct 14 13:32:43.926: INFO: (4) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 11.409634ms)
  Oct 14 13:32:43.927: INFO: (4) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 12.152044ms)
  Oct 14 13:32:43.927: INFO: (4) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.88072ms)
  Oct 14 13:32:43.927: INFO: (4) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 12.779262ms)
  Oct 14 13:32:43.927: INFO: (4) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 12.418427ms)
  Oct 14 13:32:43.927: INFO: (4) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 13.239247ms)
  Oct 14 13:32:43.929: INFO: (4) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 14.25133ms)
  Oct 14 13:32:43.929: INFO: (4) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 14.019377ms)
  Oct 14 13:32:43.930: INFO: (4) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 14.721466ms)
  Oct 14 13:32:43.930: INFO: (4) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 15.402345ms)
  Oct 14 13:32:43.930: INFO: (4) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 15.625248ms)
  Oct 14 13:32:43.930: INFO: (4) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 16.101624ms)
  Oct 14 13:32:43.931: INFO: (4) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 16.555079ms)
  Oct 14 13:32:43.939: INFO: (5) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 7.013658ms)
  Oct 14 13:32:43.940: INFO: (5) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 8.006771ms)
  Oct 14 13:32:43.941: INFO: (5) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 9.639932ms)
  Oct 14 13:32:43.942: INFO: (5) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 9.844564ms)
  Oct 14 13:32:43.942: INFO: (5) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 10.847567ms)
  Oct 14 13:32:43.943: INFO: (5) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 11.327433ms)
  Oct 14 13:32:43.944: INFO: (5) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.8679ms)
  Oct 14 13:32:43.945: INFO: (5) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 13.281518ms)
  Oct 14 13:32:43.945: INFO: (5) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.194076ms)
  Oct 14 13:32:43.945: INFO: (5) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 13.49179ms)
  Oct 14 13:32:43.946: INFO: (5) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 13.997897ms)
  Oct 14 13:32:43.946: INFO: (5) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 14.676516ms)
  Oct 14 13:32:43.947: INFO: (5) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 14.902409ms)
  Oct 14 13:32:43.947: INFO: (5) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 14.754456ms)
  Oct 14 13:32:43.947: INFO: (5) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 15.242573ms)
  Oct 14 13:32:43.948: INFO: (5) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 16.052493ms)
  Oct 14 13:32:43.956: INFO: (6) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 7.350643ms)
  Oct 14 13:32:43.957: INFO: (6) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 7.631057ms)
  Oct 14 13:32:43.958: INFO: (6) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 9.124275ms)
  Oct 14 13:32:43.959: INFO: (6) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 10.060418ms)
  Oct 14 13:32:43.960: INFO: (6) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.929908ms)
  Oct 14 13:32:43.961: INFO: (6) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 11.682448ms)
  Oct 14 13:32:43.962: INFO: (6) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 12.724421ms)
  Oct 14 13:32:43.962: INFO: (6) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 13.049155ms)
  Oct 14 13:32:43.962: INFO: (6) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 12.923673ms)
  Oct 14 13:32:43.962: INFO: (6) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 13.624962ms)
  Oct 14 13:32:43.962: INFO: (6) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 13.625072ms)
  Oct 14 13:32:43.963: INFO: (6) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 13.746203ms)
  Oct 14 13:32:43.963: INFO: (6) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 14.590874ms)
  Oct 14 13:32:43.963: INFO: (6) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 14.746106ms)
  Oct 14 13:32:43.964: INFO: (6) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.021759ms)
  Oct 14 13:32:43.964: INFO: (6) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 15.220593ms)
  Oct 14 13:32:43.971: INFO: (7) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 7.046959ms)
  Oct 14 13:32:43.974: INFO: (7) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 8.590558ms)
  Oct 14 13:32:43.974: INFO: (7) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 9.899595ms)
  Oct 14 13:32:43.976: INFO: (7) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 11.293802ms)
  Oct 14 13:32:43.976: INFO: (7) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 11.486905ms)
  Oct 14 13:32:43.976: INFO: (7) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.407624ms)
  Oct 14 13:32:43.977: INFO: (7) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 12.062412ms)
  Oct 14 13:32:43.977: INFO: (7) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 12.176014ms)
  Oct 14 13:32:43.977: INFO: (7) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 12.844853ms)
  Oct 14 13:32:43.978: INFO: (7) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 12.883813ms)
  Oct 14 13:32:43.978: INFO: (7) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 12.974044ms)
  Oct 14 13:32:43.979: INFO: (7) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.846075ms)
  Oct 14 13:32:43.979: INFO: (7) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 14.726996ms)
  Oct 14 13:32:43.981: INFO: (7) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 16.268056ms)
  Oct 14 13:32:43.982: INFO: (7) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 16.554479ms)
  Oct 14 13:32:43.982: INFO: (7) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 16.866453ms)
  Oct 14 13:32:43.990: INFO: (8) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 7.794719ms)
  Oct 14 13:32:43.991: INFO: (8) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 9.269567ms)
  Oct 14 13:32:43.992: INFO: (8) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 10.082227ms)
  Oct 14 13:32:43.993: INFO: (8) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 10.594434ms)
  Oct 14 13:32:43.993: INFO: (8) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 11.164181ms)
  Oct 14 13:32:43.994: INFO: (8) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.313653ms)
  Oct 14 13:32:43.994: INFO: (8) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 11.81845ms)
  Oct 14 13:32:43.996: INFO: (8) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 13.565841ms)
  Oct 14 13:32:43.997: INFO: (8) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 14.447123ms)
  Oct 14 13:32:43.997: INFO: (8) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 14.809348ms)
  Oct 14 13:32:43.997: INFO: (8) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 14.644155ms)
  Oct 14 13:32:43.997: INFO: (8) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 14.580304ms)
  Oct 14 13:32:43.997: INFO: (8) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 14.756347ms)
  Oct 14 13:32:43.998: INFO: (8) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 15.290103ms)
  Oct 14 13:32:43.998: INFO: (8) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 15.386175ms)
  Oct 14 13:32:43.998: INFO: (8) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.872141ms)
  Oct 14 13:32:44.006: INFO: (9) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 6.789695ms)
  Oct 14 13:32:44.007: INFO: (9) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 7.801719ms)
  Oct 14 13:32:44.008: INFO: (9) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 8.71039ms)
  Oct 14 13:32:44.011: INFO: (9) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.998902ms)
  Oct 14 13:32:44.012: INFO: (9) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 12.372786ms)
  Oct 14 13:32:44.012: INFO: (9) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 12.980924ms)
  Oct 14 13:32:44.013: INFO: (9) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 13.338209ms)
  Oct 14 13:32:44.013: INFO: (9) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 13.547211ms)
  Oct 14 13:32:44.014: INFO: (9) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 15.153571ms)
  Oct 14 13:32:44.014: INFO: (9) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 14.847267ms)
  Oct 14 13:32:44.015: INFO: (9) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 15.786759ms)
  Oct 14 13:32:44.015: INFO: (9) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.78281ms)
  Oct 14 13:32:44.016: INFO: (9) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 16.728312ms)
  Oct 14 13:32:44.016: INFO: (9) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 16.294796ms)
  Oct 14 13:32:44.016: INFO: (9) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 16.400947ms)
  Oct 14 13:32:44.016: INFO: (9) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 17.051225ms)
  Oct 14 13:32:44.024: INFO: (10) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 7.020229ms)
  Oct 14 13:32:44.026: INFO: (10) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 9.195506ms)
  Oct 14 13:32:44.026: INFO: (10) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 9.042814ms)
  Oct 14 13:32:44.027: INFO: (10) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 9.911375ms)
  Oct 14 13:32:44.027: INFO: (10) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.009916ms)
  Oct 14 13:32:44.028: INFO: (10) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.397131ms)
  Oct 14 13:32:44.029: INFO: (10) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 11.625657ms)
  Oct 14 13:32:44.029: INFO: (10) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 12.042603ms)
  Oct 14 13:32:44.030: INFO: (10) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 12.64015ms)
  Oct 14 13:32:44.030: INFO: (10) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 12.549799ms)
  Oct 14 13:32:44.030: INFO: (10) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 13.603122ms)
  Oct 14 13:32:44.030: INFO: (10) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.113086ms)
  Oct 14 13:32:44.031: INFO: (10) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 13.862935ms)
  Oct 14 13:32:44.031: INFO: (10) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 14.493433ms)
  Oct 14 13:32:44.032: INFO: (10) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 14.30167ms)
  Oct 14 13:32:44.032: INFO: (10) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 14.737916ms)
  Oct 14 13:32:44.040: INFO: (11) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 8.242584ms)
  Oct 14 13:32:44.042: INFO: (11) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 9.821964ms)
  Oct 14 13:32:44.042: INFO: (11) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 9.54223ms)
  Oct 14 13:32:44.044: INFO: (11) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.148471ms)
  Oct 14 13:32:44.044: INFO: (11) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.414265ms)
  Oct 14 13:32:44.044: INFO: (11) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 11.745478ms)
  Oct 14 13:32:44.045: INFO: (11) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 12.470297ms)
  Oct 14 13:32:44.046: INFO: (11) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 13.434329ms)
  Oct 14 13:32:44.046: INFO: (11) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 13.316068ms)
  Oct 14 13:32:44.048: INFO: (11) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 15.07212ms)
  Oct 14 13:32:44.048: INFO: (11) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 15.916711ms)
  Oct 14 13:32:44.048: INFO: (11) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 15.605607ms)
  Oct 14 13:32:44.049: INFO: (11) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.81763ms)
  Oct 14 13:32:44.049: INFO: (11) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 16.317227ms)
  Oct 14 13:32:44.049: INFO: (11) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 16.927784ms)
  Oct 14 13:32:44.050: INFO: (11) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 17.103816ms)
  Oct 14 13:32:44.059: INFO: (12) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 8.445607ms)
  Oct 14 13:32:44.060: INFO: (12) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 9.51032ms)
  Oct 14 13:32:44.060: INFO: (12) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 9.790874ms)
  Oct 14 13:32:44.061: INFO: (12) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 10.688815ms)
  Oct 14 13:32:44.062: INFO: (12) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 11.324483ms)
  Oct 14 13:32:44.063: INFO: (12) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 12.434427ms)
  Oct 14 13:32:44.063: INFO: (12) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 12.939624ms)
  Oct 14 13:32:44.065: INFO: (12) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 14.767197ms)
  Oct 14 13:32:44.065: INFO: (12) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 15.229293ms)
  Oct 14 13:32:44.065: INFO: (12) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 14.744856ms)
  Oct 14 13:32:44.065: INFO: (12) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 14.911389ms)
  Oct 14 13:32:44.065: INFO: (12) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 14.678105ms)
  Oct 14 13:32:44.066: INFO: (12) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 15.999462ms)
  Oct 14 13:32:44.066: INFO: (12) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 15.896341ms)
  Oct 14 13:32:44.066: INFO: (12) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 16.166894ms)
  Oct 14 13:32:44.067: INFO: (12) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 16.432777ms)
  Oct 14 13:32:44.081: INFO: (13) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 9.46092ms)
  Oct 14 13:32:44.082: INFO: (13) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 9.571021ms)
  Oct 14 13:32:44.083: INFO: (13) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 10.985979ms)
  Oct 14 13:32:44.084: INFO: (13) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 11.357574ms)
  Oct 14 13:32:44.084: INFO: (13) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 11.943831ms)
  Oct 14 13:32:44.084: INFO: (13) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 11.88263ms)
  Oct 14 13:32:44.084: INFO: (13) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 12.743811ms)
  Oct 14 13:32:44.085: INFO: (13) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 12.401127ms)
  Oct 14 13:32:44.085: INFO: (13) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.516021ms)
  Oct 14 13:32:44.085: INFO: (13) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 13.852535ms)
  Oct 14 13:32:44.085: INFO: (13) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 13.384189ms)
  Oct 14 13:32:44.086: INFO: (13) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 13.406409ms)
  Oct 14 13:32:44.086: INFO: (13) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 13.582612ms)
  Oct 14 13:32:44.086: INFO: (13) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 14.585984ms)
  Oct 14 13:32:44.087: INFO: (13) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 15.00448ms)
  Oct 14 13:32:44.087: INFO: (13) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 15.170871ms)
  Oct 14 13:32:44.095: INFO: (14) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 7.555005ms)
  Oct 14 13:32:44.097: INFO: (14) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 8.844132ms)
  Oct 14 13:32:44.098: INFO: (14) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 10.070607ms)
  Oct 14 13:32:44.099: INFO: (14) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 10.637385ms)
  Oct 14 13:32:44.100: INFO: (14) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.667498ms)
  Oct 14 13:32:44.100: INFO: (14) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 12.062372ms)
  Oct 14 13:32:44.100: INFO: (14) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 11.821949ms)
  Oct 14 13:32:44.100: INFO: (14) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 12.356616ms)
  Oct 14 13:32:44.102: INFO: (14) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 14.124498ms)
  Oct 14 13:32:44.103: INFO: (14) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 14.676936ms)
  Oct 14 13:32:44.103: INFO: (14) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 14.812097ms)
  Oct 14 13:32:44.103: INFO: (14) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 14.978429ms)
  Oct 14 13:32:44.104: INFO: (14) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 15.627857ms)
  Oct 14 13:32:44.104: INFO: (14) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 15.626858ms)
  Oct 14 13:32:44.104: INFO: (14) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.572767ms)
  Oct 14 13:32:44.104: INFO: (14) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 15.963962ms)
  Oct 14 13:32:44.114: INFO: (15) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 8.549108ms)
  Oct 14 13:32:44.114: INFO: (15) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 9.072705ms)
  Oct 14 13:32:44.116: INFO: (15) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 9.593002ms)
  Oct 14 13:32:44.116: INFO: (15) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 10.357621ms)
  Oct 14 13:32:44.117: INFO: (15) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.578793ms)
  Oct 14 13:32:44.117: INFO: (15) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 11.00332ms)
  Oct 14 13:32:44.118: INFO: (15) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 11.652737ms)
  Oct 14 13:32:44.118: INFO: (15) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 11.511555ms)
  Oct 14 13:32:44.118: INFO: (15) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 12.794452ms)
  Oct 14 13:32:44.118: INFO: (15) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 12.510698ms)
  Oct 14 13:32:44.119: INFO: (15) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 13.647242ms)
  Oct 14 13:32:44.120: INFO: (15) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 13.394179ms)
  Oct 14 13:32:44.120: INFO: (15) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 13.611192ms)
  Oct 14 13:32:44.120: INFO: (15) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 14.833748ms)
  Oct 14 13:32:44.120: INFO: (15) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 14.584274ms)
  Oct 14 13:32:44.121: INFO: (15) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 14.396272ms)
  Oct 14 13:32:44.127: INFO: (16) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 6.051727ms)
  Oct 14 13:32:44.132: INFO: (16) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.588264ms)
  Oct 14 13:32:44.132: INFO: (16) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 10.933929ms)
  Oct 14 13:32:44.133: INFO: (16) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 11.86158ms)
  Oct 14 13:32:44.133: INFO: (16) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 12.307146ms)
  Oct 14 13:32:44.134: INFO: (16) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 12.867763ms)
  Oct 14 13:32:44.134: INFO: (16) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 13.084316ms)
  Oct 14 13:32:44.134: INFO: (16) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 13.656413ms)
  Oct 14 13:32:44.135: INFO: (16) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 13.995197ms)
  Oct 14 13:32:44.135: INFO: (16) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 13.780665ms)
  Oct 14 13:32:44.136: INFO: (16) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 15.02442ms)
  Oct 14 13:32:44.136: INFO: (16) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 14.857078ms)
  Oct 14 13:32:44.137: INFO: (16) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 15.620957ms)
  Oct 14 13:32:44.137: INFO: (16) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 15.583237ms)
  Oct 14 13:32:44.137: INFO: (16) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 15.928661ms)
  Oct 14 13:32:44.138: INFO: (16) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 16.580399ms)
  Oct 14 13:32:44.145: INFO: (17) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 6.762085ms)
  Oct 14 13:32:44.148: INFO: (17) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 10.245759ms)
  Oct 14 13:32:44.150: INFO: (17) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 11.09648ms)
  Oct 14 13:32:44.150: INFO: (17) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 11.86157ms)
  Oct 14 13:32:44.151: INFO: (17) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 12.219895ms)
  Oct 14 13:32:44.151: INFO: (17) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 12.65323ms)
  Oct 14 13:32:44.153: INFO: (17) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 13.861555ms)
  Oct 14 13:32:44.153: INFO: (17) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 14.557014ms)
  Oct 14 13:32:44.153: INFO: (17) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 14.631915ms)
  Oct 14 13:32:44.153: INFO: (17) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 14.612965ms)
  Oct 14 13:32:44.153: INFO: (17) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 14.591215ms)
  Oct 14 13:32:44.154: INFO: (17) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 15.05116ms)
  Oct 14 13:32:44.154: INFO: (17) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 15.7765ms)
  Oct 14 13:32:44.154: INFO: (17) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 15.530396ms)
  Oct 14 13:32:44.154: INFO: (17) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.573247ms)
  Oct 14 13:32:44.155: INFO: (17) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 16.401118ms)
  Oct 14 13:32:44.162: INFO: (18) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 7.236781ms)
  Oct 14 13:32:44.164: INFO: (18) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 8.203284ms)
  Oct 14 13:32:44.165: INFO: (18) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 9.53573ms)
  Oct 14 13:32:44.165: INFO: (18) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 10.042117ms)
  Oct 14 13:32:44.165: INFO: (18) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 9.649902ms)
  Oct 14 13:32:44.165: INFO: (18) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 9.505151ms)
  Oct 14 13:32:44.167: INFO: (18) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 11.101911ms)
  Oct 14 13:32:44.167: INFO: (18) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 11.88538ms)
  Oct 14 13:32:44.168: INFO: (18) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 11.85391ms)
  Oct 14 13:32:44.168: INFO: (18) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 12.160894ms)
  Oct 14 13:32:44.168: INFO: (18) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 13.004695ms)
  Oct 14 13:32:44.169: INFO: (18) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 13.356979ms)
  Oct 14 13:32:44.170: INFO: (18) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 14.366162ms)
  Oct 14 13:32:44.171: INFO: (18) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 15.216412ms)
  Oct 14 13:32:44.171: INFO: (18) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 14.982289ms)
  Oct 14 13:32:44.171: INFO: (18) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.725199ms)
  Oct 14 13:32:44.179: INFO: (19) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">test<... (200; 7.850139ms)
  Oct 14 13:32:44.179: INFO: (19) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:1080/proxy/rewriteme">... (200; 7.614016ms)
  Oct 14 13:32:44.180: INFO: (19) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:462/proxy/: tls qux (200; 8.527948ms)
  Oct 14 13:32:44.181: INFO: (19) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 9.382798ms)
  Oct 14 13:32:44.182: INFO: (19) /api/v1/namespaces/proxy-8166/pods/http:proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 10.582864ms)
  Oct 14 13:32:44.185: INFO: (19) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:162/proxy/: bar (200; 13.334818ms)
  Oct 14 13:32:44.186: INFO: (19) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr:160/proxy/: foo (200; 13.44183ms)
  Oct 14 13:32:44.186: INFO: (19) /api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/proxy-service-fcmv8-bgdnr/proxy/rewriteme">test</a> (200; 13.48087ms)
  Oct 14 13:32:44.186: INFO: (19) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/: <a href="/api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:443/proxy/tlsrewritem... (200; 14.23039ms)
  Oct 14 13:32:44.188: INFO: (19) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname2/proxy/: bar (200; 15.551247ms)
  Oct 14 13:32:44.188: INFO: (19) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname2/proxy/: bar (200; 15.89713ms)
  Oct 14 13:32:44.188: INFO: (19) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname2/proxy/: tls qux (200; 15.976202ms)
  Oct 14 13:32:44.189: INFO: (19) /api/v1/namespaces/proxy-8166/services/http:proxy-service-fcmv8:portname1/proxy/: foo (200; 17.45035ms)
  Oct 14 13:32:44.189: INFO: (19) /api/v1/namespaces/proxy-8166/services/proxy-service-fcmv8:portname1/proxy/: foo (200; 17.335719ms)
  Oct 14 13:32:44.190: INFO: (19) /api/v1/namespaces/proxy-8166/services/https:proxy-service-fcmv8:tlsportname1/proxy/: tls baz (200; 18.393422ms)
  Oct 14 13:32:44.190: INFO: (19) /api/v1/namespaces/proxy-8166/pods/https:proxy-service-fcmv8-bgdnr:460/proxy/: tls baz (200; 18.520684ms)
  Oct 14 13:32:44.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-fcmv8 in namespace proxy-8166, will wait for the garbage collector to delete the pods @ 10/14/23 13:32:44.197
  Oct 14 13:32:44.261: INFO: Deleting ReplicationController proxy-service-fcmv8 took: 8.933113ms
  Oct 14 13:32:44.362: INFO: Terminating ReplicationController proxy-service-fcmv8 pods took: 101.110638ms
  E1014 13:32:44.542499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:45.543472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:46.544384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-8166" for this suite. @ 10/14/23 13:32:46.764
• [5.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 10/14/23 13:32:46.775
  Oct 14 13:32:46.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename job @ 10/14/23 13:32:46.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:46.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:46.812
  STEP: Creating a job @ 10/14/23 13:32:46.817
  STEP: Ensuring active pods == parallelism @ 10/14/23 13:32:46.836
  E1014 13:32:47.544512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:48.544636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 10/14/23 13:32:48.841
  Oct 14 13:32:49.364: INFO: Successfully updated pod "adopt-release-8xvq9"
  STEP: Checking that the Job readopts the Pod @ 10/14/23 13:32:49.364
  E1014 13:32:49.544757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:50.544871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 10/14/23 13:32:51.374
  E1014 13:32:51.544960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:51.891: INFO: Successfully updated pod "adopt-release-8xvq9"
  STEP: Checking that the Job releases the Pod @ 10/14/23 13:32:51.892
  E1014 13:32:52.545994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:53.546389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:32:53.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3811" for this suite. @ 10/14/23 13:32:53.908
• [7.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/14/23 13:32:53.921
  Oct 14 13:32:53.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename watch @ 10/14/23 13:32:53.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:53.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:53.95
  STEP: creating a watch on configmaps @ 10/14/23 13:32:53.955
  STEP: creating a new configmap @ 10/14/23 13:32:53.957
  STEP: modifying the configmap once @ 10/14/23 13:32:53.963
  STEP: closing the watch once it receives two notifications @ 10/14/23 13:32:53.979
  Oct 14 13:32:53.979: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6207  0f3cc2d4-e8f2-435f-8136-e96199d4b309 31672 0 2023-10-14 13:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-14 13:32:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:32:53.980: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6207  0f3cc2d4-e8f2-435f-8136-e96199d4b309 31673 0 2023-10-14 13:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-14 13:32:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/14/23 13:32:53.98
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/14/23 13:32:53.999
  STEP: deleting the configmap @ 10/14/23 13:32:54.001
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/14/23 13:32:54.016
  Oct 14 13:32:54.016: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6207  0f3cc2d4-e8f2-435f-8136-e96199d4b309 31674 0 2023-10-14 13:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-14 13:32:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:32:54.016: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6207  0f3cc2d4-e8f2-435f-8136-e96199d4b309 31675 0 2023-10-14 13:32:53 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-14 13:32:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:32:54.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6207" for this suite. @ 10/14/23 13:32:54.025
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 10/14/23 13:32:54.041
  Oct 14 13:32:54.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 13:32:54.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:54.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:54.081
  STEP: Creating a pod to test substitution in volume subpath @ 10/14/23 13:32:54.096
  E1014 13:32:54.547342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:55.547528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:56.549707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:57.549796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:32:58.125
  Oct 14 13:32:58.130: INFO: Trying to get logs from node ip-172-31-80-101 pod var-expansion-b3be83d3-df6f-4b85-9c97-056634af90b6 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 13:32:58.141
  Oct 14 13:32:58.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3318" for this suite. @ 10/14/23 13:32:58.164
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 10/14/23 13:32:58.174
  Oct 14 13:32:58.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:32:58.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:32:58.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:32:58.204
  STEP: Discovering how many secrets are in namespace by default @ 10/14/23 13:32:58.209
  E1014 13:32:58.549907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:32:59.550063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:00.550988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:01.551502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:02.551873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/14/23 13:33:03.214
  E1014 13:33:03.552062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:04.552777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:05.552878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:06.553210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:07.553380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/23 13:33:08.221
  STEP: Ensuring resource quota status is calculated @ 10/14/23 13:33:08.228
  E1014 13:33:08.554193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:09.554304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 10/14/23 13:33:10.234
  STEP: Ensuring resource quota status captures secret creation @ 10/14/23 13:33:10.252
  E1014 13:33:10.554406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:11.554784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 10/14/23 13:33:12.259
  STEP: Ensuring resource quota status released usage @ 10/14/23 13:33:12.267
  E1014 13:33:12.555527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:13.555949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:14.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5368" for this suite. @ 10/14/23 13:33:14.288
• [16.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 10/14/23 13:33:14.303
  Oct 14 13:33:14.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:33:14.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:33:14.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:33:14.348
  STEP: Creating configMap with name configmap-test-volume-66b5c158-5626-4619-9680-cc7d956278c0 @ 10/14/23 13:33:14.354
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:33:14.363
  E1014 13:33:14.556793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:15.557062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:16.558159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:17.558267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:33:18.394
  Oct 14 13:33:18.399: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-configmaps-da26dbb1-a095-4219-8a48-4b2749a65833 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:33:18.408
  Oct 14 13:33:18.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6281" for this suite. @ 10/14/23 13:33:18.442
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/14/23 13:33:18.458
  Oct 14 13:33:18.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename certificates @ 10/14/23 13:33:18.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:33:18.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:33:18.504
  E1014 13:33:18.558418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 10/14/23 13:33:19.123
  STEP: getting /apis/certificates.k8s.io @ 10/14/23 13:33:19.134
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/14/23 13:33:19.137
  STEP: creating @ 10/14/23 13:33:19.14
  STEP: getting @ 10/14/23 13:33:19.176
  STEP: listing @ 10/14/23 13:33:19.185
  STEP: watching @ 10/14/23 13:33:19.19
  Oct 14 13:33:19.190: INFO: starting watch
  STEP: patching @ 10/14/23 13:33:19.193
  STEP: updating @ 10/14/23 13:33:19.208
  Oct 14 13:33:19.221: INFO: waiting for watch events with expected annotations
  Oct 14 13:33:19.221: INFO: saw patched and updated annotations
  STEP: getting /approval @ 10/14/23 13:33:19.221
  STEP: patching /approval @ 10/14/23 13:33:19.229
  STEP: updating /approval @ 10/14/23 13:33:19.243
  STEP: getting /status @ 10/14/23 13:33:19.255
  STEP: patching /status @ 10/14/23 13:33:19.263
  STEP: updating /status @ 10/14/23 13:33:19.277
  STEP: deleting @ 10/14/23 13:33:19.294
  STEP: deleting a collection @ 10/14/23 13:33:19.329
  Oct 14 13:33:19.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3944" for this suite. @ 10/14/23 13:33:19.381
• [0.939 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 10/14/23 13:33:19.398
  Oct 14 13:33:19.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl-logs @ 10/14/23 13:33:19.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:33:19.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:33:19.445
  STEP: creating an pod @ 10/14/23 13:33:19.456
  Oct 14 13:33:19.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  E1014 13:33:19.559002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:19.593: INFO: stderr: ""
  Oct 14 13:33:19.593: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/14/23 13:33:19.594
  Oct 14 13:33:19.594: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1014 13:33:20.559398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:21.559830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:21.609: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/14/23 13:33:21.61
  Oct 14 13:33:21.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 logs logs-generator logs-generator'
  Oct 14 13:33:21.729: INFO: stderr: ""
  Oct 14 13:33:21.729: INFO: stdout: "I1014 13:33:20.489100       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/2r7v 494\nI1014 13:33:20.689427       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/jmjw 492\nI1014 13:33:20.889802       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/867 399\nI1014 13:33:21.089141       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/flvz 361\nI1014 13:33:21.289462       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/kzp9 210\nI1014 13:33:21.489947       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/cgv9 576\nI1014 13:33:21.689116       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/8s2r 443\n"
  STEP: limiting log lines @ 10/14/23 13:33:21.729
  Oct 14 13:33:21.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 logs logs-generator logs-generator --tail=1'
  Oct 14 13:33:21.838: INFO: stderr: ""
  Oct 14 13:33:21.839: INFO: stdout: "I1014 13:33:21.689116       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/8s2r 443\n"
  Oct 14 13:33:21.839: INFO: got output "I1014 13:33:21.689116       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/8s2r 443\n"
  STEP: limiting log bytes @ 10/14/23 13:33:21.839
  Oct 14 13:33:21.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 logs logs-generator logs-generator --limit-bytes=1'
  Oct 14 13:33:21.943: INFO: stderr: ""
  Oct 14 13:33:21.943: INFO: stdout: "I"
  Oct 14 13:33:21.943: INFO: got output "I"
  STEP: exposing timestamps @ 10/14/23 13:33:21.943
  Oct 14 13:33:21.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 logs logs-generator logs-generator --tail=1 --timestamps'
  Oct 14 13:33:22.050: INFO: stderr: ""
  Oct 14 13:33:22.050: INFO: stdout: "2023-10-14T13:33:21.889856459Z I1014 13:33:21.889741       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/x4qp 220\n"
  Oct 14 13:33:22.050: INFO: got output "2023-10-14T13:33:21.889856459Z I1014 13:33:21.889741       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/x4qp 220\n"
  STEP: restricting to a time range @ 10/14/23 13:33:22.05
  E1014 13:33:22.560531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:23.560682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:24.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 logs logs-generator logs-generator --since=1s'
  E1014 13:33:24.561393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:24.689: INFO: stderr: ""
  Oct 14 13:33:24.689: INFO: stdout: "I1014 13:33:23.689780       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/ln7s 582\nI1014 13:33:23.890098       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/rgh5 495\nI1014 13:33:24.089463       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/hbgs 228\nI1014 13:33:24.289800       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/98d 524\nI1014 13:33:24.490003       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/wx5q 455\n"
  Oct 14 13:33:24.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 logs logs-generator logs-generator --since=24h'
  Oct 14 13:33:24.809: INFO: stderr: ""
  Oct 14 13:33:24.809: INFO: stdout: "I1014 13:33:20.489100       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/2r7v 494\nI1014 13:33:20.689427       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/jmjw 492\nI1014 13:33:20.889802       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/867 399\nI1014 13:33:21.089141       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/flvz 361\nI1014 13:33:21.289462       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/kzp9 210\nI1014 13:33:21.489947       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/cgv9 576\nI1014 13:33:21.689116       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/8s2r 443\nI1014 13:33:21.889741       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/x4qp 220\nI1014 13:33:22.089154       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/tb2t 450\nI1014 13:33:22.289717       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/vr5q 281\nI1014 13:33:22.490032       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/jpf 400\nI1014 13:33:22.689165       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/w62v 354\nI1014 13:33:22.889504       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/j8q 536\nI1014 13:33:23.089818       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/cg58 539\nI1014 13:33:23.290073       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/86w 221\nI1014 13:33:23.489435       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/pg8 313\nI1014 13:33:23.689780       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/ln7s 582\nI1014 13:33:23.890098       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/rgh5 495\nI1014 13:33:24.089463       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/hbgs 228\nI1014 13:33:24.289800       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/98d 524\nI1014 13:33:24.490003       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/wx5q 455\nI1014 13:33:24.689470       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/xzjc 399\n"
  Oct 14 13:33:24.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-logs-2928 delete pod logs-generator'
  E1014 13:33:25.561535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:25.779: INFO: stderr: ""
  Oct 14 13:33:25.779: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Oct 14 13:33:25.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2928" for this suite. @ 10/14/23 13:33:25.786
• [6.400 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 10/14/23 13:33:25.799
  Oct 14 13:33:25.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename field-validation @ 10/14/23 13:33:25.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:33:25.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:33:25.836
  Oct 14 13:33:25.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:33:26.562279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:27.562543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1014 13:33:28.554788      19 warnings.go:70] unknown field "alpha"
  W1014 13:33:28.554826      19 warnings.go:70] unknown field "beta"
  W1014 13:33:28.554835      19 warnings.go:70] unknown field "delta"
  W1014 13:33:28.554844      19 warnings.go:70] unknown field "epsilon"
  W1014 13:33:28.554852      19 warnings.go:70] unknown field "gamma"
  E1014 13:33:28.563061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:29.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1341" for this suite. @ 10/14/23 13:33:29.132
• [3.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/14/23 13:33:29.144
  Oct 14 13:33:29.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename daemonsets @ 10/14/23 13:33:29.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:33:29.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:33:29.199
  Oct 14 13:33:29.245: INFO: Create a RollingUpdate DaemonSet
  Oct 14 13:33:29.269: INFO: Check that daemon pods launch on every node of the cluster
  Oct 14 13:33:29.289: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:29.289: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:29.312: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:33:29.312: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:33:29.563171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:30.320: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:30.320: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:30.326: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:33:30.326: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:33:30.564212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:31.321: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:31.321: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:31.337: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 13:33:31.337: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Oct 14 13:33:31.337: INFO: Update the DaemonSet to trigger a rollout
  Oct 14 13:33:31.354: INFO: Updating DaemonSet daemon-set
  E1014 13:33:31.565027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:32.380: INFO: Roll back the DaemonSet before rollout is complete
  Oct 14 13:33:32.401: INFO: Updating DaemonSet daemon-set
  Oct 14 13:33:32.401: INFO: Make sure DaemonSet rollback is complete
  Oct 14 13:33:32.408: INFO: Wrong image for pod: daemon-set-wn42s. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Oct 14 13:33:32.408: INFO: Pod daemon-set-wn42s is not available
  Oct 14 13:33:32.420: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:32.420: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 13:33:32.565135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:33.433: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:33.433: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 13:33:33.565293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:34.440: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:34.440: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1014 13:33:34.566358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:35.428: INFO: Pod daemon-set-drznz is not available
  Oct 14 13:33:35.436: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:33:35.436: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/23 13:33:35.45
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9778, will wait for the garbage collector to delete the pods @ 10/14/23 13:33:35.451
  Oct 14 13:33:35.526: INFO: Deleting DaemonSet.extensions daemon-set took: 19.77853ms
  E1014 13:33:35.566907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:35.627: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.934606ms
  E1014 13:33:36.567886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:37.569033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:33:37.632: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:33:37.632: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 14 13:33:37.636: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32132"},"items":null}

  Oct 14 13:33:37.641: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32132"},"items":null}

  Oct 14 13:33:37.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9778" for this suite. @ 10/14/23 13:33:37.666
• [8.531 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 10/14/23 13:33:37.676
  Oct 14 13:33:37.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/23 13:33:37.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:33:37.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:33:37.706
  Oct 14 13:33:37.741: INFO: created pod pod-service-account-defaultsa
  Oct 14 13:33:37.741: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Oct 14 13:33:37.749: INFO: created pod pod-service-account-mountsa
  Oct 14 13:33:37.749: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Oct 14 13:33:37.766: INFO: created pod pod-service-account-nomountsa
  Oct 14 13:33:37.766: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Oct 14 13:33:37.779: INFO: created pod pod-service-account-defaultsa-mountspec
  Oct 14 13:33:37.779: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Oct 14 13:33:37.791: INFO: created pod pod-service-account-mountsa-mountspec
  Oct 14 13:33:37.791: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Oct 14 13:33:37.804: INFO: created pod pod-service-account-nomountsa-mountspec
  Oct 14 13:33:37.804: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Oct 14 13:33:37.817: INFO: created pod pod-service-account-defaultsa-nomountspec
  Oct 14 13:33:37.817: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Oct 14 13:33:37.827: INFO: created pod pod-service-account-mountsa-nomountspec
  Oct 14 13:33:37.827: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Oct 14 13:33:37.847: INFO: created pod pod-service-account-nomountsa-nomountspec
  Oct 14 13:33:37.848: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Oct 14 13:33:37.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6257" for this suite. @ 10/14/23 13:33:37.87
• [0.210 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 10/14/23 13:33:37.887
  Oct 14 13:33:37.887: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/23 13:33:37.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:33:37.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:33:37.925
  Oct 14 13:33:37.954: INFO: created pod
  E1014 13:33:38.569173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:39.570249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:40.570801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:41.571587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:33:41.977
  E1014 13:33:42.571709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:43.571869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:44.571972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:45.572704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:46.572746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:47.572786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:48.572927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:49.573382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:50.573492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:51.573815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:52.573924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:53.574000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:54.574122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:55.575230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:56.575906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:57.576663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:58.577115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:33:59.577533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:00.577660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:01.577771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:02.577961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:03.578105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:04.578510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:05.578793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:06.579351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:07.579451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:08.580032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:09.580243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:10.580297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:11.580401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:34:11.977: INFO: polling logs
  Oct 14 13:34:12.004: INFO: Pod logs: 
  I1014 13:33:38.985601       1 log.go:194] OK: Got token
  I1014 13:33:38.985813       1 log.go:194] validating with in-cluster discovery
  I1014 13:33:38.986245       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1014 13:33:38.986361       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1563:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048330), NotBefore:(*jwt.NumericDate)(0xc000048418), IssuedAt:(*jwt.NumericDate)(0xc000048340), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1563", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b3db9149-5b64-4df8-aa3d-cb519bef1021"}}}
  I1014 13:33:38.998997       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1014 13:33:39.009436       1 log.go:194] OK: Validated signature on JWT
  I1014 13:33:39.009723       1 log.go:194] OK: Got valid claims from token!
  I1014 13:33:39.009814       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1563:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000139408), NotBefore:(*jwt.NumericDate)(0xc000139440), IssuedAt:(*jwt.NumericDate)(0xc000139420), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1563", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b3db9149-5b64-4df8-aa3d-cb519bef1021"}}}

  Oct 14 13:34:12.006: INFO: completed pod
  Oct 14 13:34:12.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1563" for this suite. @ 10/14/23 13:34:12.021
• [34.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/14/23 13:34:12.036
  Oct 14 13:34:12.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 13:34:12.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:34:12.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:34:12.07
  STEP: Creating secret with name secret-test-d660c4ae-e1a2-4239-a05a-11f7283c8bb7 @ 10/14/23 13:34:12.076
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:34:12.083
  E1014 13:34:12.581463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:13.581730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:14.582397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:15.582581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:34:16.116
  Oct 14 13:34:16.120: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-5996ec65-7f34-4b6a-97e5-a5013de98a0f container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:34:16.153
  Oct 14 13:34:16.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3718" for this suite. @ 10/14/23 13:34:16.202
• [4.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 10/14/23 13:34:16.226
  Oct 14 13:34:16.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:34:16.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:34:16.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:34:16.264
  STEP: creating service in namespace services-8548 @ 10/14/23 13:34:16.279
  STEP: creating service affinity-clusterip in namespace services-8548 @ 10/14/23 13:34:16.279
  STEP: creating replication controller affinity-clusterip in namespace services-8548 @ 10/14/23 13:34:16.292
  I1014 13:34:16.305507      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8548, replica count: 3
  E1014 13:34:16.583307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:17.583367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:18.583627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:34:19.356778      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 13:34:19.367: INFO: Creating new exec pod
  E1014 13:34:19.583901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:20.584050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:21.584607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:34:22.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8548 exec execpod-affinitysw22w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E1014 13:34:22.585340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:34:22.596: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Oct 14 13:34:22.596: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:34:22.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8548 exec execpod-affinitysw22w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.50 80'
  Oct 14 13:34:22.816: INFO: stderr: "+ nc -v -t -w 2 10.152.183.50 80\nConnection to 10.152.183.50 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 14 13:34:22.816: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:34:22.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-8548 exec execpod-affinitysw22w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.50:80/ ; done'
  Oct 14 13:34:23.123: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n"
  Oct 14 13:34:23.123: INFO: stdout: "\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn\naffinity-clusterip-dnlfn"
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Received response from host: affinity-clusterip-dnlfn
  Oct 14 13:34:23.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:34:23.129: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8548, will wait for the garbage collector to delete the pods @ 10/14/23 13:34:23.141
  Oct 14 13:34:23.207: INFO: Deleting ReplicationController affinity-clusterip took: 10.676324ms
  Oct 14 13:34:23.308: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.884698ms
  E1014 13:34:23.585509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:24.586420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:25.587871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:26.588512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8548" for this suite. @ 10/14/23 13:34:26.736
• [10.528 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 10/14/23 13:34:26.755
  Oct 14 13:34:26.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:34:26.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:34:26.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:34:26.786
  STEP: Creating the pod @ 10/14/23 13:34:26.792
  E1014 13:34:27.591000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:28.591098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:34:29.354: INFO: Successfully updated pod "labelsupdateecd8fd3f-197d-415a-8575-08be8b8e1c92"
  E1014 13:34:29.592107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:30.592216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:34:31.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7415" for this suite. @ 10/14/23 13:34:31.384
• [4.639 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 10/14/23 13:34:31.394
  Oct 14 13:34:31.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:34:31.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:34:31.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:34:31.423
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/14/23 13:34:31.427
  E1014 13:34:31.592324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:32.592472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:33.593096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:34.593224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:34:35.456
  Oct 14 13:34:35.460: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-5dacc214-3b94-451a-8ada-932e32b47186 container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:34:35.468
  Oct 14 13:34:35.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3242" for this suite. @ 10/14/23 13:34:35.496
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 10/14/23 13:34:35.508
  Oct 14 13:34:35.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 13:34:35.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:34:35.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:34:35.533
  E1014 13:34:35.593960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:36.594862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:34:37.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:34:37.568: INFO: Deleting pod "var-expansion-ecfc256b-d343-4523-abe1-b6031947c505" in namespace "var-expansion-1742"
  Oct 14 13:34:37.580: INFO: Wait up to 5m0s for pod "var-expansion-ecfc256b-d343-4523-abe1-b6031947c505" to be fully deleted
  E1014 13:34:37.595584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:38.595716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-1742" for this suite. @ 10/14/23 13:34:39.593
  E1014 13:34:39.596277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/14/23 13:34:39.613
  Oct 14 13:34:39.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename subpath @ 10/14/23 13:34:39.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:34:39.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:34:39.645
  STEP: Setting up data @ 10/14/23 13:34:39.65
  STEP: Creating pod pod-subpath-test-configmap-jbcf @ 10/14/23 13:34:39.666
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/23 13:34:39.666
  E1014 13:34:40.596996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:41.597233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:42.597238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:43.597349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:44.597492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:45.597612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:46.597807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:47.597949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:48.598920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:49.599195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:50.599342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:51.599387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:52.600095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:53.600635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:54.600753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:55.600880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:56.601012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:57.601398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:58.601508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:34:59.601621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:00.602211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:01.602670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:02.602818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:03.602922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:35:03.747
  Oct 14 13:35:03.751: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-subpath-test-configmap-jbcf container test-container-subpath-configmap-jbcf: <nil>
  STEP: delete the pod @ 10/14/23 13:35:03.766
  STEP: Deleting pod pod-subpath-test-configmap-jbcf @ 10/14/23 13:35:03.789
  Oct 14 13:35:03.789: INFO: Deleting pod "pod-subpath-test-configmap-jbcf" in namespace "subpath-9887"
  Oct 14 13:35:03.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9887" for this suite. @ 10/14/23 13:35:03.8
• [24.198 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 10/14/23 13:35:03.811
  Oct 14 13:35:03.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 13:35:03.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:35:03.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:35:03.844
  STEP: Creating a test headless service @ 10/14/23 13:35:03.849
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1670 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1670;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1670 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1670;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1670.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1670.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1670.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1670.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1670.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1670.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1670.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1670.svc;check="$$(dig +notcp +noall +answer +search 165.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.165_udp@PTR;check="$$(dig +tcp +noall +answer +search 165.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.165_tcp@PTR;sleep 1; done
   @ 10/14/23 13:35:03.875
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1670 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1670;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1670 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1670;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1670.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1670.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1670.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1670.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1670.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1670.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1670.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1670.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1670.svc;check="$$(dig +notcp +noall +answer +search 165.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.165_udp@PTR;check="$$(dig +tcp +noall +answer +search 165.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.165_tcp@PTR;sleep 1; done
   @ 10/14/23 13:35:03.876
  STEP: creating a pod to probe DNS @ 10/14/23 13:35:03.876
  STEP: submitting the pod to kubernetes @ 10/14/23 13:35:03.876
  E1014 13:35:04.603026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:05.603141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:35:05.921
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:35:05.93
  Oct 14 13:35:05.942: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:05.952: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:05.959: INFO: Unable to read wheezy_udp@dns-test-service.dns-1670 from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:05.967: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1670 from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:05.974: INFO: Unable to read wheezy_udp@dns-test-service.dns-1670.svc from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:05.981: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1670.svc from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:06.024: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:06.029: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:06.036: INFO: Unable to read jessie_udp@dns-test-service.dns-1670 from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:06.043: INFO: Unable to read jessie_tcp@dns-test-service.dns-1670 from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:06.049: INFO: Unable to read jessie_udp@dns-test-service.dns-1670.svc from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:06.055: INFO: Unable to read jessie_tcp@dns-test-service.dns-1670.svc from pod dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609: the server could not find the requested resource (get pods dns-test-428268fb-1795-472a-9204-1d257b271609)
  Oct 14 13:35:06.089: INFO: Lookups using dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1670 wheezy_tcp@dns-test-service.dns-1670 wheezy_udp@dns-test-service.dns-1670.svc wheezy_tcp@dns-test-service.dns-1670.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1670 jessie_tcp@dns-test-service.dns-1670 jessie_udp@dns-test-service.dns-1670.svc jessie_tcp@dns-test-service.dns-1670.svc]

  Oct 14 13:35:06.098: INFO: Pod client logs for webserver: 
  Oct 14 13:35:06.108: INFO: Pod client logs for querier: 
  Oct 14 13:35:06.117: INFO: Pod client logs for jessie-querier: 
  E1014 13:35:06.603855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:07.603963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:08.604193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:09.604427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:10.604796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:11.256: INFO: DNS probes using dns-1670/dns-test-428268fb-1795-472a-9204-1d257b271609 succeeded

  Oct 14 13:35:11.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:35:11.262
  STEP: deleting the test service @ 10/14/23 13:35:11.29
  STEP: deleting the test headless service @ 10/14/23 13:35:11.407
  STEP: Destroying namespace "dns-1670" for this suite. @ 10/14/23 13:35:11.429
• [7.634 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 10/14/23 13:35:11.448
  Oct 14 13:35:11.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:35:11.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:35:11.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:35:11.487
  STEP: creating the pod @ 10/14/23 13:35:11.492
  Oct 14 13:35:11.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 create -f -'
  E1014 13:35:11.605149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:11.793: INFO: stderr: ""
  Oct 14 13:35:11.793: INFO: stdout: "pod/pause created\n"
  E1014 13:35:12.605499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:13.605618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/14/23 13:35:13.803
  Oct 14 13:35:13.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 label pods pause testing-label=testing-label-value'
  Oct 14 13:35:13.914: INFO: stderr: ""
  Oct 14 13:35:13.914: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/14/23 13:35:13.914
  Oct 14 13:35:13.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 get pod pause -L testing-label'
  Oct 14 13:35:14.010: INFO: stderr: ""
  Oct 14 13:35:14.010: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/14/23 13:35:14.01
  Oct 14 13:35:14.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 label pods pause testing-label-'
  Oct 14 13:35:14.114: INFO: stderr: ""
  Oct 14 13:35:14.114: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/14/23 13:35:14.114
  Oct 14 13:35:14.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 get pod pause -L testing-label'
  Oct 14 13:35:14.215: INFO: stderr: ""
  Oct 14 13:35:14.215: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 10/14/23 13:35:14.215
  Oct 14 13:35:14.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 delete --grace-period=0 --force -f -'
  Oct 14 13:35:14.318: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 14 13:35:14.318: INFO: stdout: "pod \"pause\" force deleted\n"
  Oct 14 13:35:14.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 get rc,svc -l name=pause --no-headers'
  Oct 14 13:35:14.422: INFO: stderr: "No resources found in kubectl-9928 namespace.\n"
  Oct 14 13:35:14.422: INFO: stdout: ""
  Oct 14 13:35:14.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-9928 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 14 13:35:14.517: INFO: stderr: ""
  Oct 14 13:35:14.517: INFO: stdout: ""
  Oct 14 13:35:14.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9928" for this suite. @ 10/14/23 13:35:14.523
• [3.084 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 10/14/23 13:35:14.532
  Oct 14 13:35:14.532: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 13:35:14.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:35:14.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:35:14.56
  STEP: Creating service test in namespace statefulset-4428 @ 10/14/23 13:35:14.568
  STEP: Creating stateful set ss in namespace statefulset-4428 @ 10/14/23 13:35:14.576
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4428 @ 10/14/23 13:35:14.589
  Oct 14 13:35:14.600: INFO: Found 0 stateful pods, waiting for 1
  E1014 13:35:14.606265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:15.606398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:16.606923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:17.607010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:18.607911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:19.608882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:20.608929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:21.609027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:22.609188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:23.609334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:24.606: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/14/23 13:35:24.606
  E1014 13:35:24.609600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:24.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-4428 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 14 13:35:24.821: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 13:35:24.821: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 13:35:24.821: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 13:35:24.826: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1014 13:35:25.609742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:26.609868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:27.610011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:28.610112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:29.610220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:30.610887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:31.611864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:32.612121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:33.612351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:34.612558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:34.831: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 13:35:34.831: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 14 13:35:34.855: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Oct 14 13:35:34.855: INFO: ss-0  ip-172-31-35-21  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:14 +0000 UTC  }]
  Oct 14 13:35:34.855: INFO: 
  Oct 14 13:35:34.855: INFO: StatefulSet ss has not reached scale 3, at 1
  E1014 13:35:35.612700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:35.862: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993354072s
  E1014 13:35:36.613660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:36.868: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986056146s
  E1014 13:35:37.614533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:37.874: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.980264607s
  E1014 13:35:38.614812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:38.879: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975043604s
  E1014 13:35:39.614953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:39.884: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.969852921s
  E1014 13:35:40.615547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:40.889: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964318934s
  E1014 13:35:41.615714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:41.894: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.959244092s
  E1014 13:35:42.616431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:42.900: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.954268311s
  E1014 13:35:43.616578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:43.905: INFO: Verifying statefulset ss doesn't scale past 3 for another 948.808355ms
  E1014 13:35:44.616934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4428 @ 10/14/23 13:35:44.905
  Oct 14 13:35:44.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-4428 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 13:35:45.119: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 14 13:35:45.119: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 13:35:45.119: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 14 13:35:45.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-4428 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 13:35:45.327: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct 14 13:35:45.327: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 13:35:45.327: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 14 13:35:45.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-4428 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 13:35:45.536: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct 14 13:35:45.536: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 13:35:45.536: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 14 13:35:45.542: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E1014 13:35:45.617433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:46.617837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:47.618082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:48.618199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:49.618388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:50.618490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:51.618780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:52.618916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:53.619050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:54.620030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:55.548: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:35:55.548: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:35:55.548: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/14/23 13:35:55.548
  Oct 14 13:35:55.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-4428 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1014 13:35:55.620112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:35:55.750: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 13:35:55.750: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 13:35:55.750: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 13:35:55.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-4428 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 14 13:35:56.003: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 13:35:56.003: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 13:35:56.003: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 13:35:56.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-4428 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 14 13:35:56.210: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 13:35:56.210: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 13:35:56.210: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 14 13:35:56.210: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 14 13:35:56.214: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E1014 13:35:56.620293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:57.620529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:58.620675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:35:59.620928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:00.621028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:01.621144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:02.621266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:03.621446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:04.621545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:05.621661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:06.224: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 13:36:06.224: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 13:36:06.224: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct 14 13:36:06.241: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Oct 14 13:36:06.242: INFO: ss-0  ip-172-31-35-21   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:14 +0000 UTC  }]
  Oct 14 13:36:06.242: INFO: ss-1  ip-172-31-80-101  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:34 +0000 UTC  }]
  Oct 14 13:36:06.242: INFO: ss-2  ip-172-31-16-199  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:34 +0000 UTC  }]
  Oct 14 13:36:06.242: INFO: 
  Oct 14 13:36:06.242: INFO: StatefulSet ss has not reached scale 0, at 3
  E1014 13:36:06.623788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:07.248: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  Oct 14 13:36:07.248: INFO: ss-0  ip-172-31-35-21  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:14 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:55 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:55 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:35:14 +0000 UTC  }]
  Oct 14 13:36:07.248: INFO: 
  Oct 14 13:36:07.248: INFO: StatefulSet ss has not reached scale 0, at 1
  E1014 13:36:07.623894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:08.254: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.98852265s
  E1014 13:36:08.624990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:09.259: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.982131079s
  E1014 13:36:09.625297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:10.264: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.977173964s
  E1014 13:36:10.626115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:11.269: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.972005306s
  E1014 13:36:11.626152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:12.275: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.966581565s
  E1014 13:36:12.627145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:13.282: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.960353586s
  E1014 13:36:13.627782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:14.285: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.955067546s
  E1014 13:36:14.628406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:15.290: INFO: Verifying statefulset ss doesn't scale past 0 for another 951.250964ms
  E1014 13:36:15.628753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4428 @ 10/14/23 13:36:16.29
  Oct 14 13:36:16.295: INFO: Scaling statefulset ss to 0
  Oct 14 13:36:16.310: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 13:36:16.315: INFO: Deleting all statefulset in ns statefulset-4428
  Oct 14 13:36:16.319: INFO: Scaling statefulset ss to 0
  Oct 14 13:36:16.334: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 13:36:16.337: INFO: Deleting statefulset ss
  Oct 14 13:36:16.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4428" for this suite. @ 10/14/23 13:36:16.363
• [61.845 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 10/14/23 13:36:16.379
  Oct 14 13:36:16.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:36:16.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:36:16.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:36:16.414
  STEP: Creating the pod @ 10/14/23 13:36:16.42
  E1014 13:36:16.629396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:17.629499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:18.630566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:18.976: INFO: Successfully updated pod "annotationupdatefbf971ab-a92d-44cf-9197-7e3290531d4b"
  E1014 13:36:19.631513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:20.631653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:21.631747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:22.631852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:36:23.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3252" for this suite. @ 10/14/23 13:36:23.013
• [6.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 10/14/23 13:36:23.025
  Oct 14 13:36:23.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:36:23.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:36:23.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:36:23.051
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:36:23.056
  E1014 13:36:23.634320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:24.634816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:25.634842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:26.634997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:36:27.086
  Oct 14 13:36:27.091: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-f2408688-57a3-4bd0-9298-043a905aae37 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:36:27.115
  Oct 14 13:36:27.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2922" for this suite. @ 10/14/23 13:36:27.146
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 10/14/23 13:36:27.158
  Oct 14 13:36:27.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/23 13:36:27.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:36:27.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:36:27.2
  STEP: Creating ServiceAccount "e2e-sa-brx57"  @ 10/14/23 13:36:27.205
  Oct 14 13:36:27.212: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-brx57"  @ 10/14/23 13:36:27.213
  Oct 14 13:36:27.226: INFO: AutomountServiceAccountToken: true
  Oct 14 13:36:27.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6559" for this suite. @ 10/14/23 13:36:27.232
• [0.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/14/23 13:36:27.245
  Oct 14 13:36:27.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 13:36:27.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:36:27.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:36:27.273
  STEP: Creating secret with name secret-test-7ba0d3d3-f446-4ef7-9ac5-04103ae70f49 @ 10/14/23 13:36:27.277
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:36:27.283
  E1014 13:36:27.635077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:28.635198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:29.635891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:30.636543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:36:31.312
  Oct 14 13:36:31.317: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-ff8ce6fe-2224-4b0b-a3ca-60a84b96244f container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:36:31.325
  Oct 14 13:36:31.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2248" for this suite. @ 10/14/23 13:36:31.356
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 10/14/23 13:36:31.369
  Oct 14 13:36:31.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:36:31.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:36:31.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:36:31.398
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-9682ff21-6080-48d9-a8fa-4f50ca49232e @ 10/14/23 13:36:31.409
  STEP: Creating the pod @ 10/14/23 13:36:31.417
  E1014 13:36:31.637026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:32.637646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-9682ff21-6080-48d9-a8fa-4f50ca49232e @ 10/14/23 13:36:33.469
  STEP: waiting to observe update in volume @ 10/14/23 13:36:33.481
  E1014 13:36:33.638560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:34.639021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:35.639069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:36.639737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:37.639817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:38.640245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:39.640673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:40.640793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:41.641156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:42.641284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:43.642316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:44.643286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:45.643828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:46.644752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:47.645831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:48.645979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:49.646700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:50.646772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:51.647023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:52.647142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:53.647994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:54.648168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:55.648226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:56.648347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:57.648468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:58.648594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:36:59.649071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:00.649219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:01.650100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:02.650371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:03.651153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:04.651303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:05.651402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:06.651512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:07.651642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:08.651807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:09.651897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:10.652025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:11.652150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:12.652243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:13.652887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:14.653012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:15.653641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:16.653829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:17.653962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:18.654772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:19.655853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:20.655943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:21.656035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:22.656183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:23.656285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:24.656377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:25.656485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:26.657108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:27.657190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:28.657298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:29.658144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:30.658276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:31.658591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:32.658884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:33.659079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:34.659879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:35.660086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:36.660377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:37.660460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:38.660572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:39.660708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:40.661650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:41.662508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:42.663522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:43.663598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:44.663749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:45.663831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:46.664684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:47.664772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:48.665026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:49.665156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:50.666141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:51.666218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:37:51.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5857" for this suite. @ 10/14/23 13:37:51.931
• [80.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 10/14/23 13:37:51.945
  Oct 14 13:37:51.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/14/23 13:37:51.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:37:51.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:37:51.975
  STEP: getting /apis @ 10/14/23 13:37:51.981
  STEP: getting /apis/storage.k8s.io @ 10/14/23 13:37:51.987
  STEP: getting /apis/storage.k8s.io/v1 @ 10/14/23 13:37:51.989
  STEP: creating @ 10/14/23 13:37:51.991
  STEP: watching @ 10/14/23 13:37:52.012
  Oct 14 13:37:52.012: INFO: starting watch
  STEP: getting @ 10/14/23 13:37:52.021
  STEP: listing in namespace @ 10/14/23 13:37:52.026
  STEP: listing across namespaces @ 10/14/23 13:37:52.031
  STEP: patching @ 10/14/23 13:37:52.036
  STEP: updating @ 10/14/23 13:37:52.043
  Oct 14 13:37:52.051: INFO: waiting for watch events with expected annotations in namespace
  Oct 14 13:37:52.051: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/14/23 13:37:52.051
  STEP: deleting a collection @ 10/14/23 13:37:52.069
  Oct 14 13:37:52.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5731" for this suite. @ 10/14/23 13:37:52.095
• [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/14/23 13:37:52.109
  Oct 14 13:37:52.109: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:37:52.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:37:52.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:37:52.138
  STEP: Creating secret with name s-test-opt-del-810fcb93-157a-43a2-b8f8-ea672eb91b48 @ 10/14/23 13:37:52.147
  STEP: Creating secret with name s-test-opt-upd-78cb1046-c8ea-4c17-88e4-8737cb2efdd1 @ 10/14/23 13:37:52.153
  STEP: Creating the pod @ 10/14/23 13:37:52.16
  E1014 13:37:52.666906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:53.667010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-810fcb93-157a-43a2-b8f8-ea672eb91b48 @ 10/14/23 13:37:54.228
  STEP: Updating secret s-test-opt-upd-78cb1046-c8ea-4c17-88e4-8737cb2efdd1 @ 10/14/23 13:37:54.237
  STEP: Creating secret with name s-test-opt-create-17f49715-1f4d-45d9-a054-b60864eee17a @ 10/14/23 13:37:54.245
  STEP: waiting to observe update in volume @ 10/14/23 13:37:54.251
  E1014 13:37:54.667817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:55.668165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:56.668900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:57.669392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:37:58.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-454" for this suite. @ 10/14/23 13:37:58.303
• [6.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 10/14/23 13:37:58.314
  Oct 14 13:37:58.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:37:58.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:37:58.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:37:58.343
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:37:58.348
  E1014 13:37:58.670286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:37:59.670425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:00.670580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:01.670813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:38:02.38
  Oct 14 13:38:02.385: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-2683c246-7b07-44a6-9852-61900e83a645 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:38:02.395
  Oct 14 13:38:02.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9245" for this suite. @ 10/14/23 13:38:02.426
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 10/14/23 13:38:02.439
  Oct 14 13:38:02.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/23 13:38:02.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:38:02.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:38:02.472
  E1014 13:38:02.671877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:03.672084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:38:04.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1628" for this suite. @ 10/14/23 13:38:04.533
• [2.104 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/14/23 13:38:04.543
  Oct 14 13:38:04.543: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename subpath @ 10/14/23 13:38:04.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:38:04.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:38:04.57
  STEP: Setting up data @ 10/14/23 13:38:04.575
  STEP: Creating pod pod-subpath-test-projected-sllz @ 10/14/23 13:38:04.589
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/23 13:38:04.589
  E1014 13:38:04.672940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:05.673372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:06.674267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:07.674397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:08.675042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:09.675884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:10.676879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:11.677668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:12.678586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:13.679119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:14.679894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:15.679968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:16.680153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:17.680282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:18.680810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:19.680907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:20.681770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:21.682569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:22.683307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:23.684247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:24.684778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:25.685533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:26.686476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:27.686817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:38:28.677
  Oct 14 13:38:28.682: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-subpath-test-projected-sllz container test-container-subpath-projected-sllz: <nil>
  E1014 13:38:28.687266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 10/14/23 13:38:28.692
  STEP: Deleting pod pod-subpath-test-projected-sllz @ 10/14/23 13:38:28.713
  Oct 14 13:38:28.713: INFO: Deleting pod "pod-subpath-test-projected-sllz" in namespace "subpath-5004"
  Oct 14 13:38:28.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5004" for this suite. @ 10/14/23 13:38:28.724
• [24.190 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 10/14/23 13:38:28.734
  Oct 14 13:38:28.734: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:38:28.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:38:28.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:38:28.775
  STEP: Creating configMap with name configmap-test-volume-map-1a2e0073-097e-44da-bd7f-433f16474720 @ 10/14/23 13:38:28.779
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:38:28.788
  E1014 13:38:29.687444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:30.687618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:31.688044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:32.687782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:38:32.834
  Oct 14 13:38:32.840: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-configmaps-165f127e-da44-466c-ab5d-d8743e119719 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:38:32.851
  Oct 14 13:38:32.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5483" for this suite. @ 10/14/23 13:38:32.881
• [4.157 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 10/14/23 13:38:32.892
  Oct 14 13:38:32.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replication-controller @ 10/14/23 13:38:32.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:38:32.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:38:32.935
  STEP: Given a ReplicationController is created @ 10/14/23 13:38:32.945
  STEP: When the matched label of one of its pods change @ 10/14/23 13:38:32.955
  Oct 14 13:38:32.961: INFO: Pod name pod-release: Found 0 pods out of 1
  E1014 13:38:33.688557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:34.689555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:35.689555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:36.689676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:37.690078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:38:37.968: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/14/23 13:38:37.989
  Oct 14 13:38:38.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7144" for this suite. @ 10/14/23 13:38:38.04
• [5.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 10/14/23 13:38:38.06
  Oct 14 13:38:38.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename disruption @ 10/14/23 13:38:38.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:38:38.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:38:38.116
  STEP: Creating a kubernetes client @ 10/14/23 13:38:38.123
  Oct 14 13:38:38.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename disruption-2 @ 10/14/23 13:38:38.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:38:38.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:38:38.161
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:38:38.179
  E1014 13:38:38.690298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:39.690811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:38:40.203
  E1014 13:38:40.690949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:41.691102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/14/23 13:38:42.22
  E1014 13:38:42.691932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:43.692048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 10/14/23 13:38:44.229
  STEP: listing a collection of PDBs in namespace disruption-9462 @ 10/14/23 13:38:44.234
  STEP: deleting a collection of PDBs @ 10/14/23 13:38:44.239
  STEP: Waiting for the PDB collection to be deleted @ 10/14/23 13:38:44.256
  Oct 14 13:38:44.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:38:44.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7810" for this suite. @ 10/14/23 13:38:44.273
  STEP: Destroying namespace "disruption-9462" for this suite. @ 10/14/23 13:38:44.282
• [6.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/14/23 13:38:44.293
  Oct 14 13:38:44.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename cronjob @ 10/14/23 13:38:44.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:38:44.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:38:44.323
  STEP: Creating a ForbidConcurrent cronjob @ 10/14/23 13:38:44.329
  STEP: Ensuring a job is scheduled @ 10/14/23 13:38:44.336
  E1014 13:38:44.692564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:45.692770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:46.693380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:47.693567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:48.693744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:49.693801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:50.694330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:51.694740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:52.694892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:53.695164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:54.695951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:55.696154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:56.697094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:57.697291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:58.697650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:38:59.698109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/14/23 13:39:00.342
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/14/23 13:39:00.347
  STEP: Ensuring no more jobs are scheduled @ 10/14/23 13:39:00.351
  E1014 13:39:00.699095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:01.699933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:02.700215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:03.700332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:04.701288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:05.701408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:06.701520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:07.701615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:08.702264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:09.702794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:10.702912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:11.703031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:12.703877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:13.703997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:14.704789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:15.704879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:16.705109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:17.705264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:18.705977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:19.706064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:20.706758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:21.707132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:22.708180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:23.708744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:24.709419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:25.709723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:26.709819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:27.710244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:28.710545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:29.710804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:30.711839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:31.711942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:32.712755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:33.712855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:34.713412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:35.714006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:36.714808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:37.714904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:38.715538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:39.715963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:40.716097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:41.716203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:42.716322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:43.716464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:44.717512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:45.717591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:46.718144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:47.718281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:48.718373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:49.718802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:50.719340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:51.719484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:52.719588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:53.719671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:54.719816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:55.720650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:56.721201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:57.721257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:58.721375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:39:59.721476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:00.721585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:01.722109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:02.722117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:03.722383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:04.722478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:05.722831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:06.722957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:07.723083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:08.723997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:09.724620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:10.725556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:11.725652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:12.726706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:13.726765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:14.727398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:15.727859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:16.728932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:17.729289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:18.730031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:19.730115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:20.730257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:21.730345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:22.731128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:23.731128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:24.731796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:25.731934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:26.732054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:27.732109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:28.733020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:29.733486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:30.734124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:31.734206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:32.734909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:33.735886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:34.736907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:35.737288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:36.737435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:37.737565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:38.738375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:39.738486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:40.738534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:41.738767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:42.739377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:43.740017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:44.740121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:45.740247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:46.740692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:47.740866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:48.741876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:49.742276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:50.742540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:51.742754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:52.742887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:53.743840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:54.744777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:55.744893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:56.745624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:57.746125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:58.746973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:40:59.747839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:00.748710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:01.749097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:02.750002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:03.750180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:04.750381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:05.750770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:06.751788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:07.751909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:08.752482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:09.753409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:10.754257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:11.754611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:12.755223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:13.755434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:14.755576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:15.755950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:16.756091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:17.756519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:18.757087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:19.757222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:20.757660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:21.757786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:22.758514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:23.758771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:24.758945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:25.759993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:26.760303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:27.760760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:28.761057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:29.761186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:30.761969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:31.762684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:32.763287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:33.763708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:34.764671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:35.765039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:36.765665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:37.765815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:38.766254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:39.766547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:40.767619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:41.767752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:42.768453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:43.768838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:44.768960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:45.769926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:46.770052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:47.770171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:48.770938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:49.771495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:50.771845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:51.771970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:52.772641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:53.772897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:54.772996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:55.773855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:56.773950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:57.774368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:58.774896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:41:59.775018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:00.775441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:01.775564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:02.776490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:03.776679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:04.777419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:05.777857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:06.778581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:07.778761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:08.778850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:09.778959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:10.779087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:11.779463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:12.779496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:13.779839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:14.780693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:15.781041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:16.781882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:17.782071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:18.782738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:19.782775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:20.783853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:21.784101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:22.784570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:23.784860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:24.785087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:25.785689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:26.786088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:27.786127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:28.786761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:29.786893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:30.787298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:31.787452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:32.787884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:33.788095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:34.788672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:35.789295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:36.789648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:37.789772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:38.790718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:39.790790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:40.791601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:41.791884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:42.792982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:43.793106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:44.793195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:45.793656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:46.793787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:47.793906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:48.794328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:49.794438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:50.795156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:51.795265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:52.796174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:53.796555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:54.797264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:55.797587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:56.797811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:57.798155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:58.798271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:42:59.798403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:00.799016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:01.799550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:02.800473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:03.800588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:04.801645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:05.801771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:06.801885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:07.802000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:08.802841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:09.802950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:10.803863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:11.804512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:12.804650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:13.804787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:14.804881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:15.805003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:16.805426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:17.805629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:18.806433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:19.806547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:20.807210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:21.807592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:22.807976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:23.808102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:24.808184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:25.808296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:26.808413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:27.808835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:28.809732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:29.809850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:30.810518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:31.810674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:32.811493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:33.811572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:34.812612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:35.812783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:36.812899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:37.813050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:38.814032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:39.814163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:40.814281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:41.814399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:42.815349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:43.815454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:44.815588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:45.815713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:46.816123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:47.816245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:48.817266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:49.817365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:50.817631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:51.818079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:52.818185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:53.818768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:54.819563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:55.819796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:56.820867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:57.821205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:58.821346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:43:59.821487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 10/14/23 13:44:00.363
  Oct 14 13:44:00.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2025" for this suite. @ 10/14/23 13:44:00.377
• [316.095 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 10/14/23 13:44:00.39
  Oct 14 13:44:00.390: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:44:00.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:00.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:00.431
  STEP: Creating configMap with name configmap-test-volume-befe332e-3887-4672-9914-c0da8f21f31f @ 10/14/23 13:44:00.435
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:44:00.441
  E1014 13:44:00.822502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:01.822654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:02.823367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:03.823576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:44:04.475
  Oct 14 13:44:04.479: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-configmaps-2fd81624-a58f-490a-a9c9-d422b5982701 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:44:04.506
  Oct 14 13:44:04.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-857" for this suite. @ 10/14/23 13:44:04.539
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 10/14/23 13:44:04.552
  Oct 14 13:44:04.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:44:04.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:04.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:04.583
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-274 @ 10/14/23 13:44:04.587
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/14/23 13:44:04.602
  STEP: creating service externalsvc in namespace services-274 @ 10/14/23 13:44:04.603
  STEP: creating replication controller externalsvc in namespace services-274 @ 10/14/23 13:44:04.62
  I1014 13:44:04.631589      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-274, replica count: 2
  E1014 13:44:04.823664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:05.824107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:06.824258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:44:07.682718      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/14/23 13:44:07.687
  Oct 14 13:44:07.708: INFO: Creating new exec pod
  E1014 13:44:07.824745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:08.825117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:09.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-274 exec execpodb68cb -- /bin/sh -x -c nslookup clusterip-service.services-274.svc.cluster.local'
  E1014 13:44:09.826019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:10.015: INFO: stderr: "+ nslookup clusterip-service.services-274.svc.cluster.local\n"
  Oct 14 13:44:10.015: INFO: stdout: "Server:\t\t10.152.183.199\nAddress:\t10.152.183.199#53\n\nclusterip-service.services-274.svc.cluster.local\tcanonical name = externalsvc.services-274.svc.cluster.local.\nName:\texternalsvc.services-274.svc.cluster.local\nAddress: 10.152.183.125\n\n"
  Oct 14 13:44:10.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-274, will wait for the garbage collector to delete the pods @ 10/14/23 13:44:10.021
  Oct 14 13:44:10.084: INFO: Deleting ReplicationController externalsvc took: 7.916578ms
  Oct 14 13:44:10.185: INFO: Terminating ReplicationController externalsvc pods took: 100.335907ms
  E1014 13:44:10.826911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:11.828040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:12.828476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:13.408: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-274" for this suite. @ 10/14/23 13:44:13.432
• [8.889 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/14/23 13:44:13.442
  Oct 14 13:44:13.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename proxy @ 10/14/23 13:44:13.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:13.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:13.473
  Oct 14 13:44:13.477: INFO: Creating pod...
  E1014 13:44:13.829329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:14.829443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:15.507: INFO: Creating service...
  Oct 14 13:44:15.518: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/pods/agnhost/proxy?method=DELETE
  Oct 14 13:44:15.530: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 14 13:44:15.530: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/pods/agnhost/proxy?method=OPTIONS
  Oct 14 13:44:15.540: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 14 13:44:15.540: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/pods/agnhost/proxy?method=PATCH
  Oct 14 13:44:15.546: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 14 13:44:15.547: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/pods/agnhost/proxy?method=POST
  Oct 14 13:44:15.553: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 14 13:44:15.553: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/pods/agnhost/proxy?method=PUT
  Oct 14 13:44:15.558: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 14 13:44:15.559: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/services/e2e-proxy-test-service/proxy?method=DELETE
  Oct 14 13:44:15.567: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 14 13:44:15.567: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Oct 14 13:44:15.574: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 14 13:44:15.575: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/services/e2e-proxy-test-service/proxy?method=PATCH
  Oct 14 13:44:15.588: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 14 13:44:15.588: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/services/e2e-proxy-test-service/proxy?method=POST
  Oct 14 13:44:15.596: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 14 13:44:15.596: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/services/e2e-proxy-test-service/proxy?method=PUT
  Oct 14 13:44:15.604: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 14 13:44:15.604: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/pods/agnhost/proxy?method=GET
  Oct 14 13:44:15.607: INFO: http.Client request:GET StatusCode:301
  Oct 14 13:44:15.608: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/services/e2e-proxy-test-service/proxy?method=GET
  Oct 14 13:44:15.615: INFO: http.Client request:GET StatusCode:301
  Oct 14 13:44:15.615: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/pods/agnhost/proxy?method=HEAD
  Oct 14 13:44:15.619: INFO: http.Client request:HEAD StatusCode:301
  Oct 14 13:44:15.619: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3916/services/e2e-proxy-test-service/proxy?method=HEAD
  Oct 14 13:44:15.624: INFO: http.Client request:HEAD StatusCode:301
  Oct 14 13:44:15.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3916" for this suite. @ 10/14/23 13:44:15.629
• [2.197 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 10/14/23 13:44:15.639
  Oct 14 13:44:15.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replication-controller @ 10/14/23 13:44:15.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:15.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:15.668
  Oct 14 13:44:15.672: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1014 13:44:15.830502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/14/23 13:44:16.689
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/14/23 13:44:16.7
  E1014 13:44:16.831054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/14/23 13:44:17.709
  Oct 14 13:44:17.723: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/14/23 13:44:17.723
  E1014 13:44:17.831088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:18.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9049" for this suite. @ 10/14/23 13:44:18.746
• [3.118 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 10/14/23 13:44:18.758
  Oct 14 13:44:18.758: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename security-context-test @ 10/14/23 13:44:18.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:18.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:18.801
  E1014 13:44:18.831578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:19.832131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:20.832169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:21.832441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:22.832586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:22.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1167" for this suite. @ 10/14/23 13:44:22.848
• [4.098 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 10/14/23 13:44:22.857
  Oct 14 13:44:22.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:44:22.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:22.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:22.883
  STEP: Creating a ResourceQuota with terminating scope @ 10/14/23 13:44:22.888
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/23 13:44:22.894
  E1014 13:44:23.832677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:24.832790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 10/14/23 13:44:24.9
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/23 13:44:24.907
  E1014 13:44:25.833628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:26.834200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 10/14/23 13:44:26.913
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/14/23 13:44:26.931
  E1014 13:44:27.834275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:28.834491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/14/23 13:44:28.936
  E1014 13:44:29.834798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:30.835876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/23 13:44:30.941
  STEP: Ensuring resource quota status released the pod usage @ 10/14/23 13:44:30.958
  E1014 13:44:31.836340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:32.836160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 10/14/23 13:44:32.963
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/14/23 13:44:32.982
  E1014 13:44:33.836261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:34.836675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/14/23 13:44:34.989
  E1014 13:44:35.836844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:36.836880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/23 13:44:36.995
  STEP: Ensuring resource quota status released the pod usage @ 10/14/23 13:44:37.02
  E1014 13:44:37.837396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:38.837517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:39.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4384" for this suite. @ 10/14/23 13:44:39.032
• [16.187 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/14/23 13:44:39.046
  Oct 14 13:44:39.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename svc-latency @ 10/14/23 13:44:39.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:39.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:39.075
  Oct 14 13:44:39.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9768 @ 10/14/23 13:44:39.081
  I1014 13:44:39.092910      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9768, replica count: 1
  E1014 13:44:39.838574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:44:40.143775      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1014 13:44:40.839382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:44:41.144382      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 13:44:41.258: INFO: Created: latency-svc-qktmm
  Oct 14 13:44:41.278: INFO: Got endpoints: latency-svc-qktmm [32.798513ms]
  Oct 14 13:44:41.308: INFO: Created: latency-svc-qd4qh
  Oct 14 13:44:41.312: INFO: Got endpoints: latency-svc-qd4qh [34.135605ms]
  Oct 14 13:44:41.327: INFO: Created: latency-svc-g7lkw
  Oct 14 13:44:41.330: INFO: Got endpoints: latency-svc-g7lkw [51.086213ms]
  Oct 14 13:44:41.339: INFO: Created: latency-svc-f957b
  Oct 14 13:44:41.349: INFO: Created: latency-svc-fwhsg
  Oct 14 13:44:41.354: INFO: Got endpoints: latency-svc-f957b [75.438732ms]
  Oct 14 13:44:41.360: INFO: Created: latency-svc-8vrlq
  Oct 14 13:44:41.364: INFO: Got endpoints: latency-svc-fwhsg [85.316519ms]
  Oct 14 13:44:41.369: INFO: Created: latency-svc-hjgqx
  Oct 14 13:44:41.374: INFO: Got endpoints: latency-svc-8vrlq [95.671771ms]
  Oct 14 13:44:41.382: INFO: Got endpoints: latency-svc-hjgqx [103.442508ms]
  Oct 14 13:44:41.388: INFO: Created: latency-svc-m7h8c
  Oct 14 13:44:41.392: INFO: Created: latency-svc-pzrt2
  Oct 14 13:44:41.397: INFO: Got endpoints: latency-svc-m7h8c [117.594347ms]
  Oct 14 13:44:41.408: INFO: Got endpoints: latency-svc-pzrt2 [128.934579ms]
  Oct 14 13:44:41.411: INFO: Created: latency-svc-gpw26
  Oct 14 13:44:41.423: INFO: Created: latency-svc-7ftpj
  Oct 14 13:44:41.424: INFO: Got endpoints: latency-svc-gpw26 [145.002196ms]
  Oct 14 13:44:41.433: INFO: Got endpoints: latency-svc-7ftpj [153.144597ms]
  Oct 14 13:44:41.504: INFO: Created: latency-svc-xkxtt
  Oct 14 13:44:41.510: INFO: Created: latency-svc-lprkq
  Oct 14 13:44:41.511: INFO: Created: latency-svc-6sz4d
  Oct 14 13:44:41.511: INFO: Created: latency-svc-fdblx
  Oct 14 13:44:41.513: INFO: Created: latency-svc-nlgzq
  Oct 14 13:44:41.514: INFO: Created: latency-svc-h7mrk
  Oct 14 13:44:41.522: INFO: Created: latency-svc-7zqhx
  Oct 14 13:44:41.524: INFO: Created: latency-svc-sc9tb
  Oct 14 13:44:41.527: INFO: Created: latency-svc-hcq24
  Oct 14 13:44:41.530: INFO: Created: latency-svc-84gn7
  Oct 14 13:44:41.530: INFO: Created: latency-svc-fw5dr
  Oct 14 13:44:41.539: INFO: Got endpoints: latency-svc-xkxtt [184.405374ms]
  Oct 14 13:44:41.543: INFO: Created: latency-svc-6qq6n
  Oct 14 13:44:41.544: INFO: Created: latency-svc-x8fqj
  Oct 14 13:44:41.544: INFO: Created: latency-svc-qz7sf
  Oct 14 13:44:41.545: INFO: Created: latency-svc-247qf
  Oct 14 13:44:41.552: INFO: Got endpoints: latency-svc-fdblx [188.138801ms]
  Oct 14 13:44:41.563: INFO: Got endpoints: latency-svc-6sz4d [282.811253ms]
  Oct 14 13:44:41.564: INFO: Got endpoints: latency-svc-x8fqj [234.500658ms]
  Oct 14 13:44:41.565: INFO: Got endpoints: latency-svc-lprkq [167.795881ms]
  Oct 14 13:44:41.566: INFO: Got endpoints: latency-svc-nlgzq [286.320137ms]
  Oct 14 13:44:41.579: INFO: Got endpoints: latency-svc-h7mrk [299.465347ms]
  Oct 14 13:44:41.583: INFO: Created: latency-svc-hr6zv
  Oct 14 13:44:41.597: INFO: Got endpoints: latency-svc-7zqhx [318.776217ms]
  Oct 14 13:44:41.598: INFO: Got endpoints: latency-svc-sc9tb [215.651372ms]
  Oct 14 13:44:41.598: INFO: Got endpoints: latency-svc-qz7sf [189.359914ms]
  Oct 14 13:44:41.598: INFO: Got endpoints: latency-svc-6qq6n [164.954754ms]
  Oct 14 13:44:41.598: INFO: Got endpoints: latency-svc-84gn7 [222.790133ms]
  Oct 14 13:44:41.611: INFO: Got endpoints: latency-svc-fw5dr [298.975122ms]
  Oct 14 13:44:41.617: INFO: Got endpoints: latency-svc-hcq24 [192.651936ms]
  Oct 14 13:44:41.620: INFO: Got endpoints: latency-svc-hr6zv [81.140088ms]
  Oct 14 13:44:41.625: INFO: Got endpoints: latency-svc-247qf [345.120806ms]
  Oct 14 13:44:41.701: INFO: Created: latency-svc-l9khh
  Oct 14 13:44:41.701: INFO: Created: latency-svc-zh7sj
  Oct 14 13:44:41.702: INFO: Created: latency-svc-lqdtm
  Oct 14 13:44:41.703: INFO: Created: latency-svc-26xs2
  Oct 14 13:44:41.704: INFO: Created: latency-svc-w5t7c
  Oct 14 13:44:41.704: INFO: Created: latency-svc-4vqzx
  Oct 14 13:44:41.704: INFO: Created: latency-svc-r7bzf
  Oct 14 13:44:41.715: INFO: Created: latency-svc-95xwq
  Oct 14 13:44:41.715: INFO: Created: latency-svc-q44ll
  Oct 14 13:44:41.716: INFO: Created: latency-svc-xsl4m
  Oct 14 13:44:41.716: INFO: Created: latency-svc-ldzqh
  Oct 14 13:44:41.724: INFO: Created: latency-svc-c5l4f
  Oct 14 13:44:41.724: INFO: Created: latency-svc-hr7sk
  Oct 14 13:44:41.724: INFO: Created: latency-svc-rb6gl
  Oct 14 13:44:41.725: INFO: Created: latency-svc-jbzdc
  Oct 14 13:44:41.757: INFO: Got endpoints: latency-svc-lqdtm [159.179566ms]
  Oct 14 13:44:41.757: INFO: Got endpoints: latency-svc-4vqzx [157.47684ms]
  Oct 14 13:44:41.759: INFO: Got endpoints: latency-svc-w5t7c [195.460693ms]
  Oct 14 13:44:41.759: INFO: Got endpoints: latency-svc-q44ll [138.756335ms]
  Oct 14 13:44:41.759: INFO: Got endpoints: latency-svc-26xs2 [206.485822ms]
  Oct 14 13:44:41.770: INFO: Got endpoints: latency-svc-l9khh [171.237674ms]
  Oct 14 13:44:41.785: INFO: Got endpoints: latency-svc-zh7sj [185.942269ms]
  Oct 14 13:44:41.786: INFO: Got endpoints: latency-svc-xsl4m [168.218036ms]
  Oct 14 13:44:41.786: INFO: Got endpoints: latency-svc-95xwq [185.532026ms]
  Oct 14 13:44:41.788: INFO: Got endpoints: latency-svc-ldzqh [163.475589ms]
  Oct 14 13:44:41.788: INFO: Got endpoints: latency-svc-r7bzf [176.669459ms]
  Oct 14 13:44:41.800: INFO: Created: latency-svc-sqmd9
  Oct 14 13:44:41.812: INFO: Got endpoints: latency-svc-hr7sk [247.460115ms]
  Oct 14 13:44:41.818: INFO: Got endpoints: latency-svc-jbzdc [238.866501ms]
  Oct 14 13:44:41.819: INFO: Created: latency-svc-7shs6
  Oct 14 13:44:41.825: INFO: Got endpoints: latency-svc-c5l4f [258.727386ms]
  Oct 14 13:44:41.832: INFO: Created: latency-svc-v7fnj
  E1014 13:44:41.839591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:41.841: INFO: Created: latency-svc-tbn5q
  Oct 14 13:44:41.850: INFO: Created: latency-svc-fcbcz
  Oct 14 13:44:41.857: INFO: Created: latency-svc-8wrcj
  Oct 14 13:44:41.865: INFO: Created: latency-svc-9j29l
  Oct 14 13:44:41.869: INFO: Got endpoints: latency-svc-rb6gl [304.912801ms]
  Oct 14 13:44:41.879: INFO: Created: latency-svc-p6jqp
  Oct 14 13:44:41.881: INFO: Created: latency-svc-sxg5d
  Oct 14 13:44:41.889: INFO: Created: latency-svc-w74sz
  Oct 14 13:44:41.899: INFO: Created: latency-svc-jrt82
  Oct 14 13:44:41.905: INFO: Created: latency-svc-tpq8t
  Oct 14 13:44:41.911: INFO: Created: latency-svc-h6nrr
  Oct 14 13:44:41.920: INFO: Got endpoints: latency-svc-sqmd9 [159.421069ms]
  Oct 14 13:44:41.921: INFO: Created: latency-svc-9gm8s
  Oct 14 13:44:41.931: INFO: Created: latency-svc-fpgbq
  Oct 14 13:44:41.938: INFO: Created: latency-svc-pr852
  Oct 14 13:44:41.967: INFO: Got endpoints: latency-svc-7shs6 [209.086808ms]
  Oct 14 13:44:41.983: INFO: Created: latency-svc-wqnv5
  Oct 14 13:44:42.017: INFO: Got endpoints: latency-svc-v7fnj [258.732536ms]
  Oct 14 13:44:42.034: INFO: Created: latency-svc-zmxfn
  Oct 14 13:44:42.068: INFO: Got endpoints: latency-svc-tbn5q [308.484635ms]
  Oct 14 13:44:42.082: INFO: Created: latency-svc-g8pzr
  Oct 14 13:44:42.117: INFO: Got endpoints: latency-svc-fcbcz [357.847622ms]
  Oct 14 13:44:42.132: INFO: Created: latency-svc-pvbj7
  Oct 14 13:44:42.169: INFO: Got endpoints: latency-svc-8wrcj [399.34123ms]
  Oct 14 13:44:42.182: INFO: Created: latency-svc-7fwfg
  Oct 14 13:44:42.217: INFO: Got endpoints: latency-svc-9j29l [432.129332ms]
  Oct 14 13:44:42.237: INFO: Created: latency-svc-8kslg
  Oct 14 13:44:42.268: INFO: Got endpoints: latency-svc-p6jqp [478.837372ms]
  Oct 14 13:44:42.288: INFO: Created: latency-svc-tbp2c
  Oct 14 13:44:42.322: INFO: Got endpoints: latency-svc-sxg5d [536.093785ms]
  Oct 14 13:44:42.333: INFO: Created: latency-svc-jvxw5
  Oct 14 13:44:42.369: INFO: Got endpoints: latency-svc-w74sz [580.590563ms]
  Oct 14 13:44:42.381: INFO: Created: latency-svc-gcpxn
  Oct 14 13:44:42.420: INFO: Got endpoints: latency-svc-jrt82 [634.13981ms]
  Oct 14 13:44:42.434: INFO: Created: latency-svc-ctjl4
  Oct 14 13:44:42.465: INFO: Got endpoints: latency-svc-tpq8t [652.997356ms]
  Oct 14 13:44:42.479: INFO: Created: latency-svc-vlx56
  Oct 14 13:44:42.515: INFO: Got endpoints: latency-svc-h6nrr [697.295622ms]
  Oct 14 13:44:42.529: INFO: Created: latency-svc-lsgtb
  Oct 14 13:44:42.568: INFO: Got endpoints: latency-svc-9gm8s [742.539817ms]
  Oct 14 13:44:42.582: INFO: Created: latency-svc-6t798
  Oct 14 13:44:42.617: INFO: Got endpoints: latency-svc-fpgbq [747.381035ms]
  Oct 14 13:44:42.631: INFO: Created: latency-svc-26jcn
  Oct 14 13:44:42.668: INFO: Got endpoints: latency-svc-pr852 [747.843249ms]
  Oct 14 13:44:42.681: INFO: Created: latency-svc-znkvd
  Oct 14 13:44:42.717: INFO: Got endpoints: latency-svc-wqnv5 [750.072561ms]
  Oct 14 13:44:42.733: INFO: Created: latency-svc-7xn88
  Oct 14 13:44:42.765: INFO: Got endpoints: latency-svc-zmxfn [748.208142ms]
  Oct 14 13:44:42.781: INFO: Created: latency-svc-vtkrj
  Oct 14 13:44:42.826: INFO: Got endpoints: latency-svc-g8pzr [757.883467ms]
  E1014 13:44:42.840319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:42.844: INFO: Created: latency-svc-bd6j8
  Oct 14 13:44:42.869: INFO: Got endpoints: latency-svc-pvbj7 [751.176662ms]
  Oct 14 13:44:42.884: INFO: Created: latency-svc-bnpms
  Oct 14 13:44:42.917: INFO: Got endpoints: latency-svc-7fwfg [747.803479ms]
  Oct 14 13:44:42.929: INFO: Created: latency-svc-rf9pz
  Oct 14 13:44:42.969: INFO: Got endpoints: latency-svc-8kslg [751.232822ms]
  Oct 14 13:44:42.981: INFO: Created: latency-svc-nqxv7
  Oct 14 13:44:43.016: INFO: Got endpoints: latency-svc-tbp2c [747.492125ms]
  Oct 14 13:44:43.032: INFO: Created: latency-svc-8jpps
  Oct 14 13:44:43.068: INFO: Got endpoints: latency-svc-jvxw5 [746.102852ms]
  Oct 14 13:44:43.085: INFO: Created: latency-svc-nlrrl
  Oct 14 13:44:43.119: INFO: Got endpoints: latency-svc-gcpxn [750.166222ms]
  Oct 14 13:44:43.132: INFO: Created: latency-svc-kpbf7
  Oct 14 13:44:43.169: INFO: Got endpoints: latency-svc-ctjl4 [749.02166ms]
  Oct 14 13:44:43.181: INFO: Created: latency-svc-bfhqm
  Oct 14 13:44:43.216: INFO: Got endpoints: latency-svc-vlx56 [750.207102ms]
  Oct 14 13:44:43.228: INFO: Created: latency-svc-jdk7j
  Oct 14 13:44:43.267: INFO: Got endpoints: latency-svc-lsgtb [750.918149ms]
  Oct 14 13:44:43.294: INFO: Created: latency-svc-khchv
  Oct 14 13:44:43.318: INFO: Got endpoints: latency-svc-6t798 [750.141308ms]
  Oct 14 13:44:43.333: INFO: Created: latency-svc-sxv7j
  Oct 14 13:44:43.371: INFO: Got endpoints: latency-svc-26jcn [754.491138ms]
  Oct 14 13:44:43.385: INFO: Created: latency-svc-g2xlx
  Oct 14 13:44:43.420: INFO: Got endpoints: latency-svc-znkvd [752.027409ms]
  Oct 14 13:44:43.434: INFO: Created: latency-svc-fkjw4
  Oct 14 13:44:43.470: INFO: Got endpoints: latency-svc-7xn88 [752.760792ms]
  Oct 14 13:44:43.486: INFO: Created: latency-svc-cdmxt
  Oct 14 13:44:43.516: INFO: Got endpoints: latency-svc-vtkrj [750.131149ms]
  Oct 14 13:44:43.530: INFO: Created: latency-svc-hmsl7
  Oct 14 13:44:43.567: INFO: Got endpoints: latency-svc-bd6j8 [741.472611ms]
  Oct 14 13:44:43.588: INFO: Created: latency-svc-psn8c
  Oct 14 13:44:43.621: INFO: Got endpoints: latency-svc-bnpms [752.098414ms]
  Oct 14 13:44:43.636: INFO: Created: latency-svc-4l5sb
  Oct 14 13:44:43.671: INFO: Got endpoints: latency-svc-rf9pz [753.504692ms]
  Oct 14 13:44:43.689: INFO: Created: latency-svc-7pnvc
  Oct 14 13:44:43.722: INFO: Got endpoints: latency-svc-nqxv7 [753.309838ms]
  Oct 14 13:44:43.736: INFO: Created: latency-svc-vnzww
  Oct 14 13:44:43.767: INFO: Got endpoints: latency-svc-8jpps [750.724276ms]
  Oct 14 13:44:43.785: INFO: Created: latency-svc-vzb72
  Oct 14 13:44:43.816: INFO: Got endpoints: latency-svc-nlrrl [747.840772ms]
  Oct 14 13:44:43.831: INFO: Created: latency-svc-nqrfp
  E1014 13:44:43.840732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:43.869: INFO: Got endpoints: latency-svc-kpbf7 [749.153833ms]
  Oct 14 13:44:43.881: INFO: Created: latency-svc-t87b9
  Oct 14 13:44:43.917: INFO: Got endpoints: latency-svc-bfhqm [747.925255ms]
  Oct 14 13:44:43.930: INFO: Created: latency-svc-hfndt
  Oct 14 13:44:43.968: INFO: Got endpoints: latency-svc-jdk7j [751.692018ms]
  Oct 14 13:44:43.980: INFO: Created: latency-svc-twpqq
  Oct 14 13:44:44.017: INFO: Got endpoints: latency-svc-khchv [749.764505ms]
  Oct 14 13:44:44.032: INFO: Created: latency-svc-sfrjj
  Oct 14 13:44:44.066: INFO: Got endpoints: latency-svc-sxv7j [747.619193ms]
  Oct 14 13:44:44.084: INFO: Created: latency-svc-blxd7
  Oct 14 13:44:44.115: INFO: Got endpoints: latency-svc-g2xlx [743.443569ms]
  Oct 14 13:44:44.131: INFO: Created: latency-svc-vpw4z
  Oct 14 13:44:44.166: INFO: Got endpoints: latency-svc-fkjw4 [745.897955ms]
  Oct 14 13:44:44.181: INFO: Created: latency-svc-kjrqf
  Oct 14 13:44:44.217: INFO: Got endpoints: latency-svc-cdmxt [746.819685ms]
  Oct 14 13:44:44.232: INFO: Created: latency-svc-df9vg
  Oct 14 13:44:44.268: INFO: Got endpoints: latency-svc-hmsl7 [752.775896ms]
  Oct 14 13:44:44.287: INFO: Created: latency-svc-8qwdz
  Oct 14 13:44:44.320: INFO: Got endpoints: latency-svc-psn8c [752.641875ms]
  Oct 14 13:44:44.340: INFO: Created: latency-svc-psg8h
  Oct 14 13:44:44.369: INFO: Got endpoints: latency-svc-4l5sb [747.645903ms]
  Oct 14 13:44:44.386: INFO: Created: latency-svc-fxqjd
  Oct 14 13:44:44.416: INFO: Got endpoints: latency-svc-7pnvc [744.898454ms]
  Oct 14 13:44:44.434: INFO: Created: latency-svc-d7ggn
  Oct 14 13:44:44.466: INFO: Got endpoints: latency-svc-vnzww [743.969935ms]
  Oct 14 13:44:44.481: INFO: Created: latency-svc-dsvq6
  Oct 14 13:44:44.520: INFO: Got endpoints: latency-svc-vzb72 [752.064029ms]
  Oct 14 13:44:44.535: INFO: Created: latency-svc-t27cc
  Oct 14 13:44:44.566: INFO: Got endpoints: latency-svc-nqrfp [749.658474ms]
  Oct 14 13:44:44.580: INFO: Created: latency-svc-lkjn2
  Oct 14 13:44:44.617: INFO: Got endpoints: latency-svc-t87b9 [748.181268ms]
  Oct 14 13:44:44.630: INFO: Created: latency-svc-t7hmh
  Oct 14 13:44:44.668: INFO: Got endpoints: latency-svc-hfndt [751.408322ms]
  Oct 14 13:44:44.682: INFO: Created: latency-svc-f99jw
  Oct 14 13:44:44.718: INFO: Got endpoints: latency-svc-twpqq [749.588973ms]
  Oct 14 13:44:44.731: INFO: Created: latency-svc-8zmpr
  Oct 14 13:44:44.766: INFO: Got endpoints: latency-svc-sfrjj [749.091699ms]
  Oct 14 13:44:44.780: INFO: Created: latency-svc-v2mm6
  Oct 14 13:44:44.823: INFO: Got endpoints: latency-svc-blxd7 [757.05603ms]
  E1014 13:44:44.841220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:44.844: INFO: Created: latency-svc-thlcj
  Oct 14 13:44:44.866: INFO: Got endpoints: latency-svc-vpw4z [750.454002ms]
  Oct 14 13:44:44.880: INFO: Created: latency-svc-zhz2c
  Oct 14 13:44:44.917: INFO: Got endpoints: latency-svc-kjrqf [750.480202ms]
  Oct 14 13:44:44.929: INFO: Created: latency-svc-dkpjq
  Oct 14 13:44:44.968: INFO: Got endpoints: latency-svc-df9vg [749.812715ms]
  Oct 14 13:44:44.980: INFO: Created: latency-svc-8qf6n
  Oct 14 13:44:45.019: INFO: Got endpoints: latency-svc-8qwdz [749.329571ms]
  Oct 14 13:44:45.035: INFO: Created: latency-svc-ndnst
  Oct 14 13:44:45.067: INFO: Got endpoints: latency-svc-psg8h [746.704094ms]
  Oct 14 13:44:45.080: INFO: Created: latency-svc-bdkpk
  Oct 14 13:44:45.117: INFO: Got endpoints: latency-svc-fxqjd [747.534642ms]
  Oct 14 13:44:45.131: INFO: Created: latency-svc-kh4cg
  Oct 14 13:44:45.171: INFO: Got endpoints: latency-svc-d7ggn [755.235092ms]
  Oct 14 13:44:45.188: INFO: Created: latency-svc-gh2x6
  Oct 14 13:44:45.219: INFO: Got endpoints: latency-svc-dsvq6 [752.830207ms]
  Oct 14 13:44:45.236: INFO: Created: latency-svc-z9wjc
  Oct 14 13:44:45.270: INFO: Got endpoints: latency-svc-t27cc [749.011827ms]
  Oct 14 13:44:45.292: INFO: Created: latency-svc-v5z8g
  Oct 14 13:44:45.457: INFO: Got endpoints: latency-svc-lkjn2 [890.739675ms]
  Oct 14 13:44:45.458: INFO: Got endpoints: latency-svc-t7hmh [840.953639ms]
  Oct 14 13:44:45.461: INFO: Got endpoints: latency-svc-f99jw [792.936522ms]
  Oct 14 13:44:45.473: INFO: Created: latency-svc-nbhf4
  Oct 14 13:44:45.474: INFO: Got endpoints: latency-svc-8zmpr [755.709487ms]
  Oct 14 13:44:45.479: INFO: Created: latency-svc-886s2
  Oct 14 13:44:45.487: INFO: Created: latency-svc-d6wlb
  Oct 14 13:44:45.493: INFO: Created: latency-svc-fnk7v
  Oct 14 13:44:45.516: INFO: Got endpoints: latency-svc-v2mm6 [750.115568ms]
  Oct 14 13:44:45.529: INFO: Created: latency-svc-pd27h
  Oct 14 13:44:45.567: INFO: Got endpoints: latency-svc-thlcj [744.539511ms]
  Oct 14 13:44:45.582: INFO: Created: latency-svc-zlktl
  Oct 14 13:44:45.617: INFO: Got endpoints: latency-svc-zhz2c [751.396042ms]
  Oct 14 13:44:45.632: INFO: Created: latency-svc-x4wb8
  Oct 14 13:44:45.667: INFO: Got endpoints: latency-svc-dkpjq [749.831656ms]
  Oct 14 13:44:45.678: INFO: Created: latency-svc-2fl9c
  Oct 14 13:44:45.719: INFO: Got endpoints: latency-svc-8qf6n [751.323921ms]
  Oct 14 13:44:45.732: INFO: Created: latency-svc-z82bd
  Oct 14 13:44:45.770: INFO: Got endpoints: latency-svc-ndnst [751.22013ms]
  Oct 14 13:44:45.787: INFO: Created: latency-svc-cs4nm
  Oct 14 13:44:45.817: INFO: Got endpoints: latency-svc-bdkpk [749.045758ms]
  Oct 14 13:44:45.831: INFO: Created: latency-svc-rsh2p
  E1014 13:44:45.842202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:45.869: INFO: Got endpoints: latency-svc-kh4cg [752.420453ms]
  Oct 14 13:44:45.883: INFO: Created: latency-svc-rqd7q
  Oct 14 13:44:45.920: INFO: Got endpoints: latency-svc-gh2x6 [748.393621ms]
  Oct 14 13:44:45.940: INFO: Created: latency-svc-qcrsh
  Oct 14 13:44:45.968: INFO: Got endpoints: latency-svc-z9wjc [748.846016ms]
  Oct 14 13:44:45.984: INFO: Created: latency-svc-wlbqm
  Oct 14 13:44:46.019: INFO: Got endpoints: latency-svc-v5z8g [748.787495ms]
  Oct 14 13:44:46.032: INFO: Created: latency-svc-rxvxr
  Oct 14 13:44:46.068: INFO: Got endpoints: latency-svc-nbhf4 [611.391372ms]
  Oct 14 13:44:46.082: INFO: Created: latency-svc-gsngz
  Oct 14 13:44:46.115: INFO: Got endpoints: latency-svc-886s2 [656.048295ms]
  Oct 14 13:44:46.128: INFO: Created: latency-svc-vkwzb
  Oct 14 13:44:46.169: INFO: Got endpoints: latency-svc-d6wlb [707.524128ms]
  Oct 14 13:44:46.181: INFO: Created: latency-svc-t4nwt
  Oct 14 13:44:46.218: INFO: Got endpoints: latency-svc-fnk7v [743.935605ms]
  Oct 14 13:44:46.233: INFO: Created: latency-svc-m5qxs
  Oct 14 13:44:46.267: INFO: Got endpoints: latency-svc-pd27h [750.045699ms]
  Oct 14 13:44:46.293: INFO: Created: latency-svc-m6n8n
  Oct 14 13:44:46.321: INFO: Got endpoints: latency-svc-zlktl [753.12727ms]
  Oct 14 13:44:46.339: INFO: Created: latency-svc-tb42w
  Oct 14 13:44:46.369: INFO: Got endpoints: latency-svc-x4wb8 [751.366781ms]
  Oct 14 13:44:46.386: INFO: Created: latency-svc-vnr6z
  Oct 14 13:44:46.416: INFO: Got endpoints: latency-svc-2fl9c [748.958047ms]
  Oct 14 13:44:46.430: INFO: Created: latency-svc-qgkp6
  Oct 14 13:44:46.470: INFO: Got endpoints: latency-svc-z82bd [750.749596ms]
  Oct 14 13:44:46.485: INFO: Created: latency-svc-trh7z
  Oct 14 13:44:46.519: INFO: Got endpoints: latency-svc-cs4nm [748.413671ms]
  Oct 14 13:44:46.537: INFO: Created: latency-svc-bcwqt
  Oct 14 13:44:46.565: INFO: Got endpoints: latency-svc-rsh2p [747.488441ms]
  Oct 14 13:44:46.581: INFO: Created: latency-svc-zfmzc
  Oct 14 13:44:46.619: INFO: Got endpoints: latency-svc-rqd7q [749.201579ms]
  Oct 14 13:44:46.632: INFO: Created: latency-svc-4ztns
  Oct 14 13:44:46.672: INFO: Got endpoints: latency-svc-qcrsh [751.920347ms]
  Oct 14 13:44:46.686: INFO: Created: latency-svc-ljmgq
  Oct 14 13:44:46.718: INFO: Got endpoints: latency-svc-wlbqm [749.704865ms]
  Oct 14 13:44:46.730: INFO: Created: latency-svc-vzp7n
  Oct 14 13:44:46.768: INFO: Got endpoints: latency-svc-rxvxr [748.782505ms]
  Oct 14 13:44:46.782: INFO: Created: latency-svc-sdwmt
  Oct 14 13:44:46.816: INFO: Got endpoints: latency-svc-gsngz [748.256739ms]
  Oct 14 13:44:46.832: INFO: Created: latency-svc-stl6j
  E1014 13:44:46.842387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:46.865: INFO: Got endpoints: latency-svc-vkwzb [750.820506ms]
  Oct 14 13:44:46.880: INFO: Created: latency-svc-9qwk5
  Oct 14 13:44:46.919: INFO: Got endpoints: latency-svc-t4nwt [750.155059ms]
  Oct 14 13:44:46.935: INFO: Created: latency-svc-wnpmz
  Oct 14 13:44:46.969: INFO: Got endpoints: latency-svc-m5qxs [750.920537ms]
  Oct 14 13:44:46.987: INFO: Created: latency-svc-zpz48
  Oct 14 13:44:47.016: INFO: Got endpoints: latency-svc-m6n8n [749.698254ms]
  Oct 14 13:44:47.029: INFO: Created: latency-svc-fv64j
  Oct 14 13:44:47.068: INFO: Got endpoints: latency-svc-tb42w [746.789224ms]
  Oct 14 13:44:47.085: INFO: Created: latency-svc-vnq4k
  Oct 14 13:44:47.117: INFO: Got endpoints: latency-svc-vnr6z [747.602823ms]
  Oct 14 13:44:47.133: INFO: Created: latency-svc-mtc48
  Oct 14 13:44:47.166: INFO: Got endpoints: latency-svc-qgkp6 [749.369181ms]
  Oct 14 13:44:47.180: INFO: Created: latency-svc-7zdf5
  Oct 14 13:44:47.223: INFO: Got endpoints: latency-svc-trh7z [752.757416ms]
  Oct 14 13:44:47.235: INFO: Created: latency-svc-p979g
  Oct 14 13:44:47.275: INFO: Got endpoints: latency-svc-bcwqt [756.633356ms]
  Oct 14 13:44:47.291: INFO: Created: latency-svc-8ll47
  Oct 14 13:44:47.325: INFO: Got endpoints: latency-svc-zfmzc [760.639628ms]
  Oct 14 13:44:47.339: INFO: Created: latency-svc-27hvp
  Oct 14 13:44:47.366: INFO: Got endpoints: latency-svc-4ztns [747.148768ms]
  Oct 14 13:44:47.383: INFO: Created: latency-svc-4q467
  Oct 14 13:44:47.416: INFO: Got endpoints: latency-svc-ljmgq [743.4957ms]
  Oct 14 13:44:47.430: INFO: Created: latency-svc-xp5gh
  Oct 14 13:44:47.468: INFO: Got endpoints: latency-svc-vzp7n [749.703045ms]
  Oct 14 13:44:47.479: INFO: Created: latency-svc-6dgfg
  Oct 14 13:44:47.518: INFO: Got endpoints: latency-svc-sdwmt [749.966087ms]
  Oct 14 13:44:47.533: INFO: Created: latency-svc-vb8bw
  Oct 14 13:44:47.568: INFO: Got endpoints: latency-svc-stl6j [751.472433ms]
  Oct 14 13:44:47.583: INFO: Created: latency-svc-75jtk
  Oct 14 13:44:47.617: INFO: Got endpoints: latency-svc-9qwk5 [750.839726ms]
  Oct 14 13:44:47.631: INFO: Created: latency-svc-9dkhj
  Oct 14 13:44:47.668: INFO: Got endpoints: latency-svc-wnpmz [748.506732ms]
  Oct 14 13:44:47.681: INFO: Created: latency-svc-xssg8
  Oct 14 13:44:47.719: INFO: Got endpoints: latency-svc-zpz48 [749.824366ms]
  Oct 14 13:44:47.737: INFO: Created: latency-svc-wx8j2
  Oct 14 13:44:47.767: INFO: Got endpoints: latency-svc-fv64j [750.365742ms]
  Oct 14 13:44:47.782: INFO: Created: latency-svc-rd9c9
  Oct 14 13:44:47.817: INFO: Got endpoints: latency-svc-vnq4k [748.868226ms]
  Oct 14 13:44:47.834: INFO: Created: latency-svc-w8r8n
  E1014 13:44:47.843320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:47.866: INFO: Got endpoints: latency-svc-mtc48 [749.474712ms]
  Oct 14 13:44:47.882: INFO: Created: latency-svc-hpq2q
  Oct 14 13:44:47.918: INFO: Got endpoints: latency-svc-7zdf5 [750.946667ms]
  Oct 14 13:44:47.929: INFO: Created: latency-svc-wjs9w
  Oct 14 13:44:47.971: INFO: Got endpoints: latency-svc-p979g [747.495192ms]
  Oct 14 13:44:47.982: INFO: Created: latency-svc-lbwr6
  Oct 14 13:44:48.019: INFO: Got endpoints: latency-svc-8ll47 [743.397689ms]
  Oct 14 13:44:48.032: INFO: Created: latency-svc-2nhw2
  Oct 14 13:44:48.065: INFO: Got endpoints: latency-svc-27hvp [739.038794ms]
  Oct 14 13:44:48.078: INFO: Created: latency-svc-tpdbq
  Oct 14 13:44:48.117: INFO: Got endpoints: latency-svc-4q467 [750.991708ms]
  Oct 14 13:44:48.131: INFO: Created: latency-svc-gncn9
  Oct 14 13:44:48.169: INFO: Got endpoints: latency-svc-xp5gh [753.301932ms]
  Oct 14 13:44:48.183: INFO: Created: latency-svc-qwsdc
  Oct 14 13:44:48.217: INFO: Got endpoints: latency-svc-6dgfg [748.753015ms]
  Oct 14 13:44:48.232: INFO: Created: latency-svc-kxbkq
  Oct 14 13:44:48.269: INFO: Got endpoints: latency-svc-vb8bw [750.397362ms]
  Oct 14 13:44:48.287: INFO: Created: latency-svc-hfdhj
  Oct 14 13:44:48.319: INFO: Got endpoints: latency-svc-75jtk [750.625134ms]
  Oct 14 13:44:48.338: INFO: Created: latency-svc-tpvgj
  Oct 14 13:44:48.366: INFO: Got endpoints: latency-svc-9dkhj [748.674774ms]
  Oct 14 13:44:48.377: INFO: Created: latency-svc-6smmz
  Oct 14 13:44:48.419: INFO: Got endpoints: latency-svc-xssg8 [750.213269ms]
  Oct 14 13:44:48.431: INFO: Created: latency-svc-qp8jx
  Oct 14 13:44:48.477: INFO: Got endpoints: latency-svc-wx8j2 [757.654676ms]
  Oct 14 13:44:48.492: INFO: Created: latency-svc-99s5p
  Oct 14 13:44:48.516: INFO: Got endpoints: latency-svc-rd9c9 [747.656393ms]
  Oct 14 13:44:48.530: INFO: Created: latency-svc-rtq6d
  Oct 14 13:44:48.568: INFO: Got endpoints: latency-svc-w8r8n [750.537313ms]
  Oct 14 13:44:48.581: INFO: Created: latency-svc-5kvh9
  Oct 14 13:44:48.616: INFO: Got endpoints: latency-svc-hpq2q [749.453472ms]
  Oct 14 13:44:48.631: INFO: Created: latency-svc-sptmx
  Oct 14 13:44:48.668: INFO: Got endpoints: latency-svc-wjs9w [749.639164ms]
  Oct 14 13:44:48.681: INFO: Created: latency-svc-vhb68
  Oct 14 13:44:48.719: INFO: Got endpoints: latency-svc-lbwr6 [748.722394ms]
  Oct 14 13:44:48.734: INFO: Created: latency-svc-lc79r
  Oct 14 13:44:48.766: INFO: Got endpoints: latency-svc-2nhw2 [746.478041ms]
  Oct 14 13:44:48.783: INFO: Created: latency-svc-9r8fn
  Oct 14 13:44:48.820: INFO: Got endpoints: latency-svc-tpdbq [755.12488ms]
  Oct 14 13:44:48.835: INFO: Created: latency-svc-hjt2x
  E1014 13:44:48.844035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:48.867: INFO: Got endpoints: latency-svc-gncn9 [749.449832ms]
  Oct 14 13:44:48.883: INFO: Created: latency-svc-942vb
  Oct 14 13:44:48.917: INFO: Got endpoints: latency-svc-qwsdc [748.128049ms]
  Oct 14 13:44:48.932: INFO: Created: latency-svc-9nqst
  Oct 14 13:44:48.967: INFO: Got endpoints: latency-svc-kxbkq [748.980028ms]
  Oct 14 13:44:48.979: INFO: Created: latency-svc-45kbb
  Oct 14 13:44:49.018: INFO: Got endpoints: latency-svc-hfdhj [748.226419ms]
  Oct 14 13:44:49.038: INFO: Created: latency-svc-d5sd9
  Oct 14 13:44:49.082: INFO: Got endpoints: latency-svc-tpvgj [762.193683ms]
  Oct 14 13:44:49.102: INFO: Created: latency-svc-w9m9d
  Oct 14 13:44:49.129: INFO: Got endpoints: latency-svc-6smmz [763.110923ms]
  Oct 14 13:44:49.168: INFO: Got endpoints: latency-svc-qp8jx [749.480482ms]
  Oct 14 13:44:49.217: INFO: Got endpoints: latency-svc-99s5p [740.186496ms]
  Oct 14 13:44:49.267: INFO: Got endpoints: latency-svc-rtq6d [749.906486ms]
  Oct 14 13:44:49.322: INFO: Got endpoints: latency-svc-5kvh9 [754.271952ms]
  Oct 14 13:44:49.368: INFO: Got endpoints: latency-svc-sptmx [751.555784ms]
  Oct 14 13:44:49.421: INFO: Got endpoints: latency-svc-vhb68 [753.485434ms]
  Oct 14 13:44:49.466: INFO: Got endpoints: latency-svc-lc79r [746.256969ms]
  Oct 14 13:44:49.516: INFO: Got endpoints: latency-svc-9r8fn [749.726155ms]
  Oct 14 13:44:49.568: INFO: Got endpoints: latency-svc-hjt2x [747.864815ms]
  Oct 14 13:44:49.619: INFO: Got endpoints: latency-svc-942vb [751.388503ms]
  Oct 14 13:44:49.669: INFO: Got endpoints: latency-svc-9nqst [751.523723ms]
  Oct 14 13:44:49.715: INFO: Got endpoints: latency-svc-45kbb [748.030627ms]
  Oct 14 13:44:49.767: INFO: Got endpoints: latency-svc-d5sd9 [748.790296ms]
  Oct 14 13:44:49.818: INFO: Got endpoints: latency-svc-w9m9d [736.478118ms]
  Oct 14 13:44:49.819: INFO: Latencies: [34.135605ms 51.086213ms 75.438732ms 81.140088ms 85.316519ms 95.671771ms 103.442508ms 117.594347ms 128.934579ms 138.756335ms 145.002196ms 153.144597ms 157.47684ms 159.179566ms 159.421069ms 163.475589ms 164.954754ms 167.795881ms 168.218036ms 171.237674ms 176.669459ms 184.405374ms 185.532026ms 185.942269ms 188.138801ms 189.359914ms 192.651936ms 195.460693ms 206.485822ms 209.086808ms 215.651372ms 222.790133ms 234.500658ms 238.866501ms 247.460115ms 258.727386ms 258.732536ms 282.811253ms 286.320137ms 298.975122ms 299.465347ms 304.912801ms 308.484635ms 318.776217ms 345.120806ms 357.847622ms 399.34123ms 432.129332ms 478.837372ms 536.093785ms 580.590563ms 611.391372ms 634.13981ms 652.997356ms 656.048295ms 697.295622ms 707.524128ms 736.478118ms 739.038794ms 740.186496ms 741.472611ms 742.539817ms 743.397689ms 743.443569ms 743.4957ms 743.935605ms 743.969935ms 744.539511ms 744.898454ms 745.897955ms 746.102852ms 746.256969ms 746.478041ms 746.704094ms 746.789224ms 746.819685ms 747.148768ms 747.381035ms 747.488441ms 747.492125ms 747.495192ms 747.534642ms 747.602823ms 747.619193ms 747.645903ms 747.656393ms 747.803479ms 747.840772ms 747.843249ms 747.864815ms 747.925255ms 748.030627ms 748.128049ms 748.181268ms 748.208142ms 748.226419ms 748.256739ms 748.393621ms 748.413671ms 748.506732ms 748.674774ms 748.722394ms 748.753015ms 748.782505ms 748.787495ms 748.790296ms 748.846016ms 748.868226ms 748.958047ms 748.980028ms 749.011827ms 749.02166ms 749.045758ms 749.091699ms 749.153833ms 749.201579ms 749.329571ms 749.369181ms 749.449832ms 749.453472ms 749.474712ms 749.480482ms 749.588973ms 749.639164ms 749.658474ms 749.698254ms 749.703045ms 749.704865ms 749.726155ms 749.764505ms 749.812715ms 749.824366ms 749.831656ms 749.906486ms 749.966087ms 750.045699ms 750.072561ms 750.115568ms 750.131149ms 750.141308ms 750.155059ms 750.166222ms 750.207102ms 750.213269ms 750.365742ms 750.397362ms 750.454002ms 750.480202ms 750.537313ms 750.625134ms 750.724276ms 750.749596ms 750.820506ms 750.839726ms 750.918149ms 750.920537ms 750.946667ms 750.991708ms 751.176662ms 751.22013ms 751.232822ms 751.323921ms 751.366781ms 751.388503ms 751.396042ms 751.408322ms 751.472433ms 751.523723ms 751.555784ms 751.692018ms 751.920347ms 752.027409ms 752.064029ms 752.098414ms 752.420453ms 752.641875ms 752.757416ms 752.760792ms 752.775896ms 752.830207ms 753.12727ms 753.301932ms 753.309838ms 753.485434ms 753.504692ms 754.271952ms 754.491138ms 755.12488ms 755.235092ms 755.709487ms 756.633356ms 757.05603ms 757.654676ms 757.883467ms 760.639628ms 762.193683ms 763.110923ms 792.936522ms 840.953639ms 890.739675ms]
  Oct 14 13:44:49.819: INFO: 50 %ile: 748.674774ms
  Oct 14 13:44:49.819: INFO: 90 %ile: 753.12727ms
  Oct 14 13:44:49.819: INFO: 99 %ile: 840.953639ms
  Oct 14 13:44:49.819: INFO: Total sample count: 200
  Oct 14 13:44:49.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9768" for this suite. @ 10/14/23 13:44:49.827
• [10.791 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
  E1014 13:44:49.844016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 10/14/23 13:44:49.844
  Oct 14 13:44:49.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename field-validation @ 10/14/23 13:44:49.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:49.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:49.875
  Oct 14 13:44:49.881: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  W1014 13:44:49.882204      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc005aa68a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1014 13:44:50.844147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:51.845124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1014 13:44:52.469667      19 warnings.go:70] unknown field "alpha"
  W1014 13:44:52.469835      19 warnings.go:70] unknown field "beta"
  W1014 13:44:52.469956      19 warnings.go:70] unknown field "delta"
  W1014 13:44:52.470076      19 warnings.go:70] unknown field "epsilon"
  W1014 13:44:52.470193      19 warnings.go:70] unknown field "gamma"
  E1014 13:44:52.845775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:44:53.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5588" for this suite. @ 10/14/23 13:44:53.048
• [3.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 10/14/23 13:44:53.062
  Oct 14 13:44:53.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 13:44:53.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:44:53.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:44:53.091
  STEP: Creating a test headless service @ 10/14/23 13:44:53.097
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8872.svc.cluster.local;sleep 1; done
   @ 10/14/23 13:44:53.103
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8872.svc.cluster.local;sleep 1; done
   @ 10/14/23 13:44:53.104
  STEP: creating a pod to probe DNS @ 10/14/23 13:44:53.104
  STEP: submitting the pod to kubernetes @ 10/14/23 13:44:53.105
  E1014 13:44:53.846746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:54.846815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:44:55.141
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:44:55.146
  Oct 14 13:44:55.159: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.170: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.181: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.190: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.199: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.207: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.213: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.220: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8872.svc.cluster.local from pod dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f: the server could not find the requested resource (get pods dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f)
  Oct 14 13:44:55.220: INFO: Lookups using dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8872.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8872.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8872.svc.cluster.local jessie_udp@dns-test-service-2.dns-8872.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8872.svc.cluster.local]

  Oct 14 13:44:55.266: INFO: Pod client logs for webserver: 
  Oct 14 13:44:55.275: INFO: Pod client logs for querier: 
  Oct 14 13:44:55.285: INFO: Pod client logs for jessie-querier: 
  E1014 13:44:55.846986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:56.847038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:57.848019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:58.848186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:44:59.848373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:00.349: INFO: DNS probes using dns-8872/dns-test-655f76be-43f6-48fc-9754-8b6b4bd4ba3f succeeded

  Oct 14 13:45:00.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:45:00.357
  STEP: deleting the test headless service @ 10/14/23 13:45:00.378
  STEP: Destroying namespace "dns-8872" for this suite. @ 10/14/23 13:45:00.399
• [7.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/14/23 13:45:00.418
  Oct 14 13:45:00.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename watch @ 10/14/23 13:45:00.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:00.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:00.459
  STEP: creating a new configmap @ 10/14/23 13:45:00.467
  STEP: modifying the configmap once @ 10/14/23 13:45:00.474
  STEP: modifying the configmap a second time @ 10/14/23 13:45:00.487
  STEP: deleting the configmap @ 10/14/23 13:45:00.499
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/14/23 13:45:00.508
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/14/23 13:45:00.511
  Oct 14 13:45:00.511: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1223  a1b7c5a1-a10c-480f-b50c-4e8a9e25c110 36876 0 2023-10-14 13:45:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-14 13:45:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:45:00.511: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1223  a1b7c5a1-a10c-480f-b50c-4e8a9e25c110 36877 0 2023-10-14 13:45:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-14 13:45:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:45:00.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1223" for this suite. @ 10/14/23 13:45:00.52
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 10/14/23 13:45:00.533
  Oct 14 13:45:00.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:45:00.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:00.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:00.565
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/14/23 13:45:00.573
  E1014 13:45:00.849081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:01.849223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:02.850046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:03.850223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:45:04.606
  Oct 14 13:45:04.610: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-50aeffe6-4a05-4267-a66f-8e7b100610ab container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:45:04.621
  Oct 14 13:45:04.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8146" for this suite. @ 10/14/23 13:45:04.648
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/14/23 13:45:04.675
  Oct 14 13:45:04.675: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/14/23 13:45:04.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:04.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:04.711
  STEP: Creating two CSIDrivers @ 10/14/23 13:45:04.717
  STEP: Getting "inline-driver-2efe4fcf-1008-4df2-8dc2-76b94d41e3bd" & "inline-driver-43114780-b02a-4a12-8e7d-ec12c263bce1" @ 10/14/23 13:45:04.741
  STEP: Patching the CSIDriver "inline-driver-43114780-b02a-4a12-8e7d-ec12c263bce1" @ 10/14/23 13:45:04.75
  STEP: Updating the CSIDriver "inline-driver-43114780-b02a-4a12-8e7d-ec12c263bce1" @ 10/14/23 13:45:04.761
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6027" @ 10/14/23 13:45:04.772
  STEP: Deleting CSIDriver "inline-driver-2efe4fcf-1008-4df2-8dc2-76b94d41e3bd" @ 10/14/23 13:45:04.777
  STEP: Confirm deletion of CSIDriver "inline-driver-2efe4fcf-1008-4df2-8dc2-76b94d41e3bd" @ 10/14/23 13:45:04.785
  STEP: Deleting CSIDriver "inline-driver-43114780-b02a-4a12-8e7d-ec12c263bce1" via DeleteCollection @ 10/14/23 13:45:04.79
  STEP: Confirm deletion of CSIDriver "inline-driver-43114780-b02a-4a12-8e7d-ec12c263bce1" @ 10/14/23 13:45:04.807
  Oct 14 13:45:04.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6027" for this suite. @ 10/14/23 13:45:04.818
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 10/14/23 13:45:04.831
  Oct 14 13:45:04.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:45:04.832
  E1014 13:45:04.850999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:04.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:04.857
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/14/23 13:45:04.863
  E1014 13:45:05.851882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:06.852415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:07.852611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:08.852782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:45:08.894
  Oct 14 13:45:08.899: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-04d86e26-6dc2-4724-b416-dc21b4ece6ef container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:45:08.908
  Oct 14 13:45:08.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7038" for this suite. @ 10/14/23 13:45:08.936
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 10/14/23 13:45:08.947
  Oct 14 13:45:08.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/23 13:45:08.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:08.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:08.976
  Oct 14 13:45:08.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:45:09.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4945" for this suite. @ 10/14/23 13:45:09.548
• [0.610 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/14/23 13:45:09.559
  Oct 14 13:45:09.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/23 13:45:09.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:09.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:09.595
  Oct 14 13:45:09.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-289" for this suite. @ 10/14/23 13:45:09.637
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 10/14/23 13:45:09.681
  Oct 14 13:45:09.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename cronjob @ 10/14/23 13:45:09.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:09.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:09.718
  STEP: Creating a cronjob @ 10/14/23 13:45:09.724
  STEP: creating @ 10/14/23 13:45:09.724
  STEP: getting @ 10/14/23 13:45:09.733
  STEP: listing @ 10/14/23 13:45:09.739
  STEP: watching @ 10/14/23 13:45:09.745
  Oct 14 13:45:09.745: INFO: starting watch
  STEP: cluster-wide listing @ 10/14/23 13:45:09.747
  STEP: cluster-wide watching @ 10/14/23 13:45:09.752
  Oct 14 13:45:09.752: INFO: starting watch
  STEP: patching @ 10/14/23 13:45:09.754
  STEP: updating @ 10/14/23 13:45:09.765
  Oct 14 13:45:09.776: INFO: waiting for watch events with expected annotations
  Oct 14 13:45:09.777: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/14/23 13:45:09.777
  STEP: updating /status @ 10/14/23 13:45:09.789
  STEP: get /status @ 10/14/23 13:45:09.801
  STEP: deleting @ 10/14/23 13:45:09.806
  STEP: deleting a collection @ 10/14/23 13:45:09.831
  Oct 14 13:45:09.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 13:45:09.853005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "cronjob-4912" for this suite. @ 10/14/23 13:45:09.858
• [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 10/14/23 13:45:09.875
  Oct 14 13:45:09.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename field-validation @ 10/14/23 13:45:09.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:09.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:09.908
  Oct 14 13:45:09.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:45:10.853333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:11.853755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1014 13:45:12.483562      19 warnings.go:70] unknown field "alpha"
  W1014 13:45:12.483848      19 warnings.go:70] unknown field "beta"
  W1014 13:45:12.484200      19 warnings.go:70] unknown field "delta"
  W1014 13:45:12.484327      19 warnings.go:70] unknown field "epsilon"
  W1014 13:45:12.484337      19 warnings.go:70] unknown field "gamma"
  E1014 13:45:12.853842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:13.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2366" for this suite. @ 10/14/23 13:45:13.059
• [3.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 10/14/23 13:45:13.083
  Oct 14 13:45:13.084: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename field-validation @ 10/14/23 13:45:13.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:13.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:13.114
  STEP: apply creating a deployment @ 10/14/23 13:45:13.118
  Oct 14 13:45:13.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8438" for this suite. @ 10/14/23 13:45:13.148
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 10/14/23 13:45:13.16
  Oct 14 13:45:13.160: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:45:13.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:13.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:13.191
  STEP: Setting up server cert @ 10/14/23 13:45:13.232
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:45:13.825
  STEP: Deploying the webhook pod @ 10/14/23 13:45:13.836
  E1014 13:45:13.854307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 10/14/23 13:45:13.854
  Oct 14 13:45:13.865: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1014 13:45:14.854805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:15.855912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:45:15.886
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:45:15.905
  E1014 13:45:16.856960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:16.906: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/14/23 13:45:16.916
  STEP: create a pod that should be denied by the webhook @ 10/14/23 13:45:16.94
  STEP: create a pod that causes the webhook to hang @ 10/14/23 13:45:16.958
  E1014 13:45:17.857215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:18.857416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:19.857462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:20.857648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:21.857903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:22.858170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:23.858184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:24.858237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:25.858457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:26.858848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 10/14/23 13:45:26.969
  STEP: create a configmap that should be admitted by the webhook @ 10/14/23 13:45:26.987
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/14/23 13:45:27.002
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/14/23 13:45:27.02
  STEP: create a namespace that bypass the webhook @ 10/14/23 13:45:27.028
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/14/23 13:45:27.08
  Oct 14 13:45:27.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7940" for this suite. @ 10/14/23 13:45:27.215
  STEP: Destroying namespace "webhook-markers-7922" for this suite. @ 10/14/23 13:45:27.23
  STEP: Destroying namespace "exempted-namespace-7572" for this suite. @ 10/14/23 13:45:27.239
• [14.088 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 10/14/23 13:45:27.249
  Oct 14 13:45:27.249: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:45:27.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:27.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:27.28
  STEP: Counting existing ResourceQuota @ 10/14/23 13:45:27.284
  E1014 13:45:27.859254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:28.859982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:29.860307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:30.860393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:31.860562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/23 13:45:32.291
  STEP: Ensuring resource quota status is calculated @ 10/14/23 13:45:32.298
  E1014 13:45:32.860575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:33.860666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:34.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6751" for this suite. @ 10/14/23 13:45:34.31
• [7.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 10/14/23 13:45:34.321
  Oct 14 13:45:34.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/23 13:45:34.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:34.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:34.348
  STEP: getting /apis @ 10/14/23 13:45:34.355
  STEP: getting /apis/node.k8s.io @ 10/14/23 13:45:34.36
  STEP: getting /apis/node.k8s.io/v1 @ 10/14/23 13:45:34.363
  STEP: creating @ 10/14/23 13:45:34.365
  STEP: watching @ 10/14/23 13:45:34.389
  Oct 14 13:45:34.389: INFO: starting watch
  STEP: getting @ 10/14/23 13:45:34.398
  STEP: listing @ 10/14/23 13:45:34.402
  STEP: patching @ 10/14/23 13:45:34.407
  STEP: updating @ 10/14/23 13:45:34.417
  Oct 14 13:45:34.424: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 10/14/23 13:45:34.424
  STEP: deleting a collection @ 10/14/23 13:45:34.442
  Oct 14 13:45:34.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6359" for this suite. @ 10/14/23 13:45:34.469
• [0.157 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/14/23 13:45:34.48
  Oct 14 13:45:34.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/14/23 13:45:34.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:34.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:34.519
  STEP: Creating 50 configmaps @ 10/14/23 13:45:34.53
  E1014 13:45:34.861518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 10/14/23 13:45:34.895
  Oct 14 13:45:34.918: INFO: Pod name wrapped-volume-race-a40d64df-1b20-458e-9647-a93aa5f41d38: Found 0 pods out of 5
  E1014 13:45:35.862032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:36.862198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:37.862342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:38.862467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:39.862595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:39.927: INFO: Pod name wrapped-volume-race-a40d64df-1b20-458e-9647-a93aa5f41d38: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/14/23 13:45:39.927
  STEP: Creating RC which spawns configmap-volume pods @ 10/14/23 13:45:39.958
  Oct 14 13:45:39.980: INFO: Pod name wrapped-volume-race-b2cec9ac-11f4-4251-975b-dd68d36024dd: Found 0 pods out of 5
  E1014 13:45:40.862869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:41.868905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:42.869085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:43.869227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:44.869560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:44.991: INFO: Pod name wrapped-volume-race-b2cec9ac-11f4-4251-975b-dd68d36024dd: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/14/23 13:45:44.991
  STEP: Creating RC which spawns configmap-volume pods @ 10/14/23 13:45:45.022
  Oct 14 13:45:45.044: INFO: Pod name wrapped-volume-race-40b46aa3-29c2-4c8d-ad7b-f7cafa3addea: Found 0 pods out of 5
  E1014 13:45:45.870201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:46.870329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:47.870448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:48.870834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:49.870918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:50.057: INFO: Pod name wrapped-volume-race-40b46aa3-29c2-4c8d-ad7b-f7cafa3addea: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/14/23 13:45:50.058
  Oct 14 13:45:50.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-40b46aa3-29c2-4c8d-ad7b-f7cafa3addea in namespace emptydir-wrapper-8126, will wait for the garbage collector to delete the pods @ 10/14/23 13:45:50.089
  Oct 14 13:45:50.153: INFO: Deleting ReplicationController wrapped-volume-race-40b46aa3-29c2-4c8d-ad7b-f7cafa3addea took: 8.4805ms
  Oct 14 13:45:50.354: INFO: Terminating ReplicationController wrapped-volume-race-40b46aa3-29c2-4c8d-ad7b-f7cafa3addea pods took: 200.445017ms
  E1014 13:45:50.871786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:51.872406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b2cec9ac-11f4-4251-975b-dd68d36024dd in namespace emptydir-wrapper-8126, will wait for the garbage collector to delete the pods @ 10/14/23 13:45:52.855
  E1014 13:45:52.872978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:45:52.920: INFO: Deleting ReplicationController wrapped-volume-race-b2cec9ac-11f4-4251-975b-dd68d36024dd took: 8.48437ms
  Oct 14 13:45:53.020: INFO: Terminating ReplicationController wrapped-volume-race-b2cec9ac-11f4-4251-975b-dd68d36024dd pods took: 100.724985ms
  E1014 13:45:53.891716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:54.892050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-a40d64df-1b20-458e-9647-a93aa5f41d38 in namespace emptydir-wrapper-8126, will wait for the garbage collector to delete the pods @ 10/14/23 13:45:55.621
  Oct 14 13:45:55.685: INFO: Deleting ReplicationController wrapped-volume-race-a40d64df-1b20-458e-9647-a93aa5f41d38 took: 8.797944ms
  Oct 14 13:45:55.785: INFO: Terminating ReplicationController wrapped-volume-race-a40d64df-1b20-458e-9647-a93aa5f41d38 pods took: 100.751115ms
  E1014 13:45:55.894194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:56.898353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:45:57.899147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/14/23 13:45:58.586
  E1014 13:45:58.899793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-8126" for this suite. @ 10/14/23 13:45:59.147
• [24.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 10/14/23 13:45:59.158
  Oct 14 13:45:59.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:45:59.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:45:59.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:45:59.189
  STEP: Setting up server cert @ 10/14/23 13:45:59.225
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:45:59.841
  STEP: Deploying the webhook pod @ 10/14/23 13:45:59.852
  STEP: Wait for the deployment to be ready @ 10/14/23 13:45:59.868
  Oct 14 13:45:59.879: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 13:45:59.900527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:00.900647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:46:01.893
  E1014 13:46:01.901451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:46:01.907
  E1014 13:46:02.901850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:46:02.908: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/14/23 13:46:02.917
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/14/23 13:46:02.952
  STEP: Creating a configMap that should not be mutated @ 10/14/23 13:46:02.963
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/14/23 13:46:02.985
  STEP: Creating a configMap that should be mutated @ 10/14/23 13:46:02.995
  Oct 14 13:46:03.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-857" for this suite. @ 10/14/23 13:46:03.093
  STEP: Destroying namespace "webhook-markers-1001" for this suite. @ 10/14/23 13:46:03.102
• [3.960 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 10/14/23 13:46:03.121
  Oct 14 13:46:03.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename endpointslice @ 10/14/23 13:46:03.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:03.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:03.151
  E1014 13:46:03.902010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:04.902094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:46:05.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-986" for this suite. @ 10/14/23 13:46:05.248
• [2.137 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 10/14/23 13:46:05.26
  Oct 14 13:46:05.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/23 13:46:05.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:05.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:05.292
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/23 13:46:05.306
  E1014 13:46:05.902723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:06.903168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:07.903591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:08.903862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/14/23 13:46:09.346
  E1014 13:46:09.904055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:10.904170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/14/23 13:46:11.368
  E1014 13:46:11.904231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:12.904357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/14/23 13:46:13.386
  Oct 14 13:46:13.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1999" for this suite. @ 10/14/23 13:46:13.415
• [8.164 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/14/23 13:46:13.426
  Oct 14 13:46:13.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:46:13.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:13.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:13.452
  STEP: Creating secret with name projected-secret-test-9da941b7-c05a-4836-9239-1c288cc19eb3 @ 10/14/23 13:46:13.457
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:46:13.463
  E1014 13:46:13.904751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:14.904879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:15.905592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:16.905955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:46:17.493
  Oct 14 13:46:17.497: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-secrets-3f3aef92-18a8-4621-8324-d1595a2f3b19 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:46:17.506
  Oct 14 13:46:17.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8875" for this suite. @ 10/14/23 13:46:17.619
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/14/23 13:46:17.631
  Oct 14 13:46:17.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename init-container @ 10/14/23 13:46:17.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:17.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:17.66
  STEP: creating the pod @ 10/14/23 13:46:17.666
  Oct 14 13:46:17.667: INFO: PodSpec: initContainers in spec.initContainers
  E1014 13:46:17.906573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:18.907631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:19.907734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:20.907923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:21.908749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:22.908852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:46:23.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8493" for this suite. @ 10/14/23 13:46:23.025
• [5.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/14/23 13:46:23.038
  Oct 14 13:46:23.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 13:46:23.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:23.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:23.067
  STEP: Creating secret with name secret-test-map-4e69b0de-c736-42fe-9c3f-a17c96d4e4db @ 10/14/23 13:46:23.073
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:46:23.08
  E1014 13:46:23.909874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:24.910441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:25.911146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:26.911930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:46:27.109
  Oct 14 13:46:27.114: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-bfcd42d9-a8f0-466e-ac75-31a4eb9e9686 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:46:27.123
  Oct 14 13:46:27.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-355" for this suite. @ 10/14/23 13:46:27.149
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 10/14/23 13:46:27.161
  Oct 14 13:46:27.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:46:27.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:27.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:27.197
  STEP: Creating a ResourceQuota @ 10/14/23 13:46:27.203
  STEP: Getting a ResourceQuota @ 10/14/23 13:46:27.211
  STEP: Updating a ResourceQuota @ 10/14/23 13:46:27.217
  STEP: Verifying a ResourceQuota was modified @ 10/14/23 13:46:27.227
  STEP: Deleting a ResourceQuota @ 10/14/23 13:46:27.233
  STEP: Verifying the deleted ResourceQuota @ 10/14/23 13:46:27.242
  Oct 14 13:46:27.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8586" for this suite. @ 10/14/23 13:46:27.253
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 10/14/23 13:46:27.266
  Oct 14 13:46:27.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:46:27.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:27.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:27.297
  Oct 14 13:46:27.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-7663 version'
  Oct 14 13:46:27.392: INFO: stderr: ""
  Oct 14 13:46:27.392: INFO: stdout: "Client Version: v1.28.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.2\n"
  Oct 14 13:46:27.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7663" for this suite. @ 10/14/23 13:46:27.398
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 10/14/23 13:46:27.408
  Oct 14 13:46:27.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 13:46:27.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:27.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:27.44
  STEP: Creating service test in namespace statefulset-9198 @ 10/14/23 13:46:27.444
  Oct 14 13:46:27.469: INFO: Found 0 stateful pods, waiting for 1
  E1014 13:46:27.912768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:28.912852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:29.912982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:30.913458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:31.914426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:32.914860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:33.914899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:34.915037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:35.915890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:36.915975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:46:37.474: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/14/23 13:46:37.483
  W1014 13:46:37.495416      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Oct 14 13:46:37.506: INFO: Found 1 stateful pods, waiting for 2
  E1014 13:46:37.916601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:38.916798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:39.916848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:40.917034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:41.917240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:42.917264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:43.917493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:44.917980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:45.918129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:46.918214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:46:47.512: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:46:47.512: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/14/23 13:46:47.521
  STEP: Delete all of the StatefulSets @ 10/14/23 13:46:47.526
  STEP: Verify that StatefulSets have been deleted @ 10/14/23 13:46:47.539
  Oct 14 13:46:47.545: INFO: Deleting all statefulset in ns statefulset-9198
  Oct 14 13:46:47.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9198" for this suite. @ 10/14/23 13:46:47.575
• [20.174 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/14/23 13:46:47.584
  Oct 14 13:46:47.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/14/23 13:46:47.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:47.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:47.621
  STEP: Setting up the test @ 10/14/23 13:46:47.627
  STEP: Creating hostNetwork=false pod @ 10/14/23 13:46:47.628
  E1014 13:46:47.918828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:48.919852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:49.919981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:50.920074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 10/14/23 13:46:51.66
  E1014 13:46:51.920633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:52.920737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 10/14/23 13:46:53.685
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/14/23 13:46:53.685
  Oct 14 13:46:53.686: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:53.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:53.687: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:53.687: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 14 13:46:53.785: INFO: Exec stderr: ""
  Oct 14 13:46:53.785: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:53.786: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:53.787: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:53.787: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 14 13:46:53.889: INFO: Exec stderr: ""
  Oct 14 13:46:53.889: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:53.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:53.890: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:53.890: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E1014 13:46:53.920992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:46:53.996: INFO: Exec stderr: ""
  Oct 14 13:46:53.996: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:53.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:53.997: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:53.997: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 14 13:46:54.111: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/14/23 13:46:54.112
  Oct 14 13:46:54.112: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:54.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:54.113: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:54.113: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct 14 13:46:54.227: INFO: Exec stderr: ""
  Oct 14 13:46:54.227: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:54.228: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:54.228: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:54.229: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct 14 13:46:54.334: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/14/23 13:46:54.334
  Oct 14 13:46:54.334: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:54.334: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:54.335: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:54.335: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 14 13:46:54.441: INFO: Exec stderr: ""
  Oct 14 13:46:54.442: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:54.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:54.443: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:54.443: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 14 13:46:54.534: INFO: Exec stderr: ""
  Oct 14 13:46:54.534: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:54.534: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:54.534: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:54.534: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 14 13:46:54.639: INFO: Exec stderr: ""
  Oct 14 13:46:54.639: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4986 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:46:54.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:46:54.640: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:46:54.640: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4986/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 14 13:46:54.735: INFO: Exec stderr: ""
  Oct 14 13:46:54.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4986" for this suite. @ 10/14/23 13:46:54.741
• [7.165 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 10/14/23 13:46:54.75
  Oct 14 13:46:54.750: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:46:54.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:54.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:54.779
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:46:54.783
  E1014 13:46:54.921318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:55.921645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:56.922612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:46:57.922809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:46:58.816
  Oct 14 13:46:58.821: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-f92de041-7a6a-4cb0-860b-1c3e69e55433 container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:46:58.83
  E1014 13:46:58.923854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:46:58.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7478" for this suite. @ 10/14/23 13:46:58.941
• [4.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 10/14/23 13:46:58.966
  Oct 14 13:46:58.966: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubectl @ 10/14/23 13:46:58.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:46:58.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:46:58.995
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/23 13:46:58.999
  Oct 14 13:46:58.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-2877 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct 14 13:46:59.109: INFO: stderr: ""
  Oct 14 13:46:59.109: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/14/23 13:46:59.109
  Oct 14 13:46:59.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-2877 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Oct 14 13:46:59.252: INFO: stderr: ""
  Oct 14 13:46:59.252: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/23 13:46:59.252
  Oct 14 13:46:59.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=kubectl-2877 delete pods e2e-test-httpd-pod'
  E1014 13:46:59.929830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:00.929939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:01.595: INFO: stderr: ""
  Oct 14 13:47:01.595: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 14 13:47:01.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2877" for this suite. @ 10/14/23 13:47:01.601
• [2.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/14/23 13:47:01.611
  Oct 14 13:47:01.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename conformance-tests @ 10/14/23 13:47:01.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:01.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:01.641
  STEP: Getting node addresses @ 10/14/23 13:47:01.645
  Oct 14 13:47:01.645: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Oct 14 13:47:01.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3187" for this suite. @ 10/14/23 13:47:01.659
• [0.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 10/14/23 13:47:01.67
  Oct 14 13:47:01.670: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename replication-controller @ 10/14/23 13:47:01.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:01.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:01.699
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/14/23 13:47:01.705
  E1014 13:47:01.930085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:02.930247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 10/14/23 13:47:03.729
  STEP: Then the orphan pod is adopted @ 10/14/23 13:47:03.736
  E1014 13:47:03.930579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:04.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7423" for this suite. @ 10/14/23 13:47:04.753
• [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 10/14/23 13:47:04.764
  Oct 14 13:47:04.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:47:04.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:04.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:04.795
  STEP: Counting existing ResourceQuota @ 10/14/23 13:47:04.799
  E1014 13:47:04.931085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:05.932168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:06.932121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:07.933180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:08.933614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/23 13:47:09.805
  STEP: Ensuring resource quota status is calculated @ 10/14/23 13:47:09.812
  E1014 13:47:09.933760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:10.933858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 10/14/23 13:47:11.817
  STEP: Ensuring resource quota status captures replicaset creation @ 10/14/23 13:47:11.831
  E1014 13:47:11.934915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:12.935902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 10/14/23 13:47:13.836
  STEP: Ensuring resource quota status released usage @ 10/14/23 13:47:13.844
  E1014 13:47:13.936258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:14.936422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:15.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9793" for this suite. @ 10/14/23 13:47:15.858
• [11.104 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 10/14/23 13:47:15.869
  Oct 14 13:47:15.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-probe @ 10/14/23 13:47:15.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:15.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:15.9
  STEP: Creating pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739 @ 10/14/23 13:47:15.904
  E1014 13:47:15.937533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:16.937950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/23 13:47:17.926
  Oct 14 13:47:17.930: INFO: Initial restart count of pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 is 0
  E1014 13:47:17.938815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:17.939: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:18.939004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:19.939349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:19.946: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:20.939453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:21.939629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:21.952: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:22.939785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:23.940186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:23.957: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:24.940586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:25.942836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:25.966: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:26.943036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:27.943974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:27.971: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:28.943971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:29.944090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:29.979: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:30.944589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:31.944689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:31.985: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:32.944813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:33.944952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:33.990: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:34.945015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:35.945156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:35.998: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  E1014 13:47:36.945269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:37.945395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:38.004: INFO: Get pod liveness-a882e450-5e06-4691-84e3-ca9783e76a66 in namespace container-probe-3739
  Oct 14 13:47:38.004: INFO: Restart count of pod container-probe-3739/liveness-a882e450-5e06-4691-84e3-ca9783e76a66 is now 1 (20.074051929s elapsed)
  Oct 14 13:47:38.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:47:38.01
  STEP: Destroying namespace "container-probe-3739" for this suite. @ 10/14/23 13:47:38.027
• [22.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 10/14/23 13:47:38.038
  Oct 14 13:47:38.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename namespaces @ 10/14/23 13:47:38.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:38.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:38.076
  STEP: creating a Namespace @ 10/14/23 13:47:38.083
  STEP: patching the Namespace @ 10/14/23 13:47:38.154
  STEP: get the Namespace and ensuring it has the label @ 10/14/23 13:47:38.165
  Oct 14 13:47:38.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4565" for this suite. @ 10/14/23 13:47:38.195
  STEP: Destroying namespace "nspatchtest-1532df59-e1e6-462e-be85-c1159cd1b84c-472" for this suite. @ 10/14/23 13:47:38.207
• [0.178 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 10/14/23 13:47:38.218
  Oct 14 13:47:38.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename namespaces @ 10/14/23 13:47:38.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:38.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:38.25
  STEP: Updating Namespace "namespaces-5453" @ 10/14/23 13:47:38.254
  Oct 14 13:47:38.268: INFO: Namespace "namespaces-5453" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8554ae27-d7aa-42b5-815e-f33729f793c8", "kubernetes.io/metadata.name":"namespaces-5453", "namespaces-5453":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Oct 14 13:47:38.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5453" for this suite. @ 10/14/23 13:47:38.274
• [0.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 10/14/23 13:47:38.291
  Oct 14 13:47:38.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename job @ 10/14/23 13:47:38.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:38.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:38.326
  STEP: Creating a job @ 10/14/23 13:47:38.333
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/14/23 13:47:38.343
  E1014 13:47:38.945992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:39.946780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/14/23 13:47:40.351
  STEP: updating /status @ 10/14/23 13:47:40.363
  STEP: get /status @ 10/14/23 13:47:40.376
  Oct 14 13:47:40.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6819" for this suite. @ 10/14/23 13:47:40.388
• [2.108 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 10/14/23 13:47:40.4
  Oct 14 13:47:40.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:47:40.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:40.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:40.431
  STEP: Creating configMap with name configmap-test-volume-map-f3caf8f6-9d90-4353-bf1b-06a94a00883e @ 10/14/23 13:47:40.437
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:47:40.445
  E1014 13:47:40.947524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:41.947937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:42.948756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:43.948880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:47:44.483
  Oct 14 13:47:44.487: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-configmaps-37bd8664-2913-44ea-b549-4f43f47f020b container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:47:44.497
  Oct 14 13:47:44.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7550" for this suite. @ 10/14/23 13:47:44.529
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/14/23 13:47:44.541
  Oct 14 13:47:44.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 13:47:44.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:44.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:44.573
  Oct 14 13:47:44.593: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E1014 13:47:44.949861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:45.950172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:46.950270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:47.950355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:48.950826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:49.599: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/23 13:47:49.6
  Oct 14 13:47:49.601: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/14/23 13:47:49.615
  Oct 14 13:47:49.633: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2a37b0b-bc7f-40ba-9bc2-c7ef64e6cb15",
      ResourceVersion: (string) (len=5) "38991",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 14 13:47:49.674: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ae3012f-b136-4047-b130-6d786d2c823a",
      ResourceVersion: (string) (len=5) "38998",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "a2a37b0b-bc7f-40ba-9bc2-c7ef64e6cb15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 32 61 33 37 62  30 62 2d 62 63 37 66 2d  |\"a2a37b0b-bc7f-|
              00000120  34 30 62 61 2d 39 62 63  32 2d 63 37 65 66 36 34  |40ba-9bc2-c7ef64|
              00000130  65 36 63 62 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e6cb15\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=40) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 7d 7d                           |on":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 13:47:49.677: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Oct 14 13:47:49.677: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61418f5c-c08a-4d06-ac94-f9aaea4adb93",
      ResourceVersion: (string) (len=5) "38992",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888064,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "a2a37b0b-bc7f-40ba-9bc2-c7ef64e6cb15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 61 32 61 33 37 62 30  |"uid\":\"a2a37b0|
              00000040  62 2d 62 63 37 66 2d 34  30 62 61 2d 39 62 63 32  |b-bc7f-40ba-9bc2|
              00000050  2d 63 37 65 66 36 34 65  36 63 62 31 35 5c 22 7d  |-c7ef64e6cb15\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 13:47:49.700: INFO: Pod "test-cleanup-controller-fp7ch" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-fp7ch",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb8e6ce7-e8ed-497b-ad9e-e27a953c1d41",
      ResourceVersion: (string) (len=5) "38981",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888064,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "61418f5c-c08a-4d06-ac94-f9aaea4adb93",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 31 34 31 38 66 35 63  |uid\":\"61418f5c|
              00000080  2d 63 30 38 61 2d 34 64  30 36 2d 61 63 39 34 2d  |-c08a-4d06-ac94-|
              00000090  66 39 61 61 65 61 34 61  64 62 39 33 5c 22 7d 22  |f9aaea4adb93\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 32 37 2e 31 34 39 5c  |192.168.127.149\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7ggp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7ggp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888064,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888064,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832888065,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://eb106ac56f1f0a6fa629ad0117130858b2220493b7398c2cccdd193792c4f041",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 13:47:49.713: INFO: Pod "test-cleanup-deployment-58dcc84f74-gjw7h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-gjw7h",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-4570",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62962cec-c89c-4d6b-ad3f-b974f0ce46b4",
      ResourceVersion: (string) (len=5) "39003",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "9ae3012f-b136-4047-b130-6d786d2c823a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 61  65 33 30 31 32 66 2d 62  |d\":\"9ae3012f-b|
              00000090  31 33 36 2d 34 30 34 37  2d 62 31 33 30 2d 36 64  |136-4047-b130-6d|
              000000a0  37 38 36 64 32 63 38 32  33 61 5c 22 7d 22 3a 7b  |786d2c823a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8gxjq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8gxjq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 13:47:49.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4570" for this suite. @ 10/14/23 13:47:49.72
• [5.188 seconds]
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 10/14/23 13:47:49.729
  Oct 14 13:47:49.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 13:47:49.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:49.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:49.763
  STEP: Creating a test headless service @ 10/14/23 13:47:49.767
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_udp@PTR;check="$$(dig +tcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_tcp@PTR;sleep 1; done
   @ 10/14/23 13:47:49.79
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8715.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8715.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8715.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8715.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_udp@PTR;check="$$(dig +tcp +noall +answer +search 34.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.34_tcp@PTR;sleep 1; done
   @ 10/14/23 13:47:49.79
  STEP: creating a pod to probe DNS @ 10/14/23 13:47:49.79
  STEP: submitting the pod to kubernetes @ 10/14/23 13:47:49.79
  E1014 13:47:49.951418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:50.951972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:51.952196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:52.952268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:47:53.839
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:47:53.843
  Oct 14 13:47:53.851: INFO: Unable to read wheezy_udp@dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.857: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.862: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.868: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.896: INFO: Unable to read jessie_udp@dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.902: INFO: Unable to read jessie_tcp@dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.909: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.915: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local from pod dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7: the server could not find the requested resource (get pods dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7)
  Oct 14 13:47:53.938: INFO: Lookups using dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7 failed for: [wheezy_udp@dns-test-service.dns-8715.svc.cluster.local wheezy_tcp@dns-test-service.dns-8715.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local jessie_udp@dns-test-service.dns-8715.svc.cluster.local jessie_tcp@dns-test-service.dns-8715.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8715.svc.cluster.local]

  Oct 14 13:47:53.948: INFO: Pod client logs for webserver: 
  E1014 13:47:53.952687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:53.957: INFO: Pod client logs for querier: 
  Oct 14 13:47:53.965: INFO: Pod client logs for jessie-querier: 
  E1014 13:47:54.952812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:55.953034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:56.953582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:57.953724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:47:58.953869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:47:59.070: INFO: DNS probes using dns-8715/dns-test-edfec44f-3c4e-4bcc-b190-e3e38a1a53c7 succeeded

  Oct 14 13:47:59.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:47:59.077
  STEP: deleting the test service @ 10/14/23 13:47:59.107
  STEP: deleting the test headless service @ 10/14/23 13:47:59.146
  STEP: Destroying namespace "dns-8715" for this suite. @ 10/14/23 13:47:59.162
• [9.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 10/14/23 13:47:59.202
  Oct 14 13:47:59.202: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:47:59.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:47:59.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:47:59.232
  STEP: creating service in namespace services-1703 @ 10/14/23 13:47:59.237
  STEP: creating service affinity-nodeport in namespace services-1703 @ 10/14/23 13:47:59.237
  STEP: creating replication controller affinity-nodeport in namespace services-1703 @ 10/14/23 13:47:59.253
  I1014 13:47:59.261447      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1703, replica count: 3
  E1014 13:47:59.954349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:00.955435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:01.955637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1014 13:48:02.313288      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 14 13:48:02.329: INFO: Creating new exec pod
  E1014 13:48:02.955811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:03.956156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:04.957189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:48:05.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-1703 exec execpod-affinitynf2tn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Oct 14 13:48:05.557: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Oct 14 13:48:05.557: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:48:05.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-1703 exec execpod-affinitynf2tn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  Oct 14 13:48:05.747: INFO: stderr: "+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 14 13:48:05.747: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:48:05.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-1703 exec execpod-affinitynf2tn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.199 31239'
  Oct 14 13:48:05.946: INFO: stderr: "+ nc -v -t -w 2 172.31.16.199 31239\n+ echo hostName\nConnection to 172.31.16.199 31239 port [tcp/*] succeeded!\n"
  Oct 14 13:48:05.946: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:48:05.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-1703 exec execpod-affinitynf2tn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.21 31239'
  E1014 13:48:05.957230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:48:06.160: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.35.21 31239\nConnection to 172.31.35.21 31239 port [tcp/*] succeeded!\n"
  Oct 14 13:48:06.160: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 14 13:48:06.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=services-1703 exec execpod-affinitynf2tn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.199:31239/ ; done'
  Oct 14 13:48:06.522: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.199:31239/\n"
  Oct 14 13:48:06.522: INFO: stdout: "\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n\naffinity-nodeport-phv8n"
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Received response from host: affinity-nodeport-phv8n
  Oct 14 13:48:06.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:48:06.528: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1703, will wait for the garbage collector to delete the pods @ 10/14/23 13:48:06.543
  Oct 14 13:48:06.608: INFO: Deleting ReplicationController affinity-nodeport took: 9.820969ms
  Oct 14 13:48:06.709: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.728979ms
  E1014 13:48:06.958144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:07.958610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:08.961139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:09.961723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1703" for this suite. @ 10/14/23 13:48:10.143
• [10.953 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 10/14/23 13:48:10.155
  Oct 14 13:48:10.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/23 13:48:10.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:48:10.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:48:10.181
  Oct 14 13:48:10.204: INFO: Waiting up to 1m0s for all nodes to be ready
  E1014 13:48:10.962523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:11.962781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:12.963067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:13.963383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:14.964104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:15.964314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:16.964439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:17.965002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:18.965138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:19.965890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:20.966805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:21.966898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:22.967011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:23.967055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:24.967231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:25.967356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:26.967437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:27.968107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:28.968309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:29.968395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:30.968548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:31.969022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:32.969167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:33.969243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:34.969377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:35.969610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:36.969704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:37.969913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:38.970781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:39.970897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:40.971026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:41.971110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:42.971843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:43.972482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:44.973411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:45.973692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:46.974883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:47.974992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:48.975148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:49.975206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:50.975355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:51.975976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:52.976095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:53.976297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:54.977189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:55.977732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:56.978156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:57.978553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:58.979069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:48:59.979269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:00.979389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:01.979491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:02.979906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:03.979998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:04.980737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:05.980884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:06.981488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:07.981928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:08.982133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:09.982551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:10.238: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/14/23 13:49:10.244
  Oct 14 13:49:10.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/14/23 13:49:10.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:49:10.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:49:10.274
  STEP: Finding an available node @ 10/14/23 13:49:10.28
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/14/23 13:49:10.28
  E1014 13:49:10.983641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:11.984594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/14/23 13:49:12.307
  Oct 14 13:49:12.322: INFO: found a healthy node: ip-172-31-35-21
  E1014 13:49:12.985486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:13.985514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:14.985709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:15.986053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:16.986251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:17.986275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:18.416: INFO: pods created so far: [1 1 1]
  Oct 14 13:49:18.416: INFO: length of pods created so far: 3
  E1014 13:49:18.987347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:19.987392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:20.431: INFO: pods created so far: [2 2 1]
  E1014 13:49:20.987950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:21.988112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:22.988217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:23.988444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:24.988500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:25.989569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:26.990968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:27.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:49:27.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3582" for this suite. @ 10/14/23 13:49:27.537
  STEP: Destroying namespace "sched-preemption-8973" for this suite. @ 10/14/23 13:49:27.545
• [77.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 10/14/23 13:49:27.557
  Oct 14 13:49:27.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:49:27.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:49:27.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:49:27.589
  STEP: Creating configMap with name projected-configmap-test-volume-map-788e7f69-b8e3-4be8-ab65-e9cdc14f802f @ 10/14/23 13:49:27.594
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:49:27.603
  E1014 13:49:27.992543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:28.992656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:29.995105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:30.995204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:49:31.64
  Oct 14 13:49:31.644: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-projected-configmaps-af0402eb-2758-498d-bf9e-83c4b7b2fee8 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:49:31.671
  Oct 14 13:49:31.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-162" for this suite. @ 10/14/23 13:49:31.699
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 10/14/23 13:49:31.709
  Oct 14 13:49:31.709: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:49:31.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:49:31.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:49:31.739
  STEP: Counting existing ResourceQuota @ 10/14/23 13:49:31.748
  E1014 13:49:31.995609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:32.996575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:33.997560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:34.998132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:35.999156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/23 13:49:36.752
  STEP: Ensuring resource quota status is calculated @ 10/14/23 13:49:36.76
  E1014 13:49:36.999850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:37.999973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 10/14/23 13:49:38.765
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/14/23 13:49:38.786
  E1014 13:49:39.000477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:40.000554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/14/23 13:49:40.791
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/14/23 13:49:40.794
  STEP: Ensuring a pod cannot update its resource requirements @ 10/14/23 13:49:40.797
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/14/23 13:49:40.802
  E1014 13:49:41.001115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:42.001220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/23 13:49:42.808
  STEP: Ensuring resource quota status released the pod usage @ 10/14/23 13:49:42.839
  E1014 13:49:43.002376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:44.002440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:44.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1469" for this suite. @ 10/14/23 13:49:44.855
• [13.158 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/14/23 13:49:44.869
  Oct 14 13:49:44.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/14/23 13:49:44.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:49:44.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:49:44.903
  STEP: creating a target pod @ 10/14/23 13:49:44.907
  E1014 13:49:45.003419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:46.003578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/14/23 13:49:46.939
  E1014 13:49:47.004286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:48.005295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/14/23 13:49:48.96
  Oct 14 13:49:48.960: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-647 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:49:48.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:49:48.961: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:49:48.961: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-647/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  E1014 13:49:49.005513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:49.061: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/14/23 13:49:49.084
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/14/23 13:49:49.089
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/14/23 13:49:49.106
  Oct 14 13:49:49.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-647" for this suite. @ 10/14/23 13:49:49.117
• [4.259 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 10/14/23 13:49:49.128
  Oct 14 13:49:49.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:49:49.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:49:49.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:49:49.159
  STEP: Creating Pod @ 10/14/23 13:49:49.163
  E1014 13:49:50.005841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:51.006839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 10/14/23 13:49:51.196
  Oct 14 13:49:51.196: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8962 PodName:pod-sharedvolume-6ffb45c5-0597-46a1-8f6e-cfdcfa9df6dc ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 14 13:49:51.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:49:51.197: INFO: ExecWithOptions: Clientset creation
  Oct 14 13:49:51.197: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-8962/pods/pod-sharedvolume-6ffb45c5-0597-46a1-8f6e-cfdcfa9df6dc/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Oct 14 13:49:51.294: INFO: Exec stderr: ""
  Oct 14 13:49:51.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8962" for this suite. @ 10/14/23 13:49:51.3
• [2.183 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/14/23 13:49:51.312
  Oct 14 13:49:51.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 13:49:51.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:49:51.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:49:51.352
  STEP: Creating secret with name secret-test-97d32799-fc38-498f-bd08-187bda61ed32 @ 10/14/23 13:49:51.384
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:49:51.389
  E1014 13:49:52.006966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:53.007298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:54.007851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:49:55.008073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:49:55.417
  Oct 14 13:49:55.421: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-55db1a85-575c-4f48-9ec3-9573fe5471b0 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:49:55.435
  Oct 14 13:49:55.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1249" for this suite. @ 10/14/23 13:49:55.464
  STEP: Destroying namespace "secret-namespace-135" for this suite. @ 10/14/23 13:49:55.474
• [4.171 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/14/23 13:49:55.484
  Oct 14 13:49:55.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 13:49:55.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:49:55.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:49:55.513
  STEP: creating a Deployment @ 10/14/23 13:49:55.523
  STEP: waiting for Deployment to be created @ 10/14/23 13:49:55.53
  STEP: waiting for all Replicas to be Ready @ 10/14/23 13:49:55.534
  Oct 14 13:49:55.536: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 14 13:49:55.536: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 14 13:49:55.553: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 14 13:49:55.553: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 14 13:49:55.591: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 14 13:49:55.591: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 14 13:49:55.619: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 14 13:49:55.619: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1014 13:49:56.009403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:56.986: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Oct 14 13:49:56.986: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E1014 13:49:57.009922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:57.356: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/14/23 13:49:57.356
  Oct 14 13:49:57.368: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/14/23 13:49:57.368
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 0
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.372: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.386: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.386: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.418: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.418: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:57.442: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:49:57.443: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:49:57.458: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:49:57.458: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  E1014 13:49:58.010109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:59.007: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:49:59.007: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  E1014 13:49:59.010420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:49:59.050: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  STEP: listing Deployments @ 10/14/23 13:49:59.05
  Oct 14 13:49:59.057: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/14/23 13:49:59.057
  Oct 14 13:49:59.078: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/14/23 13:49:59.078
  Oct 14 13:49:59.088: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 14 13:49:59.097: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 14 13:49:59.131: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 14 13:49:59.158: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 14 13:49:59.176: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1014 13:50:00.010818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:00.361: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1014 13:50:01.011528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:01.022: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 14 13:50:01.081: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 14 13:50:01.091: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1014 13:50:02.011996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:02.392: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/14/23 13:50:02.424
  STEP: fetching the DeploymentStatus @ 10/14/23 13:50:02.438
  Oct 14 13:50:02.449: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:50:02.449: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:50:02.450: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:50:02.450: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:50:02.451: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 1
  Oct 14 13:50:02.451: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:50:02.451: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 3
  Oct 14 13:50:02.451: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:50:02.451: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 2
  Oct 14 13:50:02.452: INFO: observed Deployment test-deployment in namespace deployment-5446 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/14/23 13:50:02.452
  Oct 14 13:50:02.467: INFO: observed event type MODIFIED
  Oct 14 13:50:02.467: INFO: observed event type MODIFIED
  Oct 14 13:50:02.467: INFO: observed event type MODIFIED
  Oct 14 13:50:02.467: INFO: observed event type MODIFIED
  Oct 14 13:50:02.467: INFO: observed event type MODIFIED
  Oct 14 13:50:02.467: INFO: observed event type MODIFIED
  Oct 14 13:50:02.467: INFO: observed event type MODIFIED
  Oct 14 13:50:02.468: INFO: observed event type MODIFIED
  Oct 14 13:50:02.468: INFO: observed event type MODIFIED
  Oct 14 13:50:02.468: INFO: observed event type MODIFIED
  Oct 14 13:50:02.468: INFO: observed event type MODIFIED
  Oct 14 13:50:02.468: INFO: observed event type MODIFIED
  Oct 14 13:50:02.468: INFO: observed event type MODIFIED
  Oct 14 13:50:02.475: INFO: Log out all the ReplicaSets if there is no deployment created
  Oct 14 13:50:02.483: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "535cf714-496e-49e1-886c-6926d736b420",
      ResourceVersion: (string) (len=5) "40109",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888197,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b7d89865-a939-423b-903f-79957e662272",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 37 64 38  39 38 36 35 2d 61 39 33  |":\"b7d89865-a93|
              00000130  39 2d 34 32 33 62 2d 39  30 33 66 2d 37 39 39 35  |9-423b-903f-7995|
              00000140  37 65 36 36 32 32 37 32  5c 22 7d 22 3a 7b 7d 7d  |7e662272\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Oct 14 13:50:02.496: INFO: pod: "test-deployment-64fd565c98-mxtq4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-mxtq4",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67a0b42e-2de0-4297-a889-9aeb381ec265",
      ResourceVersion: (string) (len=5) "40105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888204,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "535cf714-496e-49e1-886c-6926d736b420",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 33 35 63 66 37 31 34  |uid\":\"535cf714|
              000000a0  2d 34 39 36 65 2d 34 39  65 31 2d 38 38 36 63 2d  |-496e-49e1-886c-|
              000000b0  36 39 32 36 64 37 33 36  62 34 32 30 5c 22 7d 22  |6926d736b420\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 32 37 2e 31 36 38 5c  |192.168.127.168\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tlb8l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tlb8l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832888200,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://53c10444e2ca7f28350d9ff88b986d4cb7ab4c16106df3bc8c49d3adbdd38bd0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Oct 14 13:50:02.503: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b19df87c-1392-4c6c-9ee4-55b818172c06",
      ResourceVersion: (string) (len=5) "39987",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888195,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b7d89865-a939-423b-903f-79957e662272",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888198,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 37 64 38  39 38 36 35 2d 61 39 33  |":\"b7d89865-a93|
              00000130  39 2d 34 32 33 62 2d 39  30 33 66 2d 37 39 39 35  |9-423b-903f-7995|
              00000140  37 65 36 36 32 32 37 32  5c 22 7d 22 3a 7b 7d 7d  |7e662272\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Oct 14 13:50:02.514: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65637d5d-5c6f-463f-b711-5fae4318f7b0",
      ResourceVersion: (string) (len=5) "40101",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b7d89865-a939-423b-903f-79957e662272",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 37 64 38  39 38 36 35 2d 61 39 33  |":\"b7d89865-a93|
              00000130  39 2d 34 32 33 62 2d 39  30 33 66 2d 37 39 39 35  |9-423b-903f-7995|
              00000140  37 65 36 36 32 32 37 32  5c 22 7d 22 3a 7b 7d 7d  |7e662272\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Oct 14 13:50:02.520: INFO: pod: "test-deployment-79ff746c4-ht8p9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-ht8p9",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0aee2a7-99f8-4bce-aaf1-0852ceb4d4f9",
      ResourceVersion: (string) (len=5) "40118",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888201,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888203,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "65637d5d-5c6f-463f-b711-5fae4318f7b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 35 36 33 37 64 35 64  |uid\":\"65637d5d|
              000000a0  2d 35 63 36 66 2d 34 36  33 66 2d 62 37 31 31 2d  |-5c6f-463f-b711-|
              000000b0  35 66 61 65 34 33 31 38  66 37 62 30 5c 22 7d 22  |5fae4318f7b0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 32 37 2e 31 34 31 5c  |192.168.127.141\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7lz6v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7lz6v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888201,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832888201,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4b35b3dcd72125a4b7470e343a440cb776cddff2dfb5f38064de4b91c5544270",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Oct 14 13:50:02.528: INFO: pod: "test-deployment-79ff746c4-s7g6m":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-s7g6m",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5446",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37ed1e12-9520-48a8-bd54-86d9347564d3",
      ResourceVersion: (string) (len=5) "40117",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888203,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "65637d5d-5c6f-463f-b711-5fae4318f7b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 35 36 33 37 64 35 64  |uid\":\"65637d5d|
              000000a0  2d 35 63 36 66 2d 34 36  33 66 2d 62 37 31 31 2d  |-5c6f-463f-b711-|
              000000b0  35 66 61 65 34 33 31 38  66 37 62 30 5c 22 7d 22  |5fae4318f7b0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 31 2e 34 31 5c 22  |192.168.151.41\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2w9h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2w9h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.101",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.151.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.151.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888199,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832888200,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dffbe7ce4de7875223ded53c136e4701d8524ea0d964685334e4f2925cd06356",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Oct 14 13:50:02.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5446" for this suite. @ 10/14/23 13:50:02.539
• [7.064 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 10/14/23 13:50:02.549
  Oct 14 13:50:02.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 13:50:02.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:02.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:02.582
  E1014 13:50:03.012268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:04.012740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:04.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 14 13:50:04.617: INFO: Deleting pod "var-expansion-4487e981-b343-452b-888d-509ed78f8ee2" in namespace "var-expansion-8352"
  Oct 14 13:50:04.628: INFO: Wait up to 5m0s for pod "var-expansion-4487e981-b343-452b-888d-509ed78f8ee2" to be fully deleted
  E1014 13:50:05.013798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:06.014355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-8352" for this suite. @ 10/14/23 13:50:06.639
• [4.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 10/14/23 13:50:06.649
  Oct 14 13:50:06.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:50:06.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:06.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:06.687
  STEP: Creating configMap with name configmap-test-volume-8b52a398-f517-4d8e-aa91-d837f81b17d6 @ 10/14/23 13:50:06.693
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:50:06.702
  E1014 13:50:07.014451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:08.014598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:09.014953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:10.015053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:50:10.733
  Oct 14 13:50:10.738: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-configmaps-b715e31f-cb85-46e4-ac37-9ceca7ac9a8e container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:50:10.746
  Oct 14 13:50:10.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3830" for this suite. @ 10/14/23 13:50:10.773
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/14/23 13:50:10.79
  Oct 14 13:50:10.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename daemonsets @ 10/14/23 13:50:10.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:10.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:10.818
  STEP: Creating simple DaemonSet "daemon-set" @ 10/14/23 13:50:10.849
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/23 13:50:10.856
  Oct 14 13:50:10.861: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:10.862: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:10.867: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:50:10.867: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:50:11.015891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:11.873: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:11.873: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:11.877: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:50:11.877: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:50:12.016632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:12.874: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:12.874: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:12.882: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 13:50:12.882: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/14/23 13:50:12.889
  Oct 14 13:50:12.916: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:12.916: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:12.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 14 13:50:12.926: INFO: Node ip-172-31-80-101 is running 0 daemon pod, expected 1
  E1014 13:50:13.016930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:13.932: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:13.932: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:13.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 14 13:50:13.936: INFO: Node ip-172-31-80-101 is running 0 daemon pod, expected 1
  E1014 13:50:14.017466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:14.932: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:14.932: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:14.938: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 14 13:50:14.938: INFO: Node ip-172-31-80-101 is running 0 daemon pod, expected 1
  E1014 13:50:15.018455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:15.933: INFO: DaemonSet pods can't tolerate node ip-172-31-15-236 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:15.933: INFO: DaemonSet pods can't tolerate node ip-172-31-19-33 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 14 13:50:15.939: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 14 13:50:15.939: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/23 13:50:15.944
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6720, will wait for the garbage collector to delete the pods @ 10/14/23 13:50:15.945
  Oct 14 13:50:16.008: INFO: Deleting DaemonSet.extensions daemon-set took: 8.056253ms
  E1014 13:50:16.019233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:16.109: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.474641ms
  E1014 13:50:17.019677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:17.514: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:50:17.514: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 14 13:50:17.518: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40398"},"items":null}

  Oct 14 13:50:17.523: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40398"},"items":null}

  Oct 14 13:50:17.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6720" for this suite. @ 10/14/23 13:50:17.546
• [6.768 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 10/14/23 13:50:17.56
  Oct 14 13:50:17.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/23 13:50:17.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:17.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:17.593
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/23 13:50:17.603
  E1014 13:50:18.020750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:19.021819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/14/23 13:50:19.63
  E1014 13:50:20.022439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:21.022853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/14/23 13:50:21.653
  E1014 13:50:22.023399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:23.023474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:24.024224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:25.024323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/14/23 13:50:25.677
  Oct 14 13:50:25.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4980" for this suite. @ 10/14/23 13:50:25.691
• [8.141 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/14/23 13:50:25.703
  Oct 14 13:50:25.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename watch @ 10/14/23 13:50:25.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:25.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:25.73
  STEP: getting a starting resourceVersion @ 10/14/23 13:50:25.736
  STEP: starting a background goroutine to produce watch events @ 10/14/23 13:50:25.741
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/14/23 13:50:25.741
  E1014 13:50:26.024380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:27.024482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:28.025113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:28.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-193" for this suite. @ 10/14/23 13:50:28.561
• [2.912 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 10/14/23 13:50:28.617
  Oct 14 13:50:28.617: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/23 13:50:28.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:28.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:28.646
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/23 13:50:28.655
  E1014 13:50:29.026177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:30.026389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/14/23 13:50:30.68
  E1014 13:50:31.027054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:32.027118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/14/23 13:50:32.702
  STEP: delete the pod with lifecycle hook @ 10/14/23 13:50:32.71
  E1014 13:50:33.027742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:34.028124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:34.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3385" for this suite. @ 10/14/23 13:50:34.735
• [6.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 10/14/23 13:50:34.749
  Oct 14 13:50:34.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:50:34.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:34.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:34.783
  STEP: Creating a pod to test downward api env vars @ 10/14/23 13:50:34.788
  E1014 13:50:35.028415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:36.029183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:37.030519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:38.031340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:50:38.821
  Oct 14 13:50:38.826: INFO: Trying to get logs from node ip-172-31-80-101 pod downward-api-8a43aed4-d9f5-4922-807e-23236e307fba container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 13:50:38.836
  Oct 14 13:50:38.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5380" for this suite. @ 10/14/23 13:50:38.864
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 10/14/23 13:50:38.878
  Oct 14 13:50:38.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 13:50:38.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:50:38.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:50:38.907
  STEP: Creating service test in namespace statefulset-7776 @ 10/14/23 13:50:38.912
  STEP: Creating a new StatefulSet @ 10/14/23 13:50:38.922
  Oct 14 13:50:38.937: INFO: Found 0 stateful pods, waiting for 3
  E1014 13:50:39.031578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:40.032439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:41.032582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:42.032604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:43.032756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:44.033107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:45.034179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:46.034588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:47.034715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:48.034826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:48.942: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:50:48.943: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:50:48.943: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Oct 14 13:50:48.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7776 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1014 13:50:49.034976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:50:49.154: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 13:50:49.154: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 13:50:49.154: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1014 13:50:50.035884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:51.035937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:52.036512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:53.036706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:54.036835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:55.036957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:56.037225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:57.037899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:58.038001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:50:59.038161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/14/23 13:50:59.173
  Oct 14 13:50:59.199: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/14/23 13:50:59.199
  E1014 13:51:00.038764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:01.038927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:02.039954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:03.040594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:04.040782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:05.040897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:06.041315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:07.041419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:08.041557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:09.042098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 10/14/23 13:51:09.218
  Oct 14 13:51:09.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7776 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 13:51:09.414: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 14 13:51:09.414: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 13:51:09.414: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1014 13:51:10.041804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:11.042201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:12.042407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:13.042574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:14.042853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:15.043149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:16.043433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:17.043834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:18.043940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:19.044059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 10/14/23 13:51:19.442
  Oct 14 13:51:19.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7776 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 14 13:51:19.655: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 14 13:51:19.655: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 14 13:51:19.655: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1014 13:51:20.044179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:21.044374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:22.044554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:23.044634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:24.044733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:25.044950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:26.045531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:27.045700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:28.045896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:29.046226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:51:29.711: INFO: Updating stateful set ss2
  E1014 13:51:30.047134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:31.047403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:32.047531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:33.047738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:34.048068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:35.048370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:36.049399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:37.050727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:38.050810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:39.051887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 10/14/23 13:51:39.741
  Oct 14 13:51:39.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=statefulset-7776 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 14 13:51:39.955: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 14 13:51:39.956: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 14 13:51:39.956: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1014 13:51:40.052676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:41.052948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:42.053077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:43.053348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:44.053452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:45.053564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:46.054124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:47.055583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:48.055748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:49.056063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:51:49.987: INFO: Deleting all statefulset in ns statefulset-7776
  Oct 14 13:51:49.991: INFO: Scaling statefulset ss2 to 0
  E1014 13:51:50.056116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:51.056421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:52.057373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:53.065625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:54.065713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:55.066666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:56.067610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:57.067895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:58.067998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:51:59.068120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:00.015: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 13:52:00.020: INFO: Deleting statefulset ss2
  Oct 14 13:52:00.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7776" for this suite. @ 10/14/23 13:52:00.044
• [81.177 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 10/14/23 13:52:00.056
  Oct 14 13:52:00.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename secrets @ 10/14/23 13:52:00.058
  E1014 13:52:00.069207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:00.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:00.092
  STEP: Creating secret with name secret-test-cbf4a64e-ca00-4fe7-96a7-737989051747 @ 10/14/23 13:52:00.096
  STEP: Creating a pod to test consume secrets @ 10/14/23 13:52:00.103
  E1014 13:52:01.069486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:02.070031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:03.070807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:04.070918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:52:04.136
  Oct 14 13:52:04.140: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-secrets-cc94636f-73ac-4225-866f-e4aa3a536cc9 container secret-env-test: <nil>
  STEP: delete the pod @ 10/14/23 13:52:04.164
  Oct 14 13:52:04.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1162" for this suite. @ 10/14/23 13:52:04.19
• [4.142 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/14/23 13:52:04.199
  Oct 14 13:52:04.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename deployment @ 10/14/23 13:52:04.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:04.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:04.231
  Oct 14 13:52:04.235: INFO: Creating simple deployment test-new-deployment
  Oct 14 13:52:04.251: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E1014 13:52:05.071844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:06.072566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 10/14/23 13:52:06.268
  STEP: updating a scale subresource @ 10/14/23 13:52:06.273
  STEP: verifying the deployment Spec.Replicas was modified @ 10/14/23 13:52:06.281
  STEP: Patch a scale subresource @ 10/14/23 13:52:06.287
  Oct 14 13:52:06.319: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3c62a8a-d617-4ce3-9e84-6ac790d15f46",
      ResourceVersion: (string) (len=5) "41454",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 14 13:52:06.328: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b2ee089-09da-408b-9399-26233b397ebf",
      ResourceVersion: (string) (len=5) "41458",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "c3c62a8a-d617-4ce3-9e84-6ac790d15f46",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 33 63 36 32 61  38 61 2d 64 36 31 37 2d  |\"c3c62a8a-d617-|
              00000120  34 63 65 33 2d 39 65 38  34 2d 36 61 63 37 39 30  |4ce3-9e84-6ac790|
              00000130  64 31 35 66 34 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d15f46\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 14 13:52:06.347: INFO: Pod "test-new-deployment-557759b7c7-vc7mk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-vc7mk",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09f367c9-2f29-4a5a-8b1d-ebf743e700f0",
      ResourceVersion: (string) (len=5) "41459",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888326,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1b2ee089-09da-408b-9399-26233b397ebf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  32 65 65 30 38 39 2d 30  |d\":\"1b2ee089-0|
              00000090  39 64 61 2d 34 30 38 62  2d 39 33 39 39 2d 32 36  |9da-408b-9399-26|
              000000a0  32 33 33 62 33 39 37 65  62 66 5c 22 7d 22 3a 7b  |233b397ebf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q5w84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q5w84",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-101",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888326,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 13:52:06.354: INFO: Pod "test-new-deployment-557759b7c7-xj6wq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-xj6wq",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61a84dfb-efc4-4d61-af29-f04a0075e194",
      ResourceVersion: (string) (len=5) "41444",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "1b2ee089-09da-408b-9399-26233b397ebf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  32 65 65 30 38 39 2d 30  |d\":\"1b2ee089-0|
              00000090  39 64 61 2d 34 30 38 62  2d 39 33 39 39 2d 32 36  |9da-408b-9399-26|
              000000a0  32 33 33 62 33 39 37 65  62 66 5c 22 7d 22 3a 7b  |233b397ebf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 32 37 2e 31 37 34 5c  |192.168.127.174\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6wdx7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6wdx7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832888324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.127.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.127.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832888324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832888325,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e4179d4f4918ee7771ade9548025674066d136925d9377f85d5ce27ef9dc3e9d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 14 13:52:06.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8482" for this suite. @ 10/14/23 13:52:06.369
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 10/14/23 13:52:06.386
  Oct 14 13:52:06.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:52:06.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:06.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:06.425
  STEP: Setting up server cert @ 10/14/23 13:52:06.465
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:52:06.984
  STEP: Deploying the webhook pod @ 10/14/23 13:52:06.995
  STEP: Wait for the deployment to be ready @ 10/14/23 13:52:07.014
  Oct 14 13:52:07.028: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 13:52:07.073484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:08.074276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:52:09.043
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:52:09.054
  E1014 13:52:09.074993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:10.056: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/14/23 13:52:10.065
  E1014 13:52:10.076058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a pod that should be updated by the webhook @ 10/14/23 13:52:10.087
  Oct 14 13:52:10.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7422" for this suite. @ 10/14/23 13:52:10.197
  STEP: Destroying namespace "webhook-markers-8312" for this suite. @ 10/14/23 13:52:10.207
• [3.830 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 10/14/23 13:52:10.22
  Oct 14 13:52:10.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:52:10.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:10.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:10.252
  STEP: fetching services @ 10/14/23 13:52:10.257
  Oct 14 13:52:10.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7840" for this suite. @ 10/14/23 13:52:10.269
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 10/14/23 13:52:10.28
  Oct 14 13:52:10.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename podtemplate @ 10/14/23 13:52:10.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:10.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:10.309
  STEP: Create set of pod templates @ 10/14/23 13:52:10.313
  Oct 14 13:52:10.321: INFO: created test-podtemplate-1
  Oct 14 13:52:10.329: INFO: created test-podtemplate-2
  Oct 14 13:52:10.335: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/14/23 13:52:10.335
  STEP: delete collection of pod templates @ 10/14/23 13:52:10.341
  Oct 14 13:52:10.341: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/14/23 13:52:10.363
  Oct 14 13:52:10.363: INFO: requesting list of pod templates to confirm quantity
  Oct 14 13:52:10.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-268" for this suite. @ 10/14/23 13:52:10.377
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 10/14/23 13:52:10.389
  Oct 14 13:52:10.389: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 13:52:10.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:10.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:10.416
  Oct 14 13:52:10.422: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:52:11.076727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/14/23 13:52:11.996
  Oct 14 13:52:11.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 create -f -'
  E1014 13:52:12.077275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:12.684: INFO: stderr: ""
  Oct 14 13:52:12.684: INFO: stdout: "e2e-test-crd-publish-openapi-5030-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct 14 13:52:12.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 delete e2e-test-crd-publish-openapi-5030-crds test-foo'
  Oct 14 13:52:12.831: INFO: stderr: ""
  Oct 14 13:52:12.831: INFO: stdout: "e2e-test-crd-publish-openapi-5030-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Oct 14 13:52:12.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 apply -f -'
  Oct 14 13:52:13.055: INFO: stderr: ""
  Oct 14 13:52:13.055: INFO: stdout: "e2e-test-crd-publish-openapi-5030-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct 14 13:52:13.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 delete e2e-test-crd-publish-openapi-5030-crds test-foo'
  E1014 13:52:13.077501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:13.168: INFO: stderr: ""
  Oct 14 13:52:13.168: INFO: stdout: "e2e-test-crd-publish-openapi-5030-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/14/23 13:52:13.168
  Oct 14 13:52:13.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 create -f -'
  Oct 14 13:52:13.380: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/14/23 13:52:13.38
  Oct 14 13:52:13.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 create -f -'
  Oct 14 13:52:13.588: INFO: rc: 1
  Oct 14 13:52:13.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 apply -f -'
  Oct 14 13:52:13.816: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/14/23 13:52:13.816
  Oct 14 13:52:13.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 create -f -'
  Oct 14 13:52:14.038: INFO: rc: 1
  Oct 14 13:52:14.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 --namespace=crd-publish-openapi-1106 apply -f -'
  E1014 13:52:14.078118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:14.261: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/14/23 13:52:14.261
  Oct 14 13:52:14.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 explain e2e-test-crd-publish-openapi-5030-crds'
  Oct 14 13:52:14.471: INFO: stderr: ""
  Oct 14 13:52:14.471: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5030-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/14/23 13:52:14.472
  Oct 14 13:52:14.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 explain e2e-test-crd-publish-openapi-5030-crds.metadata'
  Oct 14 13:52:14.674: INFO: stderr: ""
  Oct 14 13:52:14.674: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5030-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Oct 14 13:52:14.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 explain e2e-test-crd-publish-openapi-5030-crds.spec'
  Oct 14 13:52:14.878: INFO: stderr: ""
  Oct 14 13:52:14.878: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5030-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Oct 14 13:52:14.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 explain e2e-test-crd-publish-openapi-5030-crds.spec.bars'
  E1014 13:52:15.078313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:15.081: INFO: stderr: ""
  Oct 14 13:52:15.081: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5030-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/14/23 13:52:15.081
  Oct 14 13:52:15.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-1106 explain e2e-test-crd-publish-openapi-5030-crds.spec.bars2'
  Oct 14 13:52:15.289: INFO: rc: 1
  E1014 13:52:16.079137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:16.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1106" for this suite. @ 10/14/23 13:52:16.827
• [6.448 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 10/14/23 13:52:16.838
  Oct 14 13:52:16.838: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:52:16.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:16.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:16.875
  STEP: creating an Endpoint @ 10/14/23 13:52:16.891
  STEP: waiting for available Endpoint @ 10/14/23 13:52:16.9
  STEP: listing all Endpoints @ 10/14/23 13:52:16.903
  STEP: updating the Endpoint @ 10/14/23 13:52:16.908
  STEP: fetching the Endpoint @ 10/14/23 13:52:16.919
  STEP: patching the Endpoint @ 10/14/23 13:52:16.925
  STEP: fetching the Endpoint @ 10/14/23 13:52:16.939
  STEP: deleting the Endpoint by Collection @ 10/14/23 13:52:16.946
  STEP: waiting for Endpoint deletion @ 10/14/23 13:52:16.959
  STEP: fetching the Endpoint @ 10/14/23 13:52:16.962
  Oct 14 13:52:16.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6764" for this suite. @ 10/14/23 13:52:16.976
• [0.147 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/14/23 13:52:16.986
  Oct 14 13:52:16.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/23 13:52:16.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:17.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:17.018
  E1014 13:52:17.080456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:18.080456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:19.080522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:20.081132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:21.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8256" for this suite. @ 10/14/23 13:52:21.054
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 10/14/23 13:52:21.068
  Oct 14 13:52:21.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 13:52:21.07
  E1014 13:52:21.081212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:21.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:21.1
  STEP: set up a multi version CRD @ 10/14/23 13:52:21.106
  Oct 14 13:52:21.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:52:22.081701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:23.082415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:24.083022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 10/14/23 13:52:25.013
  STEP: check the new version name is served @ 10/14/23 13:52:25.034
  E1014 13:52:25.083366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:26.084231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 10/14/23 13:52:26.146
  STEP: check the other version is not changed @ 10/14/23 13:52:26.864
  E1014 13:52:27.085688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:28.085835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:29.086734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:52:29.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9759" for this suite. @ 10/14/23 13:52:29.847
• [8.790 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 10/14/23 13:52:29.859
  Oct 14 13:52:29.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/14/23 13:52:29.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:52:29.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:52:29.886
  Oct 14 13:52:29.893: INFO: Waiting up to 1m0s for all nodes to be ready
  E1014 13:52:30.086855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:31.087487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:32.088087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:33.088203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:34.089166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:35.089231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:36.090033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:37.090162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:38.090727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:39.090775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:40.091330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:41.091659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:42.092455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:43.092807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:44.092960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:45.093070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:46.093214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:47.094006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:48.094763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:49.094839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:50.094905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:51.095329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:52.096029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:53.096155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:54.096316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:55.096443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:56.097243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:57.102836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:58.104077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:52:59.104092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:00.104361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:01.104540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:02.105215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:03.105345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:04.109529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:05.109632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:06.109674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:07.109737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:08.110256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:09.110397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:10.111258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:11.112030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:12.112687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:13.112798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:14.113189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:15.113488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:16.113770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:17.114071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:18.114320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:19.114336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:20.115057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:21.115946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:22.116008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:23.116124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:24.117016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:25.117220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:26.117800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:27.118198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:28.119201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:29.119961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:53:29.935: INFO: Waiting for terminating namespaces to be deleted...
  Oct 14 13:53:29.940: INFO: Starting informer...
  STEP: Starting pods... @ 10/14/23 13:53:29.94
  E1014 13:53:30.120791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:53:30.164: INFO: Pod1 is running on ip-172-31-35-21. Tainting Node
  E1014 13:53:31.121811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:32.122776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:53:32.389: INFO: Pod2 is running on ip-172-31-35-21. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/14/23 13:53:32.389
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/23 13:53:32.406
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/14/23 13:53:32.41
  E1014 13:53:33.123603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:34.123842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:35.124028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:36.124408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:37.124671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:38.125147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:53:38.286: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E1014 13:53:39.125788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:40.125947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:41.126462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:42.126794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:43.127895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:44.128199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:45.128292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:46.129079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:47.129176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:48.129283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:49.129390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:50.129500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:51.130394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:52.130815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:53.130892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:54.131238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:55.131376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:56.132510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:57.132731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:53:58.031: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Oct 14 13:53:58.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/23 13:53:58.054
  STEP: Destroying namespace "taint-multiple-pods-538" for this suite. @ 10/14/23 13:53:58.059
• [88.207 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 10/14/23 13:53:58.066
  Oct 14 13:53:58.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename dns @ 10/14/23 13:53:58.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:53:58.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:53:58.109
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-688.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-688.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/14/23 13:53:58.117
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-688.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-688.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/14/23 13:53:58.117
  STEP: creating a pod to probe /etc/hosts @ 10/14/23 13:53:58.118
  STEP: submitting the pod to kubernetes @ 10/14/23 13:53:58.118
  E1014 13:53:58.134011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:53:59.134829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:00.134991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/23 13:54:00.143
  STEP: looking for the results for each expected name from probers @ 10/14/23 13:54:00.147
  Oct 14 13:54:00.183: INFO: DNS probes using dns-688/dns-test-bc449391-9bad-4152-aa32-f036e3c20050 succeeded

  Oct 14 13:54:00.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/14/23 13:54:00.188
  STEP: Destroying namespace "dns-688" for this suite. @ 10/14/23 13:54:00.21
• [2.151 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/14/23 13:54:00.219
  Oct 14 13:54:00.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 13:54:00.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:54:00.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:54:00.247
  E1014 13:54:01.135423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:02.135530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:03.135651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:04.136062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:05.136180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:06.136358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:54:06.321
  Oct 14 13:54:06.326: INFO: Trying to get logs from node ip-172-31-80-101 pod client-envvars-fe0f2af2-4f55-40ab-b296-6fae69106330 container env3cont: <nil>
  STEP: delete the pod @ 10/14/23 13:54:06.354
  Oct 14 13:54:06.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9991" for this suite. @ 10/14/23 13:54:06.377
• [6.166 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/14/23 13:54:06.386
  Oct 14 13:54:06.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 13:54:06.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:54:06.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:54:06.415
  Oct 14 13:54:06.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: creating the pod @ 10/14/23 13:54:06.422
  STEP: submitting the pod to kubernetes @ 10/14/23 13:54:06.422
  E1014 13:54:07.136571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:08.137262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:54:08.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3342" for this suite. @ 10/14/23 13:54:08.565
• [2.187 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 10/14/23 13:54:08.574
  Oct 14 13:54:08.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:54:08.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:54:08.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:54:08.599
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/14/23 13:54:08.608
  E1014 13:54:09.138148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:10.138241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:11.138780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:12.138909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:54:12.637
  Oct 14 13:54:12.642: INFO: Trying to get logs from node ip-172-31-80-101 pod pod-03a13d9b-d965-4f3c-904c-5f7c2064010a container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:54:12.651
  Oct 14 13:54:12.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7025" for this suite. @ 10/14/23 13:54:12.677
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 10/14/23 13:54:12.689
  Oct 14 13:54:12.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename job @ 10/14/23 13:54:12.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:54:12.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:54:12.718
  STEP: Creating a job @ 10/14/23 13:54:12.758
  STEP: Ensuring active pods == parallelism @ 10/14/23 13:54:12.766
  E1014 13:54:13.139353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:14.139638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 10/14/23 13:54:14.772
  STEP: deleting Job.batch foo in namespace job-8842, will wait for the garbage collector to delete the pods @ 10/14/23 13:54:14.773
  Oct 14 13:54:14.836: INFO: Deleting Job.batch foo took: 8.651588ms
  Oct 14 13:54:14.937: INFO: Terminating Job.batch foo pods took: 101.21456ms
  E1014 13:54:15.140023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:16.139995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:17.140780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:18.141561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:19.142328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:20.143138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:21.143980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:22.144770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:23.145842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:24.146755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:25.146788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:26.147465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:27.147852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:28.148612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:29.149343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:30.150196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:31.151160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:32.151206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:33.152018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:34.152065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:35.153037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:36.153398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:37.154218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:38.155072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:39.156038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:40.157094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:41.158162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:42.158232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:43.159229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:44.160029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:45.160850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:46.161216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:47.161998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 10/14/23 13:54:47.738
  Oct 14 13:54:47.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8842" for this suite. @ 10/14/23 13:54:47.748
• [35.067 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 10/14/23 13:54:47.757
  Oct 14 13:54:47.758: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:54:47.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:54:47.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:54:47.786
  STEP: Counting existing ResourceQuota @ 10/14/23 13:54:47.79
  E1014 13:54:48.162878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:49.162996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:50.163837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:51.164472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:52.165284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/23 13:54:52.798
  STEP: Ensuring resource quota status is calculated @ 10/14/23 13:54:52.804
  E1014 13:54:53.166084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:54.166550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 10/14/23 13:54:54.81
  STEP: Ensuring resource quota status captures replication controller creation @ 10/14/23 13:54:54.825
  E1014 13:54:55.166785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:56.167398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 10/14/23 13:54:56.829
  STEP: Ensuring resource quota status released usage @ 10/14/23 13:54:56.837
  E1014 13:54:57.167775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:54:58.168103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:54:58.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8708" for this suite. @ 10/14/23 13:54:58.849
• [11.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 10/14/23 13:54:58.859
  Oct 14 13:54:58.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:54:58.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:54:58.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:54:58.884
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/14/23 13:54:58.889
  E1014 13:54:59.168229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:00.168513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:01.169106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:02.169390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:55:02.914
  Oct 14 13:55:02.920: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-ac225858-66a8-4993-9d11-8c2b52e9d691 container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:55:02.949
  Oct 14 13:55:02.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1662" for this suite. @ 10/14/23 13:55:02.973
• [4.124 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 10/14/23 13:55:02.983
  Oct 14 13:55:02.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:55:02.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:55:03.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:55:03.014
  STEP: Setting up server cert @ 10/14/23 13:55:03.053
  E1014 13:55:03.170016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:55:03.641
  STEP: Deploying the webhook pod @ 10/14/23 13:55:03.652
  STEP: Wait for the deployment to be ready @ 10/14/23 13:55:03.668
  Oct 14 13:55:03.678: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1014 13:55:04.170559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:05.170725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:55:05.692
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:55:05.705
  E1014 13:55:06.171411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:55:06.705: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/14/23 13:55:06.715
  STEP: create a configmap that should be updated by the webhook @ 10/14/23 13:55:06.74
  Oct 14 13:55:06.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8795" for this suite. @ 10/14/23 13:55:06.828
  STEP: Destroying namespace "webhook-markers-7101" for this suite. @ 10/14/23 13:55:06.839
• [3.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 10/14/23 13:55:06.857
  Oct 14 13:55:06.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/23 13:55:06.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:55:06.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:55:06.883
  Oct 14 13:55:06.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:55:07.171895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:08.173122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/14/23 13:55:08.41
  Oct 14 13:55:08.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-6713 --namespace=crd-publish-openapi-6713 create -f -'
  Oct 14 13:55:08.993: INFO: stderr: ""
  Oct 14 13:55:08.993: INFO: stdout: "e2e-test-crd-publish-openapi-2195-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct 14 13:55:08.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-6713 --namespace=crd-publish-openapi-6713 delete e2e-test-crd-publish-openapi-2195-crds test-cr'
  Oct 14 13:55:09.097: INFO: stderr: ""
  Oct 14 13:55:09.097: INFO: stdout: "e2e-test-crd-publish-openapi-2195-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Oct 14 13:55:09.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-6713 --namespace=crd-publish-openapi-6713 apply -f -'
  E1014 13:55:09.174081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:55:09.729: INFO: stderr: ""
  Oct 14 13:55:09.729: INFO: stdout: "e2e-test-crd-publish-openapi-2195-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct 14 13:55:09.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-6713 --namespace=crd-publish-openapi-6713 delete e2e-test-crd-publish-openapi-2195-crds test-cr'
  Oct 14 13:55:09.837: INFO: stderr: ""
  Oct 14 13:55:09.837: INFO: stdout: "e2e-test-crd-publish-openapi-2195-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/14/23 13:55:09.837
  Oct 14 13:55:09.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3887288174 --namespace=crd-publish-openapi-6713 explain e2e-test-crd-publish-openapi-2195-crds'
  Oct 14 13:55:10.042: INFO: stderr: ""
  Oct 14 13:55:10.042: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2195-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1014 13:55:10.175166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:11.175722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:55:11.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6713" for this suite. @ 10/14/23 13:55:11.524
• [4.675 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 10/14/23 13:55:11.535
  Oct 14 13:55:11.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:55:11.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:55:11.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:55:11.568
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:55:11.573
  E1014 13:55:12.176584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:13.176761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:14.176867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:15.177045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:55:15.596
  Oct 14 13:55:15.601: INFO: Trying to get logs from node ip-172-31-35-21 pod downwardapi-volume-1c7e3b0b-a0fb-41a4-83a4-9bda7f6e7faf container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:55:15.609
  Oct 14 13:55:15.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6528" for this suite. @ 10/14/23 13:55:15.634
• [4.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 10/14/23 13:55:15.643
  Oct 14 13:55:15.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename resourcequota @ 10/14/23 13:55:15.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:55:15.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:55:15.672
  STEP: Creating a ResourceQuota @ 10/14/23 13:55:15.676
  STEP: Getting a ResourceQuota @ 10/14/23 13:55:15.681
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/14/23 13:55:15.686
  STEP: Patching the ResourceQuota @ 10/14/23 13:55:15.69
  STEP: Deleting a Collection of ResourceQuotas @ 10/14/23 13:55:15.698
  STEP: Verifying the deleted ResourceQuota @ 10/14/23 13:55:15.709
  Oct 14 13:55:15.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2791" for this suite. @ 10/14/23 13:55:15.719
• [0.084 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 10/14/23 13:55:15.727
  Oct 14 13:55:15.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:55:15.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:55:15.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:55:15.752
  STEP: Creating configMap with name cm-test-opt-del-bfc5c655-7df4-42e0-8fb7-118e0db74792 @ 10/14/23 13:55:15.762
  STEP: Creating configMap with name cm-test-opt-upd-8482f1ea-4f10-4ee8-9f46-2964361c048a @ 10/14/23 13:55:15.767
  STEP: Creating the pod @ 10/14/23 13:55:15.772
  E1014 13:55:16.177760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:17.177952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-bfc5c655-7df4-42e0-8fb7-118e0db74792 @ 10/14/23 13:55:17.825
  STEP: Updating configmap cm-test-opt-upd-8482f1ea-4f10-4ee8-9f46-2964361c048a @ 10/14/23 13:55:17.834
  STEP: Creating configMap with name cm-test-opt-create-65da56d3-1c20-4cc5-9cba-86eb8949d141 @ 10/14/23 13:55:17.841
  STEP: waiting to observe update in volume @ 10/14/23 13:55:17.848
  E1014 13:55:18.177996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:19.178064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:20.178941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:21.179285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:22.180272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:23.180352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:24.181175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:25.181274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:26.181691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:27.181826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:28.181906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:29.182031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:30.182153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:31.182762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:32.183251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:33.183351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:34.183483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:35.183599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:36.183964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:37.184099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:38.184178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:39.184277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:40.184761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:41.185596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:42.186264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:43.186374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:44.186523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:45.186684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:46.186985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:47.187859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:48.188708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:49.188803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:50.188918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:51.189382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:52.190267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:53.190580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:54.191120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:55.191259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:56.191912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:57.192020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:58.192656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:55:59.192763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:00.193383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:01.193437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:02.193949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:03.194010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:04.194457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:05.194603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:06.194737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:07.194797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:08.195084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:09.195219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:10.195776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:11.195883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:12.196114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:13.196239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:14.196301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:15.196397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:16.197119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:17.197281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:18.198070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:19.198700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:20.198965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:21.199097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:22.199596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:23.200093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:24.200174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:25.200282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:26.200396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:27.200522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:28.201062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:29.201189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:30.201255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:31.201446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:32.201547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:33.201669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:34.201776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:56:34.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3860" for this suite. @ 10/14/23 13:56:34.302
• [78.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 10/14/23 13:56:34.316
  Oct 14 13:56:34.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename statefulset @ 10/14/23 13:56:34.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:56:34.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:56:34.342
  STEP: Creating service test in namespace statefulset-6801 @ 10/14/23 13:56:34.351
  STEP: Looking for a node to schedule stateful set and pod @ 10/14/23 13:56:34.359
  STEP: Creating pod with conflicting port in namespace statefulset-6801 @ 10/14/23 13:56:34.365
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6801 @ 10/14/23 13:56:34.376
  E1014 13:56:35.202217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:36.202291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-6801 @ 10/14/23 13:56:36.385
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6801 @ 10/14/23 13:56:36.392
  Oct 14 13:56:36.411: INFO: Observed stateful pod in namespace: statefulset-6801, name: ss-0, uid: f4d9f234-9482-48e2-8f24-e866986f8454, status phase: Pending. Waiting for statefulset controller to delete.
  Oct 14 13:56:36.431: INFO: Observed stateful pod in namespace: statefulset-6801, name: ss-0, uid: f4d9f234-9482-48e2-8f24-e866986f8454, status phase: Failed. Waiting for statefulset controller to delete.
  Oct 14 13:56:36.465: INFO: Observed stateful pod in namespace: statefulset-6801, name: ss-0, uid: f4d9f234-9482-48e2-8f24-e866986f8454, status phase: Failed. Waiting for statefulset controller to delete.
  Oct 14 13:56:36.470: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-6801
  STEP: Removing pod with conflicting port in namespace statefulset-6801 @ 10/14/23 13:56:36.471
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6801 and will be in running state @ 10/14/23 13:56:36.488
  E1014 13:56:37.202848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:38.202944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:56:38.498: INFO: Deleting all statefulset in ns statefulset-6801
  Oct 14 13:56:38.503: INFO: Scaling statefulset ss to 0
  E1014 13:56:39.203071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:40.203186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:41.203587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:42.203699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:43.203967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:44.204742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:45.204826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:46.205554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:47.205680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:48.205819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:56:48.525: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 14 13:56:48.530: INFO: Deleting statefulset ss
  Oct 14 13:56:48.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6801" for this suite. @ 10/14/23 13:56:48.555
• [14.248 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 10/14/23 13:56:48.564
  Oct 14 13:56:48.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename var-expansion @ 10/14/23 13:56:48.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:56:48.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:56:48.594
  STEP: Creating a pod to test substitution in container's command @ 10/14/23 13:56:48.602
  E1014 13:56:49.206887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:50.206964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:51.207496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:52.207616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:56:52.636
  Oct 14 13:56:52.641: INFO: Trying to get logs from node ip-172-31-35-21 pod var-expansion-0154810e-16cc-418e-862a-290f90fc4d87 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 13:56:52.649
  Oct 14 13:56:52.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9363" for this suite. @ 10/14/23 13:56:52.676
• [4.121 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/14/23 13:56:52.688
  Oct 14 13:56:52.688: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 13:56:52.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:56:52.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:56:52.714
  STEP: creating the pod @ 10/14/23 13:56:52.719
  STEP: submitting the pod to kubernetes @ 10/14/23 13:56:52.719
  STEP: verifying QOS class is set on the pod @ 10/14/23 13:56:52.728
  Oct 14 13:56:52.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9398" for this suite. @ 10/14/23 13:56:52.739
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 10/14/23 13:56:52.751
  Oct 14 13:56:52.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename crd-webhook @ 10/14/23 13:56:52.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:56:52.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:56:52.786
  STEP: Setting up server cert @ 10/14/23 13:56:52.793
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/14/23 13:56:53.065
  STEP: Deploying the custom resource conversion webhook pod @ 10/14/23 13:56:53.074
  STEP: Wait for the deployment to be ready @ 10/14/23 13:56:53.09
  Oct 14 13:56:53.099: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1014 13:56:53.208577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:54.209144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:56:55.113
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:56:55.125
  E1014 13:56:55.209405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:56:56.125: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct 14 13:56:56.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:56:56.209458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:57.209617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:56:58.209728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/14/23 13:56:58.732
  STEP: v2 custom resource should be converted @ 10/14/23 13:56:58.741
  Oct 14 13:56:58.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 13:56:59.209824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-6654" for this suite. @ 10/14/23 13:56:59.325
• [6.585 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 10/14/23 13:56:59.337
  Oct 14 13:56:59.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:56:59.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:56:59.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:56:59.43
  STEP: Creating a pod to test downward API volume plugin @ 10/14/23 13:56:59.433
  E1014 13:57:00.210798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:01.211491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:02.211629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:03.211857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:57:03.473
  Oct 14 13:57:03.477: INFO: Trying to get logs from node ip-172-31-80-101 pod downwardapi-volume-781d4c1b-39ab-4b0f-9bd4-0fe70870ab8b container client-container: <nil>
  STEP: delete the pod @ 10/14/23 13:57:03.504
  Oct 14 13:57:03.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8135" for this suite. @ 10/14/23 13:57:03.541
• [4.214 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 10/14/23 13:57:03.552
  Oct 14 13:57:03.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename downward-api @ 10/14/23 13:57:03.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:03.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:03.575
  STEP: Creating a pod to test downward api env vars @ 10/14/23 13:57:03.579
  E1014 13:57:04.212006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:05.212099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:06.214820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:07.215799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:57:07.603
  Oct 14 13:57:07.606: INFO: Trying to get logs from node ip-172-31-35-21 pod downward-api-804ee656-e272-40c3-ac7d-bf17b1fc2441 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/23 13:57:07.621
  Oct 14 13:57:07.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-486" for this suite. @ 10/14/23 13:57:07.646
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 10/14/23 13:57:07.66
  Oct 14 13:57:07.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:57:07.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:07.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:07.687
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/14/23 13:57:07.692
  E1014 13:57:08.216530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:09.216060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:10.216439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:11.217246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:57:11.72
  Oct 14 13:57:11.725: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-f5edd14f-7617-44dc-972a-3df5217a9b73 container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:57:11.736
  Oct 14 13:57:11.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6609" for this suite. @ 10/14/23 13:57:11.761
• [4.110 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/14/23 13:57:11.771
  Oct 14 13:57:11.771: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename pods @ 10/14/23 13:57:11.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:11.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:11.797
  STEP: creating a Pod with a static label @ 10/14/23 13:57:11.809
  STEP: watching for Pod to be ready @ 10/14/23 13:57:11.821
  Oct 14 13:57:11.823: INFO: observed Pod pod-test in namespace pods-6599 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Oct 14 13:57:11.828: INFO: observed Pod pod-test in namespace pods-6599 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:11 +0000 UTC  }]
  Oct 14 13:57:11.847: INFO: observed Pod pod-test in namespace pods-6599 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:11 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:11 +0000 UTC  }]
  E1014 13:57:12.217340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:13.217660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:13.503: INFO: Found Pod pod-test in namespace pods-6599 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:13 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:13 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-14 13:57:11 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/14/23 13:57:13.509
  STEP: getting the Pod and ensuring that it's patched @ 10/14/23 13:57:13.523
  STEP: replacing the Pod's status Ready condition to False @ 10/14/23 13:57:13.53
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/14/23 13:57:13.631
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/14/23 13:57:13.631
  STEP: watching for the Pod to be deleted @ 10/14/23 13:57:13.644
  Oct 14 13:57:13.647: INFO: observed event type MODIFIED
  E1014 13:57:14.218785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:15.219553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:15.512: INFO: observed event type MODIFIED
  Oct 14 13:57:15.834: INFO: observed event type MODIFIED
  E1014 13:57:16.220601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:16.516: INFO: observed event type MODIFIED
  Oct 14 13:57:16.530: INFO: observed event type MODIFIED
  Oct 14 13:57:16.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6599" for this suite. @ 10/14/23 13:57:16.548
• [4.784 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 10/14/23 13:57:16.556
  Oct 14 13:57:16.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/23 13:57:16.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:16.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:16.581
  STEP: fetching the /apis discovery document @ 10/14/23 13:57:16.586
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/14/23 13:57:16.588
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/14/23 13:57:16.588
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/14/23 13:57:16.588
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/14/23 13:57:16.589
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/14/23 13:57:16.59
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/14/23 13:57:16.591
  Oct 14 13:57:16.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2539" for this suite. @ 10/14/23 13:57:16.596
• [0.050 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 10/14/23 13:57:16.607
  Oct 14 13:57:16.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:57:16.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:16.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:16.635
  STEP: Setting up server cert @ 10/14/23 13:57:16.665
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:57:17.058
  STEP: Deploying the webhook pod @ 10/14/23 13:57:17.065
  STEP: Wait for the deployment to be ready @ 10/14/23 13:57:17.08
  Oct 14 13:57:17.087: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1014 13:57:17.221358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:18.221567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:57:19.103
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:57:19.114
  E1014 13:57:19.222146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:20.115: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/14/23 13:57:20.204
  E1014 13:57:20.222430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that should be mutated @ 10/14/23 13:57:20.222
  STEP: Deleting the collection of validation webhooks @ 10/14/23 13:57:20.263
  STEP: Creating a configMap that should not be mutated @ 10/14/23 13:57:20.32
  Oct 14 13:57:20.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6359" for this suite. @ 10/14/23 13:57:20.387
  STEP: Destroying namespace "webhook-markers-6556" for this suite. @ 10/14/23 13:57:20.397
• [3.800 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 10/14/23 13:57:20.42
  Oct 14 13:57:20.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:57:20.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:20.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:20.446
  Oct 14 13:57:20.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7216" for this suite. @ 10/14/23 13:57:20.459
• [0.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 10/14/23 13:57:20.469
  Oct 14 13:57:20.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename configmap @ 10/14/23 13:57:20.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:20.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:20.496
  STEP: Creating configMap with name configmap-test-volume-96680cfb-afbe-48ea-9eaf-2373288ebfa7 @ 10/14/23 13:57:20.501
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:57:20.507
  E1014 13:57:21.223219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:22.223886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:23.224112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:24.224578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:57:24.535
  Oct 14 13:57:24.539: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-configmaps-8b93de2f-51d1-4db2-8e45-14b556418766 container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/14/23 13:57:24.549
  Oct 14 13:57:24.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9809" for this suite. @ 10/14/23 13:57:24.579
• [4.120 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/14/23 13:57:24.591
  Oct 14 13:57:24.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename daemonsets @ 10/14/23 13:57:24.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:24.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:24.625
  Oct 14 13:57:24.657: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/14/23 13:57:24.664
  Oct 14 13:57:24.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:57:24.669: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/14/23 13:57:24.67
  Oct 14 13:57:24.698: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:57:24.699: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:57:25.225443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:25.705: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:57:25.705: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:57:26.226805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:26.704: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 14 13:57:26.704: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/14/23 13:57:26.708
  Oct 14 13:57:26.728: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 14 13:57:26.728: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1014 13:57:27.227307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:27.733: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:57:27.734: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/14/23 13:57:27.734
  Oct 14 13:57:27.746: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:57:27.746: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:57:28.227873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:28.750: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:57:28.750: INFO: Node ip-172-31-16-199 is running 0 daemon pod, expected 1
  E1014 13:57:29.228085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:29.754: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 14 13:57:29.754: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/23 13:57:29.763
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1446, will wait for the garbage collector to delete the pods @ 10/14/23 13:57:29.763
  Oct 14 13:57:29.826: INFO: Deleting DaemonSet.extensions daemon-set took: 8.516338ms
  Oct 14 13:57:29.927: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.617767ms
  E1014 13:57:30.228554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:31.228489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:31.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 14 13:57:31.234: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 14 13:57:31.238: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43579"},"items":null}

  Oct 14 13:57:31.243: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43579"},"items":null}

  Oct 14 13:57:31.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1446" for this suite. @ 10/14/23 13:57:31.276
• [6.694 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 10/14/23 13:57:31.288
  Oct 14 13:57:31.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:57:31.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:31.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:31.315
  STEP: Setting up server cert @ 10/14/23 13:57:31.348
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:57:32.074
  STEP: Deploying the webhook pod @ 10/14/23 13:57:32.085
  STEP: Wait for the deployment to be ready @ 10/14/23 13:57:32.1
  Oct 14 13:57:32.110: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 13:57:32.229227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:33.229512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:57:34.124
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:57:34.138
  E1014 13:57:34.229838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:35.139: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 14 13:57:35.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  E1014 13:57:35.230691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/14/23 13:57:35.66
  STEP: Creating a custom resource that should be denied by the webhook @ 10/14/23 13:57:35.682
  E1014 13:57:36.231379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:37.231516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/14/23 13:57:37.723
  STEP: Updating the custom resource with disallowed data should be denied @ 10/14/23 13:57:37.731
  STEP: Deleting the custom resource should be denied @ 10/14/23 13:57:37.743
  STEP: Remove the offending key and value from the custom resource data @ 10/14/23 13:57:37.754
  STEP: Deleting the updated custom resource should be successful @ 10/14/23 13:57:37.768
  Oct 14 13:57:37.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 13:57:38.231954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3362" for this suite. @ 10/14/23 13:57:38.369
  STEP: Destroying namespace "webhook-markers-715" for this suite. @ 10/14/23 13:57:38.377
• [7.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/14/23 13:57:38.387
  Oct 14 13:57:38.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename watch @ 10/14/23 13:57:38.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:38.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:38.425
  STEP: creating a watch on configmaps with a certain label @ 10/14/23 13:57:38.432
  STEP: creating a new configmap @ 10/14/23 13:57:38.434
  STEP: modifying the configmap once @ 10/14/23 13:57:38.44
  STEP: changing the label value of the configmap @ 10/14/23 13:57:38.451
  STEP: Expecting to observe a delete notification for the watched object @ 10/14/23 13:57:38.461
  Oct 14 13:57:38.461: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9838  a4155316-6e7f-47ad-9d72-e42fc2033801 43691 0 2023-10-14 13:57:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-14 13:57:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:57:38.462: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9838  a4155316-6e7f-47ad-9d72-e42fc2033801 43692 0 2023-10-14 13:57:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-14 13:57:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:57:38.462: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9838  a4155316-6e7f-47ad-9d72-e42fc2033801 43693 0 2023-10-14 13:57:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-14 13:57:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/14/23 13:57:38.462
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/14/23 13:57:38.473
  E1014 13:57:39.231908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:40.232098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:41.232073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:42.232170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:43.232366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:44.233058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:45.233232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:46.233509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:47.233707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:48.234109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 10/14/23 13:57:48.473
  STEP: modifying the configmap a third time @ 10/14/23 13:57:48.486
  STEP: deleting the configmap @ 10/14/23 13:57:48.498
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/14/23 13:57:48.506
  Oct 14 13:57:48.506: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9838  a4155316-6e7f-47ad-9d72-e42fc2033801 43733 0 2023-10-14 13:57:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-14 13:57:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:57:48.507: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9838  a4155316-6e7f-47ad-9d72-e42fc2033801 43734 0 2023-10-14 13:57:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-14 13:57:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:57:48.507: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9838  a4155316-6e7f-47ad-9d72-e42fc2033801 43735 0 2023-10-14 13:57:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-14 13:57:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 14 13:57:48.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9838" for this suite. @ 10/14/23 13:57:48.514
• [10.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/14/23 13:57:48.526
  Oct 14 13:57:48.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename containers @ 10/14/23 13:57:48.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:48.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:48.553
  STEP: Creating a pod to test override command @ 10/14/23 13:57:48.557
  E1014 13:57:49.234233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:50.234939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:51.235064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:52.235882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:57:52.592
  Oct 14 13:57:52.597: INFO: Trying to get logs from node ip-172-31-35-21 pod client-containers-f10c1112-4a1f-49cd-ac91-b73217f62f78 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:57:52.606
  Oct 14 13:57:52.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9215" for this suite. @ 10/14/23 13:57:52.637
• [4.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 10/14/23 13:57:52.651
  Oct 14 13:57:52.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename projected @ 10/14/23 13:57:52.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:52.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:52.679
  STEP: Creating configMap with name projected-configmap-test-volume-bd4d99e8-e5a1-4409-abb5-fd42afac61c0 @ 10/14/23 13:57:52.684
  STEP: Creating a pod to test consume configMaps @ 10/14/23 13:57:52.691
  E1014 13:57:53.236015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:54.236176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:55.237061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:56.237631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:57:56.726
  Oct 14 13:57:56.731: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-projected-configmaps-8fb68833-e308-4e04-9212-9ebd76efff9d container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/23 13:57:56.739
  Oct 14 13:57:56.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6218" for this suite. @ 10/14/23 13:57:56.762
• [4.120 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 10/14/23 13:57:56.771
  Oct 14 13:57:56.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename webhook @ 10/14/23 13:57:56.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:57:56.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:57:56.798
  STEP: Setting up server cert @ 10/14/23 13:57:56.837
  E1014 13:57:57.237919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/23 13:57:57.572
  STEP: Deploying the webhook pod @ 10/14/23 13:57:57.579
  STEP: Wait for the deployment to be ready @ 10/14/23 13:57:57.595
  Oct 14 13:57:57.605: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1014 13:57:58.238918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:57:59.239472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:57:59.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 14, 13, 57, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 13, 57, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 14, 13, 57, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 14, 13, 57, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 13:58:00.239563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:58:01.240089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/23 13:58:01.626
  STEP: Verifying the service has paired with the endpoint @ 10/14/23 13:58:01.64
  E1014 13:58:02.240969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 14 13:58:02.641: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/14/23 13:58:02.65
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/14/23 13:58:02.674
  Oct 14 13:58:02.674: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  Oct 14 13:58:02.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4004" for this suite. @ 10/14/23 13:58:02.763
  STEP: Destroying namespace "webhook-markers-3187" for this suite. @ 10/14/23 13:58:02.775
• [6.014 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 10/14/23 13:58:02.786
  Oct 14 13:58:02.786: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename services @ 10/14/23 13:58:02.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:58:02.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:58:02.832
  STEP: creating a collection of services @ 10/14/23 13:58:02.846
  Oct 14 13:58:02.846: INFO: Creating e2e-svc-a-ns8fs
  Oct 14 13:58:02.895: INFO: Creating e2e-svc-b-26m9c
  Oct 14 13:58:02.935: INFO: Creating e2e-svc-c-8wk62
  STEP: deleting service collection @ 10/14/23 13:58:02.979
  Oct 14 13:58:03.042: INFO: Collection of services has been deleted
  Oct 14 13:58:03.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8241" for this suite. @ 10/14/23 13:58:03.048
• [0.274 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 10/14/23 13:58:03.061
  Oct 14 13:58:03.061: INFO: >>> kubeConfig: /tmp/kubeconfig-3887288174
  STEP: Building a namespace api object, basename emptydir @ 10/14/23 13:58:03.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/23 13:58:03.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/23 13:58:03.091
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/14/23 13:58:03.1
  E1014 13:58:03.241594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:58:04.242006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:58:05.242746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1014 13:58:06.243618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/23 13:58:07.129
  Oct 14 13:58:07.134: INFO: Trying to get logs from node ip-172-31-35-21 pod pod-7b4367ff-98f9-4868-9fa6-95d5b096ffbc container test-container: <nil>
  STEP: delete the pod @ 10/14/23 13:58:07.143
  Oct 14 13:58:07.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5282" for this suite. @ 10/14/23 13:58:07.17
• [4.117 seconds]
------------------------------
SSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Oct 14 13:58:07.180: INFO: Running AfterSuite actions on node 1
  Oct 14 13:58:07.180: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
  E1014 13:58:07.244431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.095 seconds]
------------------------------

Ran 380 of 7387 Specs in 5900.636 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h38m21.447017963s
Test Suite Passed
