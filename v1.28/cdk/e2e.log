  I1007 12:16:45.521738      21 e2e.go:117] Starting e2e run "b2ba4449-523b-464c-9cb1-24333d84cb0c" on Ginkgo node 1
  Oct  7 12:16:45.539: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1696681005 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Oct  7 12:16:45.675: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:16:45.676: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Oct  7 12:16:45.716: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Oct  7 12:16:45.720: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Oct  7 12:16:45.720: INFO: e2e test version: v1.28.2
  Oct  7 12:16:45.721: INFO: kube-apiserver version: v1.28.2
  Oct  7 12:16:45.722: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:16:45.725: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 10/07/23 12:16:46.124
  Oct  7 12:16:46.124: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename discovery @ 10/07/23 12:16:46.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:16:46.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:16:46.147
  STEP: Setting up server cert @ 10/07/23 12:16:46.15
  Oct  7 12:16:46.936: INFO: Checking APIGroup: apiregistration.k8s.io
  Oct  7 12:16:46.937: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Oct  7 12:16:46.937: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Oct  7 12:16:46.937: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Oct  7 12:16:46.937: INFO: Checking APIGroup: apps
  Oct  7 12:16:46.938: INFO: PreferredVersion.GroupVersion: apps/v1
  Oct  7 12:16:46.938: INFO: Versions found [{apps/v1 v1}]
  Oct  7 12:16:46.938: INFO: apps/v1 matches apps/v1
  Oct  7 12:16:46.938: INFO: Checking APIGroup: events.k8s.io
  Oct  7 12:16:46.939: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Oct  7 12:16:46.939: INFO: Versions found [{events.k8s.io/v1 v1}]
  Oct  7 12:16:46.939: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Oct  7 12:16:46.939: INFO: Checking APIGroup: authentication.k8s.io
  Oct  7 12:16:46.940: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Oct  7 12:16:46.940: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Oct  7 12:16:46.940: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Oct  7 12:16:46.940: INFO: Checking APIGroup: authorization.k8s.io
  Oct  7 12:16:46.941: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Oct  7 12:16:46.941: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Oct  7 12:16:46.941: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Oct  7 12:16:46.941: INFO: Checking APIGroup: autoscaling
  Oct  7 12:16:46.942: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Oct  7 12:16:46.942: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Oct  7 12:16:46.942: INFO: autoscaling/v2 matches autoscaling/v2
  Oct  7 12:16:46.942: INFO: Checking APIGroup: batch
  Oct  7 12:16:46.943: INFO: PreferredVersion.GroupVersion: batch/v1
  Oct  7 12:16:46.943: INFO: Versions found [{batch/v1 v1}]
  Oct  7 12:16:46.943: INFO: batch/v1 matches batch/v1
  Oct  7 12:16:46.943: INFO: Checking APIGroup: certificates.k8s.io
  Oct  7 12:16:46.944: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Oct  7 12:16:46.944: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Oct  7 12:16:46.944: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Oct  7 12:16:46.944: INFO: Checking APIGroup: networking.k8s.io
  Oct  7 12:16:46.945: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Oct  7 12:16:46.945: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Oct  7 12:16:46.945: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Oct  7 12:16:46.945: INFO: Checking APIGroup: policy
  Oct  7 12:16:46.946: INFO: PreferredVersion.GroupVersion: policy/v1
  Oct  7 12:16:46.946: INFO: Versions found [{policy/v1 v1}]
  Oct  7 12:16:46.946: INFO: policy/v1 matches policy/v1
  Oct  7 12:16:46.946: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Oct  7 12:16:46.947: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Oct  7 12:16:46.947: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Oct  7 12:16:46.947: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Oct  7 12:16:46.947: INFO: Checking APIGroup: storage.k8s.io
  Oct  7 12:16:46.948: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Oct  7 12:16:46.948: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Oct  7 12:16:46.948: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Oct  7 12:16:46.948: INFO: Checking APIGroup: admissionregistration.k8s.io
  Oct  7 12:16:46.949: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Oct  7 12:16:46.949: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Oct  7 12:16:46.949: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Oct  7 12:16:46.949: INFO: Checking APIGroup: apiextensions.k8s.io
  Oct  7 12:16:46.950: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Oct  7 12:16:46.950: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Oct  7 12:16:46.950: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Oct  7 12:16:46.950: INFO: Checking APIGroup: scheduling.k8s.io
  Oct  7 12:16:46.951: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Oct  7 12:16:46.951: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Oct  7 12:16:46.951: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Oct  7 12:16:46.951: INFO: Checking APIGroup: coordination.k8s.io
  Oct  7 12:16:46.952: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Oct  7 12:16:46.952: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Oct  7 12:16:46.952: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Oct  7 12:16:46.952: INFO: Checking APIGroup: node.k8s.io
  Oct  7 12:16:46.953: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Oct  7 12:16:46.953: INFO: Versions found [{node.k8s.io/v1 v1}]
  Oct  7 12:16:46.953: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Oct  7 12:16:46.953: INFO: Checking APIGroup: discovery.k8s.io
  Oct  7 12:16:46.954: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Oct  7 12:16:46.954: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Oct  7 12:16:46.954: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Oct  7 12:16:46.954: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Oct  7 12:16:46.955: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Oct  7 12:16:46.955: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Oct  7 12:16:46.955: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Oct  7 12:16:46.955: INFO: Checking APIGroup: metrics.k8s.io
  Oct  7 12:16:46.956: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Oct  7 12:16:46.956: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Oct  7 12:16:46.956: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Oct  7 12:16:46.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3304" for this suite. @ 10/07/23 12:16:46.959
â€¢ [0.842 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 10/07/23 12:16:46.967
  Oct  7 12:16:46.967: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:16:46.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:16:46.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:16:46.984
  STEP: Setting up server cert @ 10/07/23 12:16:47.009
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:16:47.52
  STEP: Deploying the webhook pod @ 10/07/23 12:16:47.528
  STEP: Wait for the deployment to be ready @ 10/07/23 12:16:47.54
  Oct  7 12:16:47.546: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Oct  7 12:16:49.556: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 12, 16, 47, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 16, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 12, 16, 47, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 16, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/07/23 12:16:51.559
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:16:51.572
  Oct  7 12:16:52.572: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/07/23 12:16:52.579
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/07/23 12:16:52.593
  STEP: Creating a dummy validating-webhook-configuration object @ 10/07/23 12:16:52.601
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/07/23 12:16:52.612
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/07/23 12:16:52.618
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/07/23 12:16:52.624
  Oct  7 12:16:52.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3933" for this suite. @ 10/07/23 12:16:52.697
  STEP: Destroying namespace "webhook-markers-7630" for this suite. @ 10/07/23 12:16:52.706
â€¢ [5.746 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 10/07/23 12:16:52.714
  Oct  7 12:16:52.714: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename limitrange @ 10/07/23 12:16:52.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:16:52.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:16:52.733
  STEP: Creating a LimitRange @ 10/07/23 12:16:52.736
  STEP: Setting up watch @ 10/07/23 12:16:52.736
  STEP: Submitting a LimitRange @ 10/07/23 12:16:52.84
  STEP: Verifying LimitRange creation was observed @ 10/07/23 12:16:52.847
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/07/23 12:16:52.847
  Oct  7 12:16:52.850: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct  7 12:16:52.850: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/07/23 12:16:52.85
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/07/23 12:16:52.856
  Oct  7 12:16:52.866: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct  7 12:16:52.866: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/07/23 12:16:52.866
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/07/23 12:16:52.872
  Oct  7 12:16:52.876: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Oct  7 12:16:52.876: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/07/23 12:16:52.876
  STEP: Failing to create a Pod with more than max resources @ 10/07/23 12:16:52.88
  STEP: Updating a LimitRange @ 10/07/23 12:16:52.882
  STEP: Verifying LimitRange updating is effective @ 10/07/23 12:16:52.888
  STEP: Creating a Pod with less than former min resources @ 10/07/23 12:16:54.893
  STEP: Failing to create a Pod with more than max resources @ 10/07/23 12:16:54.9
  STEP: Deleting a LimitRange @ 10/07/23 12:16:54.902
  STEP: Verifying the LimitRange was deleted @ 10/07/23 12:16:54.908
  Oct  7 12:16:59.914: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/07/23 12:16:59.914
  Oct  7 12:16:59.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4997" for this suite. @ 10/07/23 12:16:59.93
â€¢ [7.223 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 10/07/23 12:16:59.937
  Oct  7 12:16:59.937: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename gc @ 10/07/23 12:16:59.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:16:59.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:16:59.955
  STEP: create the rc1 @ 10/07/23 12:16:59.96
  STEP: create the rc2 @ 10/07/23 12:16:59.968
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/07/23 12:17:05.988
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/07/23 12:17:06.387
  STEP: wait for the rc to be deleted @ 10/07/23 12:17:06.397
  Oct  7 12:17:11.412: INFO: 71 pods remaining
  Oct  7 12:17:11.412: INFO: 71 pods has nil DeletionTimestamp
  Oct  7 12:17:11.412: INFO: 
  STEP: Gathering metrics @ 10/07/23 12:17:16.406
  W1007 12:17:16.411667      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct  7 12:17:16.411: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct  7 12:17:16.413: INFO: Deleting pod "simpletest-rc-to-be-deleted-22dgj" in namespace "gc-9804"
  Oct  7 12:17:16.425: INFO: Deleting pod "simpletest-rc-to-be-deleted-2fpfk" in namespace "gc-9804"
  Oct  7 12:17:16.440: INFO: Deleting pod "simpletest-rc-to-be-deleted-2smdl" in namespace "gc-9804"
  Oct  7 12:17:16.455: INFO: Deleting pod "simpletest-rc-to-be-deleted-2zz2f" in namespace "gc-9804"
  Oct  7 12:17:16.465: INFO: Deleting pod "simpletest-rc-to-be-deleted-4gndn" in namespace "gc-9804"
  Oct  7 12:17:16.483: INFO: Deleting pod "simpletest-rc-to-be-deleted-4lwgr" in namespace "gc-9804"
  Oct  7 12:17:16.497: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qtkh" in namespace "gc-9804"
  Oct  7 12:17:16.508: INFO: Deleting pod "simpletest-rc-to-be-deleted-4w249" in namespace "gc-9804"
  Oct  7 12:17:16.518: INFO: Deleting pod "simpletest-rc-to-be-deleted-527dw" in namespace "gc-9804"
  Oct  7 12:17:16.534: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mgnl" in namespace "gc-9804"
  Oct  7 12:17:16.545: INFO: Deleting pod "simpletest-rc-to-be-deleted-5nzjl" in namespace "gc-9804"
  Oct  7 12:17:16.558: INFO: Deleting pod "simpletest-rc-to-be-deleted-6fg5q" in namespace "gc-9804"
  Oct  7 12:17:16.570: INFO: Deleting pod "simpletest-rc-to-be-deleted-6hgjk" in namespace "gc-9804"
  Oct  7 12:17:16.580: INFO: Deleting pod "simpletest-rc-to-be-deleted-77hlm" in namespace "gc-9804"
  Oct  7 12:17:16.596: INFO: Deleting pod "simpletest-rc-to-be-deleted-77ld8" in namespace "gc-9804"
  Oct  7 12:17:16.607: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dnq4" in namespace "gc-9804"
  Oct  7 12:17:16.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kwr4" in namespace "gc-9804"
  Oct  7 12:17:16.633: INFO: Deleting pod "simpletest-rc-to-be-deleted-7sczg" in namespace "gc-9804"
  Oct  7 12:17:16.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-8hkzt" in namespace "gc-9804"
  Oct  7 12:17:16.665: INFO: Deleting pod "simpletest-rc-to-be-deleted-8rhcd" in namespace "gc-9804"
  Oct  7 12:17:16.676: INFO: Deleting pod "simpletest-rc-to-be-deleted-8z28c" in namespace "gc-9804"
  Oct  7 12:17:16.686: INFO: Deleting pod "simpletest-rc-to-be-deleted-98xpz" in namespace "gc-9804"
  Oct  7 12:17:16.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rzmw" in namespace "gc-9804"
  Oct  7 12:17:16.714: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vzxr" in namespace "gc-9804"
  Oct  7 12:17:16.724: INFO: Deleting pod "simpletest-rc-to-be-deleted-bcvfz" in namespace "gc-9804"
  Oct  7 12:17:16.740: INFO: Deleting pod "simpletest-rc-to-be-deleted-bmcgq" in namespace "gc-9804"
  Oct  7 12:17:16.756: INFO: Deleting pod "simpletest-rc-to-be-deleted-br4k9" in namespace "gc-9804"
  Oct  7 12:17:16.768: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzgfr" in namespace "gc-9804"
  Oct  7 12:17:16.782: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9vp9" in namespace "gc-9804"
  Oct  7 12:17:16.794: INFO: Deleting pod "simpletest-rc-to-be-deleted-cczdf" in namespace "gc-9804"
  Oct  7 12:17:16.805: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfhmq" in namespace "gc-9804"
  Oct  7 12:17:16.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfnbq" in namespace "gc-9804"
  Oct  7 12:17:16.832: INFO: Deleting pod "simpletest-rc-to-be-deleted-cmnm4" in namespace "gc-9804"
  Oct  7 12:17:16.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwfrm" in namespace "gc-9804"
  Oct  7 12:17:16.855: INFO: Deleting pod "simpletest-rc-to-be-deleted-d45zt" in namespace "gc-9804"
  Oct  7 12:17:16.873: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbmg6" in namespace "gc-9804"
  Oct  7 12:17:16.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-dg9j8" in namespace "gc-9804"
  Oct  7 12:17:16.907: INFO: Deleting pod "simpletest-rc-to-be-deleted-dh2vg" in namespace "gc-9804"
  Oct  7 12:17:16.924: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnmgr" in namespace "gc-9804"
  Oct  7 12:17:16.936: INFO: Deleting pod "simpletest-rc-to-be-deleted-dr6xd" in namespace "gc-9804"
  Oct  7 12:17:16.949: INFO: Deleting pod "simpletest-rc-to-be-deleted-f9trx" in namespace "gc-9804"
  Oct  7 12:17:16.972: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdl4z" in namespace "gc-9804"
  Oct  7 12:17:16.989: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhl8l" in namespace "gc-9804"
  Oct  7 12:17:16.999: INFO: Deleting pod "simpletest-rc-to-be-deleted-fl7tv" in namespace "gc-9804"
  Oct  7 12:17:17.011: INFO: Deleting pod "simpletest-rc-to-be-deleted-fw9vz" in namespace "gc-9804"
  Oct  7 12:17:17.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2hvg" in namespace "gc-9804"
  Oct  7 12:17:17.037: INFO: Deleting pod "simpletest-rc-to-be-deleted-gq7fg" in namespace "gc-9804"
  Oct  7 12:17:17.047: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxb4n" in namespace "gc-9804"
  Oct  7 12:17:17.060: INFO: Deleting pod "simpletest-rc-to-be-deleted-hwfd7" in namespace "gc-9804"
  Oct  7 12:17:17.073: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5j5t" in namespace "gc-9804"
  Oct  7 12:17:17.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9804" for this suite. @ 10/07/23 12:17:17.097
â€¢ [17.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 10/07/23 12:17:17.106
  Oct  7 12:17:17.106: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:17:17.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:17.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:17.127
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/07/23 12:17:17.13
  STEP: Saw pod success @ 10/07/23 12:17:23.156
  Oct  7 12:17:23.159: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-cf27141a-d3e0-4cff-8526-b82fa5677773 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:17:23.175
  Oct  7 12:17:23.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6784" for this suite. @ 10/07/23 12:17:23.2
â€¢ [6.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/07/23 12:17:23.206
  Oct  7 12:17:23.206: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:17:23.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:23.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:23.228
  Oct  7 12:17:23.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5993" for this suite. @ 10/07/23 12:17:23.27
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 10/07/23 12:17:23.277
  Oct  7 12:17:23.277: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename namespaces @ 10/07/23 12:17:23.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:23.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:23.296
  STEP: Creating namespace "e2e-ns-5bfl5" @ 10/07/23 12:17:23.299
  Oct  7 12:17:23.314: INFO: Namespace "e2e-ns-5bfl5-8946" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-5bfl5-8946" @ 10/07/23 12:17:23.314
  Oct  7 12:17:23.322: INFO: Namespace "e2e-ns-5bfl5-8946" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-5bfl5-8946" @ 10/07/23 12:17:23.322
  Oct  7 12:17:23.329: INFO: Namespace "e2e-ns-5bfl5-8946" has []v1.FinalizerName{"kubernetes"}
  Oct  7 12:17:23.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9433" for this suite. @ 10/07/23 12:17:23.332
  STEP: Destroying namespace "e2e-ns-5bfl5-8946" for this suite. @ 10/07/23 12:17:23.341
â€¢ [0.070 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 10/07/23 12:17:23.347
  Oct  7 12:17:23.347: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename job @ 10/07/23 12:17:23.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:23.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:23.365
  STEP: Creating Indexed job @ 10/07/23 12:17:23.368
  STEP: Ensuring job reaches completions @ 10/07/23 12:17:23.376
  STEP: Ensuring pods with index for job exist @ 10/07/23 12:17:31.38
  Oct  7 12:17:31.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9553" for this suite. @ 10/07/23 12:17:31.389
â€¢ [8.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 10/07/23 12:17:31.397
  Oct  7 12:17:31.397: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sysctl @ 10/07/23 12:17:31.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:31.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:31.417
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/07/23 12:17:31.423
  STEP: Watching for error events or started pod @ 10/07/23 12:17:31.43
  STEP: Waiting for pod completion @ 10/07/23 12:17:33.434
  STEP: Checking that the pod succeeded @ 10/07/23 12:17:33.44
  STEP: Getting logs from the pod @ 10/07/23 12:17:33.44
  STEP: Checking that the sysctl is actually updated @ 10/07/23 12:17:33.446
  Oct  7 12:17:33.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-582" for this suite. @ 10/07/23 12:17:33.45
â€¢ [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 10/07/23 12:17:33.456
  Oct  7 12:17:33.456: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 12:17:33.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:33.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:33.473
  STEP: creating a Deployment @ 10/07/23 12:17:33.48
  Oct  7 12:17:33.480: INFO: Creating simple deployment test-deployment-k5nvz
  Oct  7 12:17:33.492: INFO: deployment "test-deployment-k5nvz" doesn't have the required revision set
  Oct  7 12:17:35.501: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-k5nvz-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct  7 12:17:37.504: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-k5nvz-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 10/07/23 12:17:39.509
  Oct  7 12:17:39.513: INFO: Deployment test-deployment-k5nvz has Conditions: [{Available True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:38 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-k5nvz-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/07/23 12:17:39.513
  Oct  7 12:17:39.522: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 12, 17, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 17, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 12, 17, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 12, 17, 33, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-k5nvz-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/07/23 12:17:39.522
  Oct  7 12:17:39.524: INFO: Observed &Deployment event: ADDED
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-k5nvz-5d576bd769"}
  Oct  7 12:17:39.524: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-k5nvz-5d576bd769"}
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct  7 12:17:39.524: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-k5nvz-5d576bd769" is progressing.}
  Oct  7 12:17:39.524: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:38 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-k5nvz-5d576bd769" has successfully progressed.}
  Oct  7 12:17:39.524: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:38 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct  7 12:17:39.524: INFO: Observed Deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-k5nvz-5d576bd769" has successfully progressed.}
  Oct  7 12:17:39.524: INFO: Found Deployment test-deployment-k5nvz in namespace deployment-1081 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct  7 12:17:39.524: INFO: Deployment test-deployment-k5nvz has an updated status
  STEP: patching the Statefulset Status @ 10/07/23 12:17:39.524
  Oct  7 12:17:39.524: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct  7 12:17:39.531: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/07/23 12:17:39.531
  Oct  7 12:17:39.533: INFO: Observed &Deployment event: ADDED
  Oct  7 12:17:39.533: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-k5nvz-5d576bd769"}
  Oct  7 12:17:39.533: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.533: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-k5nvz-5d576bd769"}
  Oct  7 12:17:39.533: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct  7 12:17:39.533: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.533: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct  7 12:17:39.533: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:33 +0000 UTC 2023-10-07 12:17:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-k5nvz-5d576bd769" is progressing.}
  Oct  7 12:17:39.533: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.533: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:38 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct  7 12:17:39.533: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-k5nvz-5d576bd769" has successfully progressed.}
  Oct  7 12:17:39.533: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.534: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:38 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct  7 12:17:39.534: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-07 12:17:38 +0000 UTC 2023-10-07 12:17:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-k5nvz-5d576bd769" has successfully progressed.}
  Oct  7 12:17:39.534: INFO: Observed deployment test-deployment-k5nvz in namespace deployment-1081 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct  7 12:17:39.534: INFO: Observed &Deployment event: MODIFIED
  Oct  7 12:17:39.534: INFO: Found deployment test-deployment-k5nvz in namespace deployment-1081 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Oct  7 12:17:39.534: INFO: Deployment test-deployment-k5nvz has a patched status
  Oct  7 12:17:39.540: INFO: Deployment "test-deployment-k5nvz":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-k5nvz",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1081",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8fed259-fb9c-4b88-943b-7721c36277fb",
      ResourceVersion: (string) (len=4) "6149",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832277853,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277853,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-k5nvz-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct  7 12:17:39.545: INFO: New ReplicaSet "test-deployment-k5nvz-5d576bd769" of Deployment "test-deployment-k5nvz":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-k5nvz-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1081",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3cce411-b0d2-4eda-94f4-1d62d47a3e11",
      ResourceVersion: (string) (len=4) "6131",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832277853,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-k5nvz",
          UID: (types.UID) (len=36) "f8fed259-fb9c-4b88-943b-7721c36277fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277853,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 38 66  |k:{\"uid\":\"f8f|
              00000120  65 64 32 35 39 2d 66 62  39 63 2d 34 62 38 38 2d  |ed259-fb9c-4b88-|
              00000130  39 34 33 62 2d 37 37 32  31 63 33 36 32 37 37 66  |943b-7721c36277f|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:17:39.549: INFO: Pod "test-deployment-k5nvz-5d576bd769-lghf7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-k5nvz-5d576bd769-lghf7",
      GenerateName: (string) (len=33) "test-deployment-k5nvz-5d576bd769-",
      Namespace: (string) (len=15) "deployment-1081",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f96a8568-f564-431f-a26f-ddb2f7668404",
      ResourceVersion: (string) (len=4) "6130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832277853,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-k5nvz-5d576bd769",
          UID: (types.UID) (len=36) "b3cce411-b0d2-4eda-94f4-1d62d47a3e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277853,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 62 33 63 63 65 34 31  31 2d 62 30 64 32 2d 34  |"b3cce411-b0d2-4|
              000000a0  65 64 61 2d 39 34 66 34  2d 31 64 36 32 64 34 37  |eda-94f4-1d62d47|
              000000b0  61 33 65 31 31 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |a3e11\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 32 2e 34 32 5c 22 7d  |192.168.62.42\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hr5nq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hr5nq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277853,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832277853,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.62.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.62.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832277853,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832277857,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://30be99be5a148c68f3e8b95a40966332d97521816ed5fd12e27868db23b40784",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 12:17:39.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1081" for this suite. @ 10/07/23 12:17:39.554
â€¢ [6.104 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/07/23 12:17:39.561
  Oct  7 12:17:39.561: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:17:39.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:39.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:39.579
  STEP: Creating secret with name secret-test-93f9d451-6bc5-4ed7-ae2e-163c272461bb @ 10/07/23 12:17:39.581
  STEP: Creating a pod to test consume secrets @ 10/07/23 12:17:39.586
  STEP: Saw pod success @ 10/07/23 12:17:45.613
  Oct  7 12:17:45.615: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-secrets-7b0bf644-6167-419c-be55-1918c99ef4ee container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 12:17:45.633
  Oct  7 12:17:45.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8753" for this suite. @ 10/07/23 12:17:45.652
â€¢ [6.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 10/07/23 12:17:45.659
  Oct  7 12:17:45.659: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:17:45.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:45.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:45.678
  STEP: Creating configMap with name projected-configmap-test-volume-9cb78f1f-e68c-477e-a472-ccd6723f154e @ 10/07/23 12:17:45.68
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:17:45.684
  STEP: Saw pod success @ 10/07/23 12:17:49.708
  Oct  7 12:17:49.711: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-configmaps-4f226832-5e32-47c2-b036-097b8dd03c8b container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:17:49.716
  Oct  7 12:17:49.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5492" for this suite. @ 10/07/23 12:17:49.733
â€¢ [4.080 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 10/07/23 12:17:49.739
  Oct  7 12:17:49.739: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 12:17:49.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:17:49.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:17:49.758
  STEP: Creating pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909 @ 10/07/23 12:17:49.761
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 12:17:51.776
  Oct  7 12:17:51.779: INFO: Initial restart count of pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 is 0
  Oct  7 12:17:51.782: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:17:53.787: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:17:55.792: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:17:57.797: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:17:59.801: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:01.805: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:03.810: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:05.815: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:07.819: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:09.824: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:11.828: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:13.832: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:15.836: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:17.840: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:19.843: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:21.848: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:23.852: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:25.857: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:27.861: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:29.865: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:31.869: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:33.874: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:35.880: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:37.884: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:39.888: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:41.892: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:43.896: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:45.900: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:47.904: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:49.907: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:51.912: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:53.916: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:55.920: INFO: Get pod test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 in namespace container-probe-6909
  Oct  7 12:18:55.920: INFO: Restart count of pod container-probe-6909/test-grpc-35e5ad5d-51e8-4b41-8449-fee169628648 is now 1 (1m4.14136814s elapsed)
  Oct  7 12:18:55.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 12:18:55.924
  STEP: Destroying namespace "container-probe-6909" for this suite. @ 10/07/23 12:18:55.938
â€¢ [66.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 10/07/23 12:18:55.946
  Oct  7 12:18:55.946: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:18:55.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:18:55.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:18:55.965
  STEP: Setting up server cert @ 10/07/23 12:18:55.989
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:18:56.242
  STEP: Deploying the webhook pod @ 10/07/23 12:18:56.25
  STEP: Wait for the deployment to be ready @ 10/07/23 12:18:56.261
  Oct  7 12:18:56.271: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:18:58.282
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:18:58.297
  Oct  7 12:18:59.297: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/07/23 12:18:59.304
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/07/23 12:18:59.317
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/07/23 12:18:59.323
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/07/23 12:18:59.331
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/07/23 12:18:59.343
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/07/23 12:18:59.349
  Oct  7 12:18:59.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4626" for this suite. @ 10/07/23 12:18:59.405
  STEP: Destroying namespace "webhook-markers-7063" for this suite. @ 10/07/23 12:18:59.416
â€¢ [3.476 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 10/07/23 12:18:59.422
  Oct  7 12:18:59.422: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 12:18:59.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:18:59.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:18:59.438
  STEP: Creating a test headless service @ 10/07/23 12:18:59.441
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_udp@PTR;check="$$(dig +tcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_tcp@PTR;sleep 1; done
   @ 10/07/23 12:18:59.459
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2038.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2038.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2038.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2038.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_udp@PTR;check="$$(dig +tcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_tcp@PTR;sleep 1; done
   @ 10/07/23 12:18:59.459
  STEP: creating a pod to probe DNS @ 10/07/23 12:18:59.459
  STEP: submitting the pod to kubernetes @ 10/07/23 12:18:59.459
  STEP: retrieving the pod @ 10/07/23 12:19:05.489
  STEP: looking for the results for each expected name from probers @ 10/07/23 12:19:05.492
  Oct  7 12:19:05.496: INFO: Unable to read wheezy_udp@dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.499: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.503: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.506: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.523: INFO: Unable to read jessie_udp@dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.525: INFO: Unable to read jessie_tcp@dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.529: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.532: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:05.545: INFO: Lookups using dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5 failed for: [wheezy_udp@dns-test-service.dns-2038.svc.cluster.local wheezy_tcp@dns-test-service.dns-2038.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local jessie_udp@dns-test-service.dns-2038.svc.cluster.local jessie_tcp@dns-test-service.dns-2038.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local]

  Oct  7 12:19:05.550: INFO: Pod client logs for webserver: 
  Oct  7 12:19:05.556: INFO: Pod client logs for querier: 
  Oct  7 12:19:05.562: INFO: Pod client logs for jessie-querier: 
  Oct  7 12:19:10.567: INFO: Unable to read wheezy_udp@dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:10.571: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:10.576: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:10.579: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:10.613: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local from pod dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5: the server could not find the requested resource (get pods dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5)
  Oct  7 12:19:10.631: INFO: Lookups using dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5 failed for: [wheezy_udp@dns-test-service.dns-2038.svc.cluster.local wheezy_tcp@dns-test-service.dns-2038.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2038.svc.cluster.local]

  Oct  7 12:19:10.638: INFO: Pod client logs for webserver: 
  Oct  7 12:19:10.646: INFO: Pod client logs for querier: 
  Oct  7 12:19:10.652: INFO: Pod client logs for jessie-querier: 
  Oct  7 12:19:15.626: INFO: DNS probes using dns-2038/dns-test-0f6e2304-4e51-480a-a074-1c6f440e14b5 succeeded

  Oct  7 12:19:15.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 12:19:15.629
  STEP: deleting the test service @ 10/07/23 12:19:15.646
  STEP: deleting the test headless service @ 10/07/23 12:19:15.698
  STEP: Destroying namespace "dns-2038" for this suite. @ 10/07/23 12:19:15.714
â€¢ [16.300 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 10/07/23 12:19:15.722
  Oct  7 12:19:15.722: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:19:15.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:15.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:15.74
  STEP: creating a Service @ 10/07/23 12:19:15.746
  STEP: watching for the Service to be added @ 10/07/23 12:19:15.754
  Oct  7 12:19:15.756: INFO: Found Service test-service-82b8j in namespace services-240 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Oct  7 12:19:15.756: INFO: Service test-service-82b8j created
  STEP: Getting /status @ 10/07/23 12:19:15.756
  Oct  7 12:19:15.759: INFO: Service test-service-82b8j has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/07/23 12:19:15.759
  STEP: watching for the Service to be patched @ 10/07/23 12:19:15.765
  Oct  7 12:19:15.766: INFO: observed Service test-service-82b8j in namespace services-240 with annotations: map[] & LoadBalancer: {[]}
  Oct  7 12:19:15.766: INFO: Found Service test-service-82b8j in namespace services-240 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Oct  7 12:19:15.766: INFO: Service test-service-82b8j has service status patched
  STEP: updating the ServiceStatus @ 10/07/23 12:19:15.766
  Oct  7 12:19:15.774: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/07/23 12:19:15.774
  Oct  7 12:19:15.775: INFO: Observed Service test-service-82b8j in namespace services-240 with annotations: map[] & Conditions: {[]}
  Oct  7 12:19:15.775: INFO: Observed event: &Service{ObjectMeta:{test-service-82b8j  services-240  1ff9ac7f-596c-4f59-aaba-30108e36845d 6604 0 2023-10-07 12:19:15 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-10-07 12:19:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-10-07 12:19:15 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.140,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.140],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Oct  7 12:19:15.776: INFO: Found Service test-service-82b8j in namespace services-240 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct  7 12:19:15.776: INFO: Service test-service-82b8j has service status updated
  STEP: patching the service @ 10/07/23 12:19:15.776
  STEP: watching for the Service to be patched @ 10/07/23 12:19:15.784
  Oct  7 12:19:15.786: INFO: observed Service test-service-82b8j in namespace services-240 with labels: map[test-service-static:true]
  Oct  7 12:19:15.786: INFO: observed Service test-service-82b8j in namespace services-240 with labels: map[test-service-static:true]
  Oct  7 12:19:15.786: INFO: observed Service test-service-82b8j in namespace services-240 with labels: map[test-service-static:true]
  Oct  7 12:19:15.786: INFO: Found Service test-service-82b8j in namespace services-240 with labels: map[test-service:patched test-service-static:true]
  Oct  7 12:19:15.786: INFO: Service test-service-82b8j patched
  STEP: deleting the service @ 10/07/23 12:19:15.786
  STEP: watching for the Service to be deleted @ 10/07/23 12:19:15.798
  Oct  7 12:19:15.799: INFO: Observed event: ADDED
  Oct  7 12:19:15.799: INFO: Observed event: MODIFIED
  Oct  7 12:19:15.799: INFO: Observed event: MODIFIED
  Oct  7 12:19:15.799: INFO: Observed event: MODIFIED
  Oct  7 12:19:15.799: INFO: Found Service test-service-82b8j in namespace services-240 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Oct  7 12:19:15.799: INFO: Service test-service-82b8j deleted
  Oct  7 12:19:15.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-240" for this suite. @ 10/07/23 12:19:15.802
â€¢ [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 10/07/23 12:19:15.81
  Oct  7 12:19:15.810: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pod-network-test @ 10/07/23 12:19:15.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:15.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:15.827
  STEP: Performing setup for networking test in namespace pod-network-test-4867 @ 10/07/23 12:19:15.83
  STEP: creating a selector @ 10/07/23 12:19:15.83
  STEP: Creating the service pods in kubernetes @ 10/07/23 12:19:15.83
  Oct  7 12:19:15.830: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/07/23 12:19:37.933
  Oct  7 12:19:39.948: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct  7 12:19:39.948: INFO: Breadth first check of 192.168.161.37 on host 172.31.0.122...
  Oct  7 12:19:39.950: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.62.48:9080/dial?request=hostname&protocol=http&host=192.168.161.37&port=8083&tries=1'] Namespace:pod-network-test-4867 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:19:39.950: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:19:39.951: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:19:39.951: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4867/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.62.48%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.161.37%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct  7 12:19:40.025: INFO: Waiting for responses: map[]
  Oct  7 12:19:40.025: INFO: reached 192.168.161.37 after 0/1 tries
  Oct  7 12:19:40.025: INFO: Breadth first check of 192.168.62.47 on host 172.31.31.221...
  Oct  7 12:19:40.029: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.62.48:9080/dial?request=hostname&protocol=http&host=192.168.62.47&port=8083&tries=1'] Namespace:pod-network-test-4867 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:19:40.029: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:19:40.030: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:19:40.030: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4867/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.62.48%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.62.47%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct  7 12:19:40.108: INFO: Waiting for responses: map[]
  Oct  7 12:19:40.108: INFO: reached 192.168.62.47 after 0/1 tries
  Oct  7 12:19:40.108: INFO: Breadth first check of 192.168.52.232 on host 172.31.40.4...
  Oct  7 12:19:40.111: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.62.48:9080/dial?request=hostname&protocol=http&host=192.168.52.232&port=8083&tries=1'] Namespace:pod-network-test-4867 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:19:40.111: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:19:40.111: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:19:40.111: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4867/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.62.48%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.52.232%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct  7 12:19:40.173: INFO: Waiting for responses: map[]
  Oct  7 12:19:40.173: INFO: reached 192.168.52.232 after 0/1 tries
  Oct  7 12:19:40.173: INFO: Going to retry 0 out of 3 pods....
  Oct  7 12:19:40.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4867" for this suite. @ 10/07/23 12:19:40.178
â€¢ [24.374 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/07/23 12:19:40.184
  Oct  7 12:19:40.184: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename proxy @ 10/07/23 12:19:40.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:40.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:40.204
  Oct  7 12:19:40.206: INFO: Creating pod...
  Oct  7 12:19:42.221: INFO: Creating service...
  Oct  7 12:19:42.234: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/pods/agnhost/proxy/some/path/with/DELETE
  Oct  7 12:19:42.244: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct  7 12:19:42.244: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/pods/agnhost/proxy/some/path/with/GET
  Oct  7 12:19:42.247: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct  7 12:19:42.247: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/pods/agnhost/proxy/some/path/with/HEAD
  Oct  7 12:19:42.251: INFO: http.Client request:HEAD | StatusCode:200
  Oct  7 12:19:42.251: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/pods/agnhost/proxy/some/path/with/OPTIONS
  Oct  7 12:19:42.254: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct  7 12:19:42.254: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/pods/agnhost/proxy/some/path/with/PATCH
  Oct  7 12:19:42.257: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct  7 12:19:42.257: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/pods/agnhost/proxy/some/path/with/POST
  Oct  7 12:19:42.260: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct  7 12:19:42.260: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/pods/agnhost/proxy/some/path/with/PUT
  Oct  7 12:19:42.263: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct  7 12:19:42.263: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/services/test-service/proxy/some/path/with/DELETE
  Oct  7 12:19:42.269: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct  7 12:19:42.269: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/services/test-service/proxy/some/path/with/GET
  Oct  7 12:19:42.273: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct  7 12:19:42.274: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/services/test-service/proxy/some/path/with/HEAD
  Oct  7 12:19:42.278: INFO: http.Client request:HEAD | StatusCode:200
  Oct  7 12:19:42.278: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/services/test-service/proxy/some/path/with/OPTIONS
  Oct  7 12:19:42.285: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct  7 12:19:42.285: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/services/test-service/proxy/some/path/with/PATCH
  Oct  7 12:19:42.290: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct  7 12:19:42.290: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/services/test-service/proxy/some/path/with/POST
  Oct  7 12:19:42.294: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct  7 12:19:42.294: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2617/services/test-service/proxy/some/path/with/PUT
  Oct  7 12:19:42.300: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct  7 12:19:42.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2617" for this suite. @ 10/07/23 12:19:42.303
â€¢ [2.126 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/07/23 12:19:42.31
  Oct  7 12:19:42.310: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:19:42.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:42.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:42.327
  STEP: Creating secret with name secret-test-dabd013b-83a5-4718-bc8d-d12b50ada54d @ 10/07/23 12:19:42.329
  STEP: Creating a pod to test consume secrets @ 10/07/23 12:19:42.334
  STEP: Saw pod success @ 10/07/23 12:19:46.356
  Oct  7 12:19:46.359: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-secrets-c75317eb-ac29-42bd-9b2c-401fb86049d7 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 12:19:46.371
  Oct  7 12:19:46.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1188" for this suite. @ 10/07/23 12:19:46.455
â€¢ [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 10/07/23 12:19:46.466
  Oct  7 12:19:46.466: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 12:19:46.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:46.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:46.488
  STEP: create deployment with httpd image @ 10/07/23 12:19:46.49
  Oct  7 12:19:46.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-6116 create -f -'
  Oct  7 12:19:46.639: INFO: stderr: ""
  Oct  7 12:19:46.639: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/07/23 12:19:46.639
  Oct  7 12:19:46.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-6116 diff -f -'
  Oct  7 12:19:46.753: INFO: rc: 1
  Oct  7 12:19:46.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-6116 delete -f -'
  Oct  7 12:19:46.806: INFO: stderr: ""
  Oct  7 12:19:46.806: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Oct  7 12:19:46.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6116" for this suite. @ 10/07/23 12:19:46.81
â€¢ [0.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 10/07/23 12:19:46.819
  Oct  7 12:19:46.819: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sysctl @ 10/07/23 12:19:46.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:46.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:46.837
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/07/23 12:19:46.84
  Oct  7 12:19:46.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6427" for this suite. @ 10/07/23 12:19:46.847
â€¢ [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 10/07/23 12:19:46.853
  Oct  7 12:19:46.853: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:19:46.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:46.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:46.872
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:19:46.875
  STEP: Saw pod success @ 10/07/23 12:19:50.899
  Oct  7 12:19:50.903: INFO: Trying to get logs from node ip-172-31-0-122 pod downwardapi-volume-1c904042-19dc-44da-a282-09d8176ec533 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:19:50.909
  Oct  7 12:19:50.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7661" for this suite. @ 10/07/23 12:19:50.925
â€¢ [4.077 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 10/07/23 12:19:50.931
  Oct  7 12:19:50.931: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename job @ 10/07/23 12:19:50.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:50.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:50.949
  STEP: Creating a job @ 10/07/23 12:19:50.951
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/07/23 12:19:50.957
  STEP: patching /status @ 10/07/23 12:19:52.961
  STEP: updating /status @ 10/07/23 12:19:52.966
  STEP: get /status @ 10/07/23 12:19:52.975
  Oct  7 12:19:52.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7580" for this suite. @ 10/07/23 12:19:52.982
â€¢ [2.056 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/07/23 12:19:52.988
  Oct  7 12:19:52.988: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename init-container @ 10/07/23 12:19:52.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:53.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:53.006
  STEP: creating the pod @ 10/07/23 12:19:53.009
  Oct  7 12:19:53.009: INFO: PodSpec: initContainers in spec.initContainers
  Oct  7 12:19:56.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6547" for this suite. @ 10/07/23 12:19:56.131
â€¢ [3.151 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/07/23 12:19:56.139
  Oct  7 12:19:56.139: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 12:19:56.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:19:56.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:19:56.157
  STEP: Create set of pods @ 10/07/23 12:19:56.16
  Oct  7 12:19:56.168: INFO: created test-pod-1
  Oct  7 12:19:56.174: INFO: created test-pod-2
  Oct  7 12:19:56.180: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/07/23 12:19:56.18
  STEP: waiting for all pods to be deleted @ 10/07/23 12:19:58.229
  Oct  7 12:19:58.233: INFO: Pod quantity 3 is different from expected quantity 0
  Oct  7 12:19:59.236: INFO: Pod quantity 3 is different from expected quantity 0
  Oct  7 12:20:00.240: INFO: Pod quantity 2 is different from expected quantity 0
  Oct  7 12:20:01.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9767" for this suite. @ 10/07/23 12:20:01.24
â€¢ [5.108 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 10/07/23 12:20:01.248
  Oct  7 12:20:01.248: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename job @ 10/07/23 12:20:01.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:20:01.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:20:01.27
  STEP: Creating a job @ 10/07/23 12:20:01.273
  STEP: Ensuring active pods == parallelism @ 10/07/23 12:20:01.279
  STEP: Orphaning one of the Job's Pods @ 10/07/23 12:20:03.283
  Oct  7 12:20:03.800: INFO: Successfully updated pod "adopt-release-tm7gk"
  STEP: Checking that the Job readopts the Pod @ 10/07/23 12:20:03.8
  STEP: Removing the labels from the Job's Pod @ 10/07/23 12:20:05.816
  Oct  7 12:20:06.333: INFO: Successfully updated pod "adopt-release-tm7gk"
  STEP: Checking that the Job releases the Pod @ 10/07/23 12:20:06.333
  Oct  7 12:20:08.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-77" for this suite. @ 10/07/23 12:20:08.346
â€¢ [7.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 10/07/23 12:20:08.353
  Oct  7 12:20:08.353: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 12:20:08.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:20:08.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:20:08.371
  STEP: Creating service test in namespace statefulset-3959 @ 10/07/23 12:20:08.374
  Oct  7 12:20:08.390: INFO: Found 0 stateful pods, waiting for 1
  Oct  7 12:20:18.397: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/07/23 12:20:18.403
  W1007 12:20:18.412007      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Oct  7 12:20:18.420: INFO: Found 1 stateful pods, waiting for 2
  Oct  7 12:20:28.426: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 12:20:28.426: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/07/23 12:20:28.432
  STEP: Delete all of the StatefulSets @ 10/07/23 12:20:28.436
  STEP: Verify that StatefulSets have been deleted @ 10/07/23 12:20:28.444
  Oct  7 12:20:28.448: INFO: Deleting all statefulset in ns statefulset-3959
  Oct  7 12:20:28.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3959" for this suite. @ 10/07/23 12:20:28.468
â€¢ [20.122 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 10/07/23 12:20:28.476
  Oct  7 12:20:28.476: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 12:20:28.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:20:28.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:20:28.501
  STEP: creating the pod @ 10/07/23 12:20:28.507
  STEP: waiting for pod running @ 10/07/23 12:20:28.516
  STEP: creating a file in subpath @ 10/07/23 12:20:30.528
  Oct  7 12:20:30.530: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8033 PodName:var-expansion-ee200eaf-3240-4399-9234-d171aa457ecf ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:20:30.530: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:20:30.531: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:20:30.531: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8033/pods/var-expansion-ee200eaf-3240-4399-9234-d171aa457ecf/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/07/23 12:20:30.604
  Oct  7 12:20:30.608: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8033 PodName:var-expansion-ee200eaf-3240-4399-9234-d171aa457ecf ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:20:30.608: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:20:30.608: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:20:30.608: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8033/pods/var-expansion-ee200eaf-3240-4399-9234-d171aa457ecf/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/07/23 12:20:30.673
  Oct  7 12:20:31.183: INFO: Successfully updated pod "var-expansion-ee200eaf-3240-4399-9234-d171aa457ecf"
  STEP: waiting for annotated pod running @ 10/07/23 12:20:31.183
  STEP: deleting the pod gracefully @ 10/07/23 12:20:31.186
  Oct  7 12:20:31.186: INFO: Deleting pod "var-expansion-ee200eaf-3240-4399-9234-d171aa457ecf" in namespace "var-expansion-8033"
  Oct  7 12:20:31.193: INFO: Wait up to 5m0s for pod "var-expansion-ee200eaf-3240-4399-9234-d171aa457ecf" to be fully deleted
  Oct  7 12:21:05.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8033" for this suite. @ 10/07/23 12:21:05.27
â€¢ [36.801 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 10/07/23 12:21:05.278
  Oct  7 12:21:05.278: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:21:05.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:21:05.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:21:05.303
  Oct  7 12:21:05.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5856" for this suite. @ 10/07/23 12:21:05.314
â€¢ [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/07/23 12:21:05.323
  Oct  7 12:21:05.323: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename containers @ 10/07/23 12:21:05.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:21:05.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:21:05.349
  Oct  7 12:21:07.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5744" for this suite. @ 10/07/23 12:21:07.395
â€¢ [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/07/23 12:21:07.401
  Oct  7 12:21:07.401: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename subpath @ 10/07/23 12:21:07.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:21:07.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:21:07.431
  STEP: Setting up data @ 10/07/23 12:21:07.434
  STEP: Creating pod pod-subpath-test-configmap-sw6k @ 10/07/23 12:21:07.443
  STEP: Creating a pod to test atomic-volume-subpath @ 10/07/23 12:21:07.443
  STEP: Saw pod success @ 10/07/23 12:21:31.511
  Oct  7 12:21:31.516: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-subpath-test-configmap-sw6k container test-container-subpath-configmap-sw6k: <nil>
  STEP: delete the pod @ 10/07/23 12:21:31.529
  STEP: Deleting pod pod-subpath-test-configmap-sw6k @ 10/07/23 12:21:31.543
  Oct  7 12:21:31.543: INFO: Deleting pod "pod-subpath-test-configmap-sw6k" in namespace "subpath-3884"
  Oct  7 12:21:31.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3884" for this suite. @ 10/07/23 12:21:31.549
â€¢ [24.155 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 10/07/23 12:21:31.557
  Oct  7 12:21:31.557: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename events @ 10/07/23 12:21:31.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:21:31.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:21:31.579
  STEP: creating a test event @ 10/07/23 12:21:31.582
  STEP: listing all events in all namespaces @ 10/07/23 12:21:31.588
  STEP: patching the test event @ 10/07/23 12:21:31.593
  STEP: fetching the test event @ 10/07/23 12:21:31.602
  STEP: updating the test event @ 10/07/23 12:21:31.604
  STEP: getting the test event @ 10/07/23 12:21:31.613
  STEP: deleting the test event @ 10/07/23 12:21:31.616
  STEP: listing all events in all namespaces @ 10/07/23 12:21:31.624
  Oct  7 12:21:31.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2721" for this suite. @ 10/07/23 12:21:31.635
â€¢ [0.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 10/07/23 12:21:31.642
  Oct  7 12:21:31.642: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename disruption @ 10/07/23 12:21:31.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:21:31.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:21:31.661
  STEP: Waiting for the pdb to be processed @ 10/07/23 12:21:31.669
  STEP: Waiting for all pods to be running @ 10/07/23 12:21:33.703
  Oct  7 12:21:33.712: INFO: running pods: 0 < 3
  Oct  7 12:21:35.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6645" for this suite. @ 10/07/23 12:21:35.722
â€¢ [4.085 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 10/07/23 12:21:35.728
  Oct  7 12:21:35.728: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:21:35.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:21:35.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:21:35.748
  STEP: Counting existing ResourceQuota @ 10/07/23 12:21:35.75
  STEP: Creating a ResourceQuota @ 10/07/23 12:21:40.754
  STEP: Ensuring resource quota status is calculated @ 10/07/23 12:21:40.76
  STEP: Creating a Service @ 10/07/23 12:21:42.765
  STEP: Creating a NodePort Service @ 10/07/23 12:21:42.782
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/07/23 12:21:42.802
  STEP: Ensuring resource quota status captures service creation @ 10/07/23 12:21:42.828
  STEP: Deleting Services @ 10/07/23 12:21:44.832
  STEP: Ensuring resource quota status released usage @ 10/07/23 12:21:44.879
  Oct  7 12:21:46.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-284" for this suite. @ 10/07/23 12:21:46.887
â€¢ [11.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/07/23 12:21:46.894
  Oct  7 12:21:46.894: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-runtime @ 10/07/23 12:21:46.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:21:46.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:21:46.913
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/07/23 12:21:46.924
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/07/23 12:22:01.991
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/07/23 12:22:01.994
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/07/23 12:22:02
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 10/07/23 12:22:02
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/07/23 12:22:02.019
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/07/23 12:22:04.033
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/07/23 12:22:05.04
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/07/23 12:22:05.045
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 10/07/23 12:22:05.045
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/07/23 12:22:05.066
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/07/23 12:22:06.075
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/07/23 12:22:08.089
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/07/23 12:22:08.095
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 10/07/23 12:22:08.095
  Oct  7 12:22:08.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3803" for this suite. @ 10/07/23 12:22:08.123
â€¢ [21.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 10/07/23 12:22:08.131
  Oct  7 12:22:08.131: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:22:08.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:08.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:08.148
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4917 @ 10/07/23 12:22:08.151
  STEP: changing the ExternalName service to type=ClusterIP @ 10/07/23 12:22:08.156
  STEP: creating replication controller externalname-service in namespace services-4917 @ 10/07/23 12:22:08.169
  I1007 12:22:08.180096      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4917, replica count: 2
  I1007 12:22:11.231579      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 12:22:11.231: INFO: Creating new exec pod
  Oct  7 12:22:14.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4917 exec execpodnk79w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct  7 12:22:14.361: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct  7 12:22:14.361: INFO: stdout: "externalname-service-wrssq"
  Oct  7 12:22:14.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4917 exec execpodnk79w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  Oct  7 12:22:14.484: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.140 80\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  Oct  7 12:22:14.484: INFO: stdout: "externalname-service-wrssq"
  Oct  7 12:22:14.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 12:22:14.492: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-4917" for this suite. @ 10/07/23 12:22:14.511
â€¢ [6.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/07/23 12:22:14.518
  Oct  7 12:22:14.518: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename subjectreview @ 10/07/23 12:22:14.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:14.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:14.537
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3570" @ 10/07/23 12:22:14.539
  Oct  7 12:22:14.543: INFO: saUsername: "system:serviceaccount:subjectreview-3570:e2e"
  Oct  7 12:22:14.543: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3570"}
  Oct  7 12:22:14.543: INFO: saUID: "614556cc-385d-45e0-b3ab-4c8cb82b2928"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3570:e2e" @ 10/07/23 12:22:14.543
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3570:e2e" @ 10/07/23 12:22:14.543
  Oct  7 12:22:14.545: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3570:e2e" api 'list' configmaps in "subjectreview-3570" namespace @ 10/07/23 12:22:14.545
  Oct  7 12:22:14.547: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3570:e2e" @ 10/07/23 12:22:14.547
  Oct  7 12:22:14.550: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Oct  7 12:22:14.550: INFO: LocalSubjectAccessReview has been verified
  Oct  7 12:22:14.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3570" for this suite. @ 10/07/23 12:22:14.554
â€¢ [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 10/07/23 12:22:14.561
  Oct  7 12:22:14.561: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename ingressclass @ 10/07/23 12:22:14.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:14.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:14.578
  STEP: getting /apis @ 10/07/23 12:22:14.581
  STEP: getting /apis/networking.k8s.io @ 10/07/23 12:22:14.584
  STEP: getting /apis/networking.k8s.iov1 @ 10/07/23 12:22:14.585
  STEP: creating @ 10/07/23 12:22:14.587
  STEP: getting @ 10/07/23 12:22:14.599
  STEP: listing @ 10/07/23 12:22:14.602
  STEP: watching @ 10/07/23 12:22:14.605
  Oct  7 12:22:14.605: INFO: starting watch
  STEP: patching @ 10/07/23 12:22:14.606
  STEP: updating @ 10/07/23 12:22:14.61
  Oct  7 12:22:14.614: INFO: waiting for watch events with expected annotations
  Oct  7 12:22:14.614: INFO: saw patched and updated annotations
  STEP: deleting @ 10/07/23 12:22:14.614
  STEP: deleting a collection @ 10/07/23 12:22:14.627
  Oct  7 12:22:14.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3347" for this suite. @ 10/07/23 12:22:14.644
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 10/07/23 12:22:14.651
  Oct  7 12:22:14.651: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:22:14.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:14.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:14.669
  STEP: creating service in namespace services-851 @ 10/07/23 12:22:14.672
  STEP: creating service affinity-nodeport-transition in namespace services-851 @ 10/07/23 12:22:14.672
  STEP: creating replication controller affinity-nodeport-transition in namespace services-851 @ 10/07/23 12:22:14.684
  I1007 12:22:14.693198      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-851, replica count: 3
  I1007 12:22:17.744049      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 12:22:17.752: INFO: Creating new exec pod
  Oct  7 12:22:20.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-851 exec execpod-affinityf5x86 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Oct  7 12:22:20.897: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Oct  7 12:22:20.897: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:22:20.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-851 exec execpod-affinityf5x86 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.188 80'
  Oct  7 12:22:21.021: INFO: stderr: "+ nc -v -t -w 2 10.152.183.188 80\n+ echo hostName\nConnection to 10.152.183.188 80 port [tcp/http] succeeded!\n"
  Oct  7 12:22:21.021: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:22:21.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-851 exec execpod-affinityf5x86 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.40.4 30565'
  Oct  7 12:22:21.141: INFO: stderr: "+ nc -v -t -w 2 172.31.40.4 30565\n+ echo hostName\nConnection to 172.31.40.4 30565 port [tcp/*] succeeded!\n"
  Oct  7 12:22:21.141: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:22:21.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-851 exec execpod-affinityf5x86 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.122 30565'
  Oct  7 12:22:21.260: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.0.122 30565\nConnection to 172.31.0.122 30565 port [tcp/*] succeeded!\n"
  Oct  7 12:22:21.260: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:22:21.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-851 exec execpod-affinityf5x86 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.122:30565/ ; done'
  Oct  7 12:22:21.433: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n"
  Oct  7 12:22:21.433: INFO: stdout: "\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-8gdxs\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-8gdxs\naffinity-nodeport-transition-8gdxs\naffinity-nodeport-transition-c856q\naffinity-nodeport-transition-8gdxs\naffinity-nodeport-transition-c856q\naffinity-nodeport-transition-c856q\naffinity-nodeport-transition-8gdxs\naffinity-nodeport-transition-c856q\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-8gdxs\naffinity-nodeport-transition-pfzmk"
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-8gdxs
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-8gdxs
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-8gdxs
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-c856q
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-8gdxs
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-c856q
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-c856q
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-8gdxs
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-c856q
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-8gdxs
  Oct  7 12:22:21.433: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-851 exec execpod-affinityf5x86 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.122:30565/ ; done'
  Oct  7 12:22:21.621: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:30565/\n"
  Oct  7 12:22:21.621: INFO: stdout: "\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk\naffinity-nodeport-transition-pfzmk"
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Received response from host: affinity-nodeport-transition-pfzmk
  Oct  7 12:22:21.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 12:22:21.625: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-851, will wait for the garbage collector to delete the pods @ 10/07/23 12:22:21.638
  Oct  7 12:22:21.700: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.359365ms
  Oct  7 12:22:21.801: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.868788ms
  STEP: Destroying namespace "services-851" for this suite. @ 10/07/23 12:22:24.928
â€¢ [10.284 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/07/23 12:22:24.935
  Oct  7 12:22:24.935: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/07/23 12:22:24.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:24.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:24.954
  STEP: creating @ 10/07/23 12:22:24.956
  STEP: getting @ 10/07/23 12:22:24.972
  STEP: listing in namespace @ 10/07/23 12:22:24.975
  STEP: patching @ 10/07/23 12:22:24.977
  STEP: deleting @ 10/07/23 12:22:24.989
  Oct  7 12:22:24.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4958" for this suite. @ 10/07/23 12:22:25.002
â€¢ [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 10/07/23 12:22:25.008
  Oct  7 12:22:25.008: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename endpointslice @ 10/07/23 12:22:25.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:25.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:25.028
  Oct  7 12:22:25.040: INFO: Endpoints addresses: [172.31.31.5 172.31.35.155] , ports: [6443]
  Oct  7 12:22:25.040: INFO: EndpointSlices addresses: [172.31.31.5 172.31.35.155] , ports: [6443]
  Oct  7 12:22:25.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-596" for this suite. @ 10/07/23 12:22:25.044
â€¢ [0.040 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 10/07/23 12:22:25.049
  Oct  7 12:22:25.049: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 12:22:25.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:25.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:25.07
  STEP: Creating a test externalName service @ 10/07/23 12:22:25.073
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5712.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5712.svc.cluster.local; sleep 1; done
   @ 10/07/23 12:22:25.076
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5712.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5712.svc.cluster.local; sleep 1; done
   @ 10/07/23 12:22:25.076
  STEP: creating a pod to probe DNS @ 10/07/23 12:22:25.076
  STEP: submitting the pod to kubernetes @ 10/07/23 12:22:25.077
  STEP: retrieving the pod @ 10/07/23 12:22:31.103
  STEP: looking for the results for each expected name from probers @ 10/07/23 12:22:31.106
  Oct  7 12:22:31.114: INFO: DNS probes using dns-test-23143668-c1a1-4f6d-a4b5-15efb6f5eac7 succeeded

  STEP: changing the externalName to bar.example.com @ 10/07/23 12:22:31.114
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5712.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5712.svc.cluster.local; sleep 1; done
   @ 10/07/23 12:22:31.123
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5712.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5712.svc.cluster.local; sleep 1; done
   @ 10/07/23 12:22:31.123
  STEP: creating a second pod to probe DNS @ 10/07/23 12:22:31.123
  STEP: submitting the pod to kubernetes @ 10/07/23 12:22:31.123
  STEP: retrieving the pod @ 10/07/23 12:22:33.138
  STEP: looking for the results for each expected name from probers @ 10/07/23 12:22:33.142
  Oct  7 12:22:33.145: INFO: File wheezy_udp@dns-test-service-3.dns-5712.svc.cluster.local from pod  dns-5712/dns-test-34602587-70e7-4a2e-a677-8869cd0c6713 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Oct  7 12:22:33.149: INFO: File jessie_udp@dns-test-service-3.dns-5712.svc.cluster.local from pod  dns-5712/dns-test-34602587-70e7-4a2e-a677-8869cd0c6713 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Oct  7 12:22:33.149: INFO: Lookups using dns-5712/dns-test-34602587-70e7-4a2e-a677-8869cd0c6713 failed for: [wheezy_udp@dns-test-service-3.dns-5712.svc.cluster.local jessie_udp@dns-test-service-3.dns-5712.svc.cluster.local]

  Oct  7 12:22:33.158: INFO: Pod client logs for webserver: 
  Oct  7 12:22:33.163: INFO: Pod client logs for querier: 
  Oct  7 12:22:33.169: INFO: Pod client logs for jessie-querier: 
  Oct  7 12:22:38.180: INFO: DNS probes using dns-test-34602587-70e7-4a2e-a677-8869cd0c6713 succeeded

  STEP: changing the service to type=ClusterIP @ 10/07/23 12:22:38.18
  W1007 12:22:38.192579      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5712.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5712.svc.cluster.local; sleep 1; done
   @ 10/07/23 12:22:38.193
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5712.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5712.svc.cluster.local; sleep 1; done
   @ 10/07/23 12:22:38.193
  STEP: creating a third pod to probe DNS @ 10/07/23 12:22:38.193
  STEP: submitting the pod to kubernetes @ 10/07/23 12:22:38.197
  STEP: retrieving the pod @ 10/07/23 12:22:40.212
  STEP: looking for the results for each expected name from probers @ 10/07/23 12:22:40.216
  Oct  7 12:22:40.223: INFO: DNS probes using dns-test-fc0226aa-3703-4926-8ba1-4a1d260e0501 succeeded

  Oct  7 12:22:40.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 12:22:40.227
  STEP: deleting the pod @ 10/07/23 12:22:40.237
  STEP: deleting the pod @ 10/07/23 12:22:40.251
  STEP: deleting the test externalName service @ 10/07/23 12:22:40.261
  STEP: Destroying namespace "dns-5712" for this suite. @ 10/07/23 12:22:40.276
â€¢ [15.236 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/07/23 12:22:40.286
  Oct  7 12:22:40.286: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:22:40.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:40.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:40.303
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:22:40.306
  STEP: Saw pod success @ 10/07/23 12:22:44.328
  Oct  7 12:22:44.331: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-730969ca-8f63-4ef2-a5a3-45358ef4f6d7 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:22:44.337
  Oct  7 12:22:44.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5987" for this suite. @ 10/07/23 12:22:44.356
â€¢ [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 10/07/23 12:22:44.362
  Oct  7 12:22:44.362: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename gc @ 10/07/23 12:22:44.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:44.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:44.379
  STEP: create the deployment @ 10/07/23 12:22:44.382
  W1007 12:22:44.388085      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/07/23 12:22:44.388
  STEP: delete the deployment @ 10/07/23 12:22:44.894
  STEP: wait for all rs to be garbage collected @ 10/07/23 12:22:44.901
  STEP: expected 0 rs, got 1 rs @ 10/07/23 12:22:44.908
  STEP: expected 0 pods, got 2 pods @ 10/07/23 12:22:44.912
  STEP: Gathering metrics @ 10/07/23 12:22:45.422
  W1007 12:22:45.427432      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct  7 12:22:45.427: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct  7 12:22:45.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9631" for this suite. @ 10/07/23 12:22:45.432
â€¢ [1.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/07/23 12:22:45.439
  Oct  7 12:22:45.439: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-runtime @ 10/07/23 12:22:45.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:45.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:45.456
  STEP: create the container @ 10/07/23 12:22:45.459
  W1007 12:22:45.468438      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/07/23 12:22:45.468
  STEP: get the container status @ 10/07/23 12:22:48.484
  STEP: the container should be terminated @ 10/07/23 12:22:48.487
  STEP: the termination message should be set @ 10/07/23 12:22:48.488
  Oct  7 12:22:48.488: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/07/23 12:22:48.488
  Oct  7 12:22:48.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9767" for this suite. @ 10/07/23 12:22:48.508
â€¢ [3.075 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 10/07/23 12:22:48.514
  Oct  7 12:22:48.514: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:22:48.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:48.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:48.532
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/07/23 12:22:48.535
  STEP: Saw pod success @ 10/07/23 12:22:52.555
  Oct  7 12:22:52.559: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-1bf0dbff-1ecd-4319-9329-4b4db938d38e container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:22:52.565
  Oct  7 12:22:52.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7509" for this suite. @ 10/07/23 12:22:52.582
â€¢ [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 10/07/23 12:22:52.588
  Oct  7 12:22:52.588: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename namespaces @ 10/07/23 12:22:52.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:52.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:52.607
  STEP: Read namespace status @ 10/07/23 12:22:52.61
  Oct  7 12:22:52.615: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/07/23 12:22:52.615
  Oct  7 12:22:52.621: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/07/23 12:22:52.621
  Oct  7 12:22:52.628: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Oct  7 12:22:52.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2565" for this suite. @ 10/07/23 12:22:52.632
â€¢ [0.050 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 10/07/23 12:22:52.639
  Oct  7 12:22:52.639: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:22:52.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:52.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:52.657
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/07/23 12:22:52.659
  STEP: Saw pod success @ 10/07/23 12:22:56.679
  Oct  7 12:22:56.682: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-c3dedd0c-4878-4ea0-a4dd-ae3c9a4156a4 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:22:56.688
  Oct  7 12:22:56.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1176" for this suite. @ 10/07/23 12:22:56.724
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 10/07/23 12:22:56.732
  Oct  7 12:22:56.732: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 12:22:56.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:56.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:56.751
  Oct  7 12:22:56.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-5144 version'
  Oct  7 12:22:56.796: INFO: stderr: ""
  Oct  7 12:22:56.796: INFO: stdout: "Client Version: v1.28.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.2\n"
  Oct  7 12:22:56.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5144" for this suite. @ 10/07/23 12:22:56.801
â€¢ [0.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/07/23 12:22:56.808
  Oct  7 12:22:56.808: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 12:22:56.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:56.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:56.825
  STEP: Create a pod @ 10/07/23 12:22:56.828
  STEP: patching /status @ 10/07/23 12:22:58.846
  Oct  7 12:22:58.854: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Oct  7 12:22:58.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-711" for this suite. @ 10/07/23 12:22:58.857
â€¢ [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 10/07/23 12:22:58.864
  Oct  7 12:22:58.864: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:22:58.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:22:58.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:22:58.884
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-918 @ 10/07/23 12:22:58.887
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/07/23 12:22:58.902
  STEP: creating service externalsvc in namespace services-918 @ 10/07/23 12:22:58.902
  STEP: creating replication controller externalsvc in namespace services-918 @ 10/07/23 12:22:58.917
  I1007 12:22:58.925459      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-918, replica count: 2
  I1007 12:23:01.976426      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/07/23 12:23:01.98
  Oct  7 12:23:01.998: INFO: Creating new exec pod
  Oct  7 12:23:04.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-918 exec execpodp8frt -- /bin/sh -x -c nslookup nodeport-service.services-918.svc.cluster.local'
  Oct  7 12:23:04.145: INFO: stderr: "+ nslookup nodeport-service.services-918.svc.cluster.local\n"
  Oct  7 12:23:04.145: INFO: stdout: "Server:\t\t10.152.183.248\nAddress:\t10.152.183.248#53\n\nnodeport-service.services-918.svc.cluster.local\tcanonical name = externalsvc.services-918.svc.cluster.local.\nName:\texternalsvc.services-918.svc.cluster.local\nAddress: 10.152.183.195\n\n"
  Oct  7 12:23:04.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-918, will wait for the garbage collector to delete the pods @ 10/07/23 12:23:04.149
  Oct  7 12:23:04.208: INFO: Deleting ReplicationController externalsvc took: 5.564599ms
  Oct  7 12:23:04.309: INFO: Terminating ReplicationController externalsvc pods took: 100.726431ms
  Oct  7 12:23:07.435: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-918" for this suite. @ 10/07/23 12:23:07.452
â€¢ [8.602 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 10/07/23 12:23:07.467
  Oct  7 12:23:07.467: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pod-network-test @ 10/07/23 12:23:07.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:23:07.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:23:07.483
  STEP: Performing setup for networking test in namespace pod-network-test-2491 @ 10/07/23 12:23:07.486
  STEP: creating a selector @ 10/07/23 12:23:07.486
  STEP: Creating the service pods in kubernetes @ 10/07/23 12:23:07.486
  Oct  7 12:23:07.486: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/07/23 12:23:29.584
  Oct  7 12:23:31.621: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct  7 12:23:31.621: INFO: Going to poll 192.168.161.55 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct  7 12:23:31.624: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.161.55 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2491 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:23:31.624: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:23:31.624: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:23:31.625: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2491/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.161.55+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct  7 12:23:32.695: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct  7 12:23:32.695: INFO: Going to poll 192.168.62.9 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct  7 12:23:32.699: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.62.9 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2491 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:23:32.699: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:23:32.699: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:23:32.699: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2491/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.62.9+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct  7 12:23:33.774: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct  7 12:23:33.774: INFO: Going to poll 192.168.52.235 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct  7 12:23:33.778: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.52.235 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2491 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:23:33.778: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:23:33.779: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:23:33.779: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2491/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.52.235+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct  7 12:23:34.856: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct  7 12:23:34.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2491" for this suite. @ 10/07/23 12:23:34.86
â€¢ [27.399 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 10/07/23 12:23:34.866
  Oct  7 12:23:34.866: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 12:23:34.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:23:34.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:23:34.885
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/07/23 12:23:34.887
  Oct  7 12:23:34.888: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/07/23 12:23:39.977
  Oct  7 12:23:39.977: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:23:41.244: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:23:46.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6019" for this suite. @ 10/07/23 12:23:46.359
â€¢ [11.501 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 10/07/23 12:23:46.368
  Oct  7 12:23:46.368: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/07/23 12:23:46.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:23:46.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:23:46.387
  STEP: create the container to handle the HTTPGet hook request. @ 10/07/23 12:23:46.393
  STEP: create the pod with lifecycle hook @ 10/07/23 12:23:48.416
  STEP: delete the pod with lifecycle hook @ 10/07/23 12:23:50.435
  STEP: check prestop hook @ 10/07/23 12:23:52.451
  Oct  7 12:23:52.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5481" for this suite. @ 10/07/23 12:23:52.472
â€¢ [6.111 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 10/07/23 12:23:52.479
  Oct  7 12:23:52.479: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename job @ 10/07/23 12:23:52.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:23:52.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:23:52.499
  STEP: Creating a job @ 10/07/23 12:23:52.501
  STEP: Ensuring active pods == parallelism @ 10/07/23 12:23:52.508
  STEP: delete a job @ 10/07/23 12:23:54.514
  STEP: deleting Job.batch foo in namespace job-1728, will wait for the garbage collector to delete the pods @ 10/07/23 12:23:54.514
  Oct  7 12:23:54.575: INFO: Deleting Job.batch foo took: 7.080875ms
  Oct  7 12:23:54.676: INFO: Terminating Job.batch foo pods took: 101.118292ms
  STEP: Ensuring job was deleted @ 10/07/23 12:24:26.276
  Oct  7 12:24:26.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1728" for this suite. @ 10/07/23 12:24:26.284
â€¢ [33.812 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/07/23 12:24:26.291
  Oct  7 12:24:26.291: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:24:26.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:26.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:26.31
  STEP: Creating secret with name secret-test-f8b49232-31b1-4536-aa1c-13d1c2321886 @ 10/07/23 12:24:26.313
  STEP: Creating a pod to test consume secrets @ 10/07/23 12:24:26.321
  STEP: Saw pod success @ 10/07/23 12:24:30.342
  Oct  7 12:24:30.346: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-secrets-9aa16cfc-c596-4b38-8479-2b7fb4d958af container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 12:24:30.361
  Oct  7 12:24:30.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1603" for this suite. @ 10/07/23 12:24:30.38
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 10/07/23 12:24:30.389
  Oct  7 12:24:30.389: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename runtimeclass @ 10/07/23 12:24:30.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:30.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:30.409
  STEP: Deleting RuntimeClass runtimeclass-980-delete-me @ 10/07/23 12:24:30.417
  STEP: Waiting for the RuntimeClass to disappear @ 10/07/23 12:24:30.423
  Oct  7 12:24:30.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-980" for this suite. @ 10/07/23 12:24:30.436
â€¢ [0.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/07/23 12:24:30.443
  Oct  7 12:24:30.443: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 12:24:30.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:30.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:30.463
  Oct  7 12:24:30.465: INFO: Creating deployment "test-recreate-deployment"
  Oct  7 12:24:30.471: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Oct  7 12:24:30.478: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Oct  7 12:24:32.486: INFO: Waiting deployment "test-recreate-deployment" to complete
  Oct  7 12:24:32.490: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Oct  7 12:24:32.499: INFO: Updating deployment test-recreate-deployment
  Oct  7 12:24:32.499: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Oct  7 12:24:32.572: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9394",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbc57aff-fb81-4019-ae81-3fa9ffcaffdd",
      ResourceVersion: (string) (len=4) "9535",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278270,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct  7 12:24:32.577: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9394",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ad138c5-3cba-4da1-92af-cb4b7849bf5a",
      ResourceVersion: (string) (len=4) "9532",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fbc57aff-fb81-4019-ae81-3fa9ffcaffdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 63 35 37 61  66 66 2d 66 62 38 31 2d  |\"fbc57aff-fb81-|
              00000120  34 30 31 39 2d 61 65 38  31 2d 33 66 61 39 66 66  |4019-ae81-3fa9ff|
              00000130  63 61 66 66 64 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |caffdd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:24:32.578: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Oct  7 12:24:32.578: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9394",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96c6b428-ea67-4be4-801c-fa0995499709",
      ResourceVersion: (string) (len=4) "9524",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278270,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fbc57aff-fb81-4019-ae81-3fa9ffcaffdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 63 35 37 61  66 66 2d 66 62 38 31 2d  |\"fbc57aff-fb81-|
              00000120  34 30 31 39 2d 61 65 38  31 2d 33 66 61 39 66 66  |4019-ae81-3fa9ff|
              00000130  63 61 66 66 64 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |caffdd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:24:32.583: INFO: Pod "test-recreate-deployment-76fb77d45-4w6bt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-4w6bt",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-9394",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c442cb99-86e2-43a1-97d6-ad04e7dd80e8",
      ResourceVersion: (string) (len=4) "9536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "1ad138c5-3cba-4da1-92af-cb4b7849bf5a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  64 31 33 38 63 35 2d 33  |d\":\"1ad138c5-3|
              00000090  63 62 61 2d 34 64 61 31  2d 39 32 61 66 2d 63 62  |cba-4da1-92af-cb|
              000000a0  34 62 37 38 34 39 62 66  35 61 5c 22 7d 22 3a 7b  |4b7849bf5a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zpfpc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zpfpc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 12:24:32.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9394" for this suite. @ 10/07/23 12:24:32.589
â€¢ [2.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/07/23 12:24:32.597
  Oct  7 12:24:32.597: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/07/23 12:24:32.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:32.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:32.621
  STEP: Setting up the test @ 10/07/23 12:24:32.624
  STEP: Creating hostNetwork=false pod @ 10/07/23 12:24:32.624
  STEP: Creating hostNetwork=true pod @ 10/07/23 12:24:34.646
  STEP: Running the test @ 10/07/23 12:24:36.666
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/07/23 12:24:36.666
  Oct  7 12:24:36.666: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:36.666: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:36.666: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:36.666: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct  7 12:24:36.737: INFO: Exec stderr: ""
  Oct  7 12:24:36.737: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:36.737: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:36.738: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:36.738: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct  7 12:24:36.809: INFO: Exec stderr: ""
  Oct  7 12:24:36.809: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:36.809: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:36.810: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:36.810: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct  7 12:24:36.873: INFO: Exec stderr: ""
  Oct  7 12:24:36.873: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:36.873: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:36.874: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:36.874: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct  7 12:24:36.949: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/07/23 12:24:36.949
  Oct  7 12:24:36.949: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:36.949: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:36.950: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:36.950: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct  7 12:24:37.021: INFO: Exec stderr: ""
  Oct  7 12:24:37.021: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:37.021: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:37.022: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:37.022: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct  7 12:24:37.097: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/07/23 12:24:37.097
  Oct  7 12:24:37.097: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:37.097: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:37.098: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:37.098: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct  7 12:24:37.161: INFO: Exec stderr: ""
  Oct  7 12:24:37.161: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:37.161: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:37.162: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:37.162: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct  7 12:24:37.229: INFO: Exec stderr: ""
  Oct  7 12:24:37.229: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:37.229: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:37.229: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:37.229: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct  7 12:24:37.301: INFO: Exec stderr: ""
  Oct  7 12:24:37.301: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3914 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:24:37.301: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:24:37.301: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:24:37.301: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3914/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct  7 12:24:37.365: INFO: Exec stderr: ""
  Oct  7 12:24:37.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3914" for this suite. @ 10/07/23 12:24:37.369
â€¢ [4.780 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/07/23 12:24:37.377
  Oct  7 12:24:37.377: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename events @ 10/07/23 12:24:37.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:37.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:37.398
  STEP: Create set of events @ 10/07/23 12:24:37.401
  STEP: get a list of Events with a label in the current namespace @ 10/07/23 12:24:37.418
  STEP: delete a list of events @ 10/07/23 12:24:37.422
  Oct  7 12:24:37.422: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/07/23 12:24:37.445
  Oct  7 12:24:37.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5334" for this suite. @ 10/07/23 12:24:37.452
â€¢ [0.082 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 10/07/23 12:24:37.46
  Oct  7 12:24:37.460: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename discovery @ 10/07/23 12:24:37.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:37.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:37.478
  STEP: Setting up server cert @ 10/07/23 12:24:37.483
  STEP: Requesting APIResourceList from "/api/v1" @ 10/07/23 12:24:37.928
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/07/23 12:24:37.93
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/07/23 12:24:37.931
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/07/23 12:24:37.932
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/07/23 12:24:37.933
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/07/23 12:24:37.934
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/07/23 12:24:37.935
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/07/23 12:24:37.936
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/07/23 12:24:37.937
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/07/23 12:24:37.938
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/07/23 12:24:37.939
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/07/23 12:24:37.94
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/07/23 12:24:37.942
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/07/23 12:24:37.943
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/07/23 12:24:37.944
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/07/23 12:24:37.945
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/07/23 12:24:37.946
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/07/23 12:24:37.947
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/07/23 12:24:37.948
  Oct  7 12:24:37.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8366" for this suite. @ 10/07/23 12:24:37.953
â€¢ [0.500 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 10/07/23 12:24:37.961
  Oct  7 12:24:37.961: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename disruption @ 10/07/23 12:24:37.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:37.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:37.981
  STEP: creating the pdb @ 10/07/23 12:24:37.984
  STEP: Waiting for the pdb to be processed @ 10/07/23 12:24:37.988
  STEP: updating the pdb @ 10/07/23 12:24:39.998
  STEP: Waiting for the pdb to be processed @ 10/07/23 12:24:40.007
  STEP: patching the pdb @ 10/07/23 12:24:42.015
  STEP: Waiting for the pdb to be processed @ 10/07/23 12:24:42.026
  STEP: Waiting for the pdb to be deleted @ 10/07/23 12:24:42.035
  Oct  7 12:24:42.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7114" for this suite. @ 10/07/23 12:24:42.044
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 10/07/23 12:24:42.052
  Oct  7 12:24:42.052: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-pred @ 10/07/23 12:24:42.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:42.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:42.072
  Oct  7 12:24:42.075: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct  7 12:24:42.083: INFO: Waiting for terminating namespaces to be deleted...
  Oct  7 12:24:42.086: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-0-122 before test
  Oct  7 12:24:42.092: INFO: test-pod from e2e-kubelet-etc-hosts-3914 started at 2023-10-07 12:24:32 +0000 UTC (3 container statuses recorded)
  Oct  7 12:24:42.092: INFO: 	Container busybox-1 ready: true, restart count 0
  Oct  7 12:24:42.092: INFO: 	Container busybox-2 ready: true, restart count 0
  Oct  7 12:24:42.092: INFO: 	Container busybox-3 ready: true, restart count 0
  Oct  7 12:24:42.093: INFO: nginx-ingress-controller-kubernetes-worker-ndczw from ingress-nginx-kubernetes-worker started at 2023-10-07 12:10:31 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.093: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:24:42.093: INFO: calico-node-s77kx from kube-system started at 2023-10-07 12:09:50 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.093: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:24:42.093: INFO: sonobuoy-e2e-job-71352699346043a1 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:24:42.093: INFO: 	Container e2e ready: true, restart count 0
  Oct  7 12:24:42.093: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:24:42.093: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-fq6js from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:24:42.093: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:24:42.093: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 12:24:42.093: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-221 before test
  Oct  7 12:24:42.099: INFO: test-host-network-pod from e2e-kubelet-etc-hosts-3914 started at 2023-10-07 12:24:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:24:42.099: INFO: 	Container busybox-1 ready: true, restart count 0
  Oct  7 12:24:42.099: INFO: 	Container busybox-2 ready: true, restart count 0
  Oct  7 12:24:42.099: INFO: nginx-ingress-controller-kubernetes-worker-x6hxp from ingress-nginx-kubernetes-worker started at 2023-10-07 12:06:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.099: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:24:42.099: INFO: calico-node-v7ff9 from kube-system started at 2023-10-07 12:06:03 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.099: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:24:42.099: INFO: sonobuoy from sonobuoy started at 2023-10-07 12:16:32 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.099: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct  7 12:24:42.099: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-nf7ln from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:24:42.099: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:24:42.099: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 12:24:42.099: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-40-4 before test
  Oct  7 12:24:42.105: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvvtf from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.105: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct  7 12:24:42.105: INFO: nginx-ingress-controller-kubernetes-worker-44xxd from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: calico-node-z4q47 from kube-system started at 2023-10-07 12:03:53 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: coredns-59cfb5bf46-gn6vc from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container coredns ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: kube-state-metrics-775d9f4f79-k2ppl from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: metrics-server-v0.6.3-69d7fbfdf8-sl9zx from kube-system started at 2023-10-07 12:04:23 +0000 UTC (2 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container metrics-server ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: dashboard-metrics-scraper-5dd7cb5fc-8vd5q from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: kubernetes-dashboard-7b899cb9d9-bcdwj from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-m8dx5 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:24:42.106: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:24:42.106: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/07/23 12:24:42.106
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.178bd2d18f34f06e], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 10/07/23 12:24:42.132
  Oct  7 12:24:43.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1901" for this suite. @ 10/07/23 12:24:43.137
â€¢ [1.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 10/07/23 12:24:43.146
  Oct  7 12:24:43.146: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 12:24:43.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:24:43.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:24:43.166
  STEP: Creating pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252 @ 10/07/23 12:24:43.169
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 12:24:45.187
  Oct  7 12:24:45.191: INFO: Initial restart count of pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 is 0
  Oct  7 12:24:45.194: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:24:47.198: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:24:49.202: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:24:51.208: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:24:53.212: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:24:55.217: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:24:57.223: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:24:59.227: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:01.232: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:03.236: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:05.241: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:07.247: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:09.252: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:11.261: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:13.265: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:15.269: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:17.274: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:19.278: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:21.284: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:23.289: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:25.293: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:27.299: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:29.304: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:31.308: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:33.313: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:35.317: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:37.321: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:39.326: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:41.331: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:43.336: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:45.340: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:47.345: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:49.350: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:51.355: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:53.360: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:55.364: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:57.369: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:25:59.373: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:01.378: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:03.382: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:05.387: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:07.392: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:09.397: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:11.401: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:13.405: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:15.410: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:17.415: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:19.420: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:21.425: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:23.430: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:25.434: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:27.439: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:29.444: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:31.448: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:33.452: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:35.457: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:37.462: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:39.468: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:41.473: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:43.478: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:45.482: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:47.488: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:49.492: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:51.496: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:53.501: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:55.505: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:57.511: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:26:59.515: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:01.519: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:03.524: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:05.529: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:07.535: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:09.540: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:11.544: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:13.549: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:15.554: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:17.559: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:19.564: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:21.568: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:23.573: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:25.578: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:27.583: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:29.588: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:31.592: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:33.597: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:35.601: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:37.606: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:39.610: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:41.615: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:43.620: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:45.624: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:47.629: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:49.635: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:51.640: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:53.645: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:55.650: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:57.655: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:27:59.660: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:01.665: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:03.670: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:05.675: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:07.680: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:09.684: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:11.689: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:13.692: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:15.697: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:17.702: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:19.709: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:21.714: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:23.718: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:25.723: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:27.728: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:29.733: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:31.738: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:33.742: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:35.747: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:37.752: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:39.758: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:41.764: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:43.768: INFO: Get pod test-grpc-960561a5-46af-4c33-8828-811b5c1dbf51 in namespace container-probe-5252
  Oct  7 12:28:45.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 12:28:45.773
  STEP: Destroying namespace "container-probe-5252" for this suite. @ 10/07/23 12:28:45.785
â€¢ [242.646 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 10/07/23 12:28:45.792
  Oct  7 12:28:45.792: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replication-controller @ 10/07/23 12:28:45.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:28:45.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:28:45.813
  Oct  7 12:28:45.816: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/07/23 12:28:46.831
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/07/23 12:28:46.837
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/07/23 12:28:47.845
  Oct  7 12:28:47.854: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/07/23 12:28:47.854
  Oct  7 12:28:48.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3609" for this suite. @ 10/07/23 12:28:48.868
â€¢ [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 10/07/23 12:28:48.877
  Oct  7 12:28:48.877: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:28:48.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:28:48.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:28:48.897
  STEP: Counting existing ResourceQuota @ 10/07/23 12:28:48.9
  STEP: Creating a ResourceQuota @ 10/07/23 12:28:53.903
  STEP: Ensuring resource quota status is calculated @ 10/07/23 12:28:53.909
  STEP: Creating a ReplicationController @ 10/07/23 12:28:55.913
  STEP: Ensuring resource quota status captures replication controller creation @ 10/07/23 12:28:55.925
  STEP: Deleting a ReplicationController @ 10/07/23 12:28:57.93
  STEP: Ensuring resource quota status released usage @ 10/07/23 12:28:57.937
  Oct  7 12:28:59.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3138" for this suite. @ 10/07/23 12:28:59.945
â€¢ [11.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 10/07/23 12:28:59.953
  Oct  7 12:28:59.953: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 12:28:59.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:28:59.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:28:59.977
  STEP: Creating configMap with name configmap-test-volume-260a012e-a8d8-4129-9e2f-cd817ee39616 @ 10/07/23 12:28:59.98
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:28:59.984
  STEP: Saw pod success @ 10/07/23 12:29:04.005
  Oct  7 12:29:04.009: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-889ca570-9b01-4ba3-98ca-9f7a654dafdc container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:29:04.028
  Oct  7 12:29:04.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5447" for this suite. @ 10/07/23 12:29:04.045
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 10/07/23 12:29:04.053
  Oct  7 12:29:04.053: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:29:04.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:04.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:04.077
  STEP: Setting up server cert @ 10/07/23 12:29:04.102
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:29:04.385
  STEP: Deploying the webhook pod @ 10/07/23 12:29:04.394
  STEP: Wait for the deployment to be ready @ 10/07/23 12:29:04.406
  Oct  7 12:29:04.413: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:29:06.425
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:29:06.436
  Oct  7 12:29:07.436: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/07/23 12:29:07.443
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/07/23 12:29:07.445
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/07/23 12:29:07.445
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/07/23 12:29:07.445
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/07/23 12:29:07.446
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/07/23 12:29:07.446
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/07/23 12:29:07.447
  Oct  7 12:29:07.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2870" for this suite. @ 10/07/23 12:29:07.488
  STEP: Destroying namespace "webhook-markers-1842" for this suite. @ 10/07/23 12:29:07.496
â€¢ [3.450 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/07/23 12:29:07.504
  Oct  7 12:29:07.504: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 12:29:07.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:07.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:07.53
  Oct  7 12:29:07.546: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: creating the pod @ 10/07/23 12:29:07.548
  STEP: submitting the pod to kubernetes @ 10/07/23 12:29:07.552
  Oct  7 12:29:09.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9845" for this suite. @ 10/07/23 12:29:09.593
â€¢ [2.096 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 10/07/23 12:29:09.6
  Oct  7 12:29:09.600: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:29:09.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:09.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:09.619
  STEP: Setting up server cert @ 10/07/23 12:29:09.642
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:29:09.769
  STEP: Deploying the webhook pod @ 10/07/23 12:29:09.775
  STEP: Wait for the deployment to be ready @ 10/07/23 12:29:09.786
  Oct  7 12:29:09.796: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:29:11.808
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:29:11.818
  Oct  7 12:29:12.818: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/07/23 12:29:12.827
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/07/23 12:29:12.845
  STEP: Creating a configMap that should not be mutated @ 10/07/23 12:29:12.852
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/07/23 12:29:12.862
  STEP: Creating a configMap that should be mutated @ 10/07/23 12:29:12.869
  Oct  7 12:29:12.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6020" for this suite. @ 10/07/23 12:29:12.935
  STEP: Destroying namespace "webhook-markers-8208" for this suite. @ 10/07/23 12:29:12.943
â€¢ [3.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 10/07/23 12:29:12.951
  Oct  7 12:29:12.951: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:29:12.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:12.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:12.971
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:29:12.973
  STEP: Saw pod success @ 10/07/23 12:29:16.996
  Oct  7 12:29:17.000: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-c9a16247-d5e5-4ce5-9040-f4201e4d0c7a container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:29:17.007
  Oct  7 12:29:17.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7996" for this suite. @ 10/07/23 12:29:17.028
â€¢ [4.083 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/07/23 12:29:17.034
  Oct  7 12:29:17.034: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:29:17.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:17.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:17.052
  STEP: Creating secret with name s-test-opt-del-0d955154-8f2a-46d4-bfed-161560b7ae12 @ 10/07/23 12:29:17.059
  STEP: Creating secret with name s-test-opt-upd-2bc652c2-1446-4d10-91b7-c49169a423a9 @ 10/07/23 12:29:17.063
  STEP: Creating the pod @ 10/07/23 12:29:17.067
  STEP: Deleting secret s-test-opt-del-0d955154-8f2a-46d4-bfed-161560b7ae12 @ 10/07/23 12:29:19.111
  STEP: Updating secret s-test-opt-upd-2bc652c2-1446-4d10-91b7-c49169a423a9 @ 10/07/23 12:29:19.118
  STEP: Creating secret with name s-test-opt-create-afe8ac7d-c1b4-4c45-8a65-129d0830fbae @ 10/07/23 12:29:19.122
  STEP: waiting to observe update in volume @ 10/07/23 12:29:19.127
  Oct  7 12:29:21.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5153" for this suite. @ 10/07/23 12:29:21.163
â€¢ [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/07/23 12:29:21.171
  Oct  7 12:29:21.171: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename subpath @ 10/07/23 12:29:21.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:21.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:21.196
  STEP: Setting up data @ 10/07/23 12:29:21.199
  STEP: Creating pod pod-subpath-test-projected-zt9g @ 10/07/23 12:29:21.209
  STEP: Creating a pod to test atomic-volume-subpath @ 10/07/23 12:29:21.209
  STEP: Saw pod success @ 10/07/23 12:29:43.274
  Oct  7 12:29:43.278: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-subpath-test-projected-zt9g container test-container-subpath-projected-zt9g: <nil>
  STEP: delete the pod @ 10/07/23 12:29:43.294
  STEP: Deleting pod pod-subpath-test-projected-zt9g @ 10/07/23 12:29:43.308
  Oct  7 12:29:43.308: INFO: Deleting pod "pod-subpath-test-projected-zt9g" in namespace "subpath-7510"
  Oct  7 12:29:43.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7510" for this suite. @ 10/07/23 12:29:43.316
â€¢ [22.151 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 10/07/23 12:29:43.323
  Oct  7 12:29:43.323: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename field-validation @ 10/07/23 12:29:43.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:43.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:43.342
  Oct  7 12:29:43.345: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  W1007 12:29:45.891791      21 warnings.go:70] unknown field "alpha"
  W1007 12:29:45.891810      21 warnings.go:70] unknown field "beta"
  W1007 12:29:45.891815      21 warnings.go:70] unknown field "delta"
  W1007 12:29:45.891818      21 warnings.go:70] unknown field "epsilon"
  W1007 12:29:45.891821      21 warnings.go:70] unknown field "gamma"
  Oct  7 12:29:46.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7764" for this suite. @ 10/07/23 12:29:46.44
â€¢ [3.124 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 10/07/23 12:29:46.447
  Oct  7 12:29:46.447: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replication-controller @ 10/07/23 12:29:46.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:46.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:46.466
  STEP: Given a ReplicationController is created @ 10/07/23 12:29:46.468
  STEP: When the matched label of one of its pods change @ 10/07/23 12:29:46.473
  Oct  7 12:29:46.476: INFO: Pod name pod-release: Found 0 pods out of 1
  Oct  7 12:29:51.481: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/07/23 12:29:51.491
  Oct  7 12:29:52.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4645" for this suite. @ 10/07/23 12:29:52.505
â€¢ [6.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 10/07/23 12:29:52.514
  Oct  7 12:29:52.514: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replicaset @ 10/07/23 12:29:52.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:52.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:52.531
  Oct  7 12:29:52.536: INFO: Creating ReplicaSet my-hostname-basic-b8d9eb37-7db3-4c69-9a3d-394537b43ba5
  Oct  7 12:29:52.545: INFO: Pod name my-hostname-basic-b8d9eb37-7db3-4c69-9a3d-394537b43ba5: Found 0 pods out of 1
  Oct  7 12:29:57.551: INFO: Pod name my-hostname-basic-b8d9eb37-7db3-4c69-9a3d-394537b43ba5: Found 1 pods out of 1
  Oct  7 12:29:57.551: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-b8d9eb37-7db3-4c69-9a3d-394537b43ba5" is running
  Oct  7 12:29:57.555: INFO: Pod "my-hostname-basic-b8d9eb37-7db3-4c69-9a3d-394537b43ba5-dh2jk" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 12:29:52 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 12:29:53 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 12:29:53 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 12:29:52 +0000 UTC Reason: Message:}])
  Oct  7 12:29:57.555: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/07/23 12:29:57.555
  Oct  7 12:29:57.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7836" for this suite. @ 10/07/23 12:29:57.576
â€¢ [5.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 10/07/23 12:29:57.584
  Oct  7 12:29:57.584: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replicaset @ 10/07/23 12:29:57.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:29:57.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:29:57.607
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/07/23 12:29:57.609
  Oct  7 12:29:57.618: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct  7 12:30:02.625: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/07/23 12:30:02.625
  STEP: getting scale subresource @ 10/07/23 12:30:02.625
  STEP: updating a scale subresource @ 10/07/23 12:30:02.628
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/07/23 12:30:02.634
  STEP: Patch a scale subresource @ 10/07/23 12:30:02.639
  Oct  7 12:30:02.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1955" for this suite. @ 10/07/23 12:30:02.655
â€¢ [5.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 10/07/23 12:30:02.665
  Oct  7 12:30:02.665: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:30:02.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:02.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:02.69
  STEP: Creating a pod to test downward api env vars @ 10/07/23 12:30:02.693
  STEP: Saw pod success @ 10/07/23 12:30:06.713
  Oct  7 12:30:06.716: INFO: Trying to get logs from node ip-172-31-31-221 pod downward-api-69486133-85b9-4b29-949d-3474c13da909 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 12:30:06.724
  Oct  7 12:30:06.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7272" for this suite. @ 10/07/23 12:30:06.743
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 10/07/23 12:30:06.751
  Oct  7 12:30:06.751: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:30:06.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:06.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:06.771
  STEP: Creating the pod @ 10/07/23 12:30:06.773
  Oct  7 12:30:09.314: INFO: Successfully updated pod "labelsupdatec378eb4f-0094-48f5-b293-0463d9ca1dd8"
  Oct  7 12:30:11.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2334" for this suite. @ 10/07/23 12:30:11.336
â€¢ [4.593 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 10/07/23 12:30:11.344
  Oct  7 12:30:11.344: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 12:30:11.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:11.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:11.365
  STEP: Creating a pod to test env composition @ 10/07/23 12:30:11.367
  STEP: Saw pod success @ 10/07/23 12:30:15.39
  Oct  7 12:30:15.393: INFO: Trying to get logs from node ip-172-31-0-122 pod var-expansion-ba1ddf63-94c1-4433-a1a3-e7cf6e7ecfe5 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 12:30:15.401
  Oct  7 12:30:15.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3474" for this suite. @ 10/07/23 12:30:15.421
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/07/23 12:30:15.431
  Oct  7 12:30:15.431: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/07/23 12:30:15.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:15.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:15.452
  STEP: creating a target pod @ 10/07/23 12:30:15.455
  STEP: adding an ephemeral container @ 10/07/23 12:30:17.477
  STEP: checking pod container endpoints @ 10/07/23 12:30:19.494
  Oct  7 12:30:19.494: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3026 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:30:19.495: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:30:19.495: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:30:19.495: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3026/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Oct  7 12:30:19.574: INFO: Exec stderr: ""
  Oct  7 12:30:19.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3026" for this suite. @ 10/07/23 12:30:19.586
â€¢ [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/07/23 12:30:19.594
  Oct  7 12:30:19.594: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 12:30:19.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:19.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:19.615
  Oct  7 12:30:19.617: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Oct  7 12:30:19.627: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct  7 12:30:24.632: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/07/23 12:30:24.632
  Oct  7 12:30:24.632: INFO: Creating deployment "test-rolling-update-deployment"
  Oct  7 12:30:24.637: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Oct  7 12:30:24.644: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Oct  7 12:30:26.652: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Oct  7 12:30:26.655: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Oct  7 12:30:26.666: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da1a29e4-d2ec-4b1d-803d-071fd58205ca",
      ResourceVersion: (string) (len=5) "11281",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct  7 12:30:26.671: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12e7dd19-eca3-4c2f-84d8-e0492e3e8ab7",
      ResourceVersion: (string) (len=5) "11271",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "da1a29e4-d2ec-4b1d-803d-071fd58205ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 31 61 32 39  65 34 2d 64 32 65 63 2d  |\"da1a29e4-d2ec-|
              00000120  34 62 31 64 2d 38 30 33  64 2d 30 37 31 66 64 35  |4b1d-803d-071fd5|
              00000130  38 32 30 35 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8205ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:30:26.672: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Oct  7 12:30:26.672: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9dedcd34-9000-4934-91c9-ba3ce08c44ab",
      ResourceVersion: (string) (len=5) "11280",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278619,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "da1a29e4-d2ec-4b1d-803d-071fd58205ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 61 31 61 32 39 65  |"uid\":\"da1a29e|
              000000b0  34 2d 64 32 65 63 2d 34  62 31 64 2d 38 30 33 64  |4-d2ec-4b1d-803d|
              000000c0  2d 30 37 31 66 64 35 38  32 30 35 63 61 5c 22 7d  |-071fd58205ca\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:30:26.677: INFO: Pod "test-rolling-update-deployment-7f5c55c64-942d7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-942d7",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-7967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18eb221e-9ac4-4ceb-9853-f2b72cc7370b",
      ResourceVersion: (string) (len=5) "11270",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "12e7dd19-eca3-4c2f-84d8-e0492e3e8ab7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 32  65 37 64 64 31 39 2d 65  |d\":\"12e7dd19-e|
              00000090  63 61 33 2d 34 63 32 66  2d 38 34 64 38 2d 65 30  |ca3-4c2f-84d8-e0|
              000000a0  34 39 32 65 33 65 38 61  62 37 5c 22 7d 22 3a 7b  |492e3e8ab7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 31 2e 36 31 5c 22  |192.168.161.61\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-846qg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-846qg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.122",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.161.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832278625,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://427a24a714a7d0e3af528e00d71578f0405e06d82b19f2e07d0b72aee0d322db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 12:30:26.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7967" for this suite. @ 10/07/23 12:30:26.682
â€¢ [7.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 10/07/23 12:30:26.69
  Oct  7 12:30:26.690: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 12:30:26.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:26.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:26.708
  STEP: Creating a pod to test substitution in container's command @ 10/07/23 12:30:26.711
  STEP: Saw pod success @ 10/07/23 12:30:30.734
  Oct  7 12:30:30.738: INFO: Trying to get logs from node ip-172-31-31-221 pod var-expansion-08871c01-7b8e-4b6c-a44d-1a7a2c89e0d9 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 12:30:30.745
  Oct  7 12:30:30.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4822" for this suite. @ 10/07/23 12:30:30.764
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 10/07/23 12:30:30.773
  Oct  7 12:30:30.773: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:30:30.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:30.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:30.802
  STEP: Discovering how many secrets are in namespace by default @ 10/07/23 12:30:30.805
  STEP: Counting existing ResourceQuota @ 10/07/23 12:30:35.809
  STEP: Creating a ResourceQuota @ 10/07/23 12:30:40.814
  STEP: Ensuring resource quota status is calculated @ 10/07/23 12:30:40.82
  STEP: Creating a Secret @ 10/07/23 12:30:42.826
  STEP: Ensuring resource quota status captures secret creation @ 10/07/23 12:30:42.839
  STEP: Deleting a secret @ 10/07/23 12:30:44.844
  STEP: Ensuring resource quota status released usage @ 10/07/23 12:30:44.85
  Oct  7 12:30:46.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3261" for this suite. @ 10/07/23 12:30:46.86
â€¢ [16.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 10/07/23 12:30:46.869
  Oct  7 12:30:46.869: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename namespaces @ 10/07/23 12:30:46.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:46.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:30:46.89
  STEP: Creating a test namespace @ 10/07/23 12:30:46.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:46.909
  STEP: Creating a pod in the namespace @ 10/07/23 12:30:46.911
  STEP: Waiting for the pod to have running status @ 10/07/23 12:30:46.918
  STEP: Deleting the namespace @ 10/07/23 12:30:48.929
  STEP: Waiting for the namespace to be removed. @ 10/07/23 12:30:48.936
  STEP: Recreating the namespace @ 10/07/23 12:30:59.941
  STEP: Verifying there are no pods in the namespace @ 10/07/23 12:30:59.957
  Oct  7 12:30:59.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9377" for this suite. @ 10/07/23 12:30:59.966
  STEP: Destroying namespace "nsdeletetest-5668" for this suite. @ 10/07/23 12:30:59.972
  Oct  7 12:30:59.975: INFO: Namespace nsdeletetest-5668 was already deleted
  STEP: Destroying namespace "nsdeletetest-1739" for this suite. @ 10/07/23 12:30:59.975
â€¢ [13.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 10/07/23 12:30:59.983
  Oct  7 12:30:59.983: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 12:30:59.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:30:59.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:00.002
  STEP: Creating a pod to test substitution in container's args @ 10/07/23 12:31:00.004
  STEP: Saw pod success @ 10/07/23 12:31:04.028
  Oct  7 12:31:04.031: INFO: Trying to get logs from node ip-172-31-31-221 pod var-expansion-7881b398-9e98-43df-80c9-67a3dabc5114 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 12:31:04.039
  Oct  7 12:31:04.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3400" for this suite. @ 10/07/23 12:31:04.059
â€¢ [4.083 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 10/07/23 12:31:04.066
  Oct  7 12:31:04.066: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-webhook @ 10/07/23 12:31:04.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:04.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:04.084
  STEP: Setting up server cert @ 10/07/23 12:31:04.087
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/07/23 12:31:04.494
  STEP: Deploying the custom resource conversion webhook pod @ 10/07/23 12:31:04.503
  STEP: Wait for the deployment to be ready @ 10/07/23 12:31:04.515
  Oct  7 12:31:04.522: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:31:06.534
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:31:06.543
  Oct  7 12:31:07.544: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct  7 12:31:07.552: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Creating a v1 custom resource @ 10/07/23 12:31:10.123
  STEP: v2 custom resource should be converted @ 10/07/23 12:31:10.128
  Oct  7 12:31:10.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2216" for this suite. @ 10/07/23 12:31:10.689
â€¢ [6.630 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/07/23 12:31:10.697
  Oct  7 12:31:10.697: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:31:10.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:10.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:10.72
  STEP: Creating secret with name projected-secret-test-be406776-6d3b-4809-ac72-c0bfd3bc87c3 @ 10/07/23 12:31:10.723
  STEP: Creating a pod to test consume secrets @ 10/07/23 12:31:10.727
  STEP: Saw pod success @ 10/07/23 12:31:14.749
  Oct  7 12:31:14.753: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-secrets-0ca33b3c-a732-4531-acee-9414ee0d0803 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 12:31:14.763
  Oct  7 12:31:14.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8603" for this suite. @ 10/07/23 12:31:14.784
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/07/23 12:31:14.793
  Oct  7 12:31:14.793: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 12:31:14.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:14.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:14.813
  Oct  7 12:31:14.816: INFO: Creating simple deployment test-new-deployment
  Oct  7 12:31:14.834: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 10/07/23 12:31:16.849
  STEP: updating a scale subresource @ 10/07/23 12:31:16.852
  STEP: verifying the deployment Spec.Replicas was modified @ 10/07/23 12:31:16.858
  STEP: Patch a scale subresource @ 10/07/23 12:31:16.863
  Oct  7 12:31:16.877: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7709",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4a7ac36-ce4e-4d27-8589-c2e23f4c84d8",
      ResourceVersion: (string) (len=5) "11695",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct  7 12:31:16.884: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7709",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb6ff36b-f0b1-4c95-b15f-22b3752c3c38",
      ResourceVersion: (string) (len=5) "11700",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a4a7ac36-ce4e-4d27-8589-c2e23f4c84d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278676,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 34 61 37 61 63  33 36 2d 63 65 34 65 2d  |\"a4a7ac36-ce4e-|
              00000120  34 64 32 37 2d 38 35 38  39 2d 63 32 65 32 33 66  |4d27-8589-c2e23f|
              00000130  34 63 38 34 64 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4c84d8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278676,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:31:16.890: INFO: Pod "test-new-deployment-557759b7c7-8vxlp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-8vxlp",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7709",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccc41b11-13b3-4b59-8b02-fdc86da0cb48",
      ResourceVersion: (string) (len=5) "11698",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278676,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "cb6ff36b-f0b1-4c95-b15f-22b3752c3c38",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278676,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  36 66 66 33 36 62 2d 66  |d\":\"cb6ff36b-f|
              00000090  30 62 31 2d 34 63 39 35  2d 62 31 35 66 2d 32 32  |0b1-4c95-b15f-22|
              000000a0  62 33 37 35 32 63 33 63  33 38 5c 22 7d 22 3a 7b  |b3752c3c38\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmnk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmnk6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278676,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 12:31:16.892: INFO: Pod "test-new-deployment-557759b7c7-jnq2s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-jnq2s",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7709",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4261e434-c122-43e7-8ee3-a1eb4d368e7c",
      ResourceVersion: (string) (len=5) "11690",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "cb6ff36b-f0b1-4c95-b15f-22b3752c3c38",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 62  36 66 66 33 36 62 2d 66  |d\":\"cb6ff36b-f|
              00000090  30 62 31 2d 34 63 39 35  2d 62 31 35 66 2d 32 32  |0b1-4c95-b15f-22|
              000000a0  62 33 37 35 32 63 33 63  33 38 5c 22 7d 22 3a 7b  |b3752c3c38\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 32 2e 33 37 5c 22 7d  |192.168.62.37\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q4nhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q4nhf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832278674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.62.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.62.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832278674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832278675,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bd19a41e22094a34c989bd4d3172703bc4fd903793d49dd028becb81c6c7d63f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 12:31:16.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7709" for this suite. @ 10/07/23 12:31:16.897
â€¢ [2.117 seconds]
------------------------------
SS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 10/07/23 12:31:16.91
  Oct  7 12:31:16.910: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename ingress @ 10/07/23 12:31:16.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:16.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:16.933
  STEP: getting /apis @ 10/07/23 12:31:16.936
  STEP: getting /apis/networking.k8s.io @ 10/07/23 12:31:16.939
  STEP: getting /apis/networking.k8s.iov1 @ 10/07/23 12:31:16.941
  STEP: creating @ 10/07/23 12:31:16.942
  STEP: getting @ 10/07/23 12:31:16.957
  STEP: listing @ 10/07/23 12:31:16.961
  STEP: watching @ 10/07/23 12:31:16.966
  Oct  7 12:31:16.966: INFO: starting watch
  STEP: cluster-wide listing @ 10/07/23 12:31:16.967
  STEP: cluster-wide watching @ 10/07/23 12:31:16.97
  Oct  7 12:31:16.971: INFO: starting watch
  STEP: patching @ 10/07/23 12:31:16.972
  STEP: updating @ 10/07/23 12:31:16.978
  Oct  7 12:31:16.987: INFO: waiting for watch events with expected annotations
  Oct  7 12:31:16.987: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/07/23 12:31:16.987
  STEP: updating /status @ 10/07/23 12:31:16.992
  STEP: get /status @ 10/07/23 12:31:17.002
  STEP: deleting @ 10/07/23 12:31:17.008
  STEP: deleting a collection @ 10/07/23 12:31:17.027
  Oct  7 12:31:17.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3844" for this suite. @ 10/07/23 12:31:17.055
â€¢ [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 10/07/23 12:31:17.067
  Oct  7 12:31:17.069: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:31:17.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:17.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:17.093
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/07/23 12:31:17.096
  STEP: Saw pod success @ 10/07/23 12:31:21.121
  Oct  7 12:31:21.124: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-954c2564-1b19-4155-a18d-fb8f049db193 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:31:21.132
  Oct  7 12:31:21.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2898" for this suite. @ 10/07/23 12:31:21.149
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 10/07/23 12:31:21.158
  Oct  7 12:31:21.158: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:31:21.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:21.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:21.179
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:31:21.182
  STEP: Saw pod success @ 10/07/23 12:31:23.2
  Oct  7 12:31:23.203: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-334248b3-07b4-4c97-89a7-9f30b4062ba0 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:31:23.211
  Oct  7 12:31:23.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7977" for this suite. @ 10/07/23 12:31:23.229
â€¢ [2.077 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 10/07/23 12:31:23.235
  Oct  7 12:31:23.235: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:31:23.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:23.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:23.255
  STEP: creating an Endpoint @ 10/07/23 12:31:23.261
  STEP: waiting for available Endpoint @ 10/07/23 12:31:23.266
  STEP: listing all Endpoints @ 10/07/23 12:31:23.267
  STEP: updating the Endpoint @ 10/07/23 12:31:23.271
  STEP: fetching the Endpoint @ 10/07/23 12:31:23.277
  STEP: patching the Endpoint @ 10/07/23 12:31:23.28
  STEP: fetching the Endpoint @ 10/07/23 12:31:23.288
  STEP: deleting the Endpoint by Collection @ 10/07/23 12:31:23.291
  STEP: waiting for Endpoint deletion @ 10/07/23 12:31:23.3
  STEP: fetching the Endpoint @ 10/07/23 12:31:23.301
  Oct  7 12:31:23.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5303" for this suite. @ 10/07/23 12:31:23.308
â€¢ [0.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 10/07/23 12:31:23.315
  Oct  7 12:31:23.315: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:31:23.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:23.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:23.335
  STEP: Setting up server cert @ 10/07/23 12:31:23.36
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:31:23.78
  STEP: Deploying the webhook pod @ 10/07/23 12:31:23.785
  STEP: Wait for the deployment to be ready @ 10/07/23 12:31:23.797
  Oct  7 12:31:23.804: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:31:25.815
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:31:25.826
  Oct  7 12:31:26.826: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/07/23 12:31:26.834
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/07/23 12:31:26.85
  Oct  7 12:31:26.850: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:31:26.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1410" for this suite. @ 10/07/23 12:31:26.909
  STEP: Destroying namespace "webhook-markers-4922" for this suite. @ 10/07/23 12:31:26.916
â€¢ [3.608 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/07/23 12:31:26.923
  Oct  7 12:31:26.923: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename tables @ 10/07/23 12:31:26.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:26.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:26.947
  Oct  7 12:31:26.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8928" for this suite. @ 10/07/23 12:31:26.955
â€¢ [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 10/07/23 12:31:26.963
  Oct  7 12:31:26.963: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename namespaces @ 10/07/23 12:31:26.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:26.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:26.983
  STEP: Creating a test namespace @ 10/07/23 12:31:26.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:27
  STEP: Creating a service in the namespace @ 10/07/23 12:31:27.003
  STEP: Deleting the namespace @ 10/07/23 12:31:27.014
  STEP: Waiting for the namespace to be removed. @ 10/07/23 12:31:27.023
  STEP: Recreating the namespace @ 10/07/23 12:31:33.027
  STEP: Verifying there is no service in the namespace @ 10/07/23 12:31:33.043
  Oct  7 12:31:33.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1512" for this suite. @ 10/07/23 12:31:33.05
  STEP: Destroying namespace "nsdeletetest-383" for this suite. @ 10/07/23 12:31:33.057
  Oct  7 12:31:33.061: INFO: Namespace nsdeletetest-383 was already deleted
  STEP: Destroying namespace "nsdeletetest-6282" for this suite. @ 10/07/23 12:31:33.061
â€¢ [6.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 10/07/23 12:31:33.068
  Oct  7 12:31:33.068: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename runtimeclass @ 10/07/23 12:31:33.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:33.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:33.087
  Oct  7 12:31:35.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1914" for this suite. @ 10/07/23 12:31:35.127
â€¢ [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 10/07/23 12:31:35.136
  Oct  7 12:31:35.136: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/07/23 12:31:35.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:35.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:35.153
  STEP: create the container to handle the HTTPGet hook request. @ 10/07/23 12:31:35.161
  STEP: create the pod with lifecycle hook @ 10/07/23 12:31:37.182
  STEP: check poststart hook @ 10/07/23 12:31:39.2
  STEP: delete the pod with lifecycle hook @ 10/07/23 12:31:39.207
  Oct  7 12:31:41.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5921" for this suite. @ 10/07/23 12:31:41.228
â€¢ [6.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/07/23 12:31:41.236
  Oct  7 12:31:41.236: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:31:41.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:41.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:41.256
  STEP: Creating configMap with name configmap-projected-all-test-volume-8a95fc1f-7ece-4975-ab76-edf63079d019 @ 10/07/23 12:31:41.259
  STEP: Creating secret with name secret-projected-all-test-volume-23cb8723-95c3-49ff-8ef6-13b0099a3b4e @ 10/07/23 12:31:41.263
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/07/23 12:31:41.268
  STEP: Saw pod success @ 10/07/23 12:31:45.291
  Oct  7 12:31:45.295: INFO: Trying to get logs from node ip-172-31-0-122 pod projected-volume-770b783c-14d2-40af-ad77-979cf11f8192 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 12:31:45.302
  Oct  7 12:31:45.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4782" for this suite. @ 10/07/23 12:31:45.323
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/07/23 12:31:45.334
  Oct  7 12:31:45.334: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-runtime @ 10/07/23 12:31:45.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:45.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:45.356
  STEP: create the container @ 10/07/23 12:31:45.359
  W1007 12:31:45.367990      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/07/23 12:31:45.368
  STEP: get the container status @ 10/07/23 12:31:47.38
  STEP: the container should be terminated @ 10/07/23 12:31:47.383
  STEP: the termination message should be set @ 10/07/23 12:31:47.383
  Oct  7 12:31:47.383: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/07/23 12:31:47.383
  Oct  7 12:31:47.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2207" for this suite. @ 10/07/23 12:31:47.401
â€¢ [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 10/07/23 12:31:47.414
  Oct  7 12:31:47.414: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:31:47.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:31:47.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:31:47.434
  STEP: Setting up server cert @ 10/07/23 12:31:47.458
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:31:47.665
  STEP: Deploying the webhook pod @ 10/07/23 12:31:47.673
  STEP: Wait for the deployment to be ready @ 10/07/23 12:31:47.684
  Oct  7 12:31:47.691: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:31:49.703
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:31:49.714
  Oct  7 12:31:50.714: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/07/23 12:31:50.722
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/07/23 12:31:50.722
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/07/23 12:31:50.737
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/07/23 12:31:51.748
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/07/23 12:31:51.748
  STEP: Having no error when timeout is longer than webhook latency @ 10/07/23 12:31:52.778
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/07/23 12:31:52.778
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/07/23 12:31:57.812
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/07/23 12:31:57.812
  Oct  7 12:32:02.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8760" for this suite. @ 10/07/23 12:32:02.901
  STEP: Destroying namespace "webhook-markers-185" for this suite. @ 10/07/23 12:32:02.907
â€¢ [15.501 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 10/07/23 12:32:02.915
  Oct  7 12:32:02.915: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename security-context-test @ 10/07/23 12:32:02.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:02.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:02.936
  Oct  7 12:32:06.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4612" for this suite. @ 10/07/23 12:32:06.972
â€¢ [4.064 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 10/07/23 12:32:06.98
  Oct  7 12:32:06.980: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replicaset @ 10/07/23 12:32:06.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:06.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:07
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/07/23 12:32:07.003
  STEP: When a replicaset with a matching selector is created @ 10/07/23 12:32:09.024
  STEP: Then the orphan pod is adopted @ 10/07/23 12:32:09.03
  STEP: When the matched label of one of its pods change @ 10/07/23 12:32:10.038
  Oct  7 12:32:10.042: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/07/23 12:32:10.052
  Oct  7 12:32:11.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3643" for this suite. @ 10/07/23 12:32:11.065
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 10/07/23 12:32:11.073
  Oct  7 12:32:11.073: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 12:32:11.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:11.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:11.091
  STEP: Creating service test in namespace statefulset-705 @ 10/07/23 12:32:11.096
  STEP: Looking for a node to schedule stateful set and pod @ 10/07/23 12:32:11.101
  STEP: Creating pod with conflicting port in namespace statefulset-705 @ 10/07/23 12:32:11.107
  STEP: Waiting until pod test-pod will start running in namespace statefulset-705 @ 10/07/23 12:32:11.115
  STEP: Creating statefulset with conflicting port in namespace statefulset-705 @ 10/07/23 12:32:13.123
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-705 @ 10/07/23 12:32:13.131
  Oct  7 12:32:13.142: INFO: Observed stateful pod in namespace: statefulset-705, name: ss-0, uid: 2304c512-fcc9-479f-b1b3-ebcdb1675824, status phase: Pending. Waiting for statefulset controller to delete.
  Oct  7 12:32:13.157: INFO: Observed stateful pod in namespace: statefulset-705, name: ss-0, uid: 2304c512-fcc9-479f-b1b3-ebcdb1675824, status phase: Failed. Waiting for statefulset controller to delete.
  Oct  7 12:32:13.166: INFO: Observed stateful pod in namespace: statefulset-705, name: ss-0, uid: 2304c512-fcc9-479f-b1b3-ebcdb1675824, status phase: Failed. Waiting for statefulset controller to delete.
  Oct  7 12:32:13.168: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-705
  STEP: Removing pod with conflicting port in namespace statefulset-705 @ 10/07/23 12:32:13.169
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-705 and will be in running state @ 10/07/23 12:32:13.181
  Oct  7 12:32:15.189: INFO: Deleting all statefulset in ns statefulset-705
  Oct  7 12:32:15.193: INFO: Scaling statefulset ss to 0
  Oct  7 12:32:25.215: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 12:32:25.218: INFO: Deleting statefulset ss
  Oct  7 12:32:25.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-705" for this suite. @ 10/07/23 12:32:25.237
â€¢ [14.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 10/07/23 12:32:25.244
  Oct  7 12:32:25.244: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename runtimeclass @ 10/07/23 12:32:25.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:25.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:25.266
  STEP: getting /apis @ 10/07/23 12:32:25.268
  STEP: getting /apis/node.k8s.io @ 10/07/23 12:32:25.272
  STEP: getting /apis/node.k8s.io/v1 @ 10/07/23 12:32:25.273
  STEP: creating @ 10/07/23 12:32:25.274
  STEP: watching @ 10/07/23 12:32:25.291
  Oct  7 12:32:25.291: INFO: starting watch
  STEP: getting @ 10/07/23 12:32:25.296
  STEP: listing @ 10/07/23 12:32:25.3
  STEP: patching @ 10/07/23 12:32:25.303
  STEP: updating @ 10/07/23 12:32:25.308
  Oct  7 12:32:25.312: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 10/07/23 12:32:25.312
  STEP: deleting a collection @ 10/07/23 12:32:25.325
  Oct  7 12:32:25.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2963" for this suite. @ 10/07/23 12:32:25.346
â€¢ [0.108 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 10/07/23 12:32:25.353
  Oct  7 12:32:25.353: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 12:32:25.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:25.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:25.371
  STEP: Creating a test headless service @ 10/07/23 12:32:25.373
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5041.svc.cluster.local;sleep 1; done
   @ 10/07/23 12:32:25.378
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5041.svc.cluster.local;sleep 1; done
   @ 10/07/23 12:32:25.378
  STEP: creating a pod to probe DNS @ 10/07/23 12:32:25.378
  STEP: submitting the pod to kubernetes @ 10/07/23 12:32:25.378
  STEP: retrieving the pod @ 10/07/23 12:32:27.399
  STEP: looking for the results for each expected name from probers @ 10/07/23 12:32:27.402
  Oct  7 12:32:27.408: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.413: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.417: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.421: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.426: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.430: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.434: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.438: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5041.svc.cluster.local from pod dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c: the server could not find the requested resource (get pods dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c)
  Oct  7 12:32:27.438: INFO: Lookups using dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5041.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5041.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5041.svc.cluster.local jessie_udp@dns-test-service-2.dns-5041.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5041.svc.cluster.local]

  Oct  7 12:32:27.445: INFO: Pod client logs for webserver: 
  Oct  7 12:32:27.453: INFO: Pod client logs for querier: 
  Oct  7 12:32:27.460: INFO: Pod client logs for jessie-querier: 
  Oct  7 12:32:32.497: INFO: DNS probes using dns-5041/dns-test-7bd5b32c-b09d-4acc-af8b-55b2e9aacd4c succeeded

  Oct  7 12:32:32.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 12:32:32.501
  STEP: deleting the test headless service @ 10/07/23 12:32:32.512
  STEP: Destroying namespace "dns-5041" for this suite. @ 10/07/23 12:32:32.529
â€¢ [7.183 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 10/07/23 12:32:32.536
  Oct  7 12:32:32.536: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename limitrange @ 10/07/23 12:32:32.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:32.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:32.558
  STEP: Creating LimitRange "e2e-limitrange-hvtbv" in namespace "limitrange-2454" @ 10/07/23 12:32:32.561
  STEP: Creating another limitRange in another namespace @ 10/07/23 12:32:32.566
  Oct  7 12:32:32.585: INFO: Namespace "e2e-limitrange-hvtbv-6233" created
  Oct  7 12:32:32.585: INFO: Creating LimitRange "e2e-limitrange-hvtbv" in namespace "e2e-limitrange-hvtbv-6233"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-hvtbv" @ 10/07/23 12:32:32.593
  Oct  7 12:32:32.597: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-hvtbv" in "limitrange-2454" namespace @ 10/07/23 12:32:32.597
  Oct  7 12:32:32.602: INFO: LimitRange "e2e-limitrange-hvtbv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-hvtbv" by Collection with labelSelector: "e2e-limitrange-hvtbv=patched" @ 10/07/23 12:32:32.602
  STEP: Confirm that the limitRange "e2e-limitrange-hvtbv" has been deleted @ 10/07/23 12:32:32.611
  Oct  7 12:32:32.611: INFO: Requesting list of LimitRange to confirm quantity
  Oct  7 12:32:32.614: INFO: Found 0 LimitRange with label "e2e-limitrange-hvtbv=patched"
  Oct  7 12:32:32.614: INFO: LimitRange "e2e-limitrange-hvtbv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-hvtbv" @ 10/07/23 12:32:32.614
  Oct  7 12:32:32.625: INFO: Found 1 limitRange
  Oct  7 12:32:32.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2454" for this suite. @ 10/07/23 12:32:32.629
  STEP: Destroying namespace "e2e-limitrange-hvtbv-6233" for this suite. @ 10/07/23 12:32:32.635
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 10/07/23 12:32:32.643
  Oct  7 12:32:32.643: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:32:32.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:32.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:32.664
  STEP: Setting up server cert @ 10/07/23 12:32:32.69
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:32:32.911
  STEP: Deploying the webhook pod @ 10/07/23 12:32:32.92
  STEP: Wait for the deployment to be ready @ 10/07/23 12:32:32.93
  Oct  7 12:32:32.939: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/07/23 12:32:34.95
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:32:34.96
  Oct  7 12:32:35.961: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct  7 12:32:35.969: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3153-crds.webhook.example.com via the AdmissionRegistration API @ 10/07/23 12:32:36.479
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/07/23 12:32:36.496
  Oct  7 12:32:38.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-981" for this suite. @ 10/07/23 12:32:39.091
  STEP: Destroying namespace "webhook-markers-6570" for this suite. @ 10/07/23 12:32:39.098
â€¢ [6.461 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 10/07/23 12:32:39.105
  Oct  7 12:32:39.105: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 12:32:39.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:39.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:39.123
  Oct  7 12:32:39.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-498" for this suite. @ 10/07/23 12:32:39.17
â€¢ [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 10/07/23 12:32:39.177
  Oct  7 12:32:39.177: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:32:39.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:39.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:39.198
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:32:39.203
  STEP: Saw pod success @ 10/07/23 12:32:43.227
  Oct  7 12:32:43.230: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-42f44278-2a24-4d0b-8f0e-5736308827c9 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:32:43.238
  Oct  7 12:32:43.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9824" for this suite. @ 10/07/23 12:32:43.256
â€¢ [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 10/07/23 12:32:43.262
  Oct  7 12:32:43.263: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename podtemplate @ 10/07/23 12:32:43.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:43.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:43.328
  STEP: Create a pod template @ 10/07/23 12:32:43.331
  STEP: Replace a pod template @ 10/07/23 12:32:43.339
  Oct  7 12:32:43.348: INFO: Found updated podtemplate annotation: "true"

  Oct  7 12:32:43.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8202" for this suite. @ 10/07/23 12:32:43.352
â€¢ [0.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 10/07/23 12:32:43.359
  Oct  7 12:32:43.359: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 12:32:43.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:43.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:43.378
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/07/23 12:32:43.381
  Oct  7 12:32:43.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1577 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct  7 12:32:43.434: INFO: stderr: ""
  Oct  7 12:32:43.435: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/07/23 12:32:43.435
  Oct  7 12:32:43.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1577 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Oct  7 12:32:43.487: INFO: stderr: ""
  Oct  7 12:32:43.487: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/07/23 12:32:43.487
  Oct  7 12:32:43.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1577 delete pods e2e-test-httpd-pod'
  Oct  7 12:32:45.224: INFO: stderr: ""
  Oct  7 12:32:45.224: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct  7 12:32:45.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1577" for this suite. @ 10/07/23 12:32:45.228
â€¢ [1.876 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 10/07/23 12:32:45.235
  Oct  7 12:32:45.235: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-preemption @ 10/07/23 12:32:45.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:32:45.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:32:45.255
  Oct  7 12:32:45.270: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct  7 12:33:45.290: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/07/23 12:33:45.293
  Oct  7 12:33:45.293: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/07/23 12:33:45.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:33:45.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:33:45.312
  STEP: Finding an available node @ 10/07/23 12:33:45.315
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/07/23 12:33:45.315
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/07/23 12:33:47.335
  Oct  7 12:33:47.345: INFO: found a healthy node: ip-172-31-31-221
  Oct  7 12:33:53.418: INFO: pods created so far: [1 1 1]
  Oct  7 12:33:53.418: INFO: length of pods created so far: 3
  Oct  7 12:33:55.429: INFO: pods created so far: [2 2 1]
  Oct  7 12:34:02.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 12:34:02.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-653" for this suite. @ 10/07/23 12:34:02.507
  STEP: Destroying namespace "sched-preemption-414" for this suite. @ 10/07/23 12:34:02.513
â€¢ [77.286 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 10/07/23 12:34:02.521
  Oct  7 12:34:02.521: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:34:02.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:34:02.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:34:02.543
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:34:02.546
  STEP: Saw pod success @ 10/07/23 12:34:06.57
  Oct  7 12:34:06.573: INFO: Trying to get logs from node ip-172-31-0-122 pod downwardapi-volume-d72ccfe4-a52f-4f6d-9a2e-4502e67d2f80 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:34:06.587
  Oct  7 12:34:06.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-546" for this suite. @ 10/07/23 12:34:06.604
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 10/07/23 12:34:06.612
  Oct  7 12:34:06.612: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 12:34:06.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:34:06.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:34:06.636
  Oct  7 12:34:06.639: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/07/23 12:34:07.937
  Oct  7 12:34:07.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-8361 --namespace=crd-publish-openapi-8361 create -f -'
  Oct  7 12:34:08.225: INFO: stderr: ""
  Oct  7 12:34:08.225: INFO: stdout: "e2e-test-crd-publish-openapi-2564-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct  7 12:34:08.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-8361 --namespace=crd-publish-openapi-8361 delete e2e-test-crd-publish-openapi-2564-crds test-cr'
  Oct  7 12:34:08.281: INFO: stderr: ""
  Oct  7 12:34:08.281: INFO: stdout: "e2e-test-crd-publish-openapi-2564-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Oct  7 12:34:08.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-8361 --namespace=crd-publish-openapi-8361 apply -f -'
  Oct  7 12:34:08.679: INFO: stderr: ""
  Oct  7 12:34:08.679: INFO: stdout: "e2e-test-crd-publish-openapi-2564-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct  7 12:34:08.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-8361 --namespace=crd-publish-openapi-8361 delete e2e-test-crd-publish-openapi-2564-crds test-cr'
  Oct  7 12:34:08.732: INFO: stderr: ""
  Oct  7 12:34:08.732: INFO: stdout: "e2e-test-crd-publish-openapi-2564-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/07/23 12:34:08.733
  Oct  7 12:34:08.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-8361 explain e2e-test-crd-publish-openapi-2564-crds'
  Oct  7 12:34:08.834: INFO: stderr: ""
  Oct  7 12:34:08.834: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2564-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Oct  7 12:34:10.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8361" for this suite. @ 10/07/23 12:34:10.084
â€¢ [3.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 10/07/23 12:34:10.091
  Oct  7 12:34:10.091: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename disruption @ 10/07/23 12:34:10.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:34:10.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:34:10.109
  STEP: Waiting for the pdb to be processed @ 10/07/23 12:34:10.119
  STEP: Updating PodDisruptionBudget status @ 10/07/23 12:34:10.126
  STEP: Waiting for all pods to be running @ 10/07/23 12:34:10.135
  Oct  7 12:34:10.147: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 10/07/23 12:34:12.151
  STEP: Waiting for the pdb to be processed @ 10/07/23 12:34:12.161
  STEP: Patching PodDisruptionBudget status @ 10/07/23 12:34:12.169
  STEP: Waiting for the pdb to be processed @ 10/07/23 12:34:12.176
  Oct  7 12:34:12.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3942" for this suite. @ 10/07/23 12:34:12.186
â€¢ [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 10/07/23 12:34:12.193
  Oct  7 12:34:12.193: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-webhook @ 10/07/23 12:34:12.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:34:12.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:34:12.21
  STEP: Setting up server cert @ 10/07/23 12:34:12.212
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/07/23 12:34:12.515
  STEP: Deploying the custom resource conversion webhook pod @ 10/07/23 12:34:12.522
  STEP: Wait for the deployment to be ready @ 10/07/23 12:34:12.532
  Oct  7 12:34:12.540: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 10/07/23 12:34:14.55
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:34:14.56
  Oct  7 12:34:15.560: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct  7 12:34:15.565: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Creating a v1 custom resource @ 10/07/23 12:34:18.125
  STEP: Create a v2 custom resource @ 10/07/23 12:34:18.138
  STEP: List CRs in v1 @ 10/07/23 12:34:18.144
  STEP: List CRs in v2 @ 10/07/23 12:34:18.182
  Oct  7 12:34:18.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1234" for this suite. @ 10/07/23 12:34:18.76
â€¢ [6.576 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 10/07/23 12:34:18.769
  Oct  7 12:34:18.769: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 12:34:18.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:34:18.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:34:18.789
  STEP: Creating configMap with name configmap-test-upd-454ea3a6-9439-4e70-9bc7-78fbafe07179 @ 10/07/23 12:34:18.795
  STEP: Creating the pod @ 10/07/23 12:34:18.8
  STEP: Updating configmap configmap-test-upd-454ea3a6-9439-4e70-9bc7-78fbafe07179 @ 10/07/23 12:34:20.838
  STEP: waiting to observe update in volume @ 10/07/23 12:34:20.844
  Oct  7 12:35:35.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5225" for this suite. @ 10/07/23 12:35:35.139
â€¢ [76.376 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/07/23 12:35:35.145
  Oct  7 12:35:35.145: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename daemonsets @ 10/07/23 12:35:35.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:35:35.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:35:35.166
  Oct  7 12:35:35.185: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/07/23 12:35:35.19
  Oct  7 12:35:35.195: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:35.195: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:35.199: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:35:35.199: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 12:35:36.203: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:36.203: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:36.208: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:35:36.208: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 12:35:37.203: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:37.203: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:37.207: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 12:35:37.207: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:35:38.203: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:38.203: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:38.207: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 12:35:38.207: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:35:39.203: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:39.203: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:39.206: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 12:35:39.206: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:35:40.203: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:40.203: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:40.207: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 12:35:40.207: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:35:41.204: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:41.204: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:41.208: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 12:35:41.208: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/07/23 12:35:41.218
  STEP: Check that daemon pods images are updated. @ 10/07/23 12:35:41.232
  Oct  7 12:35:41.235: INFO: Wrong image for pod: daemon-set-fmdbp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:41.235: INFO: Wrong image for pod: daemon-set-hp7dw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:41.235: INFO: Wrong image for pod: daemon-set-vz477. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:41.240: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:41.240: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:42.246: INFO: Wrong image for pod: daemon-set-fmdbp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:42.246: INFO: Wrong image for pod: daemon-set-hp7dw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:42.250: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:42.250: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:43.245: INFO: Wrong image for pod: daemon-set-fmdbp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:43.245: INFO: Wrong image for pod: daemon-set-hp7dw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:43.249: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:43.249: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:44.244: INFO: Wrong image for pod: daemon-set-fmdbp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:44.244: INFO: Wrong image for pod: daemon-set-hp7dw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:44.244: INFO: Pod daemon-set-m4dhg is not available
  Oct  7 12:35:44.248: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:44.248: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:45.244: INFO: Pod daemon-set-chrrv is not available
  Oct  7 12:35:45.244: INFO: Wrong image for pod: daemon-set-fmdbp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:45.247: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:45.248: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:46.245: INFO: Pod daemon-set-chrrv is not available
  Oct  7 12:35:46.245: INFO: Wrong image for pod: daemon-set-fmdbp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct  7 12:35:46.248: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:46.249: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:47.249: INFO: Pod daemon-set-hkdxf is not available
  Oct  7 12:35:47.259: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:47.259: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/07/23 12:35:47.259
  Oct  7 12:35:47.263: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:47.263: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:47.266: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 12:35:47.266: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 12:35:48.272: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:48.272: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:35:48.275: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 12:35:48.275: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/07/23 12:35:48.289
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6306, will wait for the garbage collector to delete the pods @ 10/07/23 12:35:48.289
  Oct  7 12:35:48.350: INFO: Deleting DaemonSet.extensions daemon-set took: 6.649979ms
  Oct  7 12:35:48.450: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.48856ms
  Oct  7 12:35:49.655: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:35:49.655: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct  7 12:35:49.659: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13891"},"items":null}

  Oct  7 12:35:49.661: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13891"},"items":null}

  Oct  7 12:35:49.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6306" for this suite. @ 10/07/23 12:35:49.677
â€¢ [14.537 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/07/23 12:35:49.684
  Oct  7 12:35:49.684: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 12:35:49.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:35:49.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:35:49.705
  STEP: creating the pod @ 10/07/23 12:35:49.708
  STEP: submitting the pod to kubernetes @ 10/07/23 12:35:49.708
  W1007 12:35:49.718224      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 10/07/23 12:35:51.728
  STEP: updating the pod @ 10/07/23 12:35:51.731
  Oct  7 12:35:52.242: INFO: Successfully updated pod "pod-update-activedeadlineseconds-1f5ca4a5-e55d-4708-8a3f-5aae62394612"
  Oct  7 12:35:56.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1394" for this suite. @ 10/07/23 12:35:56.258
â€¢ [6.581 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/07/23 12:35:56.265
  Oct  7 12:35:56.265: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename prestop @ 10/07/23 12:35:56.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:35:56.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:35:56.284
  STEP: Creating server pod server in namespace prestop-1830 @ 10/07/23 12:35:56.287
  STEP: Waiting for pods to come up. @ 10/07/23 12:35:56.295
  STEP: Creating tester pod tester in namespace prestop-1830 @ 10/07/23 12:35:58.31
  STEP: Deleting pre-stop pod @ 10/07/23 12:36:00.324
  Oct  7 12:36:05.341: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Oct  7 12:36:05.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 10/07/23 12:36:05.345
  STEP: Destroying namespace "prestop-1830" for this suite. @ 10/07/23 12:36:05.356
â€¢ [9.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/07/23 12:36:05.364
  Oct  7 12:36:05.364: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svc-latency @ 10/07/23 12:36:05.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:36:05.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:36:05.381
  Oct  7 12:36:05.384: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4800 @ 10/07/23 12:36:05.385
  I1007 12:36:05.392087      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4800, replica count: 1
  I1007 12:36:06.443084      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1007 12:36:07.443217      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 12:36:07.559: INFO: Created: latency-svc-5c6tx
  Oct  7 12:36:07.562: INFO: Got endpoints: latency-svc-5c6tx [19.086969ms]
  Oct  7 12:36:07.574: INFO: Created: latency-svc-pfcz9
  Oct  7 12:36:07.586: INFO: Got endpoints: latency-svc-pfcz9 [23.590208ms]
  Oct  7 12:36:07.586: INFO: Created: latency-svc-7gqlw
  Oct  7 12:36:07.593: INFO: Got endpoints: latency-svc-7gqlw [30.724017ms]
  Oct  7 12:36:07.597: INFO: Created: latency-svc-jsmr6
  Oct  7 12:36:07.601: INFO: Got endpoints: latency-svc-jsmr6 [38.936878ms]
  Oct  7 12:36:07.605: INFO: Created: latency-svc-w6ggf
  Oct  7 12:36:07.611: INFO: Created: latency-svc-5h7hf
  Oct  7 12:36:07.612: INFO: Got endpoints: latency-svc-w6ggf [49.106418ms]
  Oct  7 12:36:07.618: INFO: Got endpoints: latency-svc-5h7hf [55.373261ms]
  Oct  7 12:36:07.623: INFO: Created: latency-svc-49d9k
  Oct  7 12:36:07.629: INFO: Got endpoints: latency-svc-49d9k [66.237498ms]
  Oct  7 12:36:07.630: INFO: Created: latency-svc-z9svb
  Oct  7 12:36:07.636: INFO: Got endpoints: latency-svc-z9svb [73.075812ms]
  Oct  7 12:36:07.636: INFO: Created: latency-svc-pc9qw
  Oct  7 12:36:07.642: INFO: Got endpoints: latency-svc-pc9qw [78.929122ms]
  Oct  7 12:36:07.646: INFO: Created: latency-svc-fh4zr
  Oct  7 12:36:07.653: INFO: Got endpoints: latency-svc-fh4zr [90.250577ms]
  Oct  7 12:36:07.656: INFO: Created: latency-svc-lx5d5
  Oct  7 12:36:07.661: INFO: Got endpoints: latency-svc-lx5d5 [97.871301ms]
  Oct  7 12:36:07.663: INFO: Created: latency-svc-ctgqs
  Oct  7 12:36:07.668: INFO: Got endpoints: latency-svc-ctgqs [104.769874ms]
  Oct  7 12:36:07.671: INFO: Created: latency-svc-rg9w5
  Oct  7 12:36:07.675: INFO: Created: latency-svc-njjhp
  Oct  7 12:36:07.675: INFO: Got endpoints: latency-svc-rg9w5 [112.195248ms]
  Oct  7 12:36:07.684: INFO: Got endpoints: latency-svc-njjhp [120.307395ms]
  Oct  7 12:36:07.748: INFO: Created: latency-svc-kzl6b
  Oct  7 12:36:07.748: INFO: Created: latency-svc-plx4g
  Oct  7 12:36:07.749: INFO: Created: latency-svc-chf9p
  Oct  7 12:36:07.750: INFO: Created: latency-svc-gvlrm
  Oct  7 12:36:07.750: INFO: Created: latency-svc-tldws
  Oct  7 12:36:07.751: INFO: Created: latency-svc-cvxtt
  Oct  7 12:36:07.757: INFO: Created: latency-svc-t8k87
  Oct  7 12:36:07.758: INFO: Created: latency-svc-fqjsg
  Oct  7 12:36:07.759: INFO: Created: latency-svc-btl2d
  Oct  7 12:36:07.760: INFO: Created: latency-svc-qlzg9
  Oct  7 12:36:07.773: INFO: Created: latency-svc-2l4mr
  Oct  7 12:36:07.773: INFO: Got endpoints: latency-svc-tldws [161.461073ms]
  Oct  7 12:36:07.773: INFO: Got endpoints: latency-svc-kzl6b [119.953403ms]
  Oct  7 12:36:07.774: INFO: Created: latency-svc-8mzdw
  Oct  7 12:36:07.774: INFO: Created: latency-svc-lk2wm
  Oct  7 12:36:07.774: INFO: Created: latency-svc-9mr8r
  Oct  7 12:36:07.774: INFO: Created: latency-svc-drxwr
  Oct  7 12:36:07.782: INFO: Got endpoints: latency-svc-plx4g [218.844309ms]
  Oct  7 12:36:07.782: INFO: Got endpoints: latency-svc-gvlrm [140.65765ms]
  Oct  7 12:36:07.783: INFO: Got endpoints: latency-svc-chf9p [196.335604ms]
  Oct  7 12:36:07.784: INFO: Got endpoints: latency-svc-fqjsg [155.203395ms]
  Oct  7 12:36:07.784: INFO: Got endpoints: latency-svc-cvxtt [123.249625ms]
  Oct  7 12:36:07.790: INFO: Got endpoints: latency-svc-qlzg9 [196.671819ms]
  Oct  7 12:36:07.801: INFO: Got endpoints: latency-svc-t8k87 [125.144827ms]
  Oct  7 12:36:07.801: INFO: Got endpoints: latency-svc-drxwr [164.897257ms]
  Oct  7 12:36:07.801: INFO: Got endpoints: latency-svc-9mr8r [237.580622ms]
  Oct  7 12:36:07.802: INFO: Got endpoints: latency-svc-btl2d [118.359828ms]
  Oct  7 12:36:07.803: INFO: Got endpoints: latency-svc-lk2wm [200.85814ms]
  Oct  7 12:36:07.810: INFO: Created: latency-svc-52r98
  Oct  7 12:36:07.810: INFO: Got endpoints: latency-svc-2l4mr [192.083585ms]
  Oct  7 12:36:07.812: INFO: Got endpoints: latency-svc-8mzdw [144.037286ms]
  Oct  7 12:36:07.813: INFO: Got endpoints: latency-svc-52r98 [39.569169ms]
  Oct  7 12:36:07.826: INFO: Created: latency-svc-4ttt9
  Oct  7 12:36:07.838: INFO: Created: latency-svc-vg72v
  Oct  7 12:36:07.843: INFO: Got endpoints: latency-svc-4ttt9 [69.917162ms]
  Oct  7 12:36:07.848: INFO: Got endpoints: latency-svc-vg72v [65.278632ms]
  Oct  7 12:36:07.848: INFO: Created: latency-svc-zgqbq
  Oct  7 12:36:07.857: INFO: Got endpoints: latency-svc-zgqbq [74.168005ms]
  Oct  7 12:36:07.860: INFO: Created: latency-svc-zkxps
  Oct  7 12:36:07.867: INFO: Created: latency-svc-b8b4k
  Oct  7 12:36:07.869: INFO: Got endpoints: latency-svc-zkxps [86.019699ms]
  Oct  7 12:36:07.875: INFO: Created: latency-svc-7fwfk
  Oct  7 12:36:07.876: INFO: Got endpoints: latency-svc-b8b4k [91.469965ms]
  Oct  7 12:36:07.888: INFO: Got endpoints: latency-svc-7fwfk [104.024016ms]
  Oct  7 12:36:07.890: INFO: Created: latency-svc-4hr2w
  Oct  7 12:36:07.897: INFO: Created: latency-svc-dwswk
  Oct  7 12:36:07.903: INFO: Created: latency-svc-mk287
  Oct  7 12:36:07.913: INFO: Got endpoints: latency-svc-4hr2w [122.678939ms]
  Oct  7 12:36:07.918: INFO: Created: latency-svc-pt6jg
  Oct  7 12:36:07.923: INFO: Created: latency-svc-j4jqn
  Oct  7 12:36:07.929: INFO: Created: latency-svc-q86g8
  Oct  7 12:36:07.938: INFO: Created: latency-svc-54cwn
  Oct  7 12:36:07.944: INFO: Created: latency-svc-w8tdl
  Oct  7 12:36:07.952: INFO: Created: latency-svc-zsxm2
  Oct  7 12:36:07.957: INFO: Created: latency-svc-lpqw6
  Oct  7 12:36:07.964: INFO: Got endpoints: latency-svc-dwswk [163.479636ms]
  Oct  7 12:36:07.966: INFO: Created: latency-svc-8sdc4
  Oct  7 12:36:07.974: INFO: Created: latency-svc-5l7w6
  Oct  7 12:36:07.979: INFO: Created: latency-svc-vfb9q
  Oct  7 12:36:07.984: INFO: Created: latency-svc-fq77s
  Oct  7 12:36:07.989: INFO: Created: latency-svc-n6vj9
  Oct  7 12:36:07.996: INFO: Created: latency-svc-9fmhk
  Oct  7 12:36:08.001: INFO: Created: latency-svc-d8sc4
  Oct  7 12:36:08.009: INFO: Got endpoints: latency-svc-mk287 [206.685228ms]
  Oct  7 12:36:08.018: INFO: Created: latency-svc-57d4z
  Oct  7 12:36:08.061: INFO: Got endpoints: latency-svc-pt6jg [260.405344ms]
  Oct  7 12:36:08.073: INFO: Created: latency-svc-bcx5b
  Oct  7 12:36:08.110: INFO: Got endpoints: latency-svc-j4jqn [308.828591ms]
  Oct  7 12:36:08.120: INFO: Created: latency-svc-r4rss
  Oct  7 12:36:08.161: INFO: Got endpoints: latency-svc-q86g8 [358.350551ms]
  Oct  7 12:36:08.170: INFO: Created: latency-svc-zxw84
  Oct  7 12:36:08.209: INFO: Got endpoints: latency-svc-54cwn [398.385663ms]
  Oct  7 12:36:08.220: INFO: Created: latency-svc-mwnww
  Oct  7 12:36:08.259: INFO: Got endpoints: latency-svc-w8tdl [447.439593ms]
  Oct  7 12:36:08.269: INFO: Created: latency-svc-lj7p9
  Oct  7 12:36:08.309: INFO: Got endpoints: latency-svc-zsxm2 [495.813003ms]
  Oct  7 12:36:08.317: INFO: Created: latency-svc-mlc5w
  Oct  7 12:36:08.361: INFO: Got endpoints: latency-svc-lpqw6 [517.681502ms]
  Oct  7 12:36:08.372: INFO: Created: latency-svc-7thq2
  Oct  7 12:36:08.408: INFO: Got endpoints: latency-svc-8sdc4 [560.501176ms]
  Oct  7 12:36:08.419: INFO: Created: latency-svc-szxp4
  Oct  7 12:36:08.459: INFO: Got endpoints: latency-svc-5l7w6 [601.722932ms]
  Oct  7 12:36:08.469: INFO: Created: latency-svc-8f69j
  Oct  7 12:36:08.509: INFO: Got endpoints: latency-svc-vfb9q [639.887583ms]
  Oct  7 12:36:08.520: INFO: Created: latency-svc-6npcr
  Oct  7 12:36:08.561: INFO: Got endpoints: latency-svc-fq77s [684.980089ms]
  Oct  7 12:36:08.572: INFO: Created: latency-svc-nltfp
  Oct  7 12:36:08.610: INFO: Got endpoints: latency-svc-n6vj9 [721.787509ms]
  Oct  7 12:36:08.619: INFO: Created: latency-svc-8qxx6
  Oct  7 12:36:08.660: INFO: Got endpoints: latency-svc-9fmhk [747.314431ms]
  Oct  7 12:36:08.671: INFO: Created: latency-svc-hhdt7
  Oct  7 12:36:08.708: INFO: Got endpoints: latency-svc-d8sc4 [743.614972ms]
  Oct  7 12:36:08.719: INFO: Created: latency-svc-6gqf2
  Oct  7 12:36:08.760: INFO: Got endpoints: latency-svc-57d4z [750.101637ms]
  Oct  7 12:36:08.767: INFO: Created: latency-svc-jtklf
  Oct  7 12:36:08.811: INFO: Got endpoints: latency-svc-bcx5b [749.630907ms]
  Oct  7 12:36:08.821: INFO: Created: latency-svc-gphct
  Oct  7 12:36:08.860: INFO: Got endpoints: latency-svc-r4rss [749.905893ms]
  Oct  7 12:36:08.870: INFO: Created: latency-svc-xrtd2
  Oct  7 12:36:08.910: INFO: Got endpoints: latency-svc-zxw84 [749.828697ms]
  Oct  7 12:36:08.918: INFO: Created: latency-svc-4nwhz
  Oct  7 12:36:08.959: INFO: Got endpoints: latency-svc-mwnww [750.500513ms]
  Oct  7 12:36:08.970: INFO: Created: latency-svc-5qc5v
  Oct  7 12:36:09.008: INFO: Got endpoints: latency-svc-lj7p9 [749.058466ms]
  Oct  7 12:36:09.018: INFO: Created: latency-svc-fvvdq
  Oct  7 12:36:09.058: INFO: Got endpoints: latency-svc-mlc5w [749.285577ms]
  Oct  7 12:36:09.066: INFO: Created: latency-svc-fqc8h
  Oct  7 12:36:09.110: INFO: Got endpoints: latency-svc-7thq2 [749.369349ms]
  Oct  7 12:36:09.121: INFO: Created: latency-svc-5f58m
  Oct  7 12:36:09.161: INFO: Got endpoints: latency-svc-szxp4 [752.857021ms]
  Oct  7 12:36:09.171: INFO: Created: latency-svc-vdsr8
  Oct  7 12:36:09.211: INFO: Got endpoints: latency-svc-8f69j [751.584192ms]
  Oct  7 12:36:09.219: INFO: Created: latency-svc-l8wjn
  Oct  7 12:36:09.259: INFO: Got endpoints: latency-svc-6npcr [750.741048ms]
  Oct  7 12:36:09.272: INFO: Created: latency-svc-524cl
  Oct  7 12:36:09.310: INFO: Got endpoints: latency-svc-nltfp [748.839168ms]
  Oct  7 12:36:09.323: INFO: Created: latency-svc-kdxwl
  Oct  7 12:36:09.360: INFO: Got endpoints: latency-svc-8qxx6 [749.384844ms]
  Oct  7 12:36:09.369: INFO: Created: latency-svc-rkw4v
  Oct  7 12:36:09.410: INFO: Got endpoints: latency-svc-hhdt7 [750.253619ms]
  Oct  7 12:36:09.422: INFO: Created: latency-svc-b7v54
  Oct  7 12:36:09.461: INFO: Got endpoints: latency-svc-6gqf2 [752.875608ms]
  Oct  7 12:36:09.471: INFO: Created: latency-svc-6628z
  Oct  7 12:36:09.507: INFO: Got endpoints: latency-svc-jtklf [747.855896ms]
  Oct  7 12:36:09.516: INFO: Created: latency-svc-7624k
  Oct  7 12:36:09.559: INFO: Got endpoints: latency-svc-gphct [748.354676ms]
  Oct  7 12:36:09.574: INFO: Created: latency-svc-c8tt5
  Oct  7 12:36:09.608: INFO: Got endpoints: latency-svc-xrtd2 [747.477569ms]
  Oct  7 12:36:09.619: INFO: Created: latency-svc-rmccv
  Oct  7 12:36:09.661: INFO: Got endpoints: latency-svc-4nwhz [750.699663ms]
  Oct  7 12:36:09.671: INFO: Created: latency-svc-c2vnm
  Oct  7 12:36:09.710: INFO: Got endpoints: latency-svc-5qc5v [750.361649ms]
  Oct  7 12:36:09.720: INFO: Created: latency-svc-674cx
  Oct  7 12:36:09.758: INFO: Got endpoints: latency-svc-fvvdq [749.114806ms]
  Oct  7 12:36:09.768: INFO: Created: latency-svc-zmhvp
  Oct  7 12:36:09.810: INFO: Got endpoints: latency-svc-fqc8h [752.10546ms]
  Oct  7 12:36:09.819: INFO: Created: latency-svc-8pcxx
  Oct  7 12:36:09.860: INFO: Got endpoints: latency-svc-5f58m [749.086898ms]
  Oct  7 12:36:09.870: INFO: Created: latency-svc-fnvgz
  Oct  7 12:36:09.912: INFO: Got endpoints: latency-svc-vdsr8 [750.500374ms]
  Oct  7 12:36:09.921: INFO: Created: latency-svc-6j4rg
  Oct  7 12:36:09.960: INFO: Got endpoints: latency-svc-l8wjn [749.362772ms]
  Oct  7 12:36:09.970: INFO: Created: latency-svc-mwdbp
  Oct  7 12:36:10.010: INFO: Got endpoints: latency-svc-524cl [750.953812ms]
  Oct  7 12:36:10.032: INFO: Created: latency-svc-bbx2h
  Oct  7 12:36:10.058: INFO: Got endpoints: latency-svc-kdxwl [747.989982ms]
  Oct  7 12:36:10.068: INFO: Created: latency-svc-gtrqh
  Oct  7 12:36:10.110: INFO: Got endpoints: latency-svc-rkw4v [750.399105ms]
  Oct  7 12:36:10.120: INFO: Created: latency-svc-zq59x
  Oct  7 12:36:10.161: INFO: Got endpoints: latency-svc-b7v54 [750.630407ms]
  Oct  7 12:36:10.173: INFO: Created: latency-svc-56427
  Oct  7 12:36:10.209: INFO: Got endpoints: latency-svc-6628z [747.593127ms]
  Oct  7 12:36:10.220: INFO: Created: latency-svc-7469b
  Oct  7 12:36:10.261: INFO: Got endpoints: latency-svc-7624k [753.134159ms]
  Oct  7 12:36:10.271: INFO: Created: latency-svc-tsn4l
  Oct  7 12:36:10.308: INFO: Got endpoints: latency-svc-c8tt5 [748.984562ms]
  Oct  7 12:36:10.319: INFO: Created: latency-svc-qmhcx
  Oct  7 12:36:10.360: INFO: Got endpoints: latency-svc-rmccv [752.262784ms]
  Oct  7 12:36:10.373: INFO: Created: latency-svc-2xsgh
  Oct  7 12:36:10.411: INFO: Got endpoints: latency-svc-c2vnm [749.314844ms]
  Oct  7 12:36:10.420: INFO: Created: latency-svc-4xffk
  Oct  7 12:36:10.459: INFO: Got endpoints: latency-svc-674cx [748.824029ms]
  Oct  7 12:36:10.471: INFO: Created: latency-svc-b6x69
  Oct  7 12:36:10.509: INFO: Got endpoints: latency-svc-zmhvp [751.208351ms]
  Oct  7 12:36:10.521: INFO: Created: latency-svc-9fwmg
  Oct  7 12:36:10.559: INFO: Got endpoints: latency-svc-8pcxx [748.71796ms]
  Oct  7 12:36:10.573: INFO: Created: latency-svc-h2b5z
  Oct  7 12:36:10.610: INFO: Got endpoints: latency-svc-fnvgz [750.388625ms]
  Oct  7 12:36:10.625: INFO: Created: latency-svc-pctqh
  Oct  7 12:36:10.659: INFO: Got endpoints: latency-svc-6j4rg [747.498888ms]
  Oct  7 12:36:10.670: INFO: Created: latency-svc-c85vq
  Oct  7 12:36:10.709: INFO: Got endpoints: latency-svc-mwdbp [748.421522ms]
  Oct  7 12:36:10.718: INFO: Created: latency-svc-bbdzz
  Oct  7 12:36:10.761: INFO: Got endpoints: latency-svc-bbx2h [750.557956ms]
  Oct  7 12:36:10.770: INFO: Created: latency-svc-xk8v7
  Oct  7 12:36:10.809: INFO: Got endpoints: latency-svc-gtrqh [750.717712ms]
  Oct  7 12:36:10.820: INFO: Created: latency-svc-k8xqf
  Oct  7 12:36:10.858: INFO: Got endpoints: latency-svc-zq59x [748.22215ms]
  Oct  7 12:36:10.868: INFO: Created: latency-svc-jl8ds
  Oct  7 12:36:10.909: INFO: Got endpoints: latency-svc-56427 [748.180809ms]
  Oct  7 12:36:10.919: INFO: Created: latency-svc-57td2
  Oct  7 12:36:10.960: INFO: Got endpoints: latency-svc-7469b [751.861563ms]
  Oct  7 12:36:10.970: INFO: Created: latency-svc-cjhdp
  Oct  7 12:36:11.009: INFO: Got endpoints: latency-svc-tsn4l [748.426442ms]
  Oct  7 12:36:11.020: INFO: Created: latency-svc-lrqjb
  Oct  7 12:36:11.059: INFO: Got endpoints: latency-svc-qmhcx [750.825561ms]
  Oct  7 12:36:11.069: INFO: Created: latency-svc-5jmqb
  Oct  7 12:36:11.111: INFO: Got endpoints: latency-svc-2xsgh [751.008766ms]
  Oct  7 12:36:11.122: INFO: Created: latency-svc-vmv4c
  Oct  7 12:36:11.160: INFO: Got endpoints: latency-svc-4xffk [749.69151ms]
  Oct  7 12:36:11.170: INFO: Created: latency-svc-dh9x7
  Oct  7 12:36:11.210: INFO: Got endpoints: latency-svc-b6x69 [751.024027ms]
  Oct  7 12:36:11.219: INFO: Created: latency-svc-jcw6p
  Oct  7 12:36:11.261: INFO: Got endpoints: latency-svc-9fwmg [751.896122ms]
  Oct  7 12:36:11.272: INFO: Created: latency-svc-jhbbd
  Oct  7 12:36:11.310: INFO: Got endpoints: latency-svc-h2b5z [750.338293ms]
  Oct  7 12:36:11.321: INFO: Created: latency-svc-thxm7
  Oct  7 12:36:11.359: INFO: Got endpoints: latency-svc-pctqh [748.93795ms]
  Oct  7 12:36:11.368: INFO: Created: latency-svc-vpz7w
  Oct  7 12:36:11.410: INFO: Got endpoints: latency-svc-c85vq [750.21331ms]
  Oct  7 12:36:11.420: INFO: Created: latency-svc-7wvcv
  Oct  7 12:36:11.460: INFO: Got endpoints: latency-svc-bbdzz [751.30167ms]
  Oct  7 12:36:11.469: INFO: Created: latency-svc-2sbsd
  Oct  7 12:36:11.510: INFO: Got endpoints: latency-svc-xk8v7 [748.661603ms]
  Oct  7 12:36:11.523: INFO: Created: latency-svc-vgrbg
  Oct  7 12:36:11.559: INFO: Got endpoints: latency-svc-k8xqf [749.575548ms]
  Oct  7 12:36:11.573: INFO: Created: latency-svc-tv557
  Oct  7 12:36:11.609: INFO: Got endpoints: latency-svc-jl8ds [750.334077ms]
  Oct  7 12:36:11.619: INFO: Created: latency-svc-6rj2b
  Oct  7 12:36:11.660: INFO: Got endpoints: latency-svc-57td2 [750.518085ms]
  Oct  7 12:36:11.670: INFO: Created: latency-svc-kqws4
  Oct  7 12:36:11.708: INFO: Got endpoints: latency-svc-cjhdp [747.144732ms]
  Oct  7 12:36:11.718: INFO: Created: latency-svc-6zqbr
  Oct  7 12:36:11.759: INFO: Got endpoints: latency-svc-lrqjb [749.438637ms]
  Oct  7 12:36:11.770: INFO: Created: latency-svc-tgqr9
  Oct  7 12:36:11.809: INFO: Got endpoints: latency-svc-5jmqb [749.808906ms]
  Oct  7 12:36:11.818: INFO: Created: latency-svc-7hp8g
  Oct  7 12:36:11.860: INFO: Got endpoints: latency-svc-vmv4c [749.255091ms]
  Oct  7 12:36:11.870: INFO: Created: latency-svc-mg2hd
  Oct  7 12:36:11.910: INFO: Got endpoints: latency-svc-dh9x7 [750.010819ms]
  Oct  7 12:36:11.920: INFO: Created: latency-svc-fgdqh
  Oct  7 12:36:11.959: INFO: Got endpoints: latency-svc-jcw6p [749.162532ms]
  Oct  7 12:36:11.969: INFO: Created: latency-svc-8mtn4
  Oct  7 12:36:12.009: INFO: Got endpoints: latency-svc-jhbbd [747.767083ms]
  Oct  7 12:36:12.019: INFO: Created: latency-svc-wrbcw
  Oct  7 12:36:12.059: INFO: Got endpoints: latency-svc-thxm7 [749.0863ms]
  Oct  7 12:36:12.069: INFO: Created: latency-svc-rhzsm
  Oct  7 12:36:12.111: INFO: Got endpoints: latency-svc-vpz7w [751.377022ms]
  Oct  7 12:36:12.120: INFO: Created: latency-svc-txxql
  Oct  7 12:36:12.158: INFO: Got endpoints: latency-svc-7wvcv [748.71033ms]
  Oct  7 12:36:12.171: INFO: Created: latency-svc-wvs45
  Oct  7 12:36:12.209: INFO: Got endpoints: latency-svc-2sbsd [748.915175ms]
  Oct  7 12:36:12.219: INFO: Created: latency-svc-2d778
  Oct  7 12:36:12.259: INFO: Got endpoints: latency-svc-vgrbg [748.925733ms]
  Oct  7 12:36:12.268: INFO: Created: latency-svc-7phds
  Oct  7 12:36:12.311: INFO: Got endpoints: latency-svc-tv557 [751.67138ms]
  Oct  7 12:36:12.320: INFO: Created: latency-svc-7jp7r
  Oct  7 12:36:12.360: INFO: Got endpoints: latency-svc-6rj2b [750.800541ms]
  Oct  7 12:36:12.369: INFO: Created: latency-svc-dh7jf
  Oct  7 12:36:12.411: INFO: Got endpoints: latency-svc-kqws4 [750.454509ms]
  Oct  7 12:36:12.420: INFO: Created: latency-svc-9zvjd
  Oct  7 12:36:12.458: INFO: Got endpoints: latency-svc-6zqbr [749.801594ms]
  Oct  7 12:36:12.469: INFO: Created: latency-svc-h2cds
  Oct  7 12:36:12.509: INFO: Got endpoints: latency-svc-tgqr9 [750.514242ms]
  Oct  7 12:36:12.520: INFO: Created: latency-svc-tl8lr
  Oct  7 12:36:12.561: INFO: Got endpoints: latency-svc-7hp8g [751.922531ms]
  Oct  7 12:36:12.573: INFO: Created: latency-svc-42vt6
  Oct  7 12:36:12.610: INFO: Got endpoints: latency-svc-mg2hd [749.900544ms]
  Oct  7 12:36:12.621: INFO: Created: latency-svc-l5lj6
  Oct  7 12:36:12.662: INFO: Got endpoints: latency-svc-fgdqh [751.543544ms]
  Oct  7 12:36:12.672: INFO: Created: latency-svc-9gg5f
  Oct  7 12:36:12.710: INFO: Got endpoints: latency-svc-8mtn4 [750.713388ms]
  Oct  7 12:36:12.720: INFO: Created: latency-svc-tpx94
  Oct  7 12:36:12.760: INFO: Got endpoints: latency-svc-wrbcw [750.755213ms]
  Oct  7 12:36:12.769: INFO: Created: latency-svc-927nw
  Oct  7 12:36:12.810: INFO: Got endpoints: latency-svc-rhzsm [751.050853ms]
  Oct  7 12:36:12.821: INFO: Created: latency-svc-nrcmj
  Oct  7 12:36:12.860: INFO: Got endpoints: latency-svc-txxql [748.727821ms]
  Oct  7 12:36:12.872: INFO: Created: latency-svc-9d264
  Oct  7 12:36:12.909: INFO: Got endpoints: latency-svc-wvs45 [750.667556ms]
  Oct  7 12:36:12.921: INFO: Created: latency-svc-xtr5z
  Oct  7 12:36:12.958: INFO: Got endpoints: latency-svc-2d778 [749.154048ms]
  Oct  7 12:36:12.969: INFO: Created: latency-svc-5s276
  Oct  7 12:36:13.009: INFO: Got endpoints: latency-svc-7phds [750.768382ms]
  Oct  7 12:36:13.018: INFO: Created: latency-svc-725kg
  Oct  7 12:36:13.060: INFO: Got endpoints: latency-svc-7jp7r [749.551844ms]
  Oct  7 12:36:13.070: INFO: Created: latency-svc-2722g
  Oct  7 12:36:13.108: INFO: Got endpoints: latency-svc-dh7jf [748.747338ms]
  Oct  7 12:36:13.120: INFO: Created: latency-svc-hr6m4
  Oct  7 12:36:13.159: INFO: Got endpoints: latency-svc-9zvjd [748.049193ms]
  Oct  7 12:36:13.170: INFO: Created: latency-svc-7mhrd
  Oct  7 12:36:13.209: INFO: Got endpoints: latency-svc-h2cds [751.349595ms]
  Oct  7 12:36:13.221: INFO: Created: latency-svc-zjx4j
  Oct  7 12:36:13.258: INFO: Got endpoints: latency-svc-tl8lr [748.963863ms]
  Oct  7 12:36:13.269: INFO: Created: latency-svc-nm6w5
  Oct  7 12:36:13.311: INFO: Got endpoints: latency-svc-42vt6 [749.181198ms]
  Oct  7 12:36:13.320: INFO: Created: latency-svc-j9ssm
  Oct  7 12:36:13.360: INFO: Got endpoints: latency-svc-l5lj6 [749.765581ms]
  Oct  7 12:36:13.371: INFO: Created: latency-svc-dtz5w
  Oct  7 12:36:13.409: INFO: Got endpoints: latency-svc-9gg5f [746.509528ms]
  Oct  7 12:36:13.420: INFO: Created: latency-svc-lmxqq
  Oct  7 12:36:13.462: INFO: Got endpoints: latency-svc-tpx94 [752.455882ms]
  Oct  7 12:36:13.482: INFO: Created: latency-svc-lgjtk
  Oct  7 12:36:13.512: INFO: Got endpoints: latency-svc-927nw [752.043794ms]
  Oct  7 12:36:13.524: INFO: Created: latency-svc-phjfr
  Oct  7 12:36:13.559: INFO: Got endpoints: latency-svc-nrcmj [749.338458ms]
  Oct  7 12:36:13.573: INFO: Created: latency-svc-hfqfc
  Oct  7 12:36:13.610: INFO: Got endpoints: latency-svc-9d264 [750.645572ms]
  Oct  7 12:36:13.621: INFO: Created: latency-svc-xscjg
  Oct  7 12:36:13.659: INFO: Got endpoints: latency-svc-xtr5z [749.919176ms]
  Oct  7 12:36:13.670: INFO: Created: latency-svc-6mp8c
  Oct  7 12:36:13.710: INFO: Got endpoints: latency-svc-5s276 [751.547422ms]
  Oct  7 12:36:13.719: INFO: Created: latency-svc-6v5j6
  Oct  7 12:36:13.761: INFO: Got endpoints: latency-svc-725kg [751.185591ms]
  Oct  7 12:36:13.770: INFO: Created: latency-svc-v68gb
  Oct  7 12:36:13.812: INFO: Got endpoints: latency-svc-2722g [751.761702ms]
  Oct  7 12:36:13.824: INFO: Created: latency-svc-9q9nf
  Oct  7 12:36:13.859: INFO: Got endpoints: latency-svc-hr6m4 [749.944682ms]
  Oct  7 12:36:13.869: INFO: Created: latency-svc-c7kkz
  Oct  7 12:36:13.910: INFO: Got endpoints: latency-svc-7mhrd [750.339371ms]
  Oct  7 12:36:13.919: INFO: Created: latency-svc-5h2d6
  Oct  7 12:36:13.964: INFO: Got endpoints: latency-svc-zjx4j [754.878319ms]
  Oct  7 12:36:13.975: INFO: Created: latency-svc-zgnmx
  Oct  7 12:36:14.010: INFO: Got endpoints: latency-svc-nm6w5 [751.764015ms]
  Oct  7 12:36:14.021: INFO: Created: latency-svc-p6hwl
  Oct  7 12:36:14.061: INFO: Got endpoints: latency-svc-j9ssm [750.877608ms]
  Oct  7 12:36:14.070: INFO: Created: latency-svc-m2gvg
  Oct  7 12:36:14.110: INFO: Got endpoints: latency-svc-dtz5w [749.908386ms]
  Oct  7 12:36:14.121: INFO: Created: latency-svc-dccrf
  Oct  7 12:36:14.159: INFO: Got endpoints: latency-svc-lmxqq [750.360756ms]
  Oct  7 12:36:14.169: INFO: Created: latency-svc-kgpp4
  Oct  7 12:36:14.211: INFO: Got endpoints: latency-svc-lgjtk [748.597557ms]
  Oct  7 12:36:14.220: INFO: Created: latency-svc-s9gk4
  Oct  7 12:36:14.260: INFO: Got endpoints: latency-svc-phjfr [747.348634ms]
  Oct  7 12:36:14.270: INFO: Created: latency-svc-dw2kb
  Oct  7 12:36:14.309: INFO: Got endpoints: latency-svc-hfqfc [750.151917ms]
  Oct  7 12:36:14.320: INFO: Created: latency-svc-rrh4l
  Oct  7 12:36:14.359: INFO: Got endpoints: latency-svc-xscjg [748.937856ms]
  Oct  7 12:36:14.370: INFO: Created: latency-svc-k6dgh
  Oct  7 12:36:14.408: INFO: Got endpoints: latency-svc-6mp8c [748.880235ms]
  Oct  7 12:36:14.418: INFO: Created: latency-svc-d22f7
  Oct  7 12:36:14.459: INFO: Got endpoints: latency-svc-6v5j6 [748.974973ms]
  Oct  7 12:36:14.469: INFO: Created: latency-svc-hrrg9
  Oct  7 12:36:14.511: INFO: Got endpoints: latency-svc-v68gb [750.649469ms]
  Oct  7 12:36:14.521: INFO: Created: latency-svc-ck8jf
  Oct  7 12:36:14.563: INFO: Got endpoints: latency-svc-9q9nf [750.451182ms]
  Oct  7 12:36:14.575: INFO: Created: latency-svc-qrbrz
  Oct  7 12:36:14.608: INFO: Got endpoints: latency-svc-c7kkz [748.881347ms]
  Oct  7 12:36:14.619: INFO: Created: latency-svc-ngkf5
  Oct  7 12:36:14.660: INFO: Got endpoints: latency-svc-5h2d6 [749.728619ms]
  Oct  7 12:36:14.669: INFO: Created: latency-svc-vljpm
  Oct  7 12:36:14.709: INFO: Got endpoints: latency-svc-zgnmx [744.837842ms]
  Oct  7 12:36:14.718: INFO: Created: latency-svc-nlfv5
  Oct  7 12:36:14.760: INFO: Got endpoints: latency-svc-p6hwl [750.096421ms]
  Oct  7 12:36:14.770: INFO: Created: latency-svc-5htnr
  Oct  7 12:36:14.808: INFO: Got endpoints: latency-svc-m2gvg [746.703615ms]
  Oct  7 12:36:14.818: INFO: Created: latency-svc-65gqs
  Oct  7 12:36:14.859: INFO: Got endpoints: latency-svc-dccrf [748.498082ms]
  Oct  7 12:36:14.875: INFO: Created: latency-svc-mwjwc
  Oct  7 12:36:14.908: INFO: Got endpoints: latency-svc-kgpp4 [748.898773ms]
  Oct  7 12:36:14.918: INFO: Created: latency-svc-pb28m
  Oct  7 12:36:14.961: INFO: Got endpoints: latency-svc-s9gk4 [750.246816ms]
  Oct  7 12:36:14.971: INFO: Created: latency-svc-x7gdv
  Oct  7 12:36:15.011: INFO: Got endpoints: latency-svc-dw2kb [750.932274ms]
  Oct  7 12:36:15.020: INFO: Created: latency-svc-grf6g
  Oct  7 12:36:15.058: INFO: Got endpoints: latency-svc-rrh4l [748.324246ms]
  Oct  7 12:36:15.069: INFO: Created: latency-svc-rrwsq
  Oct  7 12:36:15.109: INFO: Got endpoints: latency-svc-k6dgh [749.254417ms]
  Oct  7 12:36:15.118: INFO: Created: latency-svc-zprhh
  Oct  7 12:36:15.161: INFO: Got endpoints: latency-svc-d22f7 [753.008217ms]
  Oct  7 12:36:15.171: INFO: Created: latency-svc-2csmv
  Oct  7 12:36:15.212: INFO: Got endpoints: latency-svc-hrrg9 [752.810964ms]
  Oct  7 12:36:15.221: INFO: Created: latency-svc-9957r
  Oct  7 12:36:15.262: INFO: Got endpoints: latency-svc-ck8jf [750.233287ms]
  Oct  7 12:36:15.272: INFO: Created: latency-svc-dkcs9
  Oct  7 12:36:15.309: INFO: Got endpoints: latency-svc-qrbrz [745.708435ms]
  Oct  7 12:36:15.320: INFO: Created: latency-svc-25b88
  Oct  7 12:36:15.359: INFO: Got endpoints: latency-svc-ngkf5 [750.724557ms]
  Oct  7 12:36:15.369: INFO: Created: latency-svc-4qddp
  Oct  7 12:36:15.410: INFO: Got endpoints: latency-svc-vljpm [750.125331ms]
  Oct  7 12:36:15.461: INFO: Got endpoints: latency-svc-nlfv5 [751.753048ms]
  Oct  7 12:36:15.509: INFO: Got endpoints: latency-svc-5htnr [748.620792ms]
  Oct  7 12:36:15.558: INFO: Got endpoints: latency-svc-65gqs [749.046974ms]
  Oct  7 12:36:15.613: INFO: Got endpoints: latency-svc-mwjwc [754.506092ms]
  Oct  7 12:36:15.660: INFO: Got endpoints: latency-svc-pb28m [751.874801ms]
  Oct  7 12:36:15.708: INFO: Got endpoints: latency-svc-x7gdv [746.60495ms]
  Oct  7 12:36:15.757: INFO: Got endpoints: latency-svc-grf6g [746.629859ms]
  Oct  7 12:36:15.809: INFO: Got endpoints: latency-svc-rrwsq [751.17783ms]
  Oct  7 12:36:15.860: INFO: Got endpoints: latency-svc-zprhh [750.397912ms]
  Oct  7 12:36:15.909: INFO: Got endpoints: latency-svc-2csmv [748.099793ms]
  Oct  7 12:36:15.959: INFO: Got endpoints: latency-svc-9957r [747.361582ms]
  Oct  7 12:36:16.008: INFO: Got endpoints: latency-svc-dkcs9 [745.90249ms]
  Oct  7 12:36:16.060: INFO: Got endpoints: latency-svc-25b88 [751.383135ms]
  Oct  7 12:36:16.109: INFO: Got endpoints: latency-svc-4qddp [750.222277ms]
  Oct  7 12:36:16.109: INFO: Latencies: [23.590208ms 30.724017ms 38.936878ms 39.569169ms 49.106418ms 55.373261ms 65.278632ms 66.237498ms 69.917162ms 73.075812ms 74.168005ms 78.929122ms 86.019699ms 90.250577ms 91.469965ms 97.871301ms 104.024016ms 104.769874ms 112.195248ms 118.359828ms 119.953403ms 120.307395ms 122.678939ms 123.249625ms 125.144827ms 140.65765ms 144.037286ms 155.203395ms 161.461073ms 163.479636ms 164.897257ms 192.083585ms 196.335604ms 196.671819ms 200.85814ms 206.685228ms 218.844309ms 237.580622ms 260.405344ms 308.828591ms 358.350551ms 398.385663ms 447.439593ms 495.813003ms 517.681502ms 560.501176ms 601.722932ms 639.887583ms 684.980089ms 721.787509ms 743.614972ms 744.837842ms 745.708435ms 745.90249ms 746.509528ms 746.60495ms 746.629859ms 746.703615ms 747.144732ms 747.314431ms 747.348634ms 747.361582ms 747.477569ms 747.498888ms 747.593127ms 747.767083ms 747.855896ms 747.989982ms 748.049193ms 748.099793ms 748.180809ms 748.22215ms 748.324246ms 748.354676ms 748.421522ms 748.426442ms 748.498082ms 748.597557ms 748.620792ms 748.661603ms 748.71033ms 748.71796ms 748.727821ms 748.747338ms 748.824029ms 748.839168ms 748.880235ms 748.881347ms 748.898773ms 748.915175ms 748.925733ms 748.937856ms 748.93795ms 748.963863ms 748.974973ms 748.984562ms 749.046974ms 749.058466ms 749.0863ms 749.086898ms 749.114806ms 749.154048ms 749.162532ms 749.181198ms 749.254417ms 749.255091ms 749.285577ms 749.314844ms 749.338458ms 749.362772ms 749.369349ms 749.384844ms 749.438637ms 749.551844ms 749.575548ms 749.630907ms 749.69151ms 749.728619ms 749.765581ms 749.801594ms 749.808906ms 749.828697ms 749.900544ms 749.905893ms 749.908386ms 749.919176ms 749.944682ms 750.010819ms 750.096421ms 750.101637ms 750.125331ms 750.151917ms 750.21331ms 750.222277ms 750.233287ms 750.246816ms 750.253619ms 750.334077ms 750.338293ms 750.339371ms 750.360756ms 750.361649ms 750.388625ms 750.397912ms 750.399105ms 750.451182ms 750.454509ms 750.500374ms 750.500513ms 750.514242ms 750.518085ms 750.557956ms 750.630407ms 750.645572ms 750.649469ms 750.667556ms 750.699663ms 750.713388ms 750.717712ms 750.724557ms 750.741048ms 750.755213ms 750.768382ms 750.800541ms 750.825561ms 750.877608ms 750.932274ms 750.953812ms 751.008766ms 751.024027ms 751.050853ms 751.17783ms 751.185591ms 751.208351ms 751.30167ms 751.349595ms 751.377022ms 751.383135ms 751.543544ms 751.547422ms 751.584192ms 751.67138ms 751.753048ms 751.761702ms 751.764015ms 751.861563ms 751.874801ms 751.896122ms 751.922531ms 752.043794ms 752.10546ms 752.262784ms 752.455882ms 752.810964ms 752.857021ms 752.875608ms 753.008217ms 753.134159ms 754.506092ms 754.878319ms]
  Oct  7 12:36:16.110: INFO: 50 %ile: 749.114806ms
  Oct  7 12:36:16.110: INFO: 90 %ile: 751.584192ms
  Oct  7 12:36:16.110: INFO: 99 %ile: 754.506092ms
  Oct  7 12:36:16.110: INFO: Total sample count: 200
  Oct  7 12:36:16.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4800" for this suite. @ 10/07/23 12:36:16.115
â€¢ [10.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 10/07/23 12:36:16.123
  Oct  7 12:36:16.123: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:36:16.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:36:16.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:36:16.142
  STEP: Creating configMap with name projected-configmap-test-volume-map-1d02e1d2-49c2-4644-8a24-4500af9751be @ 10/07/23 12:36:16.144
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:36:16.151
  STEP: Saw pod success @ 10/07/23 12:36:20.174
  Oct  7 12:36:20.177: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-configmaps-51b63e63-92bb-4fcc-a52f-58e5f879db87 container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:36:20.184
  Oct  7 12:36:20.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-596" for this suite. @ 10/07/23 12:36:20.202
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/07/23 12:36:20.209
  Oct  7 12:36:20.209: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename certificates @ 10/07/23 12:36:20.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:36:20.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:36:20.225
  STEP: getting /apis @ 10/07/23 12:36:20.581
  STEP: getting /apis/certificates.k8s.io @ 10/07/23 12:36:20.584
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/07/23 12:36:20.585
  STEP: creating @ 10/07/23 12:36:20.586
  STEP: getting @ 10/07/23 12:36:20.6
  STEP: listing @ 10/07/23 12:36:20.603
  STEP: watching @ 10/07/23 12:36:20.605
  Oct  7 12:36:20.606: INFO: starting watch
  STEP: patching @ 10/07/23 12:36:20.607
  STEP: updating @ 10/07/23 12:36:20.612
  Oct  7 12:36:20.616: INFO: waiting for watch events with expected annotations
  Oct  7 12:36:20.616: INFO: saw patched and updated annotations
  STEP: getting /approval @ 10/07/23 12:36:20.616
  STEP: patching /approval @ 10/07/23 12:36:20.619
  STEP: updating /approval @ 10/07/23 12:36:20.624
  STEP: getting /status @ 10/07/23 12:36:20.63
  STEP: patching /status @ 10/07/23 12:36:20.632
  STEP: updating /status @ 10/07/23 12:36:20.638
  STEP: deleting @ 10/07/23 12:36:20.645
  STEP: deleting a collection @ 10/07/23 12:36:20.655
  Oct  7 12:36:20.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2731" for this suite. @ 10/07/23 12:36:20.671
â€¢ [0.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 10/07/23 12:36:20.679
  Oct  7 12:36:20.679: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svcaccounts @ 10/07/23 12:36:20.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:36:20.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:36:20.695
  STEP: creating a ServiceAccount @ 10/07/23 12:36:20.698
  STEP: watching for the ServiceAccount to be added @ 10/07/23 12:36:20.705
  STEP: patching the ServiceAccount @ 10/07/23 12:36:20.708
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/07/23 12:36:20.713
  STEP: deleting the ServiceAccount @ 10/07/23 12:36:20.716
  Oct  7 12:36:20.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6817" for this suite. @ 10/07/23 12:36:20.734
â€¢ [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 10/07/23 12:36:20.742
  Oct  7 12:36:20.742: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:36:20.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:36:20.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:36:20.76
  STEP: Creating configMap with name projected-configmap-test-volume-map-b4dffcc1-5094-4cd9-907a-d19dd046ddb8 @ 10/07/23 12:36:20.763
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:36:20.766
  STEP: Saw pod success @ 10/07/23 12:36:24.789
  Oct  7 12:36:24.793: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-configmaps-e57ff293-1077-404c-b9b4-1a21bff27b68 container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:36:24.8
  Oct  7 12:36:24.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3825" for this suite. @ 10/07/23 12:36:24.818
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 10/07/23 12:36:24.825
  Oct  7 12:36:24.825: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename endpointslice @ 10/07/23 12:36:24.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:36:24.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:36:24.844
  STEP: referencing a single matching pod @ 10/07/23 12:36:29.919
  STEP: referencing matching pods with named port @ 10/07/23 12:36:34.928
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/07/23 12:36:39.936
  STEP: recreating EndpointSlices after they've been deleted @ 10/07/23 12:36:44.946
  Oct  7 12:36:44.966: INFO: EndpointSlice for Service endpointslice-3459/example-named-port not found
  Oct  7 12:36:54.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3459" for this suite. @ 10/07/23 12:36:54.984
â€¢ [30.165 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 10/07/23 12:36:54.99
  Oct  7 12:36:54.990: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 12:36:54.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:36:55.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:36:55.011
  STEP: Creating service test in namespace statefulset-5843 @ 10/07/23 12:36:55.014
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/07/23 12:36:55.02
  STEP: Creating stateful set ss in namespace statefulset-5843 @ 10/07/23 12:36:55.025
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5843 @ 10/07/23 12:36:55.03
  Oct  7 12:36:55.035: INFO: Found 0 stateful pods, waiting for 1
  Oct  7 12:37:05.039: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/07/23 12:37:05.039
  Oct  7 12:37:05.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 12:37:05.174: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 12:37:05.174: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 12:37:05.174: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 12:37:05.177: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Oct  7 12:37:15.181: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 12:37:15.181: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct  7 12:37:15.195: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999795s
  Oct  7 12:37:16.200: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996565494s
  Oct  7 12:37:17.203: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992489915s
  Oct  7 12:37:18.208: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.988461094s
  Oct  7 12:37:19.211: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.984371412s
  Oct  7 12:37:20.215: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.980507377s
  Oct  7 12:37:21.220: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.976357327s
  Oct  7 12:37:22.223: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.972227153s
  Oct  7 12:37:23.228: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.967920365s
  Oct  7 12:37:24.232: INFO: Verifying statefulset ss doesn't scale past 1 for another 963.111428ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5843 @ 10/07/23 12:37:25.233
  Oct  7 12:37:25.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 12:37:25.359: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct  7 12:37:25.359: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 12:37:25.359: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct  7 12:37:25.363: INFO: Found 1 stateful pods, waiting for 3
  Oct  7 12:37:35.370: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 12:37:35.370: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 12:37:35.370: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/07/23 12:37:35.37
  STEP: Scale down will halt with unhealthy stateful pod @ 10/07/23 12:37:35.37
  Oct  7 12:37:35.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 12:37:35.496: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 12:37:35.496: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 12:37:35.496: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 12:37:35.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 12:37:35.626: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 12:37:35.626: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 12:37:35.626: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 12:37:35.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 12:37:35.758: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 12:37:35.758: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 12:37:35.758: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 12:37:35.758: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct  7 12:37:35.761: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Oct  7 12:37:45.768: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 12:37:45.768: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 12:37:45.768: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 12:37:45.782: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999835s
  Oct  7 12:37:46.788: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994602075s
  Oct  7 12:37:47.792: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988494949s
  Oct  7 12:37:48.797: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.983937726s
  Oct  7 12:37:49.801: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979282211s
  Oct  7 12:37:50.806: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.975432357s
  Oct  7 12:37:51.810: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971397392s
  Oct  7 12:37:52.814: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967243464s
  Oct  7 12:37:53.818: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962679179s
  Oct  7 12:37:54.822: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.324084ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5843 @ 10/07/23 12:37:55.822
  Oct  7 12:37:55.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 12:37:55.943: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct  7 12:37:55.943: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 12:37:55.943: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct  7 12:37:55.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 12:37:56.075: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct  7 12:37:56.075: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 12:37:56.075: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct  7 12:37:56.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-5843 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 12:37:56.194: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct  7 12:37:56.194: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 12:37:56.194: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct  7 12:37:56.194: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/07/23 12:38:06.21
  Oct  7 12:38:06.210: INFO: Deleting all statefulset in ns statefulset-5843
  Oct  7 12:38:06.213: INFO: Scaling statefulset ss to 0
  Oct  7 12:38:06.223: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 12:38:06.226: INFO: Deleting statefulset ss
  Oct  7 12:38:06.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5843" for this suite. @ 10/07/23 12:38:06.242
â€¢ [71.258 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 10/07/23 12:38:06.248
  Oct  7 12:38:06.248: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename field-validation @ 10/07/23 12:38:06.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:06.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:06.267
  Oct  7 12:38:06.269: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:38:09.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6939" for this suite. @ 10/07/23 12:38:09.353
â€¢ [3.111 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/07/23 12:38:09.36
  Oct  7 12:38:09.360: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename events @ 10/07/23 12:38:09.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:09.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:09.383
  STEP: creating a test event @ 10/07/23 12:38:09.386
  STEP: listing events in all namespaces @ 10/07/23 12:38:09.394
  STEP: listing events in test namespace @ 10/07/23 12:38:09.401
  STEP: listing events with field selection filtering on source @ 10/07/23 12:38:09.403
  STEP: listing events with field selection filtering on reportingController @ 10/07/23 12:38:09.405
  STEP: getting the test event @ 10/07/23 12:38:09.408
  STEP: patching the test event @ 10/07/23 12:38:09.412
  STEP: getting the test event @ 10/07/23 12:38:09.419
  STEP: updating the test event @ 10/07/23 12:38:09.422
  STEP: getting the test event @ 10/07/23 12:38:09.428
  STEP: deleting the test event @ 10/07/23 12:38:09.431
  STEP: listing events in all namespaces @ 10/07/23 12:38:09.439
  STEP: listing events in test namespace @ 10/07/23 12:38:09.445
  Oct  7 12:38:09.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3820" for this suite. @ 10/07/23 12:38:09.451
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 10/07/23 12:38:09.457
  Oct  7 12:38:09.457: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename controllerrevisions @ 10/07/23 12:38:09.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:09.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:09.473
  STEP: Creating DaemonSet "e2e-g46q9-daemon-set" @ 10/07/23 12:38:09.492
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/07/23 12:38:09.497
  Oct  7 12:38:09.503: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:38:09.503: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:38:09.506: INFO: Number of nodes with available pods controlled by daemonset e2e-g46q9-daemon-set: 0
  Oct  7 12:38:09.506: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 12:38:10.509: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:38:10.509: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:38:10.513: INFO: Number of nodes with available pods controlled by daemonset e2e-g46q9-daemon-set: 0
  Oct  7 12:38:10.513: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 12:38:11.510: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:38:11.511: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:38:11.513: INFO: Number of nodes with available pods controlled by daemonset e2e-g46q9-daemon-set: 3
  Oct  7 12:38:11.513: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-g46q9-daemon-set
  STEP: Confirm DaemonSet "e2e-g46q9-daemon-set" successfully created with "daemonset-name=e2e-g46q9-daemon-set" label @ 10/07/23 12:38:11.517
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-g46q9-daemon-set" @ 10/07/23 12:38:11.522
  Oct  7 12:38:11.526: INFO: Located ControllerRevision: "e2e-g46q9-daemon-set-6d49f9c9d6"
  STEP: Patching ControllerRevision "e2e-g46q9-daemon-set-6d49f9c9d6" @ 10/07/23 12:38:11.53
  Oct  7 12:38:11.535: INFO: e2e-g46q9-daemon-set-6d49f9c9d6 has been patched
  STEP: Create a new ControllerRevision @ 10/07/23 12:38:11.535
  Oct  7 12:38:11.540: INFO: Created ControllerRevision: e2e-g46q9-daemon-set-55dcd6d6b4
  STEP: Confirm that there are two ControllerRevisions @ 10/07/23 12:38:11.54
  Oct  7 12:38:11.540: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct  7 12:38:11.544: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-g46q9-daemon-set-6d49f9c9d6" @ 10/07/23 12:38:11.544
  STEP: Confirm that there is only one ControllerRevision @ 10/07/23 12:38:11.549
  Oct  7 12:38:11.549: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct  7 12:38:11.553: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-g46q9-daemon-set-55dcd6d6b4" @ 10/07/23 12:38:11.556
  Oct  7 12:38:11.564: INFO: e2e-g46q9-daemon-set-55dcd6d6b4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/07/23 12:38:11.564
  W1007 12:38:11.570862      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/07/23 12:38:11.57
  Oct  7 12:38:11.571: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct  7 12:38:12.576: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct  7 12:38:12.580: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-g46q9-daemon-set-55dcd6d6b4=updated" @ 10/07/23 12:38:12.58
  STEP: Confirm that there is only one ControllerRevision @ 10/07/23 12:38:12.589
  Oct  7 12:38:12.589: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct  7 12:38:12.592: INFO: Found 1 ControllerRevisions
  Oct  7 12:38:12.595: INFO: ControllerRevision "e2e-g46q9-daemon-set-db6885f69" has revision 3
  STEP: Deleting DaemonSet "e2e-g46q9-daemon-set" @ 10/07/23 12:38:12.598
  STEP: deleting DaemonSet.extensions e2e-g46q9-daemon-set in namespace controllerrevisions-9820, will wait for the garbage collector to delete the pods @ 10/07/23 12:38:12.598
  Oct  7 12:38:12.659: INFO: Deleting DaemonSet.extensions e2e-g46q9-daemon-set took: 6.632659ms
  Oct  7 12:38:12.759: INFO: Terminating DaemonSet.extensions e2e-g46q9-daemon-set pods took: 100.541088ms
  Oct  7 12:38:13.863: INFO: Number of nodes with available pods controlled by daemonset e2e-g46q9-daemon-set: 0
  Oct  7 12:38:13.863: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-g46q9-daemon-set
  Oct  7 12:38:13.867: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16668"},"items":null}

  Oct  7 12:38:13.870: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16668"},"items":null}

  Oct  7 12:38:13.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9820" for this suite. @ 10/07/23 12:38:13.889
â€¢ [4.438 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 10/07/23 12:38:13.895
  Oct  7 12:38:13.895: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 12:38:13.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:13.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:13.911
  Oct  7 12:38:13.914: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/07/23 12:38:15.249
  Oct  7 12:38:15.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-4494 --namespace=crd-publish-openapi-4494 create -f -'
  Oct  7 12:38:15.600: INFO: stderr: ""
  Oct  7 12:38:15.600: INFO: stdout: "e2e-test-crd-publish-openapi-5236-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct  7 12:38:15.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-4494 --namespace=crd-publish-openapi-4494 delete e2e-test-crd-publish-openapi-5236-crds test-cr'
  Oct  7 12:38:15.671: INFO: stderr: ""
  Oct  7 12:38:15.671: INFO: stdout: "e2e-test-crd-publish-openapi-5236-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Oct  7 12:38:15.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-4494 --namespace=crd-publish-openapi-4494 apply -f -'
  Oct  7 12:38:15.917: INFO: stderr: ""
  Oct  7 12:38:15.917: INFO: stdout: "e2e-test-crd-publish-openapi-5236-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct  7 12:38:15.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-4494 --namespace=crd-publish-openapi-4494 delete e2e-test-crd-publish-openapi-5236-crds test-cr'
  Oct  7 12:38:15.974: INFO: stderr: ""
  Oct  7 12:38:15.974: INFO: stdout: "e2e-test-crd-publish-openapi-5236-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/07/23 12:38:15.974
  Oct  7 12:38:15.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-4494 explain e2e-test-crd-publish-openapi-5236-crds'
  Oct  7 12:38:16.074: INFO: stderr: ""
  Oct  7 12:38:16.074: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5236-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Oct  7 12:38:17.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4494" for this suite. @ 10/07/23 12:38:17.369
â€¢ [3.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 10/07/23 12:38:17.377
  Oct  7 12:38:17.377: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:38:17.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:17.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:17.398
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/07/23 12:38:17.4
  STEP: Saw pod success @ 10/07/23 12:38:21.422
  Oct  7 12:38:21.426: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-df7fb6ac-c376-4b93-8e72-09fdae442052 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:38:21.441
  Oct  7 12:38:21.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6591" for this suite. @ 10/07/23 12:38:21.458
â€¢ [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 10/07/23 12:38:21.467
  Oct  7 12:38:21.467: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:38:21.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:21.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:21.486
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/07/23 12:38:21.488
  STEP: Saw pod success @ 10/07/23 12:38:25.512
  Oct  7 12:38:25.515: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-94378ee7-7672-4771-a302-c7d3145023bc container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:38:25.523
  Oct  7 12:38:25.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-305" for this suite. @ 10/07/23 12:38:25.541
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 10/07/23 12:38:25.549
  Oct  7 12:38:25.549: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 12:38:25.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:25.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:25.569
  STEP: Creating a pod to test substitution in volume subpath @ 10/07/23 12:38:25.572
  STEP: Saw pod success @ 10/07/23 12:38:29.593
  Oct  7 12:38:29.596: INFO: Trying to get logs from node ip-172-31-31-221 pod var-expansion-1ec9115a-80f9-4cb2-8b4f-5a66d446a8f2 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 12:38:29.604
  Oct  7 12:38:29.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1973" for this suite. @ 10/07/23 12:38:29.622
â€¢ [4.080 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 10/07/23 12:38:29.629
  Oct  7 12:38:29.629: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename field-validation @ 10/07/23 12:38:29.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:29.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:29.651
  Oct  7 12:38:29.654: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  W1007 12:38:29.654650      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0056aaa80 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1007 12:38:32.202513      21 warnings.go:70] unknown field "alpha"
  W1007 12:38:32.202530      21 warnings.go:70] unknown field "beta"
  W1007 12:38:32.202534      21 warnings.go:70] unknown field "delta"
  W1007 12:38:32.202538      21 warnings.go:70] unknown field "epsilon"
  W1007 12:38:32.202541      21 warnings.go:70] unknown field "gamma"
  Oct  7 12:38:32.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1451" for this suite. @ 10/07/23 12:38:32.749
â€¢ [3.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/07/23 12:38:32.759
  Oct  7 12:38:32.759: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename cronjob @ 10/07/23 12:38:32.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:38:32.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:38:32.778
  STEP: Creating a suspended cronjob @ 10/07/23 12:38:32.781
  STEP: Ensuring no jobs are scheduled @ 10/07/23 12:38:32.786
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/07/23 12:43:32.794
  STEP: Removing cronjob @ 10/07/23 12:43:32.797
  Oct  7 12:43:32.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6796" for this suite. @ 10/07/23 12:43:32.808
â€¢ [300.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/07/23 12:43:32.815
  Oct  7 12:43:32.815: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 12:43:32.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:43:32.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:43:32.836
  STEP: creating the pod @ 10/07/23 12:43:32.839
  STEP: submitting the pod to kubernetes @ 10/07/23 12:43:32.839
  STEP: verifying the pod is in kubernetes @ 10/07/23 12:43:34.858
  STEP: updating the pod @ 10/07/23 12:43:34.861
  Oct  7 12:43:35.374: INFO: Successfully updated pod "pod-update-1b31d54c-36fd-4591-a832-103c2887837c"
  STEP: verifying the updated pod is in kubernetes @ 10/07/23 12:43:35.377
  Oct  7 12:43:35.381: INFO: Pod update OK
  Oct  7 12:43:35.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8227" for this suite. @ 10/07/23 12:43:35.385
â€¢ [2.576 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/07/23 12:43:35.392
  Oct  7 12:43:35.392: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 12:43:35.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:43:35.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:43:35.41
  STEP: creating a Pod with a static label @ 10/07/23 12:43:35.418
  STEP: watching for Pod to be ready @ 10/07/23 12:43:35.427
  Oct  7 12:43:35.428: INFO: observed Pod pod-test in namespace pods-5208 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Oct  7 12:43:35.430: INFO: observed Pod pod-test in namespace pods-5208 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:35 +0000 UTC  }]
  Oct  7 12:43:35.444: INFO: observed Pod pod-test in namespace pods-5208 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:35 +0000 UTC  }]
  Oct  7 12:43:36.331: INFO: Found Pod pod-test in namespace pods-5208 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:35 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:36 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 12:43:35 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/07/23 12:43:36.335
  STEP: getting the Pod and ensuring that it's patched @ 10/07/23 12:43:36.343
  STEP: replacing the Pod's status Ready condition to False @ 10/07/23 12:43:36.346
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/07/23 12:43:36.356
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/07/23 12:43:36.356
  STEP: watching for the Pod to be deleted @ 10/07/23 12:43:36.366
  Oct  7 12:43:36.368: INFO: observed event type MODIFIED
  Oct  7 12:43:36.600: INFO: observed event type MODIFIED
  Oct  7 12:43:38.334: INFO: observed event type MODIFIED
  Oct  7 12:43:38.488: INFO: observed event type MODIFIED
  Oct  7 12:43:39.338: INFO: observed event type MODIFIED
  Oct  7 12:43:39.353: INFO: observed event type MODIFIED
  Oct  7 12:43:39.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5208" for this suite. @ 10/07/23 12:43:39.365
â€¢ [3.983 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/07/23 12:43:39.375
  Oct  7 12:43:39.375: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename containers @ 10/07/23 12:43:39.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:43:39.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:43:39.398
  STEP: Creating a pod to test override arguments @ 10/07/23 12:43:39.401
  STEP: Saw pod success @ 10/07/23 12:43:43.424
  Oct  7 12:43:43.428: INFO: Trying to get logs from node ip-172-31-31-221 pod client-containers-3015910e-e04c-418a-a904-a49213dc0a1f container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:43:43.445
  Oct  7 12:43:43.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-809" for this suite. @ 10/07/23 12:43:43.464
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 10/07/23 12:43:43.471
  Oct  7 12:43:43.471: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:43:43.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:43:43.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:43:43.495
  STEP: Counting existing ResourceQuota @ 10/07/23 12:44:00.503
  STEP: Creating a ResourceQuota @ 10/07/23 12:44:05.508
  STEP: Ensuring resource quota status is calculated @ 10/07/23 12:44:05.513
  STEP: Creating a ConfigMap @ 10/07/23 12:44:07.518
  STEP: Ensuring resource quota status captures configMap creation @ 10/07/23 12:44:07.529
  STEP: Deleting a ConfigMap @ 10/07/23 12:44:09.534
  STEP: Ensuring resource quota status released usage @ 10/07/23 12:44:09.541
  Oct  7 12:44:11.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-304" for this suite. @ 10/07/23 12:44:11.55
â€¢ [28.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 10/07/23 12:44:11.558
  Oct  7 12:44:11.558: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:44:11.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:11.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:11.576
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/07/23 12:44:11.579
  STEP: Saw pod success @ 10/07/23 12:44:13.595
  Oct  7 12:44:13.598: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-9f88ce33-ee63-4966-bd74-5dcaa55069f2 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:44:13.605
  Oct  7 12:44:13.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8176" for this suite. @ 10/07/23 12:44:13.624
â€¢ [2.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 10/07/23 12:44:13.63
  Oct  7 12:44:13.630: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/07/23 12:44:13.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:13.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:13.65
  Oct  7 12:44:13.653: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:44:14.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8144" for this suite. @ 10/07/23 12:44:14.198
â€¢ [0.574 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 10/07/23 12:44:14.204
  Oct  7 12:44:14.205: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:44:14.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:14.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:14.224
  STEP: Setting up server cert @ 10/07/23 12:44:14.245
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:44:14.61
  STEP: Deploying the webhook pod @ 10/07/23 12:44:14.623
  STEP: Wait for the deployment to be ready @ 10/07/23 12:44:14.635
  Oct  7 12:44:14.642: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:44:16.653
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:44:16.663
  Oct  7 12:44:17.664: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/07/23 12:44:17.675
  STEP: create a configmap that should be updated by the webhook @ 10/07/23 12:44:17.69
  Oct  7 12:44:17.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8265" for this suite. @ 10/07/23 12:44:17.754
  STEP: Destroying namespace "webhook-markers-4301" for this suite. @ 10/07/23 12:44:17.761
â€¢ [3.564 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 10/07/23 12:44:17.769
  Oct  7 12:44:17.769: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:44:17.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:17.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:17.788
  STEP: Setting up server cert @ 10/07/23 12:44:17.812
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:44:18.1
  STEP: Deploying the webhook pod @ 10/07/23 12:44:18.106
  STEP: Wait for the deployment to be ready @ 10/07/23 12:44:18.118
  Oct  7 12:44:18.129: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:44:20.141
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:44:20.152
  Oct  7 12:44:21.153: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/07/23 12:44:21.161
  STEP: create a pod @ 10/07/23 12:44:21.176
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/07/23 12:44:23.194
  Oct  7 12:44:23.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=webhook-8699 attach --namespace=webhook-8699 to-be-attached-pod -i -c=container1'
  Oct  7 12:44:23.254: INFO: rc: 1
  Oct  7 12:44:23.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8699" for this suite. @ 10/07/23 12:44:23.307
  STEP: Destroying namespace "webhook-markers-6072" for this suite. @ 10/07/23 12:44:23.315
â€¢ [5.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/07/23 12:44:23.323
  Oct  7 12:44:23.323: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:44:23.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:23.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:23.342
  STEP: Creating secret with name secret-test-699bb024-5e37-4e4c-9c43-934a8a16e5eb @ 10/07/23 12:44:23.369
  STEP: Creating a pod to test consume secrets @ 10/07/23 12:44:23.373
  STEP: Saw pod success @ 10/07/23 12:44:27.393
  Oct  7 12:44:27.397: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-secrets-9ebcc22e-78ae-4414-a443-a326eab296b1 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 12:44:27.404
  Oct  7 12:44:27.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2862" for this suite. @ 10/07/23 12:44:27.421
  STEP: Destroying namespace "secret-namespace-6226" for this suite. @ 10/07/23 12:44:27.428
â€¢ [4.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 10/07/23 12:44:27.435
  Oct  7 12:44:27.435: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:44:27.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:27.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:27.455
  STEP: Counting existing ResourceQuota @ 10/07/23 12:44:27.458
  STEP: Creating a ResourceQuota @ 10/07/23 12:44:32.462
  STEP: Ensuring resource quota status is calculated @ 10/07/23 12:44:32.467
  STEP: Creating a Pod that fits quota @ 10/07/23 12:44:34.472
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/07/23 12:44:34.486
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/07/23 12:44:36.49
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/07/23 12:44:36.492
  STEP: Ensuring a pod cannot update its resource requirements @ 10/07/23 12:44:36.494
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/07/23 12:44:36.498
  STEP: Deleting the pod @ 10/07/23 12:44:38.503
  STEP: Ensuring resource quota status released the pod usage @ 10/07/23 12:44:38.519
  Oct  7 12:44:40.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1423" for this suite. @ 10/07/23 12:44:40.528
â€¢ [13.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/07/23 12:44:40.537
  Oct  7 12:44:40.537: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:44:40.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:40.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:40.556
  STEP: Creating projection with secret that has name projected-secret-test-4d3ea1e4-f540-4af9-8f6c-b1e71cf5a645 @ 10/07/23 12:44:40.559
  STEP: Creating a pod to test consume secrets @ 10/07/23 12:44:40.565
  STEP: Saw pod success @ 10/07/23 12:44:44.585
  Oct  7 12:44:44.589: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-secrets-0dc30554-2fbd-4563-8648-339a99809369 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 12:44:44.597
  Oct  7 12:44:44.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6435" for this suite. @ 10/07/23 12:44:44.615
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 10/07/23 12:44:44.623
  Oct  7 12:44:44.623: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:44:44.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:44.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:44.642
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:44:44.645
  STEP: Saw pod success @ 10/07/23 12:44:48.668
  Oct  7 12:44:48.671: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-35b5e4c1-68b8-42fd-9f75-880020f48c8f container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:44:48.679
  Oct  7 12:44:48.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8861" for this suite. @ 10/07/23 12:44:48.697
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/07/23 12:44:48.705
  Oct  7 12:44:48.705: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubelet-test @ 10/07/23 12:44:48.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:48.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:48.725
  Oct  7 12:44:50.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7111" for this suite. @ 10/07/23 12:44:50.767
â€¢ [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 10/07/23 12:44:50.774
  Oct  7 12:44:50.774: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:44:50.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:50.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:50.793
  STEP: Creating a pod to test downward api env vars @ 10/07/23 12:44:50.796
  STEP: Saw pod success @ 10/07/23 12:44:54.818
  Oct  7 12:44:54.822: INFO: Trying to get logs from node ip-172-31-31-221 pod downward-api-56f5fdb8-371d-42f0-bf2f-1f2537a2924a container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 12:44:54.83
  Oct  7 12:44:54.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5030" for this suite. @ 10/07/23 12:44:54.848
â€¢ [4.080 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 10/07/23 12:44:54.855
  Oct  7 12:44:54.855: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename cronjob @ 10/07/23 12:44:54.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:54.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:54.877
  STEP: Creating a cronjob @ 10/07/23 12:44:54.88
  STEP: creating @ 10/07/23 12:44:54.88
  STEP: getting @ 10/07/23 12:44:54.885
  STEP: listing @ 10/07/23 12:44:54.889
  STEP: watching @ 10/07/23 12:44:54.892
  Oct  7 12:44:54.892: INFO: starting watch
  STEP: cluster-wide listing @ 10/07/23 12:44:54.893
  STEP: cluster-wide watching @ 10/07/23 12:44:54.897
  Oct  7 12:44:54.897: INFO: starting watch
  STEP: patching @ 10/07/23 12:44:54.898
  STEP: updating @ 10/07/23 12:44:54.905
  Oct  7 12:44:54.914: INFO: waiting for watch events with expected annotations
  Oct  7 12:44:54.914: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/07/23 12:44:54.914
  STEP: updating /status @ 10/07/23 12:44:54.919
  STEP: get /status @ 10/07/23 12:44:54.927
  STEP: deleting @ 10/07/23 12:44:54.93
  STEP: deleting a collection @ 10/07/23 12:44:54.944
  Oct  7 12:44:54.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2584" for this suite. @ 10/07/23 12:44:54.96
â€¢ [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 10/07/23 12:44:54.968
  Oct  7 12:44:54.968: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:44:54.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:54.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:54.987
  STEP: fetching services @ 10/07/23 12:44:54.99
  Oct  7 12:44:54.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8099" for this suite. @ 10/07/23 12:44:54.998
â€¢ [0.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 10/07/23 12:44:55.005
  Oct  7 12:44:55.005: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:44:55.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:55.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:55.023
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/07/23 12:44:55.026
  STEP: Saw pod success @ 10/07/23 12:44:59.051
  Oct  7 12:44:59.054: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-b8e10ba1-2db5-455a-a102-c9e44a014210 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:44:59.073
  Oct  7 12:44:59.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9624" for this suite. @ 10/07/23 12:44:59.09
â€¢ [4.093 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 10/07/23 12:44:59.097
  Oct  7 12:44:59.097: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 12:44:59.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:44:59.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:44:59.119
  Oct  7 12:45:59.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3698" for this suite. @ 10/07/23 12:45:59.139
â€¢ [60.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 10/07/23 12:45:59.148
  Oct  7 12:45:59.148: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:45:59.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:45:59.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:45:59.168
  STEP: Creating the pod @ 10/07/23 12:45:59.171
  Oct  7 12:46:01.719: INFO: Successfully updated pod "annotationupdate8f72ea64-18bb-417b-9bbc-69a36d0ccf0b"
  Oct  7 12:46:05.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8516" for this suite. @ 10/07/23 12:46:05.748
â€¢ [6.606 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 10/07/23 12:46:05.754
  Oct  7 12:46:05.754: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:46:05.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:05.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:05.773
  STEP: creating service nodeport-test with type=NodePort in namespace services-7758 @ 10/07/23 12:46:05.776
  STEP: creating replication controller nodeport-test in namespace services-7758 @ 10/07/23 12:46:05.792
  I1007 12:46:05.801382      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-7758, replica count: 2
  I1007 12:46:08.852978      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 12:46:08.853: INFO: Creating new exec pod
  Oct  7 12:46:11.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-7758 exec execpodtkr46 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Oct  7 12:46:11.997: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Oct  7 12:46:11.997: INFO: stdout: ""
  Oct  7 12:46:12.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-7758 exec execpodtkr46 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Oct  7 12:46:13.121: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Oct  7 12:46:13.121: INFO: stdout: "nodeport-test-95rqv"
  Oct  7 12:46:13.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-7758 exec execpodtkr46 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  Oct  7 12:46:13.235: INFO: stderr: "+ nc -v -t -w 2 10.152.183.245 80\n+ echo hostName\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n"
  Oct  7 12:46:13.235: INFO: stdout: ""
  Oct  7 12:46:14.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-7758 exec execpodtkr46 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  Oct  7 12:46:14.355: INFO: stderr: "+ nc -v -t -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct  7 12:46:14.355: INFO: stdout: ""
  Oct  7 12:46:15.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-7758 exec execpodtkr46 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  Oct  7 12:46:15.360: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n"
  Oct  7 12:46:15.360: INFO: stdout: "nodeport-test-95rqv"
  Oct  7 12:46:15.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-7758 exec execpodtkr46 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.221 31392'
  Oct  7 12:46:15.484: INFO: stderr: "+ nc -v -t -w 2 172.31.31.221 31392\n+ echo hostName\nConnection to 172.31.31.221 31392 port [tcp/*] succeeded!\n"
  Oct  7 12:46:15.484: INFO: stdout: "nodeport-test-95rqv"
  Oct  7 12:46:15.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-7758 exec execpodtkr46 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.40.4 31392'
  Oct  7 12:46:15.605: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.40.4 31392\nConnection to 172.31.40.4 31392 port [tcp/*] succeeded!\n"
  Oct  7 12:46:15.605: INFO: stdout: "nodeport-test-95rqv"
  Oct  7 12:46:15.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7758" for this suite. @ 10/07/23 12:46:15.609
â€¢ [9.862 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 10/07/23 12:46:15.617
  Oct  7 12:46:15.617: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:46:15.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:15.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:15.639
  STEP: Setting up server cert @ 10/07/23 12:46:15.661
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:46:16.065
  STEP: Deploying the webhook pod @ 10/07/23 12:46:16.074
  STEP: Wait for the deployment to be ready @ 10/07/23 12:46:16.084
  Oct  7 12:46:16.092: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:46:18.108
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:46:18.121
  Oct  7 12:46:19.121: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/07/23 12:46:19.313
  STEP: Creating a configMap that should be mutated @ 10/07/23 12:46:19.326
  STEP: Deleting the collection of validation webhooks @ 10/07/23 12:46:19.357
  STEP: Creating a configMap that should not be mutated @ 10/07/23 12:46:19.409
  Oct  7 12:46:19.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-316" for this suite. @ 10/07/23 12:46:19.462
  STEP: Destroying namespace "webhook-markers-7010" for this suite. @ 10/07/23 12:46:19.471
â€¢ [3.861 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 10/07/23 12:46:19.479
  Oct  7 12:46:19.479: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:46:19.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:19.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:19.499
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:46:19.502
  STEP: Saw pod success @ 10/07/23 12:46:23.524
  Oct  7 12:46:23.527: INFO: Trying to get logs from node ip-172-31-0-122 pod downwardapi-volume-fa39719e-2a50-48ef-b3f9-003e1c56c708 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:46:23.535
  Oct  7 12:46:23.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8880" for this suite. @ 10/07/23 12:46:23.553
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/07/23 12:46:23.575
  Oct  7 12:46:23.575: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubelet-test @ 10/07/23 12:46:23.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:23.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:23.608
  Oct  7 12:46:23.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4028" for this suite. @ 10/07/23 12:46:23.639
â€¢ [0.071 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 10/07/23 12:46:23.646
  Oct  7 12:46:23.646: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:46:23.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:23.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:23.667
  STEP: creating a collection of services @ 10/07/23 12:46:23.672
  Oct  7 12:46:23.672: INFO: Creating e2e-svc-a-5zt2z
  Oct  7 12:46:23.685: INFO: Creating e2e-svc-b-gbf97
  Oct  7 12:46:23.703: INFO: Creating e2e-svc-c-dk9qf
  STEP: deleting service collection @ 10/07/23 12:46:23.719
  Oct  7 12:46:23.750: INFO: Collection of services has been deleted
  Oct  7 12:46:23.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5042" for this suite. @ 10/07/23 12:46:23.754
â€¢ [0.114 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 10/07/23 12:46:23.76
  Oct  7 12:46:23.760: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-pred @ 10/07/23 12:46:23.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:23.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:23.779
  Oct  7 12:46:23.782: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct  7 12:46:23.789: INFO: Waiting for terminating namespaces to be deleted...
  Oct  7 12:46:23.793: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-0-122 before test
  Oct  7 12:46:23.799: INFO: nginx-ingress-controller-kubernetes-worker-ndczw from ingress-nginx-kubernetes-worker started at 2023-10-07 12:10:31 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.799: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:46:23.799: INFO: calico-node-s77kx from kube-system started at 2023-10-07 12:09:50 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.799: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:46:23.799: INFO: sonobuoy-e2e-job-71352699346043a1 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:46:23.799: INFO: 	Container e2e ready: true, restart count 0
  Oct  7 12:46:23.799: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:46:23.799: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-fq6js from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:46:23.799: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:46:23.799: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 12:46:23.799: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-221 before test
  Oct  7 12:46:23.805: INFO: nginx-ingress-controller-kubernetes-worker-x6hxp from ingress-nginx-kubernetes-worker started at 2023-10-07 12:06:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.805: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:46:23.805: INFO: calico-node-v7ff9 from kube-system started at 2023-10-07 12:06:03 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.805: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:46:23.805: INFO: bin-false39b18829-319c-4a2f-a253-2489ec095862 from kubelet-test-4028 started at 2023-10-07 12:46:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.805: INFO: 	Container bin-false39b18829-319c-4a2f-a253-2489ec095862 ready: false, restart count 0
  Oct  7 12:46:23.805: INFO: sonobuoy from sonobuoy started at 2023-10-07 12:16:32 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.805: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct  7 12:46:23.805: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-nf7ln from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:46:23.805: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:46:23.805: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 12:46:23.805: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-40-4 before test
  Oct  7 12:46:23.811: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvvtf from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: nginx-ingress-controller-kubernetes-worker-44xxd from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: calico-node-z4q47 from kube-system started at 2023-10-07 12:03:53 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: coredns-59cfb5bf46-gn6vc from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container coredns ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: kube-state-metrics-775d9f4f79-k2ppl from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: metrics-server-v0.6.3-69d7fbfdf8-sl9zx from kube-system started at 2023-10-07 12:04:23 +0000 UTC (2 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container metrics-server ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: dashboard-metrics-scraper-5dd7cb5fc-8vd5q from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: kubernetes-dashboard-7b899cb9d9-bcdwj from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-m8dx5 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:46:23.811: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:46:23.811: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/07/23 12:46:23.811
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/07/23 12:46:25.831
  STEP: Trying to apply a random label on the found node. @ 10/07/23 12:46:25.841
  STEP: verifying the node has the label kubernetes.io/e2e-5aaffd80-ebe2-4c17-9657-c54641cc9560 42 @ 10/07/23 12:46:25.85
  STEP: Trying to relaunch the pod, now with labels. @ 10/07/23 12:46:25.853
  STEP: removing the label kubernetes.io/e2e-5aaffd80-ebe2-4c17-9657-c54641cc9560 off the node ip-172-31-0-122 @ 10/07/23 12:46:27.874
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5aaffd80-ebe2-4c17-9657-c54641cc9560 @ 10/07/23 12:46:27.889
  Oct  7 12:46:27.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6151" for this suite. @ 10/07/23 12:46:27.897
â€¢ [4.143 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 10/07/23 12:46:27.903
  Oct  7 12:46:27.903: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:46:27.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:27.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:27.932
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/07/23 12:46:27.935
  STEP: Saw pod success @ 10/07/23 12:46:29.952
  Oct  7 12:46:29.955: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-595dbdf2-a7ba-4726-b913-f1d2a40dfb6d container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:46:29.97
  Oct  7 12:46:29.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6752" for this suite. @ 10/07/23 12:46:29.987
â€¢ [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 10/07/23 12:46:29.995
  Oct  7 12:46:29.995: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 12:46:29.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:30.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:30.016
  STEP: Creating configMap with name configmap-test-volume-map-2ddacd1a-a420-4897-9605-ad221a2cacff @ 10/07/23 12:46:30.019
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:46:30.024
  STEP: Saw pod success @ 10/07/23 12:46:34.048
  Oct  7 12:46:34.052: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-39a27b28-963a-4d74-867a-fbf40284a5b4 container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:46:34.059
  Oct  7 12:46:34.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9312" for this suite. @ 10/07/23 12:46:34.078
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 10/07/23 12:46:34.087
  Oct  7 12:46:34.087: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:46:34.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:34.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:34.106
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/07/23 12:46:34.109
  STEP: Saw pod success @ 10/07/23 12:46:38.134
  Oct  7 12:46:38.138: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-eb48ca6e-5a8f-4863-a3a8-82225d16a87e container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:46:38.145
  Oct  7 12:46:38.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4420" for this suite. @ 10/07/23 12:46:38.164
â€¢ [4.084 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 10/07/23 12:46:38.171
  Oct  7 12:46:38.171: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 12:46:38.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:38.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:38.194
  Oct  7 12:46:40.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 12:46:40.219: INFO: Deleting pod "var-expansion-b3bf8501-b56b-4bc2-a78e-615ff0262c4b" in namespace "var-expansion-2987"
  Oct  7 12:46:40.226: INFO: Wait up to 5m0s for pod "var-expansion-b3bf8501-b56b-4bc2-a78e-615ff0262c4b" to be fully deleted
  STEP: Destroying namespace "var-expansion-2987" for this suite. @ 10/07/23 12:46:42.235
â€¢ [4.071 seconds]
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 10/07/23 12:46:42.241
  Oct  7 12:46:42.241: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:46:42.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:42.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:42.263
  STEP: creating service multi-endpoint-test in namespace services-4413 @ 10/07/23 12:46:42.266
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4413 to expose endpoints map[] @ 10/07/23 12:46:42.276
  Oct  7 12:46:42.288: INFO: successfully validated that service multi-endpoint-test in namespace services-4413 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4413 @ 10/07/23 12:46:42.288
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4413 to expose endpoints map[pod1:[100]] @ 10/07/23 12:46:44.308
  Oct  7 12:46:44.319: INFO: successfully validated that service multi-endpoint-test in namespace services-4413 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4413 @ 10/07/23 12:46:44.32
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4413 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/07/23 12:46:46.339
  Oct  7 12:46:46.352: INFO: successfully validated that service multi-endpoint-test in namespace services-4413 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/07/23 12:46:46.352
  Oct  7 12:46:46.352: INFO: Creating new exec pod
  Oct  7 12:46:49.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4413 exec execpodxq247 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Oct  7 12:46:49.492: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Oct  7 12:46:49.492: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:46:49.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4413 exec execpodxq247 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.142 80'
  Oct  7 12:46:49.611: INFO: stderr: "+ nc -v -t -w 2 10.152.183.142 80\nConnection to 10.152.183.142 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct  7 12:46:49.611: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:46:49.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4413 exec execpodxq247 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Oct  7 12:46:49.753: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Oct  7 12:46:49.753: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:46:49.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4413 exec execpodxq247 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.142 81'
  Oct  7 12:46:49.863: INFO: stderr: "+ nc -v -t -w 2 10.152.183.142 81\n+ echo hostName\nConnection to 10.152.183.142 81 port [tcp/*] succeeded!\n"
  Oct  7 12:46:49.863: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4413 @ 10/07/23 12:46:49.863
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4413 to expose endpoints map[pod2:[101]] @ 10/07/23 12:46:49.874
  Oct  7 12:46:49.888: INFO: successfully validated that service multi-endpoint-test in namespace services-4413 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4413 @ 10/07/23 12:46:49.888
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4413 to expose endpoints map[] @ 10/07/23 12:46:49.899
  Oct  7 12:46:49.911: INFO: successfully validated that service multi-endpoint-test in namespace services-4413 exposes endpoints map[]
  Oct  7 12:46:49.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4413" for this suite. @ 10/07/23 12:46:49.932
â€¢ [7.698 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 10/07/23 12:46:49.939
  Oct  7 12:46:49.939: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:46:49.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:49.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:49.958
  STEP: Creating the pod @ 10/07/23 12:46:49.961
  Oct  7 12:46:52.503: INFO: Successfully updated pod "annotationupdatea0557432-8905-4c5d-b9b9-485b06df33d1"
  Oct  7 12:46:54.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9385" for this suite. @ 10/07/23 12:46:54.524
â€¢ [4.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/07/23 12:46:54.532
  Oct  7 12:46:54.532: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 12:46:54.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:54.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:54.552
  STEP: creating a Deployment @ 10/07/23 12:46:54.558
  STEP: waiting for Deployment to be created @ 10/07/23 12:46:54.563
  STEP: waiting for all Replicas to be Ready @ 10/07/23 12:46:54.564
  Oct  7 12:46:54.565: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:54.565: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:54.575: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:54.575: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:54.589: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:54.589: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:54.616: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:54.616: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct  7 12:46:55.689: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Oct  7 12:46:55.689: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Oct  7 12:46:55.767: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/07/23 12:46:55.767
  Oct  7 12:46:55.776: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/07/23 12:46:55.776
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 0
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.778: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.778: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.787: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.787: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.804: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.804: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.824: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.824: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:55.830: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:55.830: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:56.706: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:56.706: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:56.749: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  STEP: listing Deployments @ 10/07/23 12:46:56.749
  Oct  7 12:46:56.754: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/07/23 12:46:56.754
  Oct  7 12:46:56.765: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/07/23 12:46:56.765
  Oct  7 12:46:56.773: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:56.777: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:56.818: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:56.826: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:57.773: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:57.828: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:57.854: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:57.864: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Oct  7 12:46:58.705: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/07/23 12:46:58.736
  STEP: fetching the DeploymentStatus @ 10/07/23 12:46:58.743
  Oct  7 12:46:58.750: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 1
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 3
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 2
  Oct  7 12:46:58.751: INFO: observed Deployment test-deployment in namespace deployment-3869 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/07/23 12:46:58.752
  Oct  7 12:46:58.764: INFO: observed event type MODIFIED
  Oct  7 12:46:58.764: INFO: observed event type MODIFIED
  Oct  7 12:46:58.764: INFO: observed event type MODIFIED
  Oct  7 12:46:58.764: INFO: observed event type MODIFIED
  Oct  7 12:46:58.764: INFO: observed event type MODIFIED
  Oct  7 12:46:58.765: INFO: observed event type MODIFIED
  Oct  7 12:46:58.765: INFO: observed event type MODIFIED
  Oct  7 12:46:58.765: INFO: observed event type MODIFIED
  Oct  7 12:46:58.765: INFO: observed event type MODIFIED
  Oct  7 12:46:58.765: INFO: observed event type MODIFIED
  Oct  7 12:46:58.765: INFO: observed event type MODIFIED
  Oct  7 12:46:58.765: INFO: observed event type MODIFIED
  Oct  7 12:46:58.769: INFO: Log out all the ReplicaSets if there is no deployment created
  Oct  7 12:46:58.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3869" for this suite. @ 10/07/23 12:46:58.783
â€¢ [4.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 10/07/23 12:46:58.793
  Oct  7 12:46:58.793: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:46:58.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:46:58.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:46:58.817
  STEP: creating secret secrets-6415/secret-test-c4dfdd39-b637-4aa1-ae72-1ea26de655a1 @ 10/07/23 12:46:58.82
  STEP: Creating a pod to test consume secrets @ 10/07/23 12:46:58.825
  STEP: Saw pod success @ 10/07/23 12:47:02.845
  Oct  7 12:47:02.849: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-b31edb91-1cd5-4669-9b82-2f979c19d1cb container env-test: <nil>
  STEP: delete the pod @ 10/07/23 12:47:02.856
  Oct  7 12:47:02.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6415" for this suite. @ 10/07/23 12:47:02.874
â€¢ [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/07/23 12:47:02.88
  Oct  7 12:47:02.880: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename watch @ 10/07/23 12:47:02.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:47:02.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:47:02.904
  STEP: creating a watch on configmaps with label A @ 10/07/23 12:47:02.906
  STEP: creating a watch on configmaps with label B @ 10/07/23 12:47:02.908
  STEP: creating a watch on configmaps with label A or B @ 10/07/23 12:47:02.909
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/07/23 12:47:02.911
  Oct  7 12:47:02.916: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19462 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 12:47:02.916: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19462 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/07/23 12:47:02.916
  Oct  7 12:47:02.924: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19463 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 12:47:02.924: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19463 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/07/23 12:47:02.924
  Oct  7 12:47:02.932: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19464 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 12:47:02.932: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19464 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/07/23 12:47:02.932
  Oct  7 12:47:02.939: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19465 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 12:47:02.939: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6458  1af0ceed-47d3-4cb6-bf42-b67d79c7813c 19465 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/07/23 12:47:02.939
  Oct  7 12:47:02.943: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6458  1082fef5-679d-465d-8b0e-3505bf06a45f 19466 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 12:47:02.943: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6458  1082fef5-679d-465d-8b0e-3505bf06a45f 19466 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/07/23 12:47:12.944
  Oct  7 12:47:12.952: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6458  1082fef5-679d-465d-8b0e-3505bf06a45f 19553 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 12:47:12.952: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6458  1082fef5-679d-465d-8b0e-3505bf06a45f 19553 0 2023-10-07 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-07 12:47:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 12:47:22.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6458" for this suite. @ 10/07/23 12:47:22.96
â€¢ [20.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/07/23 12:47:22.968
  Oct  7 12:47:22.968: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/07/23 12:47:22.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:47:22.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:47:22.988
  STEP: creating a target pod @ 10/07/23 12:47:22.991
  STEP: adding an ephemeral container @ 10/07/23 12:47:25.012
  STEP: checking pod container endpoints @ 10/07/23 12:47:27.027
  Oct  7 12:47:27.027: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5399 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 12:47:27.027: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:47:27.027: INFO: ExecWithOptions: Clientset creation
  Oct  7 12:47:27.027: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5399/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Oct  7 12:47:27.101: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/07/23 12:47:27.109
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/07/23 12:47:27.113
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/07/23 12:47:27.123
  Oct  7 12:47:27.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5399" for this suite. @ 10/07/23 12:47:27.13
â€¢ [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/07/23 12:47:27.142
  Oct  7 12:47:27.142: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 12:47:27.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:47:27.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:47:27.163
  STEP: creating the pod @ 10/07/23 12:47:27.166
  STEP: submitting the pod to kubernetes @ 10/07/23 12:47:27.166
  STEP: verifying QOS class is set on the pod @ 10/07/23 12:47:27.174
  Oct  7 12:47:27.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5558" for this suite. @ 10/07/23 12:47:27.182
â€¢ [0.047 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 10/07/23 12:47:27.189
  Oct  7 12:47:27.189: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename endpointslice @ 10/07/23 12:47:27.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:47:27.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:47:27.211
  STEP: getting /apis @ 10/07/23 12:47:27.214
  STEP: getting /apis/discovery.k8s.io @ 10/07/23 12:47:27.217
  STEP: getting /apis/discovery.k8s.iov1 @ 10/07/23 12:47:27.219
  STEP: creating @ 10/07/23 12:47:27.22
  STEP: getting @ 10/07/23 12:47:27.233
  STEP: listing @ 10/07/23 12:47:27.236
  STEP: watching @ 10/07/23 12:47:27.239
  Oct  7 12:47:27.239: INFO: starting watch
  STEP: cluster-wide listing @ 10/07/23 12:47:27.241
  STEP: cluster-wide watching @ 10/07/23 12:47:27.244
  Oct  7 12:47:27.244: INFO: starting watch
  STEP: patching @ 10/07/23 12:47:27.245
  STEP: updating @ 10/07/23 12:47:27.25
  Oct  7 12:47:27.258: INFO: waiting for watch events with expected annotations
  Oct  7 12:47:27.258: INFO: saw patched and updated annotations
  STEP: deleting @ 10/07/23 12:47:27.259
  STEP: deleting a collection @ 10/07/23 12:47:27.272
  Oct  7 12:47:27.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9408" for this suite. @ 10/07/23 12:47:27.293
â€¢ [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 10/07/23 12:47:27.301
  Oct  7 12:47:27.301: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:47:27.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:47:27.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:47:27.321
  STEP: Creating a ResourceQuota with terminating scope @ 10/07/23 12:47:27.323
  STEP: Ensuring ResourceQuota status is calculated @ 10/07/23 12:47:27.328
  STEP: Creating a ResourceQuota with not terminating scope @ 10/07/23 12:47:29.332
  STEP: Ensuring ResourceQuota status is calculated @ 10/07/23 12:47:29.337
  STEP: Creating a long running pod @ 10/07/23 12:47:31.341
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/07/23 12:47:31.353
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/07/23 12:47:33.358
  STEP: Deleting the pod @ 10/07/23 12:47:35.363
  STEP: Ensuring resource quota status released the pod usage @ 10/07/23 12:47:35.378
  STEP: Creating a terminating pod @ 10/07/23 12:47:37.382
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/07/23 12:47:37.394
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/07/23 12:47:39.398
  STEP: Deleting the pod @ 10/07/23 12:47:41.402
  STEP: Ensuring resource quota status released the pod usage @ 10/07/23 12:47:41.413
  Oct  7 12:47:43.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2520" for this suite. @ 10/07/23 12:47:43.422
â€¢ [16.129 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 10/07/23 12:47:43.43
  Oct  7 12:47:43.430: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-preemption @ 10/07/23 12:47:43.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:47:43.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:47:43.452
  Oct  7 12:47:43.467: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct  7 12:48:43.487: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/07/23 12:48:43.49
  Oct  7 12:48:43.509: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct  7 12:48:43.515: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct  7 12:48:43.532: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct  7 12:48:43.538: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct  7 12:48:43.555: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct  7 12:48:43.561: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/07/23 12:48:43.561
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/07/23 12:48:45.588
  Oct  7 12:48:49.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8409" for this suite. @ 10/07/23 12:48:49.704
â€¢ [66.281 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 10/07/23 12:48:49.712
  Oct  7 12:48:49.712: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 12:48:49.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:48:49.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:48:49.736
  STEP: Setting up server cert @ 10/07/23 12:48:49.765
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 12:48:50.372
  STEP: Deploying the webhook pod @ 10/07/23 12:48:50.378
  STEP: Wait for the deployment to be ready @ 10/07/23 12:48:50.393
  Oct  7 12:48:50.400: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 12:48:52.412
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 12:48:52.426
  Oct  7 12:48:53.426: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/07/23 12:48:53.434
  STEP: create a pod that should be denied by the webhook @ 10/07/23 12:48:53.448
  STEP: create a pod that causes the webhook to hang @ 10/07/23 12:48:53.459
  STEP: create a configmap that should be denied by the webhook @ 10/07/23 12:49:03.468
  STEP: create a configmap that should be admitted by the webhook @ 10/07/23 12:49:03.509
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/07/23 12:49:03.518
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/07/23 12:49:03.527
  STEP: create a namespace that bypass the webhook @ 10/07/23 12:49:03.532
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/07/23 12:49:03.548
  Oct  7 12:49:03.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3796" for this suite. @ 10/07/23 12:49:03.608
  STEP: Destroying namespace "webhook-markers-3874" for this suite. @ 10/07/23 12:49:03.617
  STEP: Destroying namespace "exempted-namespace-9079" for this suite. @ 10/07/23 12:49:03.623
â€¢ [13.918 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 10/07/23 12:49:03.63
  Oct  7 12:49:03.630: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 12:49:03.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:49:03.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:49:03.651
  STEP: Creating configMap configmap-9911/configmap-test-e93f8790-9c9c-417d-a00e-ee02a527092c @ 10/07/23 12:49:03.695
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:49:03.699
  STEP: Saw pod success @ 10/07/23 12:49:07.723
  Oct  7 12:49:07.727: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-59191235-93a7-4e53-9e67-30f8b9266774 container env-test: <nil>
  STEP: delete the pod @ 10/07/23 12:49:07.745
  Oct  7 12:49:07.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9911" for this suite. @ 10/07/23 12:49:07.772
â€¢ [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 10/07/23 12:49:07.779
  Oct  7 12:49:07.779: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/07/23 12:49:07.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:49:07.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:49:07.8
  Oct  7 12:49:07.802: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:49:08.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4191" for this suite. @ 10/07/23 12:49:08.829
â€¢ [1.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 10/07/23 12:49:08.838
  Oct  7 12:49:08.838: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 12:49:08.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:49:08.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:49:08.861
  STEP: creating a secret @ 10/07/23 12:49:08.863
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/07/23 12:49:08.871
  STEP: patching the secret @ 10/07/23 12:49:08.875
  STEP: deleting the secret using a LabelSelector @ 10/07/23 12:49:08.883
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/07/23 12:49:08.892
  Oct  7 12:49:08.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7939" for this suite. @ 10/07/23 12:49:08.9
â€¢ [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 10/07/23 12:49:08.908
  Oct  7 12:49:08.908: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:49:08.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:49:08.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:49:08.976
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-251bd1f4-3376-42c1-8297-6854ddc3c49e @ 10/07/23 12:49:08.983
  STEP: Creating the pod @ 10/07/23 12:49:08.987
  STEP: Updating configmap projected-configmap-test-upd-251bd1f4-3376-42c1-8297-6854ddc3c49e @ 10/07/23 12:49:11.016
  STEP: waiting to observe update in volume @ 10/07/23 12:49:11.021
  Oct  7 12:50:33.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7417" for this suite. @ 10/07/23 12:50:33.421
â€¢ [84.521 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 10/07/23 12:50:33.43
  Oct  7 12:50:33.430: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename field-validation @ 10/07/23 12:50:33.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:33.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:33.457
  Oct  7 12:50:33.460: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  W1007 12:50:36.008581      21 warnings.go:70] unknown field "alpha"
  W1007 12:50:36.008602      21 warnings.go:70] unknown field "beta"
  W1007 12:50:36.008606      21 warnings.go:70] unknown field "delta"
  W1007 12:50:36.008610      21 warnings.go:70] unknown field "epsilon"
  W1007 12:50:36.008613      21 warnings.go:70] unknown field "gamma"
  Oct  7 12:50:36.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9336" for this suite. @ 10/07/23 12:50:36.558
â€¢ [3.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 10/07/23 12:50:36.565
  Oct  7 12:50:36.565: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 12:50:36.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:36.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:36.584
  STEP: creating all guestbook components @ 10/07/23 12:50:36.588
  Oct  7 12:50:36.588: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Oct  7 12:50:36.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 create -f -'
  Oct  7 12:50:36.991: INFO: stderr: ""
  Oct  7 12:50:36.991: INFO: stdout: "service/agnhost-replica created\n"
  Oct  7 12:50:36.991: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Oct  7 12:50:36.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 create -f -'
  Oct  7 12:50:37.150: INFO: stderr: ""
  Oct  7 12:50:37.150: INFO: stdout: "service/agnhost-primary created\n"
  Oct  7 12:50:37.150: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Oct  7 12:50:37.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 create -f -'
  Oct  7 12:50:37.309: INFO: stderr: ""
  Oct  7 12:50:37.309: INFO: stdout: "service/frontend created\n"
  Oct  7 12:50:37.310: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Oct  7 12:50:37.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 create -f -'
  Oct  7 12:50:37.433: INFO: stderr: ""
  Oct  7 12:50:37.433: INFO: stdout: "deployment.apps/frontend created\n"
  Oct  7 12:50:37.433: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct  7 12:50:37.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 create -f -'
  Oct  7 12:50:37.613: INFO: stderr: ""
  Oct  7 12:50:37.613: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Oct  7 12:50:37.613: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct  7 12:50:37.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 create -f -'
  Oct  7 12:50:37.742: INFO: stderr: ""
  Oct  7 12:50:37.742: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/07/23 12:50:37.742
  Oct  7 12:50:37.742: INFO: Waiting for all frontend pods to be Running.
  Oct  7 12:50:42.793: INFO: Waiting for frontend to serve content.
  Oct  7 12:50:42.804: INFO: Trying to add a new entry to the guestbook.
  Oct  7 12:50:42.817: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/07/23 12:50:42.825
  Oct  7 12:50:42.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 delete --grace-period=0 --force -f -'
  Oct  7 12:50:42.888: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 12:50:42.888: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/07/23 12:50:42.888
  Oct  7 12:50:42.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 delete --grace-period=0 --force -f -'
  Oct  7 12:50:42.961: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 12:50:42.961: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/07/23 12:50:42.961
  Oct  7 12:50:42.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 delete --grace-period=0 --force -f -'
  Oct  7 12:50:43.022: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 12:50:43.022: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/07/23 12:50:43.022
  Oct  7 12:50:43.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 delete --grace-period=0 --force -f -'
  Oct  7 12:50:43.076: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 12:50:43.076: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/07/23 12:50:43.076
  Oct  7 12:50:43.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 delete --grace-period=0 --force -f -'
  Oct  7 12:50:43.141: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 12:50:43.141: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/07/23 12:50:43.141
  Oct  7 12:50:43.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1144 delete --grace-period=0 --force -f -'
  Oct  7 12:50:43.211: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 12:50:43.211: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Oct  7 12:50:43.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1144" for this suite. @ 10/07/23 12:50:43.215
â€¢ [6.659 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 10/07/23 12:50:43.223
  Oct  7 12:50:43.223: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 12:50:43.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:43.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:43.245
  STEP: Creating configMap with name configmap-test-volume-map-d0d05d8a-83fb-4081-a936-af486d869a0a @ 10/07/23 12:50:43.259
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:50:43.264
  STEP: Saw pod success @ 10/07/23 12:50:45.288
  Oct  7 12:50:45.292: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-configmaps-041f590d-7e05-4636-be55-9b276ed6855e container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:50:45.309
  Oct  7 12:50:45.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4313" for this suite. @ 10/07/23 12:50:45.327
â€¢ [2.111 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 10/07/23 12:50:45.334
  Oct  7 12:50:45.334: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 12:50:45.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:45.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:45.355
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/07/23 12:50:45.358
  Oct  7 12:50:45.358: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:50:46.693: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:50:51.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9548" for this suite. @ 10/07/23 12:50:51.797
â€¢ [6.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 10/07/23 12:50:51.806
  Oct  7 12:50:51.806: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:50:51.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:51.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:51.825
  STEP: Creating configMap with name projected-configmap-test-volume-map-8278aa35-7f4f-4e4b-9195-08df9f526c71 @ 10/07/23 12:50:51.828
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:50:51.832
  STEP: Saw pod success @ 10/07/23 12:50:55.854
  Oct  7 12:50:55.857: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-configmaps-3e2fc5f7-74b8-45b8-ab2f-133116fbef7b container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:50:55.865
  Oct  7 12:50:55.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1196" for this suite. @ 10/07/23 12:50:55.885
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 10/07/23 12:50:55.893
  Oct  7 12:50:55.893: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename daemonsets @ 10/07/23 12:50:55.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:55.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:55.914
  STEP: Creating simple DaemonSet "daemon-set" @ 10/07/23 12:50:55.936
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/07/23 12:50:55.942
  Oct  7 12:50:55.946: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:50:55.946: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:50:55.949: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:50:55.949: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 12:50:56.955: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:50:56.955: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:50:56.959: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:50:56.959: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 12:50:57.954: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:50:57.954: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 12:50:57.958: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 12:50:57.958: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/07/23 12:50:57.962
  STEP: DeleteCollection of the DaemonSets @ 10/07/23 12:50:57.965
  STEP: Verify that ReplicaSets have been deleted @ 10/07/23 12:50:57.974
  Oct  7 12:50:57.985: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20920"},"items":null}

  Oct  7 12:50:57.989: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20921"},"items":[{"metadata":{"name":"daemon-set-fkzmd","generateName":"daemon-set-","namespace":"daemonsets-2900","uid":"12f29091-875d-4ebf-9111-606c5d1d5393","resourceVersion":"20916","creationTimestamp":"2023-10-07T12:50:55Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"77dd71d4-8601-4aa5-8162-ab06cee28986","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-07T12:50:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"77dd71d4-8601-4aa5-8162-ab06cee28986\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-07T12:50:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.52.245\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zpw2l","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zpw2l","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-40-4","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-40-4"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:55Z"}],"hostIP":"172.31.40.4","podIP":"192.168.52.245","podIPs":[{"ip":"192.168.52.245"}],"startTime":"2023-10-07T12:50:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-07T12:50:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://964445ccc7d85413f0dbf9af3721ca0a75269e750bcfb61264ceeddb9b7a596b","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gbdc4","generateName":"daemon-set-","namespace":"daemonsets-2900","uid":"cd5e86a9-5ff9-460e-a77a-7bac2f4c8185","resourceVersion":"20914","creationTimestamp":"2023-10-07T12:50:55Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"77dd71d4-8601-4aa5-8162-ab06cee28986","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-07T12:50:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"77dd71d4-8601-4aa5-8162-ab06cee28986\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-07T12:50:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.62.44\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ktbcr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ktbcr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-31-221","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-31-221"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:55Z"}],"hostIP":"172.31.31.221","podIP":"192.168.62.44","podIPs":[{"ip":"192.168.62.44"}],"startTime":"2023-10-07T12:50:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-07T12:50:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://30d1903b15ff4fca21159b1a47c7b349dccf8dfd871c6fbbbfe740f1f1ebae73","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nrcl5","generateName":"daemon-set-","namespace":"daemonsets-2900","uid":"f625de94-4091-481f-9880-d89a1ae84ec7","resourceVersion":"20921","creationTimestamp":"2023-10-07T12:50:55Z","deletionTimestamp":"2023-10-07T12:51:27Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"77dd71d4-8601-4aa5-8162-ab06cee28986","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-07T12:50:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"77dd71d4-8601-4aa5-8162-ab06cee28986\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-07T12:50:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.161.27\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-t5k8s","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-t5k8s","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-0-122","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-0-122"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-07T12:50:55Z"}],"hostIP":"172.31.0.122","podIP":"192.168.161.27","podIPs":[{"ip":"192.168.161.27"}],"startTime":"2023-10-07T12:50:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-07T12:50:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://88f49b4621427cec39caa42405e40d8c53e78617c12ccf0dae7e47473f511e35","started":true}],"qosClass":"BestEffort"}}]}

  Oct  7 12:50:58.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2900" for this suite. @ 10/07/23 12:50:58.006
â€¢ [2.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 10/07/23 12:50:58.014
  Oct  7 12:50:58.014: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename namespaces @ 10/07/23 12:50:58.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:58.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:58.038
  STEP: Updating Namespace "namespaces-6149" @ 10/07/23 12:50:58.041
  Oct  7 12:50:58.050: INFO: Namespace "namespaces-6149" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"b2ba4449-523b-464c-9cb1-24333d84cb0c", "kubernetes.io/metadata.name":"namespaces-6149", "namespaces-6149":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Oct  7 12:50:58.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6149" for this suite. @ 10/07/23 12:50:58.054
â€¢ [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 10/07/23 12:50:58.062
  Oct  7 12:50:58.062: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 12:50:58.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:50:58.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:50:58.083
  Oct  7 12:50:58.085: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/07/23 12:50:59.353
  Oct  7 12:50:59.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-1560 --namespace=crd-publish-openapi-1560 create -f -'
  Oct  7 12:51:01.743: INFO: stderr: ""
  Oct  7 12:51:01.743: INFO: stdout: "e2e-test-crd-publish-openapi-9309-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct  7 12:51:01.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-1560 --namespace=crd-publish-openapi-1560 delete e2e-test-crd-publish-openapi-9309-crds test-cr'
  Oct  7 12:51:01.798: INFO: stderr: ""
  Oct  7 12:51:01.798: INFO: stdout: "e2e-test-crd-publish-openapi-9309-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Oct  7 12:51:01.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-1560 --namespace=crd-publish-openapi-1560 apply -f -'
  Oct  7 12:51:01.915: INFO: stderr: ""
  Oct  7 12:51:01.915: INFO: stdout: "e2e-test-crd-publish-openapi-9309-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct  7 12:51:01.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-1560 --namespace=crd-publish-openapi-1560 delete e2e-test-crd-publish-openapi-9309-crds test-cr'
  Oct  7 12:51:01.969: INFO: stderr: ""
  Oct  7 12:51:01.969: INFO: stdout: "e2e-test-crd-publish-openapi-9309-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/07/23 12:51:01.969
  Oct  7 12:51:01.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-1560 explain e2e-test-crd-publish-openapi-9309-crds'
  Oct  7 12:51:02.075: INFO: stderr: ""
  Oct  7 12:51:02.075: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9309-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Oct  7 12:51:03.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1560" for this suite. @ 10/07/23 12:51:03.339
â€¢ [5.283 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 10/07/23 12:51:03.345
  Oct  7 12:51:03.345: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 12:51:03.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:51:03.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:51:03.362
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/07/23 12:51:03.365
  STEP: Saw pod success @ 10/07/23 12:51:07.388
  Oct  7 12:51:07.391: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-6962c2c8-acd6-4746-aa02-e7bc9e5a1890 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 12:51:07.404
  Oct  7 12:51:07.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2173" for this suite. @ 10/07/23 12:51:07.428
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 10/07/23 12:51:07.434
  Oct  7 12:51:07.434: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/07/23 12:51:07.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:51:07.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:51:07.45
  Oct  7 12:51:07.453: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 12:51:13.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1837" for this suite. @ 10/07/23 12:51:13.641
â€¢ [6.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 10/07/23 12:51:13.649
  Oct  7 12:51:13.649: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 12:51:13.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:51:13.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:51:13.668
  Oct  7 12:51:15.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 12:51:15.690: INFO: Deleting pod "var-expansion-a25f2776-dab9-4307-a546-c98f43da8e93" in namespace "var-expansion-2423"
  Oct  7 12:51:15.697: INFO: Wait up to 5m0s for pod "var-expansion-a25f2776-dab9-4307-a546-c98f43da8e93" to be fully deleted
  STEP: Destroying namespace "var-expansion-2423" for this suite. @ 10/07/23 12:51:17.705
â€¢ [4.061 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/07/23 12:51:17.711
  Oct  7 12:51:17.711: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 12:51:17.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:51:17.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:51:17.734
  Oct  7 12:51:17.743: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Oct  7 12:51:22.748: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/07/23 12:51:22.748
  Oct  7 12:51:22.748: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/07/23 12:51:22.759
  Oct  7 12:51:22.769: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f4c7376-cb96-4f2b-a1da-b109fdd55973",
      ResourceVersion: (string) (len=5) "21205",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832279882,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct  7 12:51:22.776: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "721675ce-441a-4717-9491-85070bbe05d5",
      ResourceVersion: (string) (len=5) "21208",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832279882,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "5f4c7376-cb96-4f2b-a1da-b109fdd55973",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 66 34 63 37 33  37 36 2d 63 62 39 36 2d  |\"5f4c7376-cb96-|
              00000120  34 66 32 62 2d 61 31 64  61 2d 62 31 30 39 66 64  |4f2b-a1da-b109fd|
              00000130  64 35 35 39 37 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d55973\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:51:22.798: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Oct  7 12:51:22.799: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96c03782-56c6-46f0-8a35-3ae36552760c",
      ResourceVersion: (string) (len=5) "21206",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832279877,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "5f4c7376-cb96-4f2b-a1da-b109fdd55973",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279877,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 66 34 63 37 33 37  |"uid\":\"5f4c737|
              00000040  36 2d 63 62 39 36 2d 34  66 32 62 2d 61 31 64 61  |6-cb96-4f2b-a1da|
              00000050  2d 62 31 30 39 66 64 64  35 35 39 37 33 5c 22 7d  |-b109fdd55973\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 12:51:22.808: INFO: Pod "test-cleanup-controller-v5b8j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-v5b8j",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb00540c-12f8-457b-8213-4359bf4a6a75",
      ResourceVersion: (string) (len=5) "21198",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832279877,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "96c03782-56c6-46f0-8a35-3ae36552760c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279877,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  39 36 63 30 33 37 38 32  |uid\":\"96c03782|
              00000080  2d 35 36 63 36 2d 34 36  66 30 2d 38 61 33 35 2d  |-56c6-46f0-8a35-|
              00000090  33 61 65 33 36 35 35 32  37 36 30 63 5c 22 7d 22  |3ae36552760c\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 32 2e 34 39 5c 22 7d  |192.168.62.49\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6z8vr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6z8vr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279877,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279877,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.62.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.62.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832279877,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832279878,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d295cb6192c920a57d722945a63952f748ddcfd37ecaf51f16dd1c4cdec475b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 12:51:22.809: INFO: Pod "test-cleanup-deployment-58dcc84f74-48pzl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-48pzl",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-7939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0638aea-9a60-4d9d-a4fe-8a0b8fef9790",
      ResourceVersion: (string) (len=5) "21213",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832279882,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "721675ce-441a-4717-9491-85070bbe05d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  31 36 37 35 63 65 2d 34  |d\":\"721675ce-4|
              00000090  34 31 61 2d 34 37 31 37  2d 39 34 39 31 2d 38 35  |41a-4717-9491-85|
              000000a0  30 37 30 62 62 65 30 35  64 35 5c 22 7d 22 3a 7b  |070bbe05d5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xdbfx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xdbfx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832279882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 12:51:22.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7939" for this suite. @ 10/07/23 12:51:22.817
â€¢ [5.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 10/07/23 12:51:22.829
  Oct  7 12:51:22.829: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 12:51:22.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:51:22.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:51:22.851
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 12:51:22.854
  STEP: Saw pod success @ 10/07/23 12:51:26.878
  Oct  7 12:51:26.881: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-65141e0d-48ac-4047-beae-d7843aa90851 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 12:51:26.888
  Oct  7 12:51:26.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4029" for this suite. @ 10/07/23 12:51:26.904
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/07/23 12:51:26.912
  Oct  7 12:51:26.912: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/07/23 12:51:26.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:51:26.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:51:26.93
  STEP: mirroring a new custom Endpoint @ 10/07/23 12:51:26.942
  Oct  7 12:51:26.950: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 10/07/23 12:51:28.955
  Oct  7 12:51:28.962: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 10/07/23 12:51:30.967
  Oct  7 12:51:30.978: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Oct  7 12:51:32.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5817" for this suite. @ 10/07/23 12:51:32.985
â€¢ [6.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 10/07/23 12:51:32.993
  Oct  7 12:51:32.993: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-pred @ 10/07/23 12:51:32.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:51:33.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:51:33.01
  Oct  7 12:51:33.013: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct  7 12:51:33.020: INFO: Waiting for terminating namespaces to be deleted...
  Oct  7 12:51:33.022: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-0-122 before test
  Oct  7 12:51:33.026: INFO: nginx-ingress-controller-kubernetes-worker-ndczw from ingress-nginx-kubernetes-worker started at 2023-10-07 12:10:31 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.026: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:51:33.026: INFO: calico-node-s77kx from kube-system started at 2023-10-07 12:09:50 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.026: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:51:33.026: INFO: sonobuoy-e2e-job-71352699346043a1 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:51:33.026: INFO: 	Container e2e ready: true, restart count 0
  Oct  7 12:51:33.026: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:51:33.026: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-fq6js from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:51:33.026: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:51:33.026: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 12:51:33.026: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-221 before test
  Oct  7 12:51:33.030: INFO: nginx-ingress-controller-kubernetes-worker-x6hxp from ingress-nginx-kubernetes-worker started at 2023-10-07 12:06:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.030: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:51:33.030: INFO: calico-node-v7ff9 from kube-system started at 2023-10-07 12:06:03 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.030: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:51:33.030: INFO: sonobuoy from sonobuoy started at 2023-10-07 12:16:32 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.030: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct  7 12:51:33.031: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-nf7ln from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:51:33.031: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:51:33.031: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 12:51:33.031: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-40-4 before test
  Oct  7 12:51:33.036: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvvtf from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: nginx-ingress-controller-kubernetes-worker-44xxd from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: calico-node-z4q47 from kube-system started at 2023-10-07 12:03:53 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: coredns-59cfb5bf46-gn6vc from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container coredns ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: kube-state-metrics-775d9f4f79-k2ppl from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: metrics-server-v0.6.3-69d7fbfdf8-sl9zx from kube-system started at 2023-10-07 12:04:23 +0000 UTC (2 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container metrics-server ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: dashboard-metrics-scraper-5dd7cb5fc-8vd5q from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: kubernetes-dashboard-7b899cb9d9-bcdwj from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-m8dx5 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 12:51:33.036: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 12:51:33.036: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/07/23 12:51:33.036
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/07/23 12:51:35.056
  STEP: Trying to apply a random label on the found node. @ 10/07/23 12:51:35.071
  STEP: verifying the node has the label kubernetes.io/e2e-8d9246bd-f833-4f04-b200-b0984a9716e0 95 @ 10/07/23 12:51:35.078
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/07/23 12:51:35.082
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.31.221 on the node which pod4 resides and expect not scheduled @ 10/07/23 12:51:37.1
  STEP: removing the label kubernetes.io/e2e-8d9246bd-f833-4f04-b200-b0984a9716e0 off the node ip-172-31-31-221 @ 10/07/23 12:56:37.108
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8d9246bd-f833-4f04-b200-b0984a9716e0 @ 10/07/23 12:56:37.121
  Oct  7 12:56:37.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4857" for this suite. @ 10/07/23 12:56:37.13
â€¢ [304.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 10/07/23 12:56:37.136
  Oct  7 12:56:37.136: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:56:37.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:56:37.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:56:37.153
  STEP: Creating configMap with name projected-configmap-test-volume-e65650d3-1b9c-445d-9d46-debc468c1d4b @ 10/07/23 12:56:37.155
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:56:37.159
  STEP: Saw pod success @ 10/07/23 12:56:41.183
  Oct  7 12:56:41.186: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-projected-configmaps-4ec6980c-0de6-477c-929e-ca0679649203 container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:56:41.203
  Oct  7 12:56:41.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4082" for this suite. @ 10/07/23 12:56:41.221
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/07/23 12:56:41.228
  Oct  7 12:56:41.228: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-watch @ 10/07/23 12:56:41.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:56:41.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:56:41.246
  Oct  7 12:56:41.250: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Creating first CR  @ 10/07/23 12:56:43.787
  Oct  7 12:56:43.791: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-07T12:56:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-07T12:56:43Z]] name:name1 resourceVersion:22027 uid:4c7195ef-6727-4ef0-b4b8-032d62b53345] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 10/07/23 12:56:53.793
  Oct  7 12:56:53.799: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-07T12:56:53Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-07T12:56:53Z]] name:name2 resourceVersion:22060 uid:435e95a2-354a-4405-9cd6-faf79d2410c9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 10/07/23 12:57:03.8
  Oct  7 12:57:03.806: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-07T12:56:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-07T12:57:03Z]] name:name1 resourceVersion:22081 uid:4c7195ef-6727-4ef0-b4b8-032d62b53345] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 10/07/23 12:57:13.808
  Oct  7 12:57:13.817: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-07T12:56:53Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-07T12:57:13Z]] name:name2 resourceVersion:22100 uid:435e95a2-354a-4405-9cd6-faf79d2410c9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 10/07/23 12:57:23.817
  Oct  7 12:57:23.828: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-07T12:56:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-07T12:57:03Z]] name:name1 resourceVersion:22121 uid:4c7195ef-6727-4ef0-b4b8-032d62b53345] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 10/07/23 12:57:33.829
  Oct  7 12:57:33.836: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-07T12:56:53Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-07T12:57:13Z]] name:name2 resourceVersion:22141 uid:435e95a2-354a-4405-9cd6-faf79d2410c9] num:map[num1:9223372036854775807 num2:1000000]]}
  Oct  7 12:57:44.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-478" for this suite. @ 10/07/23 12:57:44.356
â€¢ [63.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 10/07/23 12:57:44.363
  Oct  7 12:57:44.363: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:57:44.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:57:44.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:57:44.38
  STEP: Creating a ResourceQuota @ 10/07/23 12:57:44.383
  STEP: Getting a ResourceQuota @ 10/07/23 12:57:44.387
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/07/23 12:57:44.391
  STEP: Patching the ResourceQuota @ 10/07/23 12:57:44.395
  STEP: Deleting a Collection of ResourceQuotas @ 10/07/23 12:57:44.4
  STEP: Verifying the deleted ResourceQuota @ 10/07/23 12:57:44.408
  Oct  7 12:57:44.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3634" for this suite. @ 10/07/23 12:57:44.414
â€¢ [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/07/23 12:57:44.422
  Oct  7 12:57:44.422: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename daemonsets @ 10/07/23 12:57:44.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:57:44.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:57:44.44
  Oct  7 12:57:44.459: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/07/23 12:57:44.464
  Oct  7 12:57:44.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:57:44.466: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/07/23 12:57:44.466
  Oct  7 12:57:44.488: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:57:44.488: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:57:45.492: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:57:45.492: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:57:46.492: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct  7 12:57:46.492: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/07/23 12:57:46.496
  Oct  7 12:57:46.518: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct  7 12:57:46.518: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Oct  7 12:57:47.523: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:57:47.523: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/07/23 12:57:47.523
  Oct  7 12:57:47.535: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:57:47.535: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:57:48.539: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:57:48.539: INFO: Node ip-172-31-40-4 is running 0 daemon pod, expected 1
  Oct  7 12:57:49.538: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct  7 12:57:49.538: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/07/23 12:57:49.547
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2361, will wait for the garbage collector to delete the pods @ 10/07/23 12:57:49.547
  Oct  7 12:57:49.608: INFO: Deleting DaemonSet.extensions daemon-set took: 6.169124ms
  Oct  7 12:57:49.708: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.509763ms
  Oct  7 12:57:51.212: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 12:57:51.212: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct  7 12:57:51.216: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22271"},"items":null}

  Oct  7 12:57:51.219: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22271"},"items":null}

  Oct  7 12:57:51.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2361" for this suite. @ 10/07/23 12:57:51.245
â€¢ [6.832 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 10/07/23 12:57:51.255
  Oct  7 12:57:51.255: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:57:51.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:57:51.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:57:51.273
  STEP: creating service in namespace services-9473 @ 10/07/23 12:57:51.275
  STEP: creating service affinity-clusterip-transition in namespace services-9473 @ 10/07/23 12:57:51.275
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9473 @ 10/07/23 12:57:51.284
  I1007 12:57:51.293500      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-9473, replica count: 3
  I1007 12:57:54.344483      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 12:57:54.352: INFO: Creating new exec pod
  Oct  7 12:57:57.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-9473 exec execpod-affinityjgcfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Oct  7 12:57:57.493: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Oct  7 12:57:57.493: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:57:57.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-9473 exec execpod-affinityjgcfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  Oct  7 12:57:57.631: INFO: stderr: "+ nc -v -t -w 2 10.152.183.126 80\n+ echo hostName\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
  Oct  7 12:57:57.631: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:57:57.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-9473 exec execpod-affinityjgcfr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.126:80/ ; done'
  Oct  7 12:57:57.825: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n"
  Oct  7 12:57:57.825: INFO: stdout: "\naffinity-clusterip-transition-5kb5v\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-5kb5v\naffinity-clusterip-transition-66f58\naffinity-clusterip-transition-5kb5v\naffinity-clusterip-transition-66f58\naffinity-clusterip-transition-66f58\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-5kb5v\naffinity-clusterip-transition-5kb5v"
  Oct  7 12:57:57.825: INFO: Received response from host: affinity-clusterip-transition-5kb5v
  Oct  7 12:57:57.825: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.825: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.825: INFO: Received response from host: affinity-clusterip-transition-5kb5v
  Oct  7 12:57:57.825: INFO: Received response from host: affinity-clusterip-transition-66f58
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-5kb5v
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-66f58
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-66f58
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-5kb5v
  Oct  7 12:57:57.826: INFO: Received response from host: affinity-clusterip-transition-5kb5v
  Oct  7 12:57:57.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-9473 exec execpod-affinityjgcfr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.126:80/ ; done'
  Oct  7 12:57:58.009: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n"
  Oct  7 12:57:58.009: INFO: stdout: "\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx\naffinity-clusterip-transition-f6twx"
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Received response from host: affinity-clusterip-transition-f6twx
  Oct  7 12:57:58.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 12:57:58.013: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9473, will wait for the garbage collector to delete the pods @ 10/07/23 12:57:58.026
  Oct  7 12:57:58.087: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.730407ms
  Oct  7 12:57:58.187: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.533627ms
  STEP: Destroying namespace "services-9473" for this suite. @ 10/07/23 12:58:01.206
â€¢ [9.959 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 10/07/23 12:58:01.214
  Oct  7 12:58:01.214: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:58:01.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:58:01.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:58:01.235
  STEP: Creating configMap with name projected-configmap-test-volume-3224422e-7101-453d-89cd-5dd82c8a6fc4 @ 10/07/23 12:58:01.237
  STEP: Creating a pod to test consume configMaps @ 10/07/23 12:58:01.241
  STEP: Saw pod success @ 10/07/23 12:58:05.263
  Oct  7 12:58:05.266: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-configmaps-e0b79041-806f-4ce0-868d-f3fa314a159c container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 12:58:05.281
  Oct  7 12:58:05.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9387" for this suite. @ 10/07/23 12:58:05.298
â€¢ [4.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 10/07/23 12:58:05.305
  Oct  7 12:58:05.305: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 12:58:05.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:58:05.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:58:05.324
  STEP: creating service in namespace services-4238 @ 10/07/23 12:58:05.326
  STEP: creating service affinity-nodeport in namespace services-4238 @ 10/07/23 12:58:05.326
  STEP: creating replication controller affinity-nodeport in namespace services-4238 @ 10/07/23 12:58:05.344
  I1007 12:58:05.351255      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4238, replica count: 3
  I1007 12:58:08.401948      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 12:58:08.412: INFO: Creating new exec pod
  Oct  7 12:58:11.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4238 exec execpod-affinity5pvnd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Oct  7 12:58:11.552: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Oct  7 12:58:11.552: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:58:11.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4238 exec execpod-affinity5pvnd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.138 80'
  Oct  7 12:58:11.671: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 10.152.183.138 80\nConnection to 10.152.183.138 80 port [tcp/http] succeeded!\n"
  Oct  7 12:58:11.671: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:58:11.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4238 exec execpod-affinity5pvnd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.221 31258'
  Oct  7 12:58:11.799: INFO: stderr: "+ nc -v -t -w 2 172.31.31.221 31258\nConnection to 172.31.31.221 31258 port [tcp/*] succeeded!\n+ echo hostName\n"
  Oct  7 12:58:11.799: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:58:11.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4238 exec execpod-affinity5pvnd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.40.4 31258'
  Oct  7 12:58:11.925: INFO: stderr: "+ nc -v -t -w 2 172.31.40.4 31258\n+ echo hostName\nConnection to 172.31.40.4 31258 port [tcp/*] succeeded!\n"
  Oct  7 12:58:11.925: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 12:58:11.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4238 exec execpod-affinity5pvnd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.122:31258/ ; done'
  Oct  7 12:58:12.141: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.122:31258/\n"
  Oct  7 12:58:12.141: INFO: stdout: "\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd\naffinity-nodeport-w89hd"
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Received response from host: affinity-nodeport-w89hd
  Oct  7 12:58:12.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 12:58:12.144: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4238, will wait for the garbage collector to delete the pods @ 10/07/23 12:58:12.158
  Oct  7 12:58:12.219: INFO: Deleting ReplicationController affinity-nodeport took: 6.63623ms
  Oct  7 12:58:12.320: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.974768ms
  STEP: Destroying namespace "services-4238" for this suite. @ 10/07/23 12:58:15.242
â€¢ [9.943 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 10/07/23 12:58:15.248
  Oct  7 12:58:15.248: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 12:58:15.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:58:15.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:58:15.265
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2235.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2235.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/07/23 12:58:15.268
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2235.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2235.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/07/23 12:58:15.268
  STEP: creating a pod to probe /etc/hosts @ 10/07/23 12:58:15.268
  STEP: submitting the pod to kubernetes @ 10/07/23 12:58:15.268
  STEP: retrieving the pod @ 10/07/23 12:58:17.288
  STEP: looking for the results for each expected name from probers @ 10/07/23 12:58:17.29
  Oct  7 12:58:17.305: INFO: DNS probes using dns-2235/dns-test-4759ea40-be13-4ad3-842a-fe3385c2e990 succeeded

  Oct  7 12:58:17.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 12:58:17.309
  STEP: Destroying namespace "dns-2235" for this suite. @ 10/07/23 12:58:17.322
â€¢ [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 10/07/23 12:58:17.329
  Oct  7 12:58:17.329: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 12:58:17.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:58:17.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:58:17.347
  STEP: Creating a ResourceQuota with best effort scope @ 10/07/23 12:58:17.35
  STEP: Ensuring ResourceQuota status is calculated @ 10/07/23 12:58:17.354
  STEP: Creating a ResourceQuota with not best effort scope @ 10/07/23 12:58:19.358
  STEP: Ensuring ResourceQuota status is calculated @ 10/07/23 12:58:19.361
  STEP: Creating a best-effort pod @ 10/07/23 12:58:21.365
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/07/23 12:58:21.378
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/07/23 12:58:23.383
  STEP: Deleting the pod @ 10/07/23 12:58:25.387
  STEP: Ensuring resource quota status released the pod usage @ 10/07/23 12:58:25.4
  STEP: Creating a not best-effort pod @ 10/07/23 12:58:27.404
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/07/23 12:58:27.413
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/07/23 12:58:29.418
  STEP: Deleting the pod @ 10/07/23 12:58:31.422
  STEP: Ensuring resource quota status released the pod usage @ 10/07/23 12:58:31.434
  Oct  7 12:58:33.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9660" for this suite. @ 10/07/23 12:58:33.442
â€¢ [16.119 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 10/07/23 12:58:33.448
  Oct  7 12:58:33.448: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/07/23 12:58:33.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:58:33.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:58:33.468
  STEP: create the container to handle the HTTPGet hook request. @ 10/07/23 12:58:33.474
  STEP: create the pod with lifecycle hook @ 10/07/23 12:58:35.496
  STEP: check poststart hook @ 10/07/23 12:58:37.513
  STEP: delete the pod with lifecycle hook @ 10/07/23 12:58:37.528
  Oct  7 12:58:39.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4558" for this suite. @ 10/07/23 12:58:39.546
â€¢ [6.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 10/07/23 12:58:39.554
  Oct  7 12:58:39.554: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 12:58:39.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:58:39.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:58:39.57
  STEP: Creating the pod @ 10/07/23 12:58:39.573
  Oct  7 12:58:42.115: INFO: Successfully updated pod "labelsupdate925a0cae-a1e6-474f-a051-75ad897d27ae"
  Oct  7 12:58:44.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-69" for this suite. @ 10/07/23 12:58:44.134
â€¢ [4.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 10/07/23 12:58:44.139
  Oct  7 12:58:44.139: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 12:58:44.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 12:58:44.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 12:58:44.157
  STEP: Creating pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149 @ 10/07/23 12:58:44.16
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 12:58:46.176
  Oct  7 12:58:46.180: INFO: Initial restart count of pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 is 0
  Oct  7 12:58:46.182: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:58:48.187: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:58:50.192: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:58:52.196: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:58:54.199: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:58:56.204: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:58:58.208: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:00.212: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:02.215: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:04.220: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:06.224: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:08.228: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:10.232: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:12.237: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:14.242: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:16.246: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:18.250: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:20.253: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:22.258: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:24.263: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:26.267: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:28.271: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:30.276: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:32.279: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:34.284: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:36.288: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:38.292: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:40.296: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:42.299: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:44.303: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:46.307: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:48.311: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:50.316: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:52.320: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:54.325: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:56.330: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 12:59:58.335: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:00.339: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:02.344: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:04.349: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:06.353: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:08.357: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:10.361: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:12.365: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:14.369: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:16.373: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:18.376: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:20.380: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:22.384: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:24.389: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:26.394: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:28.398: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:30.403: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:32.407: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:34.412: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:36.417: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:38.420: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:40.424: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:42.428: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:44.432: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:46.437: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:48.440: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:50.444: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:52.448: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:54.452: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:56.456: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:00:58.460: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:00.464: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:02.468: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:04.473: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:06.478: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:08.482: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:10.486: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:12.491: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:14.495: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:16.499: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:18.504: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:20.508: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:22.512: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:24.518: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:26.522: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:28.526: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:30.530: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:32.535: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:34.540: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:36.544: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:38.549: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:40.553: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:42.557: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:44.560: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:46.565: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:48.568: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:50.573: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:52.576: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:54.581: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:56.584: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:01:58.590: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:00.594: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:02.599: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:04.603: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:06.607: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:08.612: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:10.615: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:12.620: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:14.625: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:16.630: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:18.634: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:20.639: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:22.646: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:24.650: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:26.654: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:28.658: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:30.662: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:32.666: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:34.670: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:36.675: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:38.680: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:40.683: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:42.687: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:44.691: INFO: Get pod test-webserver-b702bcd0-5b5e-43eb-b8f7-fce0deb53862 in namespace container-probe-1149
  Oct  7 13:02:46.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:02:46.695
  STEP: Destroying namespace "container-probe-1149" for this suite. @ 10/07/23 13:02:46.707
â€¢ [242.575 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 10/07/23 13:02:46.715
  Oct  7 13:02:46.715: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename disruption @ 10/07/23 13:02:46.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:02:46.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:02:46.733
  STEP: Creating a kubernetes client @ 10/07/23 13:02:46.736
  Oct  7 13:02:46.736: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename disruption-2 @ 10/07/23 13:02:46.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:02:46.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:02:46.752
  STEP: Waiting for the pdb to be processed @ 10/07/23 13:02:46.759
  STEP: Waiting for the pdb to be processed @ 10/07/23 13:02:48.771
  STEP: Waiting for the pdb to be processed @ 10/07/23 13:02:48.782
  STEP: listing a collection of PDBs across all namespaces @ 10/07/23 13:02:48.786
  STEP: listing a collection of PDBs in namespace disruption-8654 @ 10/07/23 13:02:48.789
  STEP: deleting a collection of PDBs @ 10/07/23 13:02:48.793
  STEP: Waiting for the PDB collection to be deleted @ 10/07/23 13:02:48.805
  Oct  7 13:02:48.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 13:02:48.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3425" for this suite. @ 10/07/23 13:02:48.814
  STEP: Destroying namespace "disruption-8654" for this suite. @ 10/07/23 13:02:48.82
â€¢ [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 10/07/23 13:02:48.829
  Oct  7 13:02:48.829: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replicaset @ 10/07/23 13:02:48.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:02:48.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:02:48.852
  STEP: Create a Replicaset @ 10/07/23 13:02:48.858
  STEP: Verify that the required pods have come up. @ 10/07/23 13:02:48.863
  Oct  7 13:02:48.866: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct  7 13:02:53.873: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/07/23 13:02:53.873
  STEP: Getting /status @ 10/07/23 13:02:53.873
  Oct  7 13:02:53.879: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/07/23 13:02:53.879
  Oct  7 13:02:53.889: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/07/23 13:02:53.889
  Oct  7 13:02:53.892: INFO: Observed &ReplicaSet event: ADDED
  Oct  7 13:02:53.892: INFO: Observed &ReplicaSet event: MODIFIED
  Oct  7 13:02:53.892: INFO: Observed &ReplicaSet event: MODIFIED
  Oct  7 13:02:53.892: INFO: Observed &ReplicaSet event: MODIFIED
  Oct  7 13:02:53.892: INFO: Found replicaset test-rs in namespace replicaset-4114 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct  7 13:02:53.892: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/07/23 13:02:53.893
  Oct  7 13:02:53.893: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct  7 13:02:53.901: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/07/23 13:02:53.901
  Oct  7 13:02:53.905: INFO: Observed &ReplicaSet event: ADDED
  Oct  7 13:02:53.905: INFO: Observed &ReplicaSet event: MODIFIED
  Oct  7 13:02:53.905: INFO: Observed &ReplicaSet event: MODIFIED
  Oct  7 13:02:53.905: INFO: Observed &ReplicaSet event: MODIFIED
  Oct  7 13:02:53.905: INFO: Observed replicaset test-rs in namespace replicaset-4114 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct  7 13:02:53.905: INFO: Observed &ReplicaSet event: MODIFIED
  Oct  7 13:02:53.905: INFO: Found replicaset test-rs in namespace replicaset-4114 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Oct  7 13:02:53.905: INFO: Replicaset test-rs has a patched status
  Oct  7 13:02:53.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4114" for this suite. @ 10/07/23 13:02:53.91
â€¢ [5.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/07/23 13:02:53.919
  Oct  7 13:02:53.919: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 13:02:53.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:02:53.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:02:53.94
  STEP: Creating secret with name secret-test-map-4a04181d-7175-4fad-8c3e-ee3d500d82fc @ 10/07/23 13:02:53.943
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:02:53.947
  STEP: Saw pod success @ 10/07/23 13:02:57.972
  Oct  7 13:02:57.975: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-secrets-daa6e577-4964-44dc-be85-de3113b404fc container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:02:57.986
  Oct  7 13:02:58.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7920" for this suite. @ 10/07/23 13:02:58.004
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 10/07/23 13:02:58.011
  Oct  7 13:02:58.011: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:02:58.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:02:58.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:02:58.03
  STEP: validating api versions @ 10/07/23 13:02:58.032
  Oct  7 13:02:58.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-8285 api-versions'
  Oct  7 13:02:58.078: INFO: stderr: ""
  Oct  7 13:02:58.078: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Oct  7 13:02:58.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8285" for this suite. @ 10/07/23 13:02:58.083
â€¢ [0.078 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 10/07/23 13:02:58.089
  Oct  7 13:02:58.089: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename server-version @ 10/07/23 13:02:58.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:02:58.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:02:58.106
  STEP: Request ServerVersion @ 10/07/23 13:02:58.109
  STEP: Confirm major version @ 10/07/23 13:02:58.11
  Oct  7 13:02:58.110: INFO: Major version: 1
  STEP: Confirm minor version @ 10/07/23 13:02:58.11
  Oct  7 13:02:58.110: INFO: cleanMinorVersion: 28
  Oct  7 13:02:58.110: INFO: Minor version: 28
  Oct  7 13:02:58.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1060" for this suite. @ 10/07/23 13:02:58.113
â€¢ [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/07/23 13:02:58.119
  Oct  7 13:02:58.119: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename daemonsets @ 10/07/23 13:02:58.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:02:58.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:02:58.136
  Oct  7 13:02:58.158: INFO: Create a RollingUpdate DaemonSet
  Oct  7 13:02:58.162: INFO: Check that daemon pods launch on every node of the cluster
  Oct  7 13:02:58.165: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:02:58.165: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:02:58.168: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:02:58.168: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 13:02:59.172: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:02:59.172: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:02:59.176: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:02:59.176: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  Oct  7 13:03:00.174: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:03:00.174: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:03:00.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 13:03:00.178: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Oct  7 13:03:00.178: INFO: Update the DaemonSet to trigger a rollout
  Oct  7 13:03:00.189: INFO: Updating DaemonSet daemon-set
  Oct  7 13:03:01.205: INFO: Roll back the DaemonSet before rollout is complete
  Oct  7 13:03:01.214: INFO: Updating DaemonSet daemon-set
  Oct  7 13:03:01.214: INFO: Make sure DaemonSet rollback is complete
  Oct  7 13:03:01.218: INFO: Wrong image for pod: daemon-set-d8ll7. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Oct  7 13:03:01.218: INFO: Pod daemon-set-d8ll7 is not available
  Oct  7 13:03:01.221: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:03:01.221: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:03:02.228: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:03:02.228: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:03:03.227: INFO: Pod daemon-set-9mkrr is not available
  Oct  7 13:03:03.230: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:03:03.230: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/07/23 13:03:03.24
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8021, will wait for the garbage collector to delete the pods @ 10/07/23 13:03:03.24
  Oct  7 13:03:03.304: INFO: Deleting DaemonSet.extensions daemon-set took: 8.866474ms
  Oct  7 13:03:03.404: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.074197ms
  Oct  7 13:03:04.708: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:03:04.708: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct  7 13:03:04.711: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23713"},"items":null}

  Oct  7 13:03:04.714: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23713"},"items":null}

  Oct  7 13:03:04.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8021" for this suite. @ 10/07/23 13:03:04.73
â€¢ [6.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 10/07/23 13:03:04.737
  Oct  7 13:03:04.737: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 13:03:04.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:03:04.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:03:04.756
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/07/23 13:03:04.759
  STEP: Saw pod success @ 10/07/23 13:03:08.778
  Oct  7 13:03:08.781: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-549b19f7-9825-4b3b-b5a1-9042ff2bef5d container test-container: <nil>
  STEP: delete the pod @ 10/07/23 13:03:08.79
  Oct  7 13:03:08.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4518" for this suite. @ 10/07/23 13:03:08.806
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/07/23 13:03:08.812
  Oct  7 13:03:08.812: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 13:03:08.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:03:08.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:03:08.829
  Oct  7 13:03:08.831: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: creating the pod @ 10/07/23 13:03:08.832
  STEP: submitting the pod to kubernetes @ 10/07/23 13:03:08.832
  Oct  7 13:03:10.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-289" for this suite. @ 10/07/23 13:03:10.933
â€¢ [2.127 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 10/07/23 13:03:10.939
  Oct  7 13:03:10.939: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 13:03:10.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:03:10.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:03:10.958
  STEP: Creating secret with name secret-test-548a0162-d133-44ad-9a48-09fd20a814ad @ 10/07/23 13:03:10.961
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:03:10.965
  STEP: Saw pod success @ 10/07/23 13:03:14.987
  Oct  7 13:03:14.990: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-secrets-a04d8eb0-fed7-4c6b-bc92-e061fc823cb0 container secret-env-test: <nil>
  STEP: delete the pod @ 10/07/23 13:03:15.006
  Oct  7 13:03:15.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3553" for this suite. @ 10/07/23 13:03:15.021
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 10/07/23 13:03:15.028
  Oct  7 13:03:15.028: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 13:03:15.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:03:15.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:03:15.044
  STEP: Setting up server cert @ 10/07/23 13:03:15.067
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 13:03:15.291
  STEP: Deploying the webhook pod @ 10/07/23 13:03:15.299
  STEP: Wait for the deployment to be ready @ 10/07/23 13:03:15.311
  Oct  7 13:03:15.318: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/07/23 13:03:17.328
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 13:03:17.34
  Oct  7 13:03:18.340: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/07/23 13:03:18.401
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/07/23 13:03:18.44
  STEP: Deleting the collection of validation webhooks @ 10/07/23 13:03:18.48
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/07/23 13:03:18.545
  Oct  7 13:03:18.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9749" for this suite. @ 10/07/23 13:03:18.608
  STEP: Destroying namespace "webhook-markers-7757" for this suite. @ 10/07/23 13:03:18.619
â€¢ [3.599 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/07/23 13:03:18.628
  Oct  7 13:03:18.628: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubelet-test @ 10/07/23 13:03:18.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:03:18.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:03:18.646
  Oct  7 13:03:22.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8479" for this suite. @ 10/07/23 13:03:22.672
â€¢ [4.050 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 10/07/23 13:03:22.678
  Oct  7 13:03:22.678: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:03:22.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:03:22.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:03:22.697
  STEP: validating cluster-info @ 10/07/23 13:03:22.699
  Oct  7 13:03:22.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-6937 cluster-info'
  Oct  7 13:03:22.746: INFO: stderr: ""
  Oct  7 13:03:22.746: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Oct  7 13:03:22.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6937" for this suite. @ 10/07/23 13:03:22.75
â€¢ [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/07/23 13:03:22.756
  Oct  7 13:03:22.757: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename cronjob @ 10/07/23 13:03:22.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:03:22.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:03:22.774
  STEP: Creating a ForbidConcurrent cronjob @ 10/07/23 13:03:22.776
  STEP: Ensuring a job is scheduled @ 10/07/23 13:03:22.781
  STEP: Ensuring exactly one is scheduled @ 10/07/23 13:04:00.785
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/07/23 13:04:00.788
  STEP: Ensuring no more jobs are scheduled @ 10/07/23 13:04:00.792
  STEP: Removing cronjob @ 10/07/23 13:09:00.799
  Oct  7 13:09:00.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7582" for this suite. @ 10/07/23 13:09:00.81
â€¢ [338.060 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 10/07/23 13:09:00.816
  Oct  7 13:09:00.816: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:09:00.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:09:00.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:09:00.854
  STEP: creating the pod @ 10/07/23 13:09:00.862
  Oct  7 13:09:00.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 create -f -'
  Oct  7 13:09:01.034: INFO: stderr: ""
  Oct  7 13:09:01.034: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/07/23 13:09:03.044
  Oct  7 13:09:03.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 label pods pause testing-label=testing-label-value'
  Oct  7 13:09:03.101: INFO: stderr: ""
  Oct  7 13:09:03.101: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/07/23 13:09:03.101
  Oct  7 13:09:03.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 get pod pause -L testing-label'
  Oct  7 13:09:03.151: INFO: stderr: ""
  Oct  7 13:09:03.151: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/07/23 13:09:03.151
  Oct  7 13:09:03.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 label pods pause testing-label-'
  Oct  7 13:09:03.207: INFO: stderr: ""
  Oct  7 13:09:03.207: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/07/23 13:09:03.207
  Oct  7 13:09:03.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 get pod pause -L testing-label'
  Oct  7 13:09:03.256: INFO: stderr: ""
  Oct  7 13:09:03.256: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/07/23 13:09:03.256
  Oct  7 13:09:03.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 delete --grace-period=0 --force -f -'
  Oct  7 13:09:03.315: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 13:09:03.315: INFO: stdout: "pod \"pause\" force deleted\n"
  Oct  7 13:09:03.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 get rc,svc -l name=pause --no-headers'
  Oct  7 13:09:03.371: INFO: stderr: "No resources found in kubectl-3865 namespace.\n"
  Oct  7 13:09:03.371: INFO: stdout: ""
  Oct  7 13:09:03.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3865 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct  7 13:09:03.418: INFO: stderr: ""
  Oct  7 13:09:03.418: INFO: stdout: ""
  Oct  7 13:09:03.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3865" for this suite. @ 10/07/23 13:09:03.421
â€¢ [2.612 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 10/07/23 13:09:03.429
  Oct  7 13:09:03.429: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename taint-single-pod @ 10/07/23 13:09:03.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:09:03.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:09:03.445
  Oct  7 13:09:03.448: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct  7 13:10:03.478: INFO: Waiting for terminating namespaces to be deleted...
  Oct  7 13:10:03.483: INFO: Starting informer...
  STEP: Starting pod... @ 10/07/23 13:10:03.483
  Oct  7 13:10:03.704: INFO: Pod is running on ip-172-31-31-221. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/07/23 13:10:03.704
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/07/23 13:10:03.715
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/07/23 13:10:03.719
  Oct  7 13:10:03.719: INFO: Pod wasn't evicted. Proceeding
  Oct  7 13:10:03.719: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/07/23 13:10:03.756
  STEP: Waiting some time to make sure that toleration time passed. @ 10/07/23 13:10:03.762
  Oct  7 13:11:18.764: INFO: Pod wasn't evicted. Test successful
  Oct  7 13:11:18.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2923" for this suite. @ 10/07/23 13:11:18.769
â€¢ [135.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 10/07/23 13:11:18.778
  Oct  7 13:11:18.778: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:11:18.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:11:18.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:11:18.796
  STEP: creating Agnhost RC @ 10/07/23 13:11:18.799
  Oct  7 13:11:18.799: INFO: namespace kubectl-1823
  Oct  7 13:11:18.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1823 create -f -'
  Oct  7 13:11:18.948: INFO: stderr: ""
  Oct  7 13:11:18.948: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/07/23 13:11:18.948
  Oct  7 13:11:19.953: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:11:19.953: INFO: Found 0 / 1
  Oct  7 13:11:20.953: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:11:20.953: INFO: Found 1 / 1
  Oct  7 13:11:20.953: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct  7 13:11:20.957: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:11:20.957: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct  7 13:11:20.957: INFO: wait on agnhost-primary startup in kubectl-1823 
  Oct  7 13:11:20.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1823 logs agnhost-primary-cvp9j agnhost-primary'
  Oct  7 13:11:21.022: INFO: stderr: ""
  Oct  7 13:11:21.022: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 10/07/23 13:11:21.022
  Oct  7 13:11:21.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1823 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Oct  7 13:11:21.085: INFO: stderr: ""
  Oct  7 13:11:21.085: INFO: stdout: "service/rm2 exposed\n"
  Oct  7 13:11:21.092: INFO: Service rm2 in namespace kubectl-1823 found.
  STEP: exposing service @ 10/07/23 13:11:23.098
  Oct  7 13:11:23.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-1823 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Oct  7 13:11:23.158: INFO: stderr: ""
  Oct  7 13:11:23.158: INFO: stdout: "service/rm3 exposed\n"
  Oct  7 13:11:23.163: INFO: Service rm3 in namespace kubectl-1823 found.
  Oct  7 13:11:25.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1823" for this suite. @ 10/07/23 13:11:25.172
â€¢ [6.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/07/23 13:11:25.183
  Oct  7 13:11:25.183: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename watch @ 10/07/23 13:11:25.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:11:25.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:11:25.198
  STEP: creating a new configmap @ 10/07/23 13:11:25.2
  STEP: modifying the configmap once @ 10/07/23 13:11:25.204
  STEP: modifying the configmap a second time @ 10/07/23 13:11:25.212
  STEP: deleting the configmap @ 10/07/23 13:11:25.218
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/07/23 13:11:25.224
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/07/23 13:11:25.226
  Oct  7 13:11:25.226: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-592  7e9c79c4-ba60-4ee8-b008-64a3d0955a0d 25163 0 2023-10-07 13:11:25 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-07 13:11:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:11:25.226: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-592  7e9c79c4-ba60-4ee8-b008-64a3d0955a0d 25164 0 2023-10-07 13:11:25 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-07 13:11:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:11:25.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-592" for this suite. @ 10/07/23 13:11:25.23
â€¢ [0.054 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 10/07/23 13:11:25.237
  Oct  7 13:11:25.237: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:11:25.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:11:25.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:11:25.254
  STEP: Creating configMap with name configmap-test-volume-2bb782eb-85dd-4b47-955a-37717117a2d2 @ 10/07/23 13:11:25.257
  STEP: Creating a pod to test consume configMaps @ 10/07/23 13:11:25.261
  STEP: Saw pod success @ 10/07/23 13:11:27.279
  Oct  7 13:11:27.282: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-configmaps-e1f4e9b3-b856-440a-b1e2-f077f4bce6dc container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 13:11:27.298
  Oct  7 13:11:27.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2409" for this suite. @ 10/07/23 13:11:27.318
â€¢ [2.085 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/07/23 13:11:27.323
  Oct  7 13:11:27.323: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename containers @ 10/07/23 13:11:27.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:11:27.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:11:27.344
  STEP: Creating a pod to test override command @ 10/07/23 13:11:27.349
  STEP: Saw pod success @ 10/07/23 13:11:31.369
  Oct  7 13:11:31.373: INFO: Trying to get logs from node ip-172-31-31-221 pod client-containers-f9c4ebe0-4c2c-404c-85d4-fa77489af997 container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 13:11:31.385
  Oct  7 13:11:31.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4653" for this suite. @ 10/07/23 13:11:31.402
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 10/07/23 13:11:31.411
  Oct  7 13:11:31.411: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/07/23 13:11:31.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:11:31.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:11:31.427
  STEP: fetching the /apis discovery document @ 10/07/23 13:11:31.431
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/07/23 13:11:31.432
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/07/23 13:11:31.432
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/07/23 13:11:31.432
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/07/23 13:11:31.433
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/07/23 13:11:31.433
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/07/23 13:11:31.434
  Oct  7 13:11:31.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4363" for this suite. @ 10/07/23 13:11:31.438
â€¢ [0.035 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 10/07/23 13:11:31.445
  Oct  7 13:11:31.445: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:11:31.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:11:31.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:11:31.462
  STEP: Creating configMap with name cm-test-opt-del-64da17b0-15a1-49a3-8d5e-3bf48c7ced58 @ 10/07/23 13:11:31.47
  STEP: Creating configMap with name cm-test-opt-upd-a0300c6c-6c84-4c61-80ba-3feabf70d4de @ 10/07/23 13:11:31.474
  STEP: Creating the pod @ 10/07/23 13:11:31.478
  STEP: Deleting configmap cm-test-opt-del-64da17b0-15a1-49a3-8d5e-3bf48c7ced58 @ 10/07/23 13:11:33.517
  STEP: Updating configmap cm-test-opt-upd-a0300c6c-6c84-4c61-80ba-3feabf70d4de @ 10/07/23 13:11:33.522
  STEP: Creating configMap with name cm-test-opt-create-c977028a-a884-45f4-8c3e-4f510c7af40a @ 10/07/23 13:11:33.526
  STEP: waiting to observe update in volume @ 10/07/23 13:11:33.53
  Oct  7 13:11:37.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2711" for this suite. @ 10/07/23 13:11:37.566
â€¢ [6.126 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/07/23 13:11:37.573
  Oct  7 13:11:37.573: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename subpath @ 10/07/23 13:11:37.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:11:37.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:11:37.59
  STEP: Setting up data @ 10/07/23 13:11:37.596
  STEP: Creating pod pod-subpath-test-secret-gv5g @ 10/07/23 13:11:37.603
  STEP: Creating a pod to test atomic-volume-subpath @ 10/07/23 13:11:37.603
  STEP: Saw pod success @ 10/07/23 13:12:01.668
  Oct  7 13:12:01.672: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-subpath-test-secret-gv5g container test-container-subpath-secret-gv5g: <nil>
  STEP: delete the pod @ 10/07/23 13:12:01.678
  STEP: Deleting pod pod-subpath-test-secret-gv5g @ 10/07/23 13:12:01.693
  Oct  7 13:12:01.693: INFO: Deleting pod "pod-subpath-test-secret-gv5g" in namespace "subpath-2131"
  Oct  7 13:12:01.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2131" for this suite. @ 10/07/23 13:12:01.7
â€¢ [24.133 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 10/07/23 13:12:01.706
  Oct  7 13:12:01.706: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename gc @ 10/07/23 13:12:01.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:12:01.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:12:01.725
  STEP: create the rc @ 10/07/23 13:12:01.727
  W1007 13:12:01.731885      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/07/23 13:12:06.736
  STEP: wait for all pods to be garbage collected @ 10/07/23 13:12:06.742
  STEP: Gathering metrics @ 10/07/23 13:12:11.749
  W1007 13:12:11.753303      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct  7 13:12:11.753: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct  7 13:12:11.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2162" for this suite. @ 10/07/23 13:12:11.757
â€¢ [10.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 10/07/23 13:12:11.764
  Oct  7 13:12:11.764: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replication-controller @ 10/07/23 13:12:11.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:12:11.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:12:11.784
  STEP: creating a ReplicationController @ 10/07/23 13:12:11.79
  STEP: waiting for RC to be added @ 10/07/23 13:12:11.795
  STEP: waiting for available Replicas @ 10/07/23 13:12:11.795
  STEP: patching ReplicationController @ 10/07/23 13:12:13.369
  STEP: waiting for RC to be modified @ 10/07/23 13:12:13.375
  STEP: patching ReplicationController status @ 10/07/23 13:12:13.378
  STEP: waiting for RC to be modified @ 10/07/23 13:12:13.383
  STEP: waiting for available Replicas @ 10/07/23 13:12:13.385
  STEP: fetching ReplicationController status @ 10/07/23 13:12:13.39
  STEP: patching ReplicationController scale @ 10/07/23 13:12:13.393
  STEP: waiting for RC to be modified @ 10/07/23 13:12:13.399
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/07/23 13:12:13.399
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/07/23 13:12:15.086
  STEP: updating ReplicationController status @ 10/07/23 13:12:15.09
  STEP: waiting for RC to be modified @ 10/07/23 13:12:15.094
  STEP: listing all ReplicationControllers @ 10/07/23 13:12:15.095
  STEP: checking that ReplicationController has expected values @ 10/07/23 13:12:15.098
  STEP: deleting ReplicationControllers by collection @ 10/07/23 13:12:15.098
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/07/23 13:12:15.106
  Oct  7 13:12:15.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1007 13:12:15.136006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7341" for this suite. @ 10/07/23 13:12:15.139
â€¢ [3.380 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 10/07/23 13:12:15.145
  Oct  7 13:12:15.145: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 13:12:15.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:12:15.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:12:15.163
  STEP: Creating a pod to test downward api env vars @ 10/07/23 13:12:15.168
  E1007 13:12:16.136895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:17.136978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:18.137073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:19.137749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:12:19.191
  Oct  7 13:12:19.195: INFO: Trying to get logs from node ip-172-31-31-221 pod downward-api-df3b5cce-b8e6-461a-a1fd-22aa6c30a0a8 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 13:12:19.201
  Oct  7 13:12:19.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8486" for this suite. @ 10/07/23 13:12:19.218
â€¢ [4.080 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/07/23 13:12:19.225
  Oct  7 13:12:19.225: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/07/23 13:12:19.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:12:19.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:12:19.243
  STEP: Creating 50 configmaps @ 10/07/23 13:12:19.245
  STEP: Creating RC which spawns configmap-volume pods @ 10/07/23 13:12:19.481
  Oct  7 13:12:19.610: INFO: Pod name wrapped-volume-race-84b8562b-6dd2-4a9b-a134-01439d657ac8: Found 4 pods out of 5
  E1007 13:12:20.138459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:21.138540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:22.138725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:23.138810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:24.138978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:12:24.614: INFO: Pod name wrapped-volume-race-84b8562b-6dd2-4a9b-a134-01439d657ac8: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/07/23 13:12:24.614
  STEP: Creating RC which spawns configmap-volume pods @ 10/07/23 13:12:24.634
  Oct  7 13:12:24.646: INFO: Pod name wrapped-volume-race-b8b46908-03f7-49e3-90ec-b3b0f809764d: Found 0 pods out of 5
  E1007 13:12:25.139221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:26.139905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:27.140094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:28.140173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:29.140336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:12:29.651: INFO: Pod name wrapped-volume-race-b8b46908-03f7-49e3-90ec-b3b0f809764d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/07/23 13:12:29.651
  STEP: Creating RC which spawns configmap-volume pods @ 10/07/23 13:12:29.672
  Oct  7 13:12:29.687: INFO: Pod name wrapped-volume-race-075827f0-9976-44ac-988c-7e6db8a1535c: Found 0 pods out of 5
  E1007 13:12:30.140485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:31.140589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:32.141546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:33.141736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:34.141825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:12:34.693: INFO: Pod name wrapped-volume-race-075827f0-9976-44ac-988c-7e6db8a1535c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/07/23 13:12:34.693
  Oct  7 13:12:34.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-075827f0-9976-44ac-988c-7e6db8a1535c in namespace emptydir-wrapper-5691, will wait for the garbage collector to delete the pods @ 10/07/23 13:12:34.713
  Oct  7 13:12:34.773: INFO: Deleting ReplicationController wrapped-volume-race-075827f0-9976-44ac-988c-7e6db8a1535c took: 5.824772ms
  Oct  7 13:12:34.874: INFO: Terminating ReplicationController wrapped-volume-race-075827f0-9976-44ac-988c-7e6db8a1535c pods took: 100.961319ms
  E1007 13:12:35.141989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b8b46908-03f7-49e3-90ec-b3b0f809764d in namespace emptydir-wrapper-5691, will wait for the garbage collector to delete the pods @ 10/07/23 13:12:36.075
  Oct  7 13:12:36.136: INFO: Deleting ReplicationController wrapped-volume-race-b8b46908-03f7-49e3-90ec-b3b0f809764d took: 6.443426ms
  E1007 13:12:36.142427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:12:36.237: INFO: Terminating ReplicationController wrapped-volume-race-b8b46908-03f7-49e3-90ec-b3b0f809764d pods took: 100.747695ms
  E1007 13:12:37.143296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-84b8562b-6dd2-4a9b-a134-01439d657ac8 in namespace emptydir-wrapper-5691, will wait for the garbage collector to delete the pods @ 10/07/23 13:12:37.337
  Oct  7 13:12:37.398: INFO: Deleting ReplicationController wrapped-volume-race-84b8562b-6dd2-4a9b-a134-01439d657ac8 took: 6.327632ms
  Oct  7 13:12:37.498: INFO: Terminating ReplicationController wrapped-volume-race-84b8562b-6dd2-4a9b-a134-01439d657ac8 pods took: 100.138757ms
  E1007 13:12:38.143325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/07/23 13:12:38.699
  STEP: Destroying namespace "emptydir-wrapper-5691" for this suite. @ 10/07/23 13:12:38.979
â€¢ [19.760 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 10/07/23 13:12:38.986
  Oct  7 13:12:38.986: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replication-controller @ 10/07/23 13:12:38.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:12:38.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:12:39.001
  STEP: Creating replication controller my-hostname-basic-239fb186-6f50-4977-8d89-3ce8377a515e @ 10/07/23 13:12:39.004
  Oct  7 13:12:39.013: INFO: Pod name my-hostname-basic-239fb186-6f50-4977-8d89-3ce8377a515e: Found 0 pods out of 1
  E1007 13:12:39.143698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:40.144063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:41.145055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:42.145150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:43.145652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:12:44.016: INFO: Pod name my-hostname-basic-239fb186-6f50-4977-8d89-3ce8377a515e: Found 1 pods out of 1
  Oct  7 13:12:44.016: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-239fb186-6f50-4977-8d89-3ce8377a515e" are running
  Oct  7 13:12:44.019: INFO: Pod "my-hostname-basic-239fb186-6f50-4977-8d89-3ce8377a515e-zbgp4" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 13:12:39 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 13:12:40 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 13:12:40 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-07 13:12:39 +0000 UTC Reason: Message:}])
  Oct  7 13:12:44.019: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/07/23 13:12:44.019
  Oct  7 13:12:44.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1493" for this suite. @ 10/07/23 13:12:44.033
â€¢ [5.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/07/23 13:12:44.041
  Oct  7 13:12:44.041: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 13:12:44.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:12:44.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:12:44.059
  STEP: creating the pod @ 10/07/23 13:12:44.062
  STEP: setting up watch @ 10/07/23 13:12:44.062
  E1007 13:12:44.146685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 10/07/23 13:12:44.167
  STEP: verifying the pod is in kubernetes @ 10/07/23 13:12:44.175
  STEP: verifying pod creation was observed @ 10/07/23 13:12:44.186
  E1007 13:12:45.146817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:46.146911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/07/23 13:12:46.203
  STEP: verifying pod deletion was observed @ 10/07/23 13:12:46.212
  E1007 13:12:47.147649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:12:47.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3799" for this suite. @ 10/07/23 13:12:47.188
â€¢ [3.152 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/07/23 13:12:47.194
  Oct  7 13:12:47.194: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:12:47.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:12:47.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:12:47.212
  STEP: Creating secret with name s-test-opt-del-67645da6-2a38-4f7a-91b5-4c69184fca83 @ 10/07/23 13:12:47.218
  STEP: Creating secret with name s-test-opt-upd-ecd404cd-4ba6-48aa-888e-5881ede2e99d @ 10/07/23 13:12:47.223
  STEP: Creating the pod @ 10/07/23 13:12:47.226
  E1007 13:12:48.147747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:49.147840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-67645da6-2a38-4f7a-91b5-4c69184fca83 @ 10/07/23 13:12:49.269
  STEP: Updating secret s-test-opt-upd-ecd404cd-4ba6-48aa-888e-5881ede2e99d @ 10/07/23 13:12:49.275
  STEP: Creating secret with name s-test-opt-create-cbb4a153-5fb6-45a9-b3f9-a3668cadc5e8 @ 10/07/23 13:12:49.281
  STEP: waiting to observe update in volume @ 10/07/23 13:12:49.285
  E1007 13:12:50.148239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:51.148479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:52.149480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:53.149566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:54.149636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:55.149745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:56.150013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:57.150197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:58.150282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:12:59.150347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:00.151430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:01.151533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:02.151647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:03.151855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:04.151984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:05.152068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:06.152145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:07.152241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:08.152559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:09.152648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:10.152747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:11.152823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:12.152912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:13.153635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:14.153975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:15.154069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:16.154346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:17.154450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:18.154517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:19.154628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:20.155568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:21.155716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:22.155812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:23.155874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:24.155994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:25.156064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:26.157042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:27.157123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:28.158107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:29.158638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:30.158873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:31.159613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:32.159778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:33.159951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:34.159996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:35.160146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:36.161115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:37.161536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:38.161633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:39.162313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:40.162931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:41.163719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:42.163805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:43.164141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:44.165135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:45.165225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:46.165412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:47.165584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:48.166442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:49.166531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:50.167597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:51.167763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:52.167857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:53.168808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:54.169537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:55.169635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:56.169679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:57.169851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:58.170673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:13:59.170764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:00.170868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:01.171290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:01.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5653" for this suite. @ 10/07/23 13:14:01.591
â€¢ [74.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/07/23 13:14:01.6
  Oct  7 13:14:01.600: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 13:14:01.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:01.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:01.62
  STEP: creating pod @ 10/07/23 13:14:01.623
  E1007 13:14:02.171390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:03.172324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:03.645: INFO: Pod pod-hostip-f53f7ba6-f25e-48e3-a1b2-2ca160f05738 has hostIP: 172.31.31.221
  Oct  7 13:14:03.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5656" for this suite. @ 10/07/23 13:14:03.649
â€¢ [2.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 10/07/23 13:14:03.655
  Oct  7 13:14:03.656: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename security-context-test @ 10/07/23 13:14:03.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:03.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:03.674
  E1007 13:14:04.173113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:05.174072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:06.174156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:07.174613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:07.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8070" for this suite. @ 10/07/23 13:14:07.701
â€¢ [4.052 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 10/07/23 13:14:07.708
  Oct  7 13:14:07.708: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 13:14:07.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:07.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:07.725
  STEP: Creating a pod to test downward api env vars @ 10/07/23 13:14:07.727
  E1007 13:14:08.174718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:09.174908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:10.175392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:11.176398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:14:11.75
  Oct  7 13:14:11.752: INFO: Trying to get logs from node ip-172-31-0-122 pod downward-api-f2e863d9-1232-464a-a105-b241508d9a09 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 13:14:11.76
  Oct  7 13:14:11.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2830" for this suite. @ 10/07/23 13:14:11.78
â€¢ [4.077 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 10/07/23 13:14:11.786
  Oct  7 13:14:11.786: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 13:14:11.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:11.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:11.804
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:14:11.806
  E1007 13:14:12.177088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:13.177566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:14.177646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:15.177732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:14:15.828
  Oct  7 13:14:15.831: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-0302d190-7f03-4dd5-b38b-4e584fe58b45 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:14:15.843
  Oct  7 13:14:15.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6685" for this suite. @ 10/07/23 13:14:15.861
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/07/23 13:14:15.87
  Oct  7 13:14:15.870: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename proxy @ 10/07/23 13:14:15.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:15.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:15.891
  Oct  7 13:14:15.896: INFO: Creating pod...
  E1007 13:14:16.178813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:17.178876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:17.915: INFO: Creating service...
  Oct  7 13:14:17.926: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/pods/agnhost/proxy?method=DELETE
  Oct  7 13:14:17.938: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct  7 13:14:17.938: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/pods/agnhost/proxy?method=OPTIONS
  Oct  7 13:14:17.941: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct  7 13:14:17.942: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/pods/agnhost/proxy?method=PATCH
  Oct  7 13:14:17.945: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct  7 13:14:17.945: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/pods/agnhost/proxy?method=POST
  Oct  7 13:14:17.949: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct  7 13:14:17.949: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/pods/agnhost/proxy?method=PUT
  Oct  7 13:14:17.952: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct  7 13:14:17.952: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/services/e2e-proxy-test-service/proxy?method=DELETE
  Oct  7 13:14:17.958: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct  7 13:14:17.958: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Oct  7 13:14:17.962: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct  7 13:14:17.962: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/services/e2e-proxy-test-service/proxy?method=PATCH
  Oct  7 13:14:17.967: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct  7 13:14:17.967: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/services/e2e-proxy-test-service/proxy?method=POST
  Oct  7 13:14:17.972: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct  7 13:14:17.972: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/services/e2e-proxy-test-service/proxy?method=PUT
  Oct  7 13:14:17.977: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct  7 13:14:17.977: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/pods/agnhost/proxy?method=GET
  Oct  7 13:14:17.979: INFO: http.Client request:GET StatusCode:301
  Oct  7 13:14:17.979: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/services/e2e-proxy-test-service/proxy?method=GET
  Oct  7 13:14:17.984: INFO: http.Client request:GET StatusCode:301
  Oct  7 13:14:17.984: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/pods/agnhost/proxy?method=HEAD
  Oct  7 13:14:17.988: INFO: http.Client request:HEAD StatusCode:301
  Oct  7 13:14:17.988: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4368/services/e2e-proxy-test-service/proxy?method=HEAD
  Oct  7 13:14:17.993: INFO: http.Client request:HEAD StatusCode:301
  Oct  7 13:14:17.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4368" for this suite. @ 10/07/23 13:14:17.997
â€¢ [2.132 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 10/07/23 13:14:18.002
  Oct  7 13:14:18.002: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename daemonsets @ 10/07/23 13:14:18.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:18.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:18.021
  STEP: Creating simple DaemonSet "daemon-set" @ 10/07/23 13:14:18.042
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/07/23 13:14:18.047
  Oct  7 13:14:18.052: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:14:18.052: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:14:18.055: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:14:18.055: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  E1007 13:14:18.179473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:19.071: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:14:19.071: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:14:19.076: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct  7 13:14:19.076: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  E1007 13:14:19.179938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:20.059: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:14:20.059: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:14:20.062: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 13:14:20.062: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/07/23 13:14:20.065
  Oct  7 13:14:20.068: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/07/23 13:14:20.068
  Oct  7 13:14:20.077: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/07/23 13:14:20.077
  Oct  7 13:14:20.079: INFO: Observed &DaemonSet event: ADDED
  Oct  7 13:14:20.079: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.079: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.079: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.080: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.080: INFO: Found daemon set daemon-set in namespace daemonsets-445 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct  7 13:14:20.080: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/07/23 13:14:20.08
  STEP: watching for the daemon set status to be patched @ 10/07/23 13:14:20.085
  Oct  7 13:14:20.087: INFO: Observed &DaemonSet event: ADDED
  Oct  7 13:14:20.087: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.087: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.087: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.087: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.087: INFO: Observed daemon set daemon-set in namespace daemonsets-445 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct  7 13:14:20.087: INFO: Observed &DaemonSet event: MODIFIED
  Oct  7 13:14:20.088: INFO: Found daemon set daemon-set in namespace daemonsets-445 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Oct  7 13:14:20.088: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/07/23 13:14:20.091
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-445, will wait for the garbage collector to delete the pods @ 10/07/23 13:14:20.091
  Oct  7 13:14:20.151: INFO: Deleting DaemonSet.extensions daemon-set took: 6.096127ms
  E1007 13:14:20.180488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:20.251: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.43131ms
  E1007 13:14:21.181225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:22.181980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:14:22.755: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:14:22.755: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct  7 13:14:22.758: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26819"},"items":null}

  Oct  7 13:14:22.761: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26819"},"items":null}

  Oct  7 13:14:22.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-445" for this suite. @ 10/07/23 13:14:22.776
â€¢ [4.781 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 10/07/23 13:14:22.784
  Oct  7 13:14:22.784: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 13:14:22.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:22.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:22.806
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/07/23 13:14:22.809
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/07/23 13:14:22.809
  STEP: creating a pod to probe DNS @ 10/07/23 13:14:22.809
  STEP: submitting the pod to kubernetes @ 10/07/23 13:14:22.809
  E1007 13:14:23.182890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:24.182991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/07/23 13:14:24.829
  STEP: looking for the results for each expected name from probers @ 10/07/23 13:14:24.832
  Oct  7 13:14:24.846: INFO: DNS probes using dns-8192/dns-test-b2793dd5-3406-4f96-987f-021cc92863d4 succeeded

  Oct  7 13:14:24.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:14:24.85
  STEP: Destroying namespace "dns-8192" for this suite. @ 10/07/23 13:14:24.86
â€¢ [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 10/07/23 13:14:24.868
  Oct  7 13:14:24.868: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename namespaces @ 10/07/23 13:14:24.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:24.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:24.883
  STEP: creating a Namespace @ 10/07/23 13:14:24.886
  STEP: patching the Namespace @ 10/07/23 13:14:24.897
  STEP: get the Namespace and ensuring it has the label @ 10/07/23 13:14:24.902
  Oct  7 13:14:24.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5547" for this suite. @ 10/07/23 13:14:24.909
  STEP: Destroying namespace "nspatchtest-c2980ce8-3a54-4427-802b-d81fec83b4b7-673" for this suite. @ 10/07/23 13:14:24.914
â€¢ [0.052 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 10/07/23 13:14:24.921
  Oct  7 13:14:24.921: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:14:24.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:24.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:24.939
  STEP: Creating configMap with name configmap-test-volume-map-5948559d-c523-42e2-b993-c7d11709f909 @ 10/07/23 13:14:24.942
  STEP: Creating a pod to test consume configMaps @ 10/07/23 13:14:24.946
  E1007 13:14:25.183362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:26.184395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:27.184721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:28.185582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:14:28.969
  Oct  7 13:14:28.972: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-818d0513-3c18-43b0-8464-1c53ea677de0 container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 13:14:28.981
  Oct  7 13:14:28.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1721" for this suite. @ 10/07/23 13:14:28.999
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/07/23 13:14:29.007
  Oct  7 13:14:29.007: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename watch @ 10/07/23 13:14:29.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:29.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:29.028
  STEP: creating a watch on configmaps with a certain label @ 10/07/23 13:14:29.031
  STEP: creating a new configmap @ 10/07/23 13:14:29.035
  STEP: modifying the configmap once @ 10/07/23 13:14:29.041
  STEP: changing the label value of the configmap @ 10/07/23 13:14:29.048
  STEP: Expecting to observe a delete notification for the watched object @ 10/07/23 13:14:29.054
  Oct  7 13:14:29.054: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5661  b07fb953-820c-478b-978b-76fddc4d8f5b 26955 0 2023-10-07 13:14:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-07 13:14:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:14:29.055: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5661  b07fb953-820c-478b-978b-76fddc4d8f5b 26957 0 2023-10-07 13:14:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-07 13:14:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:14:29.055: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5661  b07fb953-820c-478b-978b-76fddc4d8f5b 26958 0 2023-10-07 13:14:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-07 13:14:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/07/23 13:14:29.055
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/07/23 13:14:29.062
  E1007 13:14:29.186177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:30.187149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:31.188009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:32.188232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:33.188403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:34.188483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:35.189538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:36.189627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:37.189788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:38.189925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 10/07/23 13:14:39.063
  STEP: modifying the configmap a third time @ 10/07/23 13:14:39.076
  STEP: deleting the configmap @ 10/07/23 13:14:39.084
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/07/23 13:14:39.091
  Oct  7 13:14:39.091: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5661  b07fb953-820c-478b-978b-76fddc4d8f5b 27018 0 2023-10-07 13:14:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-07 13:14:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:14:39.091: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5661  b07fb953-820c-478b-978b-76fddc4d8f5b 27019 0 2023-10-07 13:14:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-07 13:14:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:14:39.091: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5661  b07fb953-820c-478b-978b-76fddc4d8f5b 27020 0 2023-10-07 13:14:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-07 13:14:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:14:39.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5661" for this suite. @ 10/07/23 13:14:39.095
â€¢ [10.093 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 10/07/23 13:14:39.1
  Oct  7 13:14:39.100: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:14:39.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:39.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:39.177
  STEP: Creating configMap configmap-8350/configmap-test-97520d0b-c661-4e23-9206-3010f0079a98 @ 10/07/23 13:14:39.18
  STEP: Creating a pod to test consume configMaps @ 10/07/23 13:14:39.186
  E1007 13:14:39.190322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:40.191138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:41.191393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:42.191482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:43.191662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:14:43.209
  Oct  7 13:14:43.213: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-02f5bb81-efc6-42d6-acaa-dcecc7a8fb54 container env-test: <nil>
  STEP: delete the pod @ 10/07/23 13:14:43.22
  Oct  7 13:14:43.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8350" for this suite. @ 10/07/23 13:14:43.239
â€¢ [4.146 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 10/07/23 13:14:43.246
  Oct  7 13:14:43.246: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:14:43.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:43.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:43.269
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:14:43.272
  E1007 13:14:44.192212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:45.192290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:46.192499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:47.193587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:14:47.295
  Oct  7 13:14:47.299: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-ad91a0f9-f8b5-4c16-ab3b-a0037992cf2f container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:14:47.306
  Oct  7 13:14:47.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5822" for this suite. @ 10/07/23 13:14:47.331
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/07/23 13:14:47.338
  Oct  7 13:14:47.338: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:14:47.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:47.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:47.36
  STEP: Creating projection with secret that has name projected-secret-test-3e5c7110-98f6-45b2-ab4b-aafa1ad0d91c @ 10/07/23 13:14:47.362
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:14:47.367
  E1007 13:14:48.194544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:49.194632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:50.194722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:51.194797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:14:51.391
  Oct  7 13:14:51.393: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-secrets-66a7c9a3-19ba-467e-b6d3-7cc00cfe2c3e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:14:51.4
  Oct  7 13:14:51.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9009" for this suite. @ 10/07/23 13:14:51.418
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 10/07/23 13:14:51.427
  Oct  7 13:14:51.427: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename lease-test @ 10/07/23 13:14:51.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:51.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:51.442
  Oct  7 13:14:51.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5949" for this suite. @ 10/07/23 13:14:51.499
â€¢ [0.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 10/07/23 13:14:51.506
  Oct  7 13:14:51.506: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:14:51.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:51.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:51.524
  STEP: Starting the proxy @ 10/07/23 13:14:51.527
  Oct  7 13:14:51.527: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-6044 proxy --unix-socket=/tmp/kubectl-proxy-unix139776830/test'
  STEP: retrieving proxy /api/ output @ 10/07/23 13:14:51.561
  Oct  7 13:14:51.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6044" for this suite. @ 10/07/23 13:14:51.566
â€¢ [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/07/23 13:14:51.572
  Oct  7 13:14:51.572: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename init-container @ 10/07/23 13:14:51.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:14:51.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:14:51.591
  STEP: creating the pod @ 10/07/23 13:14:51.593
  Oct  7 13:14:51.593: INFO: PodSpec: initContainers in spec.initContainers
  E1007 13:14:52.194962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:53.195906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:54.195977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:55.196186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:56.196489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:57.197542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:58.197645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:14:59.197814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:00.197892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:01.197971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:02.198260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:03.198347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:04.198442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:05.198528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:06.198662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:07.198912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:08.199120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:09.199203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:10.199373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:11.199589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:12.199676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:13.199752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:14.199858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:15.199948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:16.200229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:17.200307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:18.200478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:19.201545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:20.202479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:21.202586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:22.203300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:23.203390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:24.204239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:25.204416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:26.204497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:27.205555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:28.205716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:29.205784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:30.206005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:31.206586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:32.206660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:33.206809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:34.207209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:35.207376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:36.207901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:15:36.877: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-cfbd131e-d4c3-418e-b58c-66eb1b1698e4", GenerateName:"", Namespace:"init-container-4320", SelfLink:"", UID:"4c2f7e01-727c-4049-a0d3-6b8b2e02776c", ResourceVersion:"27304", Generation:0, CreationTimestamp:time.Date(2023, time.October, 7, 13, 14, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"593619204"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 7, 13, 14, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000730258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 7, 13, 15, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0007302d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-xg9wk", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003c28560), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xg9wk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xg9wk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xg9wk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0041bc270), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-31-221", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0002420e0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041bc330)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041bc350)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0041bc358), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0041bc35c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00104c760), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 7, 13, 14, 51, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 7, 13, 14, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 7, 13, 14, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 7, 13, 14, 51, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.31.221", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.62.4", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.62.4"}}, StartTime:time.Date(2023, time.October, 7, 13, 14, 51, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000242230)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002422a0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://c86f8dac6484fd40cacbb001ff5c175cd0cea06ee8169bc4814dd2098ee26be4", Started:(*bool)(0xc0041bc40a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003c285e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041bc41f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003c285c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041bc3df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Oct  7 13:15:36.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4320" for this suite. @ 10/07/23 13:15:36.881
â€¢ [45.316 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 10/07/23 13:15:36.889
  Oct  7 13:15:36.889: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:15:36.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:15:36.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:15:36.913
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:15:36.915
  E1007 13:15:37.208640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:38.209567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:39.210398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:40.210943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:15:40.938
  Oct  7 13:15:40.942: INFO: Trying to get logs from node ip-172-31-0-122 pod downwardapi-volume-bd904084-b8f6-441b-8729-496336317987 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:15:40.949
  Oct  7 13:15:40.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-627" for this suite. @ 10/07/23 13:15:40.977
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 10/07/23 13:15:40.984
  Oct  7 13:15:40.984: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename gc @ 10/07/23 13:15:40.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:15:40.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:15:41
  Oct  7 13:15:41.041: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ccaee282-fd4a-4d9f-a6de-3bc9489bf134", Controller:(*bool)(0xc003e67b86), BlockOwnerDeletion:(*bool)(0xc003e67b87)}}
  Oct  7 13:15:41.048: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"862aaef4-4bdd-472c-a385-59e418cfe4f6", Controller:(*bool)(0xc003e67e1a), BlockOwnerDeletion:(*bool)(0xc003e67e1b)}}
  Oct  7 13:15:41.054: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"05cdc533-fcde-423f-b1a9-6d6c377d0b7a", Controller:(*bool)(0xc003b2a0a6), BlockOwnerDeletion:(*bool)(0xc003b2a0a7)}}
  E1007 13:15:41.211791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:42.211964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:43.212695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:44.213539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:45.214496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:15:46.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2366" for this suite. @ 10/07/23 13:15:46.071
â€¢ [5.093 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/07/23 13:15:46.077
  Oct  7 13:15:46.077: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubelet-test @ 10/07/23 13:15:46.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:15:46.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:15:46.096
  STEP: Waiting for pod completion @ 10/07/23 13:15:46.109
  E1007 13:15:46.214985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:47.215136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:15:48.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6026" for this suite. @ 10/07/23 13:15:48.127
â€¢ [2.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 10/07/23 13:15:48.133
  Oct  7 13:15:48.133: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/07/23 13:15:48.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:15:48.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:15:48.152
  STEP: getting /apis @ 10/07/23 13:15:48.154
  STEP: getting /apis/storage.k8s.io @ 10/07/23 13:15:48.158
  STEP: getting /apis/storage.k8s.io/v1 @ 10/07/23 13:15:48.159
  STEP: creating @ 10/07/23 13:15:48.16
  STEP: watching @ 10/07/23 13:15:48.18
  Oct  7 13:15:48.180: INFO: starting watch
  STEP: getting @ 10/07/23 13:15:48.185
  STEP: listing in namespace @ 10/07/23 13:15:48.188
  STEP: listing across namespaces @ 10/07/23 13:15:48.192
  STEP: patching @ 10/07/23 13:15:48.194
  STEP: updating @ 10/07/23 13:15:48.199
  Oct  7 13:15:48.204: INFO: waiting for watch events with expected annotations in namespace
  Oct  7 13:15:48.204: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/07/23 13:15:48.205
  E1007 13:15:48.215473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 10/07/23 13:15:48.216
  Oct  7 13:15:48.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2443" for this suite. @ 10/07/23 13:15:48.235
â€¢ [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 10/07/23 13:15:48.244
  Oct  7 13:15:48.244: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename job @ 10/07/23 13:15:48.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:15:48.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:15:48.258
  STEP: Creating a suspended job @ 10/07/23 13:15:48.264
  STEP: Patching the Job @ 10/07/23 13:15:48.27
  STEP: Watching for Job to be patched @ 10/07/23 13:15:48.295
  Oct  7 13:15:48.298: INFO: Event ADDED observed for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p] and annotations: map[]
  Oct  7 13:15:48.298: INFO: Event MODIFIED observed for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p] and annotations: map[]
  Oct  7 13:15:48.298: INFO: Event MODIFIED found for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[]
  STEP: Updating the job @ 10/07/23 13:15:48.298
  STEP: Watching for Job to be updated @ 10/07/23 13:15:48.311
  Oct  7 13:15:48.313: INFO: Event MODIFIED found for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[updated:true]
  Oct  7 13:15:48.313: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/07/23 13:15:48.313
  Oct  7 13:15:48.317: INFO: Job: e2e-m728p as labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched]
  STEP: Waiting for job to complete @ 10/07/23 13:15:48.317
  E1007 13:15:49.215619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:50.215709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:51.215823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:52.215921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:53.216012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:54.216200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:55.217259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:56.217577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 10/07/23 13:15:56.322
  STEP: Watching for Job to be deleted @ 10/07/23 13:15:56.332
  Oct  7 13:15:56.334: INFO: Event MODIFIED observed for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[updated:true]
  Oct  7 13:15:56.334: INFO: Event MODIFIED observed for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[updated:true]
  Oct  7 13:15:56.334: INFO: Event MODIFIED observed for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[updated:true]
  Oct  7 13:15:56.334: INFO: Event MODIFIED observed for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[updated:true]
  Oct  7 13:15:56.334: INFO: Event MODIFIED observed for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[updated:true]
  Oct  7 13:15:56.334: INFO: Event DELETED found for Job e2e-m728p in namespace job-4031 with labels: map[e2e-job-label:e2e-m728p e2e-m728p:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/07/23 13:15:56.334
  Oct  7 13:15:56.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4031" for this suite. @ 10/07/23 13:15:56.351
â€¢ [8.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 10/07/23 13:15:56.359
  Oct  7 13:15:56.359: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename field-validation @ 10/07/23 13:15:56.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:15:56.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:15:56.378
  STEP: apply creating a deployment @ 10/07/23 13:15:56.381
  Oct  7 13:15:56.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6058" for this suite. @ 10/07/23 13:15:56.396
â€¢ [0.042 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 10/07/23 13:15:56.401
  Oct  7 13:15:56.401: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename job @ 10/07/23 13:15:56.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:15:56.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:15:56.419
  STEP: Creating a job @ 10/07/23 13:15:56.421
  STEP: Ensuring job reaches completions @ 10/07/23 13:15:56.427
  E1007 13:15:57.217877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:58.217971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:15:59.218062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:00.218244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:01.219266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:02.219445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:03.219529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:04.219718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:05.219809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:06.220311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:16:06.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2711" for this suite. @ 10/07/23 13:16:06.436
â€¢ [10.040 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 10/07/23 13:16:06.441
  Oct  7 13:16:06.441: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 13:16:06.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:06.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:06.459
  STEP: Creating projection with secret that has name secret-emptykey-test-2c38fc4c-54e1-4618-987c-88f2c75258e0 @ 10/07/23 13:16:06.462
  Oct  7 13:16:06.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-555" for this suite. @ 10/07/23 13:16:06.467
â€¢ [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 10/07/23 13:16:06.477
  Oct  7 13:16:06.477: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/07/23 13:16:06.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:06.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:06.498
  STEP: create the container to handle the HTTPGet hook request. @ 10/07/23 13:16:06.504
  E1007 13:16:07.220692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:08.220790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/07/23 13:16:08.524
  E1007 13:16:09.221551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:10.221656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/07/23 13:16:10.542
  E1007 13:16:11.221743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:12.221972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/07/23 13:16:12.561
  Oct  7 13:16:12.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2807" for this suite. @ 10/07/23 13:16:12.572
â€¢ [6.100 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 10/07/23 13:16:12.577
  Oct  7 13:16:12.577: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 13:16:12.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:12.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:12.596
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/07/23 13:16:12.6
  E1007 13:16:13.222028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:14.222120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:15.222564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:16.223348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:16:16.622
  Oct  7 13:16:16.625: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-76ad0867-2a67-427b-a51a-f85492b49f60 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 13:16:16.631
  Oct  7 13:16:16.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1584" for this suite. @ 10/07/23 13:16:16.65
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 10/07/23 13:16:16.656
  Oct  7 13:16:16.656: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename podtemplate @ 10/07/23 13:16:16.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:16.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:16.673
  Oct  7 13:16:16.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6551" for this suite. @ 10/07/23 13:16:16.708
â€¢ [0.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 10/07/23 13:16:16.713
  Oct  7 13:16:16.713: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 13:16:16.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:16.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:16.732
  STEP: Creating service test in namespace statefulset-1398 @ 10/07/23 13:16:16.734
  STEP: Creating statefulset ss in namespace statefulset-1398 @ 10/07/23 13:16:16.74
  Oct  7 13:16:16.751: INFO: Found 0 stateful pods, waiting for 1
  E1007 13:16:17.223466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:18.224192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:19.224283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:20.224355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:21.224506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:22.224585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:23.225547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:24.225636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:25.225740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:26.226018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:16:26.755: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/07/23 13:16:26.762
  STEP: updating a scale subresource @ 10/07/23 13:16:26.765
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/07/23 13:16:26.77
  STEP: Patch a scale subresource @ 10/07/23 13:16:26.773
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/07/23 13:16:26.78
  Oct  7 13:16:26.793: INFO: Deleting all statefulset in ns statefulset-1398
  Oct  7 13:16:26.797: INFO: Scaling statefulset ss to 0
  E1007 13:16:27.226421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:28.226707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:29.226772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:30.227609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:31.227917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:32.227997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:33.228181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:34.228283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:35.228402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:36.228476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:16:36.814: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 13:16:36.817: INFO: Deleting statefulset ss
  Oct  7 13:16:36.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1398" for this suite. @ 10/07/23 13:16:36.834
â€¢ [20.126 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 10/07/23 13:16:36.84
  Oct  7 13:16:36.840: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:16:36.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:36.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:36.861
  STEP: starting the proxy server @ 10/07/23 13:16:36.863
  Oct  7 13:16:36.863: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-3624 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/07/23 13:16:36.898
  Oct  7 13:16:36.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3624" for this suite. @ 10/07/23 13:16:36.908
â€¢ [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/07/23 13:16:36.917
  Oct  7 13:16:36.917: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename init-container @ 10/07/23 13:16:36.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:36.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:36.932
  STEP: creating the pod @ 10/07/23 13:16:36.938
  Oct  7 13:16:36.938: INFO: PodSpec: initContainers in spec.initContainers
  E1007 13:16:37.229363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:38.229540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:39.230622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:16:40.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3221" for this suite. @ 10/07/23 13:16:40.062
â€¢ [3.151 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 10/07/23 13:16:40.069
  Oct  7 13:16:40.069: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 13:16:40.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:16:40.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:16:40.085
  STEP: Creating resourceQuota "e2e-rq-status-7n2dm" @ 10/07/23 13:16:40.091
  Oct  7 13:16:40.099: INFO: Resource quota "e2e-rq-status-7n2dm" reports spec: hard cpu limit of 500m
  Oct  7 13:16:40.099: INFO: Resource quota "e2e-rq-status-7n2dm" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-7n2dm" /status @ 10/07/23 13:16:40.099
  STEP: Confirm /status for "e2e-rq-status-7n2dm" resourceQuota via watch @ 10/07/23 13:16:40.105
  Oct  7 13:16:40.107: INFO: observed resourceQuota "e2e-rq-status-7n2dm" in namespace "resourcequota-9100" with hard status: v1.ResourceList(nil)
  Oct  7 13:16:40.107: INFO: Found resourceQuota "e2e-rq-status-7n2dm" in namespace "resourcequota-9100" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct  7 13:16:40.107: INFO: ResourceQuota "e2e-rq-status-7n2dm" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/07/23 13:16:40.11
  Oct  7 13:16:40.115: INFO: Resource quota "e2e-rq-status-7n2dm" reports spec: hard cpu limit of 1
  Oct  7 13:16:40.115: INFO: Resource quota "e2e-rq-status-7n2dm" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-7n2dm" /status @ 10/07/23 13:16:40.115
  STEP: Confirm /status for "e2e-rq-status-7n2dm" resourceQuota via watch @ 10/07/23 13:16:40.121
  Oct  7 13:16:40.122: INFO: observed resourceQuota "e2e-rq-status-7n2dm" in namespace "resourcequota-9100" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct  7 13:16:40.122: INFO: Found resourceQuota "e2e-rq-status-7n2dm" in namespace "resourcequota-9100" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Oct  7 13:16:40.122: INFO: ResourceQuota "e2e-rq-status-7n2dm" /status was patched
  STEP: Get "e2e-rq-status-7n2dm" /status @ 10/07/23 13:16:40.122
  Oct  7 13:16:40.126: INFO: Resourcequota "e2e-rq-status-7n2dm" reports status: hard cpu of 1
  Oct  7 13:16:40.126: INFO: Resourcequota "e2e-rq-status-7n2dm" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-7n2dm" /status before checking Spec is unchanged @ 10/07/23 13:16:40.128
  Oct  7 13:16:40.133: INFO: Resourcequota "e2e-rq-status-7n2dm" reports status: hard cpu of 2
  Oct  7 13:16:40.133: INFO: Resourcequota "e2e-rq-status-7n2dm" reports status: hard memory of 2Gi
  Oct  7 13:16:40.134: INFO: Found resourceQuota "e2e-rq-status-7n2dm" in namespace "resourcequota-9100" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E1007 13:16:40.230990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:41.231355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:42.231469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:43.231675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:44.231815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:45.232500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:46.233544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:47.234181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:48.234274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:49.234792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:50.235717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:51.235879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:52.235973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:53.236080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:54.236176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:55.237094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:56.237492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:57.237698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:58.237870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:16:59.237949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:00.238974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:01.239063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:02.239262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:03.239419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:04.239514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:05.141: INFO: ResourceQuota "e2e-rq-status-7n2dm" Spec was unchanged and /status reset
  Oct  7 13:17:05.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9100" for this suite. @ 10/07/23 13:17:05.145
â€¢ [25.082 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 10/07/23 13:17:05.151
  Oct  7 13:17:05.151: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 13:17:05.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:05.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:05.167
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/07/23 13:17:05.169
  Oct  7 13:17:05.176: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-308  175ce39e-6804-4e85-a255-37ebff7d0e25 28199 0 2023-10-07 13:17:05 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-10-07 13:17:05 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ltv5c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ltv5c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1007 13:17:05.240111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:06.240477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/07/23 13:17:07.186
  Oct  7 13:17:07.186: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-308 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:17:07.186: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:17:07.186: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:17:07.187: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-308/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1007 13:17:07.241305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS server is configured on pod... @ 10/07/23 13:17:07.276
  Oct  7 13:17:07.276: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-308 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:17:07.276: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:17:07.277: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:17:07.277: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-308/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct  7 13:17:07.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 13:17:07.362: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-308" for this suite. @ 10/07/23 13:17:07.376
â€¢ [2.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/07/23 13:17:07.384
  Oct  7 13:17:07.384: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/07/23 13:17:07.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:07.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:07.401
  STEP: Creating two CSIDrivers @ 10/07/23 13:17:07.404
  STEP: Getting "inline-driver-261a2c4f-f436-4710-817c-2f7026eb79b5" & "inline-driver-7a396fe4-4b29-456d-9904-52702f28214e" @ 10/07/23 13:17:07.419
  STEP: Patching the CSIDriver "inline-driver-7a396fe4-4b29-456d-9904-52702f28214e" @ 10/07/23 13:17:07.424
  STEP: Updating the CSIDriver "inline-driver-7a396fe4-4b29-456d-9904-52702f28214e" @ 10/07/23 13:17:07.431
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4909" @ 10/07/23 13:17:07.438
  STEP: Deleting CSIDriver "inline-driver-261a2c4f-f436-4710-817c-2f7026eb79b5" @ 10/07/23 13:17:07.441
  STEP: Confirm deletion of CSIDriver "inline-driver-261a2c4f-f436-4710-817c-2f7026eb79b5" @ 10/07/23 13:17:07.446
  STEP: Deleting CSIDriver "inline-driver-7a396fe4-4b29-456d-9904-52702f28214e" via DeleteCollection @ 10/07/23 13:17:07.449
  STEP: Confirm deletion of CSIDriver "inline-driver-7a396fe4-4b29-456d-9904-52702f28214e" @ 10/07/23 13:17:07.458
  Oct  7 13:17:07.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4909" for this suite. @ 10/07/23 13:17:07.464
â€¢ [0.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 10/07/23 13:17:07.469
  Oct  7 13:17:07.469: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 13:17:07.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:07.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:07.485
  STEP: Creating a test headless service @ 10/07/23 13:17:07.487
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7077 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7077;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7077 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7077;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7077.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7077.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7077.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7077.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7077.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7077.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7077.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7077.svc;check="$$(dig +notcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_udp@PTR;check="$$(dig +tcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_tcp@PTR;sleep 1; done
   @ 10/07/23 13:17:07.507
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7077 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7077;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7077 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7077;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7077.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7077.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7077.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7077.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7077.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7077.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7077.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7077.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7077.svc;check="$$(dig +notcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_udp@PTR;check="$$(dig +tcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_tcp@PTR;sleep 1; done
   @ 10/07/23 13:17:07.507
  STEP: creating a pod to probe DNS @ 10/07/23 13:17:07.507
  STEP: submitting the pod to kubernetes @ 10/07/23 13:17:07.507
  E1007 13:17:08.241709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:09.241822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/07/23 13:17:09.526
  STEP: looking for the results for each expected name from probers @ 10/07/23 13:17:09.529
  Oct  7 13:17:09.533: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.536: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.539: INFO: Unable to read wheezy_udp@dns-test-service.dns-7077 from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.543: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7077 from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.545: INFO: Unable to read wheezy_udp@dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.548: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.552: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.555: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.574: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.577: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.581: INFO: Unable to read jessie_udp@dns-test-service.dns-7077 from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.585: INFO: Unable to read jessie_tcp@dns-test-service.dns-7077 from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.587: INFO: Unable to read jessie_udp@dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.591: INFO: Unable to read jessie_tcp@dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.594: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.597: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7077.svc from pod dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa: the server could not find the requested resource (get pods dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa)
  Oct  7 13:17:09.609: INFO: Lookups using dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7077 wheezy_tcp@dns-test-service.dns-7077 wheezy_udp@dns-test-service.dns-7077.svc wheezy_tcp@dns-test-service.dns-7077.svc wheezy_udp@_http._tcp.dns-test-service.dns-7077.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7077.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7077 jessie_tcp@dns-test-service.dns-7077 jessie_udp@dns-test-service.dns-7077.svc jessie_tcp@dns-test-service.dns-7077.svc jessie_udp@_http._tcp.dns-test-service.dns-7077.svc jessie_tcp@_http._tcp.dns-test-service.dns-7077.svc]

  Oct  7 13:17:09.620: INFO: Pod client logs for webserver: 
  Oct  7 13:17:09.625: INFO: Pod client logs for querier: 
  Oct  7 13:17:09.633: INFO: Pod client logs for jessie-querier: 
  E1007 13:17:10.241915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:11.242133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:12.242419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:13.242563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:14.242654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:14.764: INFO: DNS probes using dns-7077/dns-test-beb0c7ea-9833-4ac5-863f-f8d2cc1d46fa succeeded

  Oct  7 13:17:14.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:17:14.766
  STEP: deleting the test service @ 10/07/23 13:17:14.785
  STEP: deleting the test headless service @ 10/07/23 13:17:14.81
  STEP: Destroying namespace "dns-7077" for this suite. @ 10/07/23 13:17:14.824
â€¢ [7.361 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 10/07/23 13:17:14.831
  Oct  7 13:17:14.831: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename events @ 10/07/23 13:17:14.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:14.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:14.849
  STEP: Create set of events @ 10/07/23 13:17:14.852
  Oct  7 13:17:14.857: INFO: created test-event-1
  Oct  7 13:17:14.860: INFO: created test-event-2
  Oct  7 13:17:14.864: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/07/23 13:17:14.864
  STEP: delete collection of events @ 10/07/23 13:17:14.867
  Oct  7 13:17:14.867: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/07/23 13:17:14.886
  Oct  7 13:17:14.886: INFO: requesting list of events to confirm quantity
  Oct  7 13:17:14.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8670" for this suite. @ 10/07/23 13:17:14.893
â€¢ [0.069 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 10/07/23 13:17:14.9
  Oct  7 13:17:14.900: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:17:14.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:14.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:14.914
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:17:14.917
  E1007 13:17:15.242731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:16.243095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:17.243194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:18.243275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:17:18.938
  Oct  7 13:17:18.941: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-cf42c0b0-4180-478a-8d4c-81af80c812b7 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:17:18.948
  Oct  7 13:17:18.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3029" for this suite. @ 10/07/23 13:17:18.964
â€¢ [4.071 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 10/07/23 13:17:18.971
  Oct  7 13:17:18.971: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:17:18.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:18.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:18.986
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/07/23 13:17:18.989
  Oct  7 13:17:18.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-8610 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Oct  7 13:17:19.042: INFO: stderr: ""
  Oct  7 13:17:19.042: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/07/23 13:17:19.042
  Oct  7 13:17:19.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-8610 delete pods e2e-test-httpd-pod'
  E1007 13:17:19.243584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:20.158: INFO: stderr: ""
  Oct  7 13:17:20.158: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct  7 13:17:20.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8610" for this suite. @ 10/07/23 13:17:20.162
â€¢ [1.198 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/07/23 13:17:20.169
  Oct  7 13:17:20.169: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/07/23 13:17:20.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:20.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:20.187
  E1007 13:17:20.243808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:21.244788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:22.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 10/07/23 13:17:22.224
  STEP: Cleaning up the configmap @ 10/07/23 13:17:22.23
  STEP: Cleaning up the pod @ 10/07/23 13:17:22.236
  E1007 13:17:22.245458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-6639" for this suite. @ 10/07/23 13:17:22.247
â€¢ [2.086 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 10/07/23 13:17:22.255
  Oct  7 13:17:22.255: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:17:22.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:22.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:22.274
  STEP: Creating configMap with name configmap-test-volume-9ea6bbe2-ff93-4064-b460-219cf6a5af74 @ 10/07/23 13:17:22.277
  STEP: Creating a pod to test consume configMaps @ 10/07/23 13:17:22.281
  E1007 13:17:23.245594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:24.245847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:25.246879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:26.246971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:17:26.301
  Oct  7 13:17:26.304: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-7f4aff74-f27a-4ea4-a052-a893433b04dc container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 13:17:26.311
  Oct  7 13:17:26.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8307" for this suite. @ 10/07/23 13:17:26.327
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 10/07/23 13:17:26.333
  Oct  7 13:17:26.333: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 13:17:26.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:26.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:26.35
  STEP: Creating pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425 @ 10/07/23 13:17:26.352
  E1007 13:17:27.247175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:28.247261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 13:17:28.367
  Oct  7 13:17:28.370: INFO: Initial restart count of pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc is 0
  Oct  7 13:17:28.374: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:29.247352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:30.247586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:30.377: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:31.247991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:32.248125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:32.382: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:33.248474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:34.248572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:34.387: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:35.249280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:36.249577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:36.391: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:37.250023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:38.250111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:38.396: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:39.251061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:40.251153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:40.399: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:41.251241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:42.251330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:42.403: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:43.251767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:44.252066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:44.407: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:45.252155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:46.252477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:46.411: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  E1007 13:17:47.252859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:48.252914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:48.416: INFO: Get pod liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc in namespace container-probe-2425
  Oct  7 13:17:48.416: INFO: Restart count of pod container-probe-2425/liveness-3b63ea08-72ae-45db-a254-555d8c01c3bc is now 1 (20.045036719s elapsed)
  Oct  7 13:17:48.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:17:48.419
  STEP: Destroying namespace "container-probe-2425" for this suite. @ 10/07/23 13:17:48.429
â€¢ [22.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 10/07/23 13:17:48.443
  Oct  7 13:17:48.443: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:17:48.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:48.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:48.46
  Oct  7 13:17:48.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-4233 create -f -'
  Oct  7 13:17:48.620: INFO: stderr: ""
  Oct  7 13:17:48.620: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Oct  7 13:17:48.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-4233 create -f -'
  Oct  7 13:17:48.781: INFO: stderr: ""
  Oct  7 13:17:48.781: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/07/23 13:17:48.781
  E1007 13:17:49.253072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:49.786: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:17:49.786: INFO: Found 0 / 1
  E1007 13:17:50.253175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:50.786: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:17:50.786: INFO: Found 1 / 1
  Oct  7 13:17:50.786: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct  7 13:17:50.790: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:17:50.790: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct  7 13:17:50.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-4233 describe pod agnhost-primary-7s8n8'
  Oct  7 13:17:50.847: INFO: stderr: ""
  Oct  7 13:17:50.847: INFO: stdout: "Name:             agnhost-primary-7s8n8\nNamespace:        kubectl-4233\nPriority:         0\nService Account:  default\nNode:             ip-172-31-31-221/172.31.31.221\nStart Time:       Sat, 07 Oct 2023 13:17:48 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.62.48\nIPs:\n  IP:           192.168.62.48\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://24138c54e69e6437206ed03476e6a14c1bbf2c0ae885ad0028328111a9cf0174\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 07 Oct 2023 13:17:49 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-lwmjc (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-lwmjc:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4233/agnhost-primary-7s8n8 to ip-172-31-31-221\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Oct  7 13:17:50.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-4233 describe rc agnhost-primary'
  Oct  7 13:17:50.909: INFO: stderr: ""
  Oct  7 13:17:50.909: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4233\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-7s8n8\n"
  Oct  7 13:17:50.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-4233 describe service agnhost-primary'
  Oct  7 13:17:50.968: INFO: stderr: ""
  Oct  7 13:17:50.968: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4233\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.253\nIPs:               10.152.183.253\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.62.48:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Oct  7 13:17:50.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-4233 describe node ip-172-31-0-122'
  Oct  7 13:17:51.043: INFO: stderr: ""
  Oct  7 13:17:51.043: INFO: stdout: "Name:               ip-172-31-0-122\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-0-122\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 07 Oct 2023 12:09:39 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-0-122\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 07 Oct 2023 13:17:50 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 07 Oct 2023 12:10:09 +0000   Sat, 07 Oct 2023 12:10:09 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 07 Oct 2023 13:14:04 +0000   Sat, 07 Oct 2023 12:10:26 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 07 Oct 2023 13:14:04 +0000   Sat, 07 Oct 2023 12:10:26 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 07 Oct 2023 13:14:04 +0000   Sat, 07 Oct 2023 12:10:26 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 07 Oct 2023 13:14:04 +0000   Sat, 07 Oct 2023 12:10:26 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.0.122\n  Hostname:    ip-172-31-0-122\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      16069568Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7978664Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      14809713845\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7876264Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                      ec2fd84c4bb4e1d82d1f2612545c8e87\n  System UUID:                     ec2fd84c-4bb4-e1d8-2d1f-2612545c8e87\n  Boot ID:                         548bbf18-b7bb-41ca-800e-bf5dca426b0d\n  Kernel Version:                  6.2.0-1013-aws\n  OS Image:                        Ubuntu 22.04.3 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.28.2\n  Kube-Proxy Version:              v1.28.2\nNon-terminated Pods:               (4 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-ndczw           0 (0%)        0 (0%)      0 (0%)           0 (0%)         67m\n  kube-system                      calico-node-s77kx                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         68m\n  sonobuoy                         sonobuoy-e2e-job-71352699346043a1                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         61m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-fq6js    0 (0%)        0 (0%)      0 (0%)           0 (0%)         61m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    250m (12%)  0 (0%)\n  memory                 0 (0%)      0 (0%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  Oct  7 13:17:51.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-4233 describe namespace kubectl-4233'
  Oct  7 13:17:51.097: INFO: stderr: ""
  Oct  7 13:17:51.097: INFO: stdout: "Name:         kubectl-4233\nLabels:       e2e-framework=kubectl\n              e2e-run=b2ba4449-523b-464c-9cb1-24333d84cb0c\n              kubernetes.io/metadata.name=kubectl-4233\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Oct  7 13:17:51.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4233" for this suite. @ 10/07/23 13:17:51.1
â€¢ [2.664 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 10/07/23 13:17:51.107
  Oct  7 13:17:51.107: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replicaset @ 10/07/23 13:17:51.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:51.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:51.125
  STEP: Create a ReplicaSet @ 10/07/23 13:17:51.128
  STEP: Verify that the required pods have come up @ 10/07/23 13:17:51.134
  Oct  7 13:17:51.137: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1007 13:17:51.253550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:52.253657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:53.253748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:54.254410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:55.255261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:56.141: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/07/23 13:17:56.141
  Oct  7 13:17:56.143: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/07/23 13:17:56.143
  STEP: DeleteCollection of the ReplicaSets @ 10/07/23 13:17:56.147
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/07/23 13:17:56.159
  Oct  7 13:17:56.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-565" for this suite. @ 10/07/23 13:17:56.167
â€¢ [5.076 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 10/07/23 13:17:56.184
  Oct  7 13:17:56.184: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 13:17:56.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:56.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:56.221
  E1007 13:17:56.256097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 10/07/23 13:17:56.259
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 13:17:56.47
  STEP: Deploying the webhook pod @ 10/07/23 13:17:56.481
  STEP: Wait for the deployment to be ready @ 10/07/23 13:17:56.495
  Oct  7 13:17:56.513: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1007 13:17:57.256210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:17:58.256305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/07/23 13:17:58.524
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 13:17:58.539
  E1007 13:17:59.256534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:17:59.539: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/07/23 13:17:59.545
  STEP: create a pod that should be updated by the webhook @ 10/07/23 13:17:59.557
  Oct  7 13:17:59.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7211" for this suite. @ 10/07/23 13:17:59.627
  STEP: Destroying namespace "webhook-markers-7931" for this suite. @ 10/07/23 13:17:59.632
â€¢ [3.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 10/07/23 13:17:59.639
  Oct  7 13:17:59.639: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 13:17:59.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:17:59.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:17:59.655
  STEP: Creating pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007 @ 10/07/23 13:17:59.658
  E1007 13:18:00.256652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:01.257542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 13:18:01.674
  Oct  7 13:18:01.677: INFO: Initial restart count of pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 is 0
  Oct  7 13:18:01.680: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:02.258492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:03.258585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:03.684: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:04.258613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:05.258696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:05.689: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:06.258788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:07.258881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:07.694: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:08.259860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:09.259969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:09.699: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:10.260740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:11.261540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:11.704: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:12.261768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:13.261941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:13.708: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:14.262057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:15.262147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:15.712: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:16.262807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:17.262922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:17.716: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:18.263833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:19.264067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:19.720: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:20.264209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:21.264502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:21.724: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:22.265504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:23.265677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:23.728: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:24.266673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:25.266839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:25.732: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:26.266899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:27.266994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:27.735: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:28.267133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:29.267307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:29.739: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:30.267371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:31.267587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:31.743: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:32.267678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:33.267856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:33.746: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:34.267894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:35.267983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:35.750: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:36.268194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:37.268390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:37.753: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:38.268472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:39.268570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:39.758: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:40.269577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:41.269740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:41.761: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:42.270515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:43.270678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:43.766: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:44.270908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:45.271000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:45.769: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:46.271620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:47.271961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:47.775: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:48.272815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:49.272902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:49.778: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:50.273010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:51.273762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:51.783: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:52.274316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:53.274387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:53.787: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:54.275326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:55.275418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:55.792: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:56.275509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:57.276476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:57.797: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:18:58.277267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:18:59.277733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:18:59.802: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:00.277853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:01.278788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:01.806: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:02.279332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:03.279552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:03.811: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:04.280227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:05.281153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:05.815: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:06.282082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:07.282174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:07.821: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:08.282260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:09.282422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:09.826: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:10.282583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:11.283554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:11.829: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:12.283665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:13.283760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:13.832: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:14.283848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:15.283922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:15.836: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:16.283958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:17.284072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:17.840: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:18.284220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:19.284514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:19.844: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:20.285156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:21.285457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:21.849: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:22.285532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:23.286278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:23.853: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:24.287241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:25.287442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:25.858: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:26.287532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:27.287695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:27.862: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:28.287925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:29.288025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:29.866: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:30.288218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:31.288564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:31.870: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:32.289534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:33.290003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:33.873: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:34.290921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:35.291106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:35.879: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:36.291792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:37.291953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:37.883: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:38.292679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:39.292904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:39.887: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:40.293537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:41.293698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:41.890: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:42.294404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:43.295294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:43.895: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:44.296017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:45.296270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:45.899: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:46.296472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:47.297532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:47.904: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:48.297885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:49.298020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:49.907: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:50.299027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:51.299414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:51.911: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:52.300402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:53.300484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:53.916: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:54.300994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:55.301094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:55.920: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:56.301278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:57.301481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:57.925: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:19:58.301516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:19:59.301589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:19:59.929: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:00.302569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:01.303108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:01.932: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:02.303791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:03.303886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:03.936: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:04.304019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:05.304450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:05.940: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:06.304690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:07.304772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:07.945: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:08.305412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:09.305611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:09.949: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:10.306667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:11.306754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:11.953: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:12.306842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:13.307000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:13.958: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:14.307758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:15.307844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:15.961: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:16.307967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:17.308125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:17.966: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:18.308715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:19.309612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:19.969: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:20.309794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:21.309893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:21.973: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:22.309984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:23.310158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:23.977: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:24.311131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:25.311292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:25.982: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:26.311889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:27.311979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:27.986: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:28.312098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:29.312841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:29.991: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:30.313537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:31.314440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:31.995: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:32.315264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:33.315352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:33.998: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:34.316402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:35.316535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:36.003: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:36.317535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:37.318547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:38.006: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:38.319212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:39.319307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:40.011: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:40.319884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:41.320749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:42.015: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:42.321537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:43.321629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:44.018: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:44.322439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:45.322631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:46.023: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:46.322802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:47.323071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:48.027: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:48.323932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:49.324025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:50.031: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:50.324836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:51.324924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:52.035: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:52.325011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:53.325543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:54.040: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:54.325727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:55.325895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:56.043: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:56.326841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:57.326993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:20:58.049: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:20:58.327719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:20:59.327889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:00.052: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:00.328355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:01.328485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:02.057: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:02.329491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:03.329593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:04.060: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:04.329758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:05.329923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:06.064: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:06.330783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:07.330881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:08.068: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:08.331305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:09.331396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:10.073: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:10.332412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:11.332482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:12.076: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:12.333535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:13.333761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:14.079: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:14.334767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:15.334909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:16.083: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:16.335629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:17.336702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:18.087: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:18.336952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:19.337544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:20.092: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:20.338465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:21.338613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:22.096: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:22.338699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:23.338871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:24.101: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:24.339599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:25.339693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:26.105: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:26.339726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:27.340539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:28.110: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:28.341005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:29.341098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:30.114: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:30.341311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:31.341405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:32.118: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:32.341540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:33.342309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:34.122: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:34.343349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:35.343442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:36.125: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:36.344170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:37.344268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:38.129: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:38.344698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:39.344780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:40.133: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:40.345538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:41.345827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:42.137: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:42.346357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:43.346501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:44.141: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:44.347532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:45.347625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:46.144: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:46.347998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:47.348150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:48.149: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:48.349200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:49.349299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:50.153: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:50.349514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:51.349609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:52.157: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:52.350404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:53.350492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:54.161: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:54.351346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:55.351497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:56.166: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:56.352413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:57.352486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:21:58.171: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:21:58.353537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:21:59.353634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:22:00.175: INFO: Get pod liveness-eaa1aa30-ceeb-42eb-ae10-0750623ebb32 in namespace container-probe-7007
  E1007 13:22:00.354570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:01.354728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:22:02.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:22:02.18
  STEP: Destroying namespace "container-probe-7007" for this suite. @ 10/07/23 13:22:02.192
â€¢ [242.560 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 10/07/23 13:22:02.2
  Oct  7 13:22:02.200: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/07/23 13:22:02.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:22:02.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:22:02.221
  Oct  7 13:22:02.224: INFO: Waiting up to 1m0s for all nodes to be ready
  E1007 13:22:02.354900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:03.355005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:04.355568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:05.355753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:06.356690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:07.357549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:08.357955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:09.358565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:10.359419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:11.359674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:12.360573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:13.361550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:14.362024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:15.362208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:16.363078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:17.363272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:18.364100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:19.364496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:20.365191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:21.365432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:22.365524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:23.365594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:24.366528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:25.366614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:26.367617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:27.367690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:28.368247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:29.368475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:30.369282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:31.369523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:32.370145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:33.370329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:34.370933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:35.371016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:36.371571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:37.371723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:38.372124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:39.372200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:40.372553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:41.373538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:42.374023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:43.374122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:44.374638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:45.374719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:46.375667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:47.375730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:48.376792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:49.376960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:50.377072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:51.377446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:52.377914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:53.377991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:54.378482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:55.378553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:56.378671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:57.379261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:58.379615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:22:59.379858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:00.380858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:01.381536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:23:02.239: INFO: Waiting for terminating namespaces to be deleted...
  Oct  7 13:23:02.242: INFO: Starting informer...
  STEP: Starting pods... @ 10/07/23 13:23:02.242
  E1007 13:23:02.382558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:23:02.462: INFO: Pod1 is running on ip-172-31-31-221. Tainting Node
  E1007 13:23:03.382647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:04.383128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:23:04.683: INFO: Pod2 is running on ip-172-31-31-221. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/07/23 13:23:04.684
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/07/23 13:23:04.692
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/07/23 13:23:04.703
  E1007 13:23:05.383679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:06.384086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:07.384156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:08.384252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:09.384572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:10.384671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:23:10.725: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E1007 13:23:11.385231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:12.385315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:13.385413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:14.385567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:15.385610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:16.385927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:17.386162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:18.386345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:19.386434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:20.386540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:21.386692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:22.386850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:23.386929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:24.387161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:25.387232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:26.387640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:27.388408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:28.388487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:29.388553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:30.388665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:23:30.761: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Oct  7 13:23:30.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/07/23 13:23:30.776
  STEP: Destroying namespace "taint-multiple-pods-295" for this suite. @ 10/07/23 13:23:30.778
â€¢ [88.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 10/07/23 13:23:30.792
  Oct  7 13:23:30.792: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 13:23:30.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:23:30.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:23:30.819
  STEP: Creating Pod @ 10/07/23 13:23:30.822
  E1007 13:23:31.389504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:32.389606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 10/07/23 13:23:32.842
  Oct  7 13:23:32.842: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6107 PodName:pod-sharedvolume-fd0f4fae-1324-45ab-b15e-16b9904cdace ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:23:32.842: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:23:32.842: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:23:32.842: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-6107/pods/pod-sharedvolume-fd0f4fae-1324-45ab-b15e-16b9904cdace/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Oct  7 13:23:32.948: INFO: Exec stderr: ""
  Oct  7 13:23:32.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6107" for this suite. @ 10/07/23 13:23:32.951
â€¢ [2.165 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 10/07/23 13:23:32.957
  Oct  7 13:23:32.957: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 13:23:32.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:23:32.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:23:32.978
  STEP: Creating a ResourceQuota @ 10/07/23 13:23:32.98
  STEP: Getting a ResourceQuota @ 10/07/23 13:23:32.985
  STEP: Updating a ResourceQuota @ 10/07/23 13:23:32.99
  STEP: Verifying a ResourceQuota was modified @ 10/07/23 13:23:32.997
  STEP: Deleting a ResourceQuota @ 10/07/23 13:23:33
  STEP: Verifying the deleted ResourceQuota @ 10/07/23 13:23:33.008
  Oct  7 13:23:33.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-781" for this suite. @ 10/07/23 13:23:33.015
â€¢ [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/07/23 13:23:33.021
  Oct  7 13:23:33.021: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename cronjob @ 10/07/23 13:23:33.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:23:33.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:23:33.04
  STEP: Creating a cronjob @ 10/07/23 13:23:33.043
  STEP: Ensuring more than one job is running at a time @ 10/07/23 13:23:33.05
  E1007 13:23:33.390512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:34.390613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:35.390659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:36.390749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:37.391603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:38.391686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:39.392489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:40.392587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:41.393208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:42.393290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:43.393596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:44.394439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:45.394994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:46.395094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:47.395129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:48.395316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:49.396241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:50.396335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:51.396381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:52.396501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:53.397564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:54.397718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:55.398734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:56.399174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:57.399987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:58.400064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:23:59.400151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:00.400252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:01.400493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:02.401545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:03.401646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:04.401820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:05.402432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:06.402771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:07.403467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:08.403558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:09.404327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:10.404490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:11.405582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:12.406095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:13.406687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:14.406890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:15.407203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:16.407285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:17.407370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:18.407465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:19.408311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:20.408487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:21.409558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:22.409730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:23.410632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:24.410705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:25.411565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:26.411903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:27.412456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:28.412489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:29.413559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:30.413648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:31.413694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:32.414165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:33.414678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:34.414772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:35.415758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:36.415987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:37.416083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:38.416184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:39.417202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:40.417269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:41.417377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:42.417631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:43.417716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:44.417880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:45.418592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:46.418940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:47.419117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:48.419336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:49.419800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:50.419899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:51.419984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:52.420076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:53.420161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:54.420195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:55.420685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:56.420891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:57.421555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:58.421647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:24:59.421694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:00.421837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/07/23 13:25:01.055
  STEP: Removing cronjob @ 10/07/23 13:25:01.057
  Oct  7 13:25:01.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8949" for this suite. @ 10/07/23 13:25:01.067
â€¢ [88.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/07/23 13:25:01.075
  Oct  7 13:25:01.075: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:25:01.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:25:01.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:25:01.106
  STEP: Creating projection with secret that has name projected-secret-test-5539b77f-6d6e-4a35-ab64-9a267b7fa0b4 @ 10/07/23 13:25:01.109
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:25:01.113
  E1007 13:25:01.422495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:02.422573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:25:03.13
  Oct  7 13:25:03.133: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-secrets-67a328c8-ab26-4d47-97c3-49b83b6850ef container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:25:03.15
  Oct  7 13:25:03.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-638" for this suite. @ 10/07/23 13:25:03.165
â€¢ [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/07/23 13:25:03.172
  Oct  7 13:25:03.172: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename subpath @ 10/07/23 13:25:03.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:25:03.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:25:03.188
  STEP: Setting up data @ 10/07/23 13:25:03.19
  STEP: Creating pod pod-subpath-test-configmap-rk42 @ 10/07/23 13:25:03.198
  STEP: Creating a pod to test atomic-volume-subpath @ 10/07/23 13:25:03.198
  E1007 13:25:03.423035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:04.423134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:05.423209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:06.424195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:07.424296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:08.424389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:09.424447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:10.424512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:11.425005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:12.425558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:13.426087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:14.426276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:15.427045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:16.427408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:17.428255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:18.428456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:19.429184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:20.430044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:21.430125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:22.430256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:23.431321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:24.431504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:25.432047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:26.432356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:25:27.258
  Oct  7 13:25:27.260: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-subpath-test-configmap-rk42 container test-container-subpath-configmap-rk42: <nil>
  STEP: delete the pod @ 10/07/23 13:25:27.267
  STEP: Deleting pod pod-subpath-test-configmap-rk42 @ 10/07/23 13:25:27.282
  Oct  7 13:25:27.282: INFO: Deleting pod "pod-subpath-test-configmap-rk42" in namespace "subpath-2155"
  Oct  7 13:25:27.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2155" for this suite. @ 10/07/23 13:25:27.288
â€¢ [24.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 10/07/23 13:25:27.298
  Oct  7 13:25:27.298: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-pred @ 10/07/23 13:25:27.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:25:27.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:25:27.315
  Oct  7 13:25:27.318: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct  7 13:25:27.325: INFO: Waiting for terminating namespaces to be deleted...
  Oct  7 13:25:27.328: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-0-122 before test
  Oct  7 13:25:27.333: INFO: concurrent-28278085-nsfzc from cronjob-8949 started at 2023-10-07 13:25:00 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.333: INFO: 	Container c ready: true, restart count 0
  Oct  7 13:25:27.333: INFO: nginx-ingress-controller-kubernetes-worker-ndczw from ingress-nginx-kubernetes-worker started at 2023-10-07 12:10:31 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.333: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 13:25:27.333: INFO: calico-node-s77kx from kube-system started at 2023-10-07 12:09:50 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.333: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 13:25:27.333: INFO: sonobuoy-e2e-job-71352699346043a1 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 13:25:27.333: INFO: 	Container e2e ready: true, restart count 0
  Oct  7 13:25:27.333: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 13:25:27.333: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-fq6js from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 13:25:27.333: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 13:25:27.333: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 13:25:27.333: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-221 before test
  Oct  7 13:25:27.337: INFO: concurrent-28278084-9q4mk from cronjob-8949 started at 2023-10-07 13:24:00 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.337: INFO: 	Container c ready: true, restart count 0
  Oct  7 13:25:27.337: INFO: nginx-ingress-controller-kubernetes-worker-mdtth from ingress-nginx-kubernetes-worker started at 2023-10-07 13:23:30 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.337: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 13:25:27.337: INFO: calico-node-v7ff9 from kube-system started at 2023-10-07 12:06:03 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.337: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 13:25:27.337: INFO: sonobuoy from sonobuoy started at 2023-10-07 12:16:32 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.337: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct  7 13:25:27.337: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-nf7ln from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 13:25:27.337: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 13:25:27.337: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct  7 13:25:27.337: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-40-4 before test
  Oct  7 13:25:27.342: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-gvvtf from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.342: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct  7 13:25:27.342: INFO: nginx-ingress-controller-kubernetes-worker-44xxd from ingress-nginx-kubernetes-worker started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.342: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct  7 13:25:27.342: INFO: calico-node-z4q47 from kube-system started at 2023-10-07 12:03:53 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.342: INFO: 	Container calico-node ready: true, restart count 0
  Oct  7 13:25:27.342: INFO: coredns-59cfb5bf46-gn6vc from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.342: INFO: 	Container coredns ready: true, restart count 0
  Oct  7 13:25:27.342: INFO: kube-state-metrics-775d9f4f79-k2ppl from kube-system started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.342: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct  7 13:25:27.342: INFO: metrics-server-v0.6.3-69d7fbfdf8-sl9zx from kube-system started at 2023-10-07 12:04:23 +0000 UTC (2 container statuses recorded)
  Oct  7 13:25:27.342: INFO: 	Container metrics-server ready: true, restart count 0
  Oct  7 13:25:27.342: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct  7 13:25:27.342: INFO: dashboard-metrics-scraper-5dd7cb5fc-8vd5q from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.343: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct  7 13:25:27.343: INFO: kubernetes-dashboard-7b899cb9d9-bcdwj from kubernetes-dashboard started at 2023-10-07 12:04:23 +0000 UTC (1 container statuses recorded)
  Oct  7 13:25:27.343: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct  7 13:25:27.343: INFO: sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-m8dx5 from sonobuoy started at 2023-10-07 12:16:34 +0000 UTC (2 container statuses recorded)
  Oct  7 13:25:27.343: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct  7 13:25:27.343: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-0-122 @ 10/07/23 13:25:27.36
  STEP: verifying the node has the label node ip-172-31-31-221 @ 10/07/23 13:25:27.37
  STEP: verifying the node has the label node ip-172-31-40-4 @ 10/07/23 13:25:27.386
  Oct  7 13:25:27.399: INFO: Pod concurrent-28278084-9q4mk requesting resource cpu=0m on Node ip-172-31-31-221
  Oct  7 13:25:27.399: INFO: Pod concurrent-28278085-nsfzc requesting resource cpu=0m on Node ip-172-31-0-122
  Oct  7 13:25:27.399: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-gvvtf requesting resource cpu=10m on Node ip-172-31-40-4
  Oct  7 13:25:27.399: INFO: Pod nginx-ingress-controller-kubernetes-worker-44xxd requesting resource cpu=0m on Node ip-172-31-40-4
  Oct  7 13:25:27.399: INFO: Pod nginx-ingress-controller-kubernetes-worker-mdtth requesting resource cpu=0m on Node ip-172-31-31-221
  Oct  7 13:25:27.399: INFO: Pod nginx-ingress-controller-kubernetes-worker-ndczw requesting resource cpu=0m on Node ip-172-31-0-122
  Oct  7 13:25:27.399: INFO: Pod calico-node-s77kx requesting resource cpu=250m on Node ip-172-31-0-122
  Oct  7 13:25:27.399: INFO: Pod calico-node-v7ff9 requesting resource cpu=250m on Node ip-172-31-31-221
  Oct  7 13:25:27.400: INFO: Pod calico-node-z4q47 requesting resource cpu=250m on Node ip-172-31-40-4
  Oct  7 13:25:27.400: INFO: Pod coredns-59cfb5bf46-gn6vc requesting resource cpu=100m on Node ip-172-31-40-4
  Oct  7 13:25:27.400: INFO: Pod kube-state-metrics-775d9f4f79-k2ppl requesting resource cpu=0m on Node ip-172-31-40-4
  Oct  7 13:25:27.400: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-sl9zx requesting resource cpu=5m on Node ip-172-31-40-4
  Oct  7 13:25:27.400: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-8vd5q requesting resource cpu=0m on Node ip-172-31-40-4
  Oct  7 13:25:27.400: INFO: Pod kubernetes-dashboard-7b899cb9d9-bcdwj requesting resource cpu=0m on Node ip-172-31-40-4
  Oct  7 13:25:27.400: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-31-221
  Oct  7 13:25:27.400: INFO: Pod sonobuoy-e2e-job-71352699346043a1 requesting resource cpu=0m on Node ip-172-31-0-122
  Oct  7 13:25:27.400: INFO: Pod sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-fq6js requesting resource cpu=0m on Node ip-172-31-0-122
  Oct  7 13:25:27.400: INFO: Pod sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-m8dx5 requesting resource cpu=0m on Node ip-172-31-40-4
  Oct  7 13:25:27.400: INFO: Pod sonobuoy-systemd-logs-daemon-set-f9a0c2cc26714054-nf7ln requesting resource cpu=0m on Node ip-172-31-31-221
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/07/23 13:25:27.4
  Oct  7 13:25:27.400: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-31-221
  Oct  7 13:25:27.409: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-40-4
  Oct  7 13:25:27.415: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-0-122
  E1007 13:25:27.433324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:28.433463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:29.433553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/07/23 13:25:29.445
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21a6bc1a-2963-49d4-8265-c8497174b561.178bd6224bd0c2b4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6119/filler-pod-21a6bc1a-2963-49d4-8265-c8497174b561 to ip-172-31-40-4] @ 10/07/23 13:25:29.448
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21a6bc1a-2963-49d4-8265-c8497174b561.178bd6226edbe7a6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/07/23 13:25:29.448
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21a6bc1a-2963-49d4-8265-c8497174b561.178bd6226ff71d46], Reason = [Created], Message = [Created container filler-pod-21a6bc1a-2963-49d4-8265-c8497174b561] @ 10/07/23 13:25:29.448
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21a6bc1a-2963-49d4-8265-c8497174b561.178bd62274fd28b5], Reason = [Started], Message = [Started container filler-pod-21a6bc1a-2963-49d4-8265-c8497174b561] @ 10/07/23 13:25:29.448
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-32d8e417-c37b-4a37-8986-f9a24a81a919.178bd6224b695fc6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6119/filler-pod-32d8e417-c37b-4a37-8986-f9a24a81a919 to ip-172-31-31-221] @ 10/07/23 13:25:29.448
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-32d8e417-c37b-4a37-8986-f9a24a81a919.178bd6226e664f3f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/07/23 13:25:29.448
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-32d8e417-c37b-4a37-8986-f9a24a81a919.178bd6226f6b7273], Reason = [Created], Message = [Created container filler-pod-32d8e417-c37b-4a37-8986-f9a24a81a919] @ 10/07/23 13:25:29.448
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-32d8e417-c37b-4a37-8986-f9a24a81a919.178bd622739a4f05], Reason = [Started], Message = [Started container filler-pod-32d8e417-c37b-4a37-8986-f9a24a81a919] @ 10/07/23 13:25:29.449
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52d030c1-907b-4310-b8c4-eb284abca371.178bd6224c2b2c1e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6119/filler-pod-52d030c1-907b-4310-b8c4-eb284abca371 to ip-172-31-0-122] @ 10/07/23 13:25:29.449
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52d030c1-907b-4310-b8c4-eb284abca371.178bd6226ebd7cef], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/07/23 13:25:29.449
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52d030c1-907b-4310-b8c4-eb284abca371.178bd6226fa2835e], Reason = [Created], Message = [Created container filler-pod-52d030c1-907b-4310-b8c4-eb284abca371] @ 10/07/23 13:25:29.449
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52d030c1-907b-4310-b8c4-eb284abca371.178bd62274b194ea], Reason = [Started], Message = [Started container filler-pod-52d030c1-907b-4310-b8c4-eb284abca371] @ 10/07/23 13:25:29.449
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.178bd622c4d7877b], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 10/07/23 13:25:29.458
  E1007 13:25:30.434329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-0-122 @ 10/07/23 13:25:30.459
  STEP: verifying the node doesn't have the label node @ 10/07/23 13:25:30.471
  STEP: removing the label node off the node ip-172-31-31-221 @ 10/07/23 13:25:30.48
  STEP: verifying the node doesn't have the label node @ 10/07/23 13:25:30.493
  STEP: removing the label node off the node ip-172-31-40-4 @ 10/07/23 13:25:30.496
  STEP: verifying the node doesn't have the label node @ 10/07/23 13:25:30.51
  Oct  7 13:25:30.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6119" for this suite. @ 10/07/23 13:25:30.517
â€¢ [3.225 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 10/07/23 13:25:30.523
  Oct  7 13:25:30.523: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 13:25:30.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:25:30.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:25:30.542
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3813 @ 10/07/23 13:25:30.545
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/07/23 13:25:30.553
  STEP: creating service externalsvc in namespace services-3813 @ 10/07/23 13:25:30.553
  STEP: creating replication controller externalsvc in namespace services-3813 @ 10/07/23 13:25:30.573
  I1007 13:25:30.581901      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3813, replica count: 2
  E1007 13:25:31.434376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:32.434462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:33.434647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1007 13:25:33.632954      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/07/23 13:25:33.637
  Oct  7 13:25:33.649: INFO: Creating new exec pod
  E1007 13:25:34.434736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:35.434879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:35.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-3813 exec execpodb8m6q -- /bin/sh -x -c nslookup clusterip-service.services-3813.svc.cluster.local'
  Oct  7 13:25:35.888: INFO: stderr: "+ nslookup clusterip-service.services-3813.svc.cluster.local\n"
  Oct  7 13:25:35.888: INFO: stdout: "Server:\t\t10.152.183.248\nAddress:\t10.152.183.248#53\n\nclusterip-service.services-3813.svc.cluster.local\tcanonical name = externalsvc.services-3813.svc.cluster.local.\nName:\texternalsvc.services-3813.svc.cluster.local\nAddress: 10.152.183.253\n\n"
  Oct  7 13:25:35.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3813, will wait for the garbage collector to delete the pods @ 10/07/23 13:25:35.893
  Oct  7 13:25:35.955: INFO: Deleting ReplicationController externalsvc took: 7.387091ms
  Oct  7 13:25:36.056: INFO: Terminating ReplicationController externalsvc pods took: 100.89681ms
  E1007 13:25:36.435220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:37.435290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:38.435542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:39.072: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-3813" for this suite. @ 10/07/23 13:25:39.087
â€¢ [8.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 10/07/23 13:25:39.095
  Oct  7 13:25:39.095: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 13:25:39.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:25:39.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:25:39.113
  STEP: Creating pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599 @ 10/07/23 13:25:39.116
  E1007 13:25:39.436206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:40.436358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 13:25:41.134
  Oct  7 13:25:41.136: INFO: Initial restart count of pod liveness-dd924655-872c-4112-933c-0b261c5f5794 is 0
  Oct  7 13:25:41.139: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:41.437309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:42.437542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:43.144: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:43.438535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:44.438629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:45.147: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:45.439075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:46.439188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:47.151: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:47.439259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:48.439366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:49.155: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:49.440384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:50.440511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:51.170: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:51.441169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:52.441255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:53.175: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:53.441536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:54.441651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:55.179: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:55.441734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:56.442223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:57.182: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:57.442875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:25:58.442967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:25:59.186: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:25:59.443054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:00.443091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:01.190: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  Oct  7 13:26:01.190: INFO: Restart count of pod container-probe-4599/liveness-dd924655-872c-4112-933c-0b261c5f5794 is now 1 (20.054098991s elapsed)
  E1007 13:26:01.443120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:02.443213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:03.194: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:03.443649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:04.443735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:05.198: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:05.444121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:06.444480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:07.203: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:07.445554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:08.445650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:09.207: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:09.446583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:10.446760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:11.210: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:11.446847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:12.447020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:13.214: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:13.447640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:14.447805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:15.219: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:15.448342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:16.448483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:17.223: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:17.448579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:18.449565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:19.227: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:19.450315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:20.450344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:21.230: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  Oct  7 13:26:21.230: INFO: Restart count of pod container-probe-4599/liveness-dd924655-872c-4112-933c-0b261c5f5794 is now 2 (40.093531087s elapsed)
  E1007 13:26:21.450440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:22.451445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:23.234: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:23.451982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:24.452070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:25.237: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:25.453108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:26.453372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:27.242: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:27.454359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:28.454437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:29.245: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:29.454557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:30.454648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:31.249: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:31.455548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:32.455791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:33.253: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:33.456801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:34.456877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:35.257: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:35.456977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:36.457374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:37.261: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:37.457534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:38.457618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:39.265: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:39.457684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:40.457775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:41.269: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  Oct  7 13:26:41.269: INFO: Restart count of pod container-probe-4599/liveness-dd924655-872c-4112-933c-0b261c5f5794 is now 3 (1m0.132891441s elapsed)
  E1007 13:26:41.457841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:42.457940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:43.273: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:43.458088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:44.458172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:45.277: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:45.458222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:46.458249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:47.281: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:47.459083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:48.459169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:49.286: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:49.459262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:50.459362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:51.289: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:51.460259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:52.460328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:53.292: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:53.460800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:54.461513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:55.296: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:55.462129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:56.462329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:57.299: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:57.463225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:26:58.463353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:26:59.303: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:26:59.464097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:00.464749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:01.307: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  Oct  7 13:27:01.307: INFO: Restart count of pod container-probe-4599/liveness-dd924655-872c-4112-933c-0b261c5f5794 is now 4 (1m20.17101638s elapsed)
  E1007 13:27:01.465014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:02.465535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:03.312: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:03.465969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:04.466063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:05.316: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:05.466613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:06.466932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:07.320: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:07.467640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:08.467815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:09.325: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:09.468400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:10.468477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:11.328: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:11.469544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:12.469703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:13.331: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:13.469836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:14.469990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:15.336: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:15.470610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:16.470967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:17.340: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:17.471553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:18.471650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:19.344: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:19.472405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:20.472482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:21.347: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:21.473455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:22.473543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:23.351: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:23.473625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:24.474446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:25.355: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:25.475350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:26.475446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:27.359: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:27.476217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:28.477037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:29.363: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:29.477277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:30.478303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:31.366: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:31.479102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:32.479840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:33.372: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:33.480470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:34.481539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:35.376: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:35.481624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:36.481709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:37.381: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:37.482511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:38.482772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:39.385: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:39.482857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:40.483841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:41.389: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:41.484841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:42.485542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:43.393: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:43.486267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:44.486930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:45.397: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:45.487365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:46.487465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:47.401: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:47.488382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:48.488478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:49.405: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:49.489286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:50.489403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:51.409: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:51.490337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:52.490433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:53.413: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:53.490866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:54.491009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:55.417: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:55.491686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:56.491778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:57.421: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:57.491805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:27:58.492476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:27:59.424: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  E1007 13:27:59.492848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:00.493541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:01.429: INFO: Get pod liveness-dd924655-872c-4112-933c-0b261c5f5794 in namespace container-probe-4599
  Oct  7 13:28:01.429: INFO: Restart count of pod container-probe-4599/liveness-dd924655-872c-4112-933c-0b261c5f5794 is now 5 (2m20.292797609s elapsed)
  Oct  7 13:28:01.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:28:01.433
  STEP: Destroying namespace "container-probe-4599" for this suite. @ 10/07/23 13:28:01.444
â€¢ [142.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 10/07/23 13:28:01.451
  Oct  7 13:28:01.451: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 13:28:01.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:01.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:01.471
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:28:01.473
  E1007 13:28:01.494575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:02.494709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:03.495304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:04.495437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:05.495997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:28:05.496
  Oct  7 13:28:05.499: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-d6dd4c09-55b3-439a-8520-700eb2da4ec8 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:28:05.511
  Oct  7 13:28:05.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4497" for this suite. @ 10/07/23 13:28:05.53
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 10/07/23 13:28:05.541
  Oct  7 13:28:05.541: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/07/23 13:28:05.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:05.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:05.56
  Oct  7 13:28:05.562: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:28:06.496553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:07.497574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:08.498421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:08.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9584" for this suite. @ 10/07/23 13:28:08.657
â€¢ [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 10/07/23 13:28:08.664
  Oct  7 13:28:08.664: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename runtimeclass @ 10/07/23 13:28:08.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:08.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:08.686
  Oct  7 13:28:08.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7793" for this suite. @ 10/07/23 13:28:08.717
â€¢ [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/07/23 13:28:08.723
  Oct  7 13:28:08.723: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename daemonsets @ 10/07/23 13:28:08.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:08.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:08.792
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/07/23 13:28:08.814
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/07/23 13:28:08.817
  Oct  7 13:28:08.824: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:08.824: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:08.826: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:28:08.826: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  E1007 13:28:09.498584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:09.831: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:09.831: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:09.835: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct  7 13:28:09.835: INFO: Node ip-172-31-31-221 is running 0 daemon pod, expected 1
  E1007 13:28:10.498608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:10.832: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:10.832: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:10.838: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 13:28:10.838: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/07/23 13:28:10.842
  Oct  7 13:28:10.857: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:10.857: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:10.864: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 13:28:10.864: INFO: Node ip-172-31-31-221 is running 0 daemon pod, expected 1
  E1007 13:28:11.498800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:11.868: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:11.868: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:11.871: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 13:28:11.871: INFO: Node ip-172-31-31-221 is running 0 daemon pod, expected 1
  E1007 13:28:12.499174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:12.868: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:12.868: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:28:12.878: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 13:28:12.878: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/07/23 13:28:12.878
  STEP: Deleting DaemonSet "daemon-set" @ 10/07/23 13:28:12.921
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6208, will wait for the garbage collector to delete the pods @ 10/07/23 13:28:12.921
  Oct  7 13:28:13.017: INFO: Deleting DaemonSet.extensions daemon-set took: 22.651432ms
  Oct  7 13:28:13.117: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.328839ms
  E1007 13:28:13.499197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:14.323: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:28:14.323: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct  7 13:28:14.327: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30829"},"items":null}

  Oct  7 13:28:14.330: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30829"},"items":null}

  Oct  7 13:28:14.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6208" for this suite. @ 10/07/23 13:28:14.347
â€¢ [5.632 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 10/07/23 13:28:14.355
  Oct  7 13:28:14.355: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 13:28:14.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:14.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:14.401
  E1007 13:28:14.499457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:15.499553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:16.499712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:17.500648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:18.500949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:19.501560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:20.502344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:21.502636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:22.503107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:23.503262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:24.503965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:25.504726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:26.505312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:27.505612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:28.506595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:29.506751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:30.507692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:31.508002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:32.508674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:33.509556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:34.509985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:35.510199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:36.473: INFO: Container started at 2023-10-07 13:28:15 +0000 UTC, pod became ready at 2023-10-07 13:28:34 +0000 UTC
  Oct  7 13:28:36.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8721" for this suite. @ 10/07/23 13:28:36.476
â€¢ [22.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 10/07/23 13:28:36.483
  Oct  7 13:28:36.483: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename security-context @ 10/07/23 13:28:36.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:36.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:36.499
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/07/23 13:28:36.502
  E1007 13:28:36.510749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:37.510907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:38.511098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:28:38.519
  Oct  7 13:28:38.523: INFO: Trying to get logs from node ip-172-31-31-221 pod security-context-f4c18052-a708-4057-b3ad-0b5713bad1d6 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 13:28:38.529
  Oct  7 13:28:38.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9304" for this suite. @ 10/07/23 13:28:38.544
â€¢ [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 10/07/23 13:28:38.551
  Oct  7 13:28:38.551: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 13:28:38.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:38.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:38.568
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/07/23 13:28:38.57
  Oct  7 13:28:38.571: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:28:39.511725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:39.865: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:28:40.512503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:41.512607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:42.512691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:43.513419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:44.514269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:44.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4773" for this suite. @ 10/07/23 13:28:44.99
â€¢ [6.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 10/07/23 13:28:44.996
  Oct  7 13:28:44.996: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 13:28:44.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:45.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:45.013
  STEP: Counting existing ResourceQuota @ 10/07/23 13:28:45.016
  E1007 13:28:45.514583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:46.515582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:47.516438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:48.516477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:49.517549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/07/23 13:28:50.021
  STEP: Ensuring resource quota status is calculated @ 10/07/23 13:28:50.027
  E1007 13:28:50.518272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:51.518522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:52.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8865" for this suite. @ 10/07/23 13:28:52.034
â€¢ [7.043 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 10/07/23 13:28:52.04
  Oct  7 13:28:52.040: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 13:28:52.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:28:52.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:28:52.058
  STEP: creating service endpoint-test2 in namespace services-3298 @ 10/07/23 13:28:52.061
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3298 to expose endpoints map[] @ 10/07/23 13:28:52.071
  Oct  7 13:28:52.084: INFO: successfully validated that service endpoint-test2 in namespace services-3298 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3298 @ 10/07/23 13:28:52.084
  E1007 13:28:52.519390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:53.519484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3298 to expose endpoints map[pod1:[80]] @ 10/07/23 13:28:54.107
  Oct  7 13:28:54.117: INFO: successfully validated that service endpoint-test2 in namespace services-3298 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/07/23 13:28:54.117
  Oct  7 13:28:54.118: INFO: Creating new exec pod
  E1007 13:28:54.520336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:55.520625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:56.520731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:28:57.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-3298 exec execpoddslqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct  7 13:28:57.260: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct  7 13:28:57.261: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 13:28:57.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-3298 exec execpoddslqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  Oct  7 13:28:57.379: INFO: stderr: "+ nc -v -t -w 2 10.152.183.62 80\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct  7 13:28:57.379: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3298 @ 10/07/23 13:28:57.379
  E1007 13:28:57.521503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:28:58.521686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3298 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/07/23 13:28:59.395
  Oct  7 13:28:59.407: INFO: successfully validated that service endpoint-test2 in namespace services-3298 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/07/23 13:28:59.408
  E1007 13:28:59.522300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:29:00.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-3298 exec execpoddslqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E1007 13:29:00.523085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:29:00.533: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct  7 13:29:00.533: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 13:29:00.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-3298 exec execpoddslqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  Oct  7 13:29:00.659: INFO: stderr: "+ nc -v -t -w 2 10.152.183.62 80\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct  7 13:29:00.659: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3298 @ 10/07/23 13:29:00.659
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3298 to expose endpoints map[pod2:[80]] @ 10/07/23 13:29:00.67
  Oct  7 13:29:00.686: INFO: successfully validated that service endpoint-test2 in namespace services-3298 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/07/23 13:29:00.686
  E1007 13:29:01.523189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:29:01.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-3298 exec execpoddslqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct  7 13:29:01.804: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct  7 13:29:01.804: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 13:29:01.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-3298 exec execpoddslqj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  Oct  7 13:29:01.917: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.62 80\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n"
  Oct  7 13:29:01.917: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3298 @ 10/07/23 13:29:01.917
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3298 to expose endpoints map[] @ 10/07/23 13:29:01.933
  E1007 13:29:02.524191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:29:02.949: INFO: successfully validated that service endpoint-test2 in namespace services-3298 exposes endpoints map[]
  Oct  7 13:29:02.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3298" for this suite. @ 10/07/23 13:29:02.978
â€¢ [10.944 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 10/07/23 13:29:02.988
  Oct  7 13:29:02.988: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 13:29:02.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:29:03.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:29:03.004
  STEP: Setting up server cert @ 10/07/23 13:29:03.025
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 13:29:03.364
  STEP: Deploying the webhook pod @ 10/07/23 13:29:03.371
  STEP: Wait for the deployment to be ready @ 10/07/23 13:29:03.383
  Oct  7 13:29:03.390: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1007 13:29:03.524570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:04.524667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/07/23 13:29:05.401
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 13:29:05.409
  E1007 13:29:05.525435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:29:06.410: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct  7 13:29:06.417: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:29:06.525813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/07/23 13:29:06.926
  STEP: Creating a custom resource that should be denied by the webhook @ 10/07/23 13:29:06.941
  E1007 13:29:07.525900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:08.525975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/07/23 13:29:08.963
  STEP: Updating the custom resource with disallowed data should be denied @ 10/07/23 13:29:08.97
  STEP: Deleting the custom resource should be denied @ 10/07/23 13:29:08.979
  STEP: Remove the offending key and value from the custom resource data @ 10/07/23 13:29:08.984
  STEP: Deleting the updated custom resource should be successful @ 10/07/23 13:29:08.992
  Oct  7 13:29:09.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1007 13:29:09.526319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-6795" for this suite. @ 10/07/23 13:29:09.564
  STEP: Destroying namespace "webhook-markers-3384" for this suite. @ 10/07/23 13:29:09.571
â€¢ [6.592 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 10/07/23 13:29:09.58
  Oct  7 13:29:09.580: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 13:29:09.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:29:09.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:29:09.596
  STEP: Creating service test in namespace statefulset-6692 @ 10/07/23 13:29:09.599
  STEP: Creating a new StatefulSet @ 10/07/23 13:29:09.605
  Oct  7 13:29:09.617: INFO: Found 0 stateful pods, waiting for 3
  E1007 13:29:10.526456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:11.527066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:12.527156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:13.527331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:14.527416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:15.527707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:16.527801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:17.527915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:18.527990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:19.528083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:29:19.622: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:29:19.622: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:29:19.622: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:29:19.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-6692 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 13:29:19.793: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 13:29:19.793: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 13:29:19.793: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1007 13:29:20.528487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:21.528578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:22.528652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:23.529659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:24.529762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:25.530143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:26.530299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:27.530495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:28.530562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:29.530844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/07/23 13:29:29.806
  Oct  7 13:29:29.826: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/07/23 13:29:29.826
  E1007 13:29:30.531880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:31.532025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:32.532111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:33.533034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:34.533126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:35.533520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:36.534460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:37.534555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:38.534627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:39.534789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 10/07/23 13:29:39.84
  Oct  7 13:29:39.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-6692 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 13:29:39.962: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct  7 13:29:39.962: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 13:29:39.962: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1007 13:29:40.535021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:41.535121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:42.535310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:43.535504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:44.535568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:45.535962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:46.536617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:47.536741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:48.536808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:49.537555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 10/07/23 13:29:49.982
  Oct  7 13:29:49.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-6692 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 13:29:50.102: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 13:29:50.102: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 13:29:50.102: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1007 13:29:50.537815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:51.537938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:52.538108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:53.538261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:54.538350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:55.538731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:56.538971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:57.539888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:58.539933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:29:59.540018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:00.137: INFO: Updating stateful set ss2
  E1007 13:30:00.540443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:01.540485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:02.541555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:03.541637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:04.541878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:05.542152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:06.542308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:07.542478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:08.542623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:09.542788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 10/07/23 13:30:10.152
  Oct  7 13:30:10.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-6692 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 13:30:10.282: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct  7 13:30:10.282: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 13:30:10.282: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1007 13:30:10.543833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:11.543918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:12.543997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:13.544085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:14.544193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:15.545172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:16.545657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:17.545904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:18.545975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:19.546127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:20.303: INFO: Waiting for StatefulSet statefulset-6692/ss2 to complete update
  Oct  7 13:30:20.303: INFO: Waiting for Pod statefulset-6692/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  E1007 13:30:20.546515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:21.546614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:22.546841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:23.546932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:24.547039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:25.547895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:26.548066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:27.548507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:28.549543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:29.549958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:30.312: INFO: Deleting all statefulset in ns statefulset-6692
  Oct  7 13:30:30.316: INFO: Scaling statefulset ss2 to 0
  E1007 13:30:30.550986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:31.551124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:32.551200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:33.551374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:34.551623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:35.552682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:36.552763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:37.553556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:38.553753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:39.553864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:40.348: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 13:30:40.351: INFO: Deleting statefulset ss2
  Oct  7 13:30:40.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6692" for this suite. @ 10/07/23 13:30:40.37
â€¢ [90.796 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 10/07/23 13:30:40.377
  Oct  7 13:30:40.377: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:30:40.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:30:40.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:30:40.397
  STEP: creating Agnhost RC @ 10/07/23 13:30:40.4
  Oct  7 13:30:40.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-5373 create -f -'
  Oct  7 13:30:40.549: INFO: stderr: ""
  Oct  7 13:30:40.549: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/07/23 13:30:40.549
  E1007 13:30:40.554717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:41.553: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:30:41.553: INFO: Found 1 / 1
  Oct  7 13:30:41.553: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/07/23 13:30:41.553
  E1007 13:30:41.555380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:41.556: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:30:41.556: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct  7 13:30:41.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-5373 patch pod agnhost-primary-w7vsx -p {"metadata":{"annotations":{"x":"y"}}}'
  Oct  7 13:30:41.615: INFO: stderr: ""
  Oct  7 13:30:41.615: INFO: stdout: "pod/agnhost-primary-w7vsx patched\n"
  STEP: checking annotations @ 10/07/23 13:30:41.615
  Oct  7 13:30:41.619: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct  7 13:30:41.619: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct  7 13:30:41.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5373" for this suite. @ 10/07/23 13:30:41.624
â€¢ [1.253 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 10/07/23 13:30:41.63
  Oct  7 13:30:41.630: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:30:41.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:30:41.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:30:41.648
  STEP: Creating configMap with name projected-configmap-test-volume-da5d4ce6-2b72-47b7-b3f4-c7c5ff3a571d @ 10/07/23 13:30:41.65
  STEP: Creating a pod to test consume configMaps @ 10/07/23 13:30:41.655
  E1007 13:30:42.556488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:43.557574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:44.557651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:45.557797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:30:45.674
  Oct  7 13:30:45.677: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-configmaps-08e0c572-c377-49a7-95e8-6e3bb7e3e360 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:30:45.693
  Oct  7 13:30:45.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6315" for this suite. @ 10/07/23 13:30:45.711
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 10/07/23 13:30:45.72
  Oct  7 13:30:45.720: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svcaccounts @ 10/07/23 13:30:45.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:30:45.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:30:45.739
  E1007 13:30:46.558742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:47.558921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 10/07/23 13:30:47.767
  Oct  7 13:30:47.767: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9954 pod-service-account-d89e2943-5bd7-47a7-969b-fa9ba204a7a4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/07/23 13:30:47.883
  Oct  7 13:30:47.883: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9954 pod-service-account-d89e2943-5bd7-47a7-969b-fa9ba204a7a4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/07/23 13:30:48.003
  Oct  7 13:30:48.003: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9954 pod-service-account-d89e2943-5bd7-47a7-969b-fa9ba204a7a4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Oct  7 13:30:48.123: INFO: Got root ca configmap in namespace "svcaccounts-9954"
  Oct  7 13:30:48.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9954" for this suite. @ 10/07/23 13:30:48.129
â€¢ [2.415 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 10/07/23 13:30:48.135
  Oct  7 13:30:48.135: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename emptydir @ 10/07/23 13:30:48.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:30:48.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:30:48.154
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/07/23 13:30:48.157
  E1007 13:30:48.559970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:49.561010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:30:50.175
  Oct  7 13:30:50.179: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-41084ad4-36f5-4dac-8a65-88aa919ede3d container test-container: <nil>
  STEP: delete the pod @ 10/07/23 13:30:50.194
  Oct  7 13:30:50.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2301" for this suite. @ 10/07/23 13:30:50.214
â€¢ [2.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 10/07/23 13:30:50.219
  Oct  7 13:30:50.219: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename gc @ 10/07/23 13:30:50.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:30:50.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:30:50.239
  STEP: create the deployment @ 10/07/23 13:30:50.242
  W1007 13:30:50.246964      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/07/23 13:30:50.247
  E1007 13:30:50.561870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 10/07/23 13:30:50.76
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/07/23 13:30:50.769
  STEP: Gathering metrics @ 10/07/23 13:30:51.293
  W1007 13:30:51.297815      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct  7 13:30:51.297: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct  7 13:30:51.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6311" for this suite. @ 10/07/23 13:30:51.301
â€¢ [1.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/07/23 13:30:51.311
  Oct  7 13:30:51.311: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename daemonsets @ 10/07/23 13:30:51.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:30:51.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:30:51.328
  STEP: Creating simple DaemonSet "daemon-set" @ 10/07/23 13:30:51.348
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/07/23 13:30:51.356
  Oct  7 13:30:51.359: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:51.359: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:51.362: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:30:51.362: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  E1007 13:30:51.562080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:52.366: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:52.366: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:52.369: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:30:52.369: INFO: Node ip-172-31-0-122 is running 0 daemon pod, expected 1
  E1007 13:30:52.562679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:53.366: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:53.366: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:53.370: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 13:30:53.370: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/07/23 13:30:53.373
  Oct  7 13:30:53.385: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:53.386: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:53.388: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 13:30:53.388: INFO: Node ip-172-31-31-221 is running 0 daemon pod, expected 1
  E1007 13:30:53.563638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:54.393: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:54.393: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:54.396: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 13:30:54.396: INFO: Node ip-172-31-31-221 is running 0 daemon pod, expected 1
  E1007 13:30:54.563800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:55.392: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:55.392: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:55.396: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct  7 13:30:55.396: INFO: Node ip-172-31-31-221 is running 0 daemon pod, expected 1
  E1007 13:30:55.564543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:56.392: INFO: DaemonSet pods can't tolerate node ip-172-31-31-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:56.392: INFO: DaemonSet pods can't tolerate node ip-172-31-35-155 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct  7 13:30:56.396: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct  7 13:30:56.396: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/07/23 13:30:56.399
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3163, will wait for the garbage collector to delete the pods @ 10/07/23 13:30:56.399
  Oct  7 13:30:56.461: INFO: Deleting DaemonSet.extensions daemon-set took: 8.487282ms
  Oct  7 13:30:56.563: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.301368ms
  E1007 13:30:56.565568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:57.566050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:30:58.567048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:30:58.668: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct  7 13:30:58.668: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct  7 13:30:58.672: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32271"},"items":null}

  Oct  7 13:30:58.675: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32271"},"items":null}

  Oct  7 13:30:58.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3163" for this suite. @ 10/07/23 13:30:58.69
â€¢ [7.385 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/07/23 13:30:58.695
  Oct  7 13:30:58.695: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename watch @ 10/07/23 13:30:58.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:30:58.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:30:58.715
  STEP: getting a starting resourceVersion @ 10/07/23 13:30:58.717
  STEP: starting a background goroutine to produce watch events @ 10/07/23 13:30:58.719
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/07/23 13:30:58.719
  E1007 13:30:59.567370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:00.567504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:01.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9709" for this suite. @ 10/07/23 13:31:01.551
  E1007 13:31:01.568271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [2.907 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/07/23 13:31:01.604
  Oct  7 13:31:01.604: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename init-container @ 10/07/23 13:31:01.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:01.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:01.624
  STEP: creating the pod @ 10/07/23 13:31:01.63
  Oct  7 13:31:01.630: INFO: PodSpec: initContainers in spec.initContainers
  E1007 13:31:02.568498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:03.568820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:04.568886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:05.569345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:05.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1166" for this suite. @ 10/07/23 13:31:05.762
â€¢ [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/07/23 13:31:05.771
  Oct  7 13:31:05.771: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-runtime @ 10/07/23 13:31:05.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:05.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:05.788
  STEP: create the container @ 10/07/23 13:31:05.791
  W1007 13:31:05.800479      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/07/23 13:31:05.8
  E1007 13:31:06.569600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:07.570446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/07/23 13:31:07.813
  STEP: the container should be terminated @ 10/07/23 13:31:07.816
  STEP: the termination message should be set @ 10/07/23 13:31:07.816
  Oct  7 13:31:07.816: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/07/23 13:31:07.816
  Oct  7 13:31:07.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7396" for this suite. @ 10/07/23 13:31:07.833
â€¢ [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 10/07/23 13:31:07.843
  Oct  7 13:31:07.843: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:31:07.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:07.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:07.857
  STEP: Creating configMap with name configmap-test-volume-c6b5b14d-99c3-4d1c-960d-c57a08b3894c @ 10/07/23 13:31:07.859
  STEP: Creating a pod to test consume configMaps @ 10/07/23 13:31:07.865
  E1007 13:31:08.570498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:09.571410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:31:09.886
  Oct  7 13:31:09.889: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-configmaps-e2b4def4-5df9-43fe-9296-02c0e726c1df container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:31:09.895
  Oct  7 13:31:09.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4219" for this suite. @ 10/07/23 13:31:09.915
â€¢ [2.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 10/07/23 13:31:09.92
  Oct  7 13:31:09.921: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replicaset @ 10/07/23 13:31:09.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:09.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:09.938
  Oct  7 13:31:09.951: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1007 13:31:10.571936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:11.572031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:12.572177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:13.573206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:14.574230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:14.956: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/07/23 13:31:14.956
  STEP: Scaling up "test-rs" replicaset  @ 10/07/23 13:31:14.956
  Oct  7 13:31:14.963: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/07/23 13:31:14.963
  Oct  7 13:31:14.973: INFO: observed ReplicaSet test-rs in namespace replicaset-9068 with ReadyReplicas 1, AvailableReplicas 1
  Oct  7 13:31:14.984: INFO: observed ReplicaSet test-rs in namespace replicaset-9068 with ReadyReplicas 1, AvailableReplicas 1
  Oct  7 13:31:14.999: INFO: observed ReplicaSet test-rs in namespace replicaset-9068 with ReadyReplicas 1, AvailableReplicas 1
  Oct  7 13:31:15.009: INFO: observed ReplicaSet test-rs in namespace replicaset-9068 with ReadyReplicas 1, AvailableReplicas 1
  E1007 13:31:15.575001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:16.045: INFO: observed ReplicaSet test-rs in namespace replicaset-9068 with ReadyReplicas 2, AvailableReplicas 2
  E1007 13:31:16.575320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:16.619: INFO: observed Replicaset test-rs in namespace replicaset-9068 with ReadyReplicas 3 found true
  Oct  7 13:31:16.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9068" for this suite. @ 10/07/23 13:31:16.622
â€¢ [6.708 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 10/07/23 13:31:16.629
  Oct  7 13:31:16.629: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename dns @ 10/07/23 13:31:16.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:16.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:16.647
  STEP: Creating a test headless service @ 10/07/23 13:31:16.65
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9398.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9398.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/07/23 13:31:16.655
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9398.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9398.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/07/23 13:31:16.655
  STEP: creating a pod to probe DNS @ 10/07/23 13:31:16.655
  STEP: submitting the pod to kubernetes @ 10/07/23 13:31:16.655
  E1007 13:31:17.575495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:18.575591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/07/23 13:31:18.677
  STEP: looking for the results for each expected name from probers @ 10/07/23 13:31:18.681
  Oct  7 13:31:18.694: INFO: DNS probes using dns-9398/dns-test-4c491a07-8039-4b06-a982-821f352c400d succeeded

  Oct  7 13:31:18.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:31:18.697
  STEP: deleting the test headless service @ 10/07/23 13:31:18.709
  STEP: Destroying namespace "dns-9398" for this suite. @ 10/07/23 13:31:18.726
â€¢ [2.105 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 10/07/23 13:31:18.734
  Oct  7 13:31:18.734: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svcaccounts @ 10/07/23 13:31:18.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:18.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:18.75
  Oct  7 13:31:18.755: INFO: Got root ca configmap in namespace "svcaccounts-5134"
  Oct  7 13:31:18.762: INFO: Deleted root ca configmap in namespace "svcaccounts-5134"
  STEP: waiting for a new root ca configmap created @ 10/07/23 13:31:19.262
  Oct  7 13:31:19.266: INFO: Recreated root ca configmap in namespace "svcaccounts-5134"
  Oct  7 13:31:19.271: INFO: Updated root ca configmap in namespace "svcaccounts-5134"
  E1007 13:31:19.576212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 10/07/23 13:31:19.772
  Oct  7 13:31:19.776: INFO: Reconciled root ca configmap in namespace "svcaccounts-5134"
  Oct  7 13:31:19.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5134" for this suite. @ 10/07/23 13:31:19.78
â€¢ [1.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 10/07/23 13:31:19.789
  Oct  7 13:31:19.789: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:31:19.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:19.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:19.807
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:31:19.81
  E1007 13:31:20.577026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:21.577565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:22.577755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:23.577917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:31:23.833
  Oct  7 13:31:23.837: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-6f37a9c8-f8f8-4945-9f7e-1ee0fb4da979 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:31:23.844
  Oct  7 13:31:23.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7979" for this suite. @ 10/07/23 13:31:23.869
â€¢ [4.088 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 10/07/23 13:31:23.878
  Oct  7 13:31:23.878: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 13:31:23.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:23.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:23.9
  Oct  7 13:31:23.906: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:31:24.578382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/07/23 13:31:25.344
  Oct  7 13:31:25.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 create -f -'
  E1007 13:31:25.578616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:25.619: INFO: stderr: ""
  Oct  7 13:31:25.619: INFO: stdout: "e2e-test-crd-publish-openapi-4462-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct  7 13:31:25.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 delete e2e-test-crd-publish-openapi-4462-crds test-foo'
  Oct  7 13:31:25.691: INFO: stderr: ""
  Oct  7 13:31:25.691: INFO: stdout: "e2e-test-crd-publish-openapi-4462-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Oct  7 13:31:25.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 apply -f -'
  Oct  7 13:31:25.803: INFO: stderr: ""
  Oct  7 13:31:25.803: INFO: stdout: "e2e-test-crd-publish-openapi-4462-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct  7 13:31:25.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 delete e2e-test-crd-publish-openapi-4462-crds test-foo'
  Oct  7 13:31:25.858: INFO: stderr: ""
  Oct  7 13:31:25.858: INFO: stdout: "e2e-test-crd-publish-openapi-4462-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/07/23 13:31:25.858
  Oct  7 13:31:25.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 create -f -'
  Oct  7 13:31:25.960: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/07/23 13:31:25.96
  Oct  7 13:31:25.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 create -f -'
  Oct  7 13:31:26.067: INFO: rc: 1
  Oct  7 13:31:26.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 apply -f -'
  Oct  7 13:31:26.314: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/07/23 13:31:26.314
  Oct  7 13:31:26.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 create -f -'
  Oct  7 13:31:26.421: INFO: rc: 1
  Oct  7 13:31:26.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 --namespace=crd-publish-openapi-7904 apply -f -'
  Oct  7 13:31:26.535: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/07/23 13:31:26.535
  Oct  7 13:31:26.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 explain e2e-test-crd-publish-openapi-4462-crds'
  E1007 13:31:26.579089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:26.678: INFO: stderr: ""
  Oct  7 13:31:26.678: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4462-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/07/23 13:31:26.679
  Oct  7 13:31:26.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 explain e2e-test-crd-publish-openapi-4462-crds.metadata'
  Oct  7 13:31:26.784: INFO: stderr: ""
  Oct  7 13:31:26.784: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4462-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Oct  7 13:31:26.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 explain e2e-test-crd-publish-openapi-4462-crds.spec'
  Oct  7 13:31:26.890: INFO: stderr: ""
  Oct  7 13:31:26.890: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4462-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Oct  7 13:31:26.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 explain e2e-test-crd-publish-openapi-4462-crds.spec.bars'
  Oct  7 13:31:26.996: INFO: stderr: ""
  Oct  7 13:31:26.996: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4462-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/07/23 13:31:26.996
  Oct  7 13:31:26.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=crd-publish-openapi-7904 explain e2e-test-crd-publish-openapi-4462-crds.spec.bars2'
  Oct  7 13:31:27.099: INFO: rc: 1
  E1007 13:31:27.579716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:28.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7904" for this suite. @ 10/07/23 13:31:28.381
â€¢ [4.509 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/07/23 13:31:28.387
  Oct  7 13:31:28.387: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename watch @ 10/07/23 13:31:28.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:28.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:28.404
  STEP: creating a watch on configmaps @ 10/07/23 13:31:28.406
  STEP: creating a new configmap @ 10/07/23 13:31:28.408
  STEP: modifying the configmap once @ 10/07/23 13:31:28.411
  STEP: closing the watch once it receives two notifications @ 10/07/23 13:31:28.418
  Oct  7 13:31:28.418: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6003  fda0b464-66dc-4ea4-be26-b83f12711912 32824 0 2023-10-07 13:31:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-07 13:31:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:31:28.419: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6003  fda0b464-66dc-4ea4-be26-b83f12711912 32825 0 2023-10-07 13:31:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-07 13:31:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/07/23 13:31:28.419
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/07/23 13:31:28.425
  STEP: deleting the configmap @ 10/07/23 13:31:28.426
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/07/23 13:31:28.431
  Oct  7 13:31:28.431: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6003  fda0b464-66dc-4ea4-be26-b83f12711912 32826 0 2023-10-07 13:31:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-07 13:31:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:31:28.432: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6003  fda0b464-66dc-4ea4-be26-b83f12711912 32827 0 2023-10-07 13:31:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-07 13:31:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct  7 13:31:28.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6003" for this suite. @ 10/07/23 13:31:28.435
â€¢ [0.053 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/07/23 13:31:28.44
  Oct  7 13:31:28.440: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:31:28.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:28.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:28.456
  STEP: Creating projection with secret that has name projected-secret-test-map-5215ab2c-9d5b-4e90-a345-9b951cb25a3b @ 10/07/23 13:31:28.462
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:31:28.467
  E1007 13:31:28.580717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:29.580815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:30.581148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:31.581239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:31:32.489
  Oct  7 13:31:32.492: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-projected-secrets-a0657800-bb94-4bbb-9b5c-2c18ffd84ea5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:31:32.498
  Oct  7 13:31:32.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8786" for this suite. @ 10/07/23 13:31:32.515
â€¢ [4.081 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 10/07/23 13:31:32.522
  Oct  7 13:31:32.522: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:31:32.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:32.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:32.538
  STEP: creating a replication controller @ 10/07/23 13:31:32.541
  Oct  7 13:31:32.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 create -f -'
  E1007 13:31:32.581637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:32.844: INFO: stderr: ""
  Oct  7 13:31:32.844: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/07/23 13:31:32.844
  Oct  7 13:31:32.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct  7 13:31:32.898: INFO: stderr: ""
  Oct  7 13:31:32.898: INFO: stdout: "update-demo-nautilus-jjsk7 update-demo-nautilus-n7ngm "
  Oct  7 13:31:32.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-jjsk7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:31:32.944: INFO: stderr: ""
  Oct  7 13:31:32.944: INFO: stdout: ""
  Oct  7 13:31:32.944: INFO: update-demo-nautilus-jjsk7 is created but not running
  E1007 13:31:33.582461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:34.582557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:35.588436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:36.588508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:37.589548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:37.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct  7 13:31:37.995: INFO: stderr: ""
  Oct  7 13:31:37.995: INFO: stdout: "update-demo-nautilus-jjsk7 update-demo-nautilus-n7ngm "
  Oct  7 13:31:37.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-jjsk7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:31:38.041: INFO: stderr: ""
  Oct  7 13:31:38.041: INFO: stdout: "true"
  Oct  7 13:31:38.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-jjsk7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct  7 13:31:38.091: INFO: stderr: ""
  Oct  7 13:31:38.091: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct  7 13:31:38.091: INFO: validating pod update-demo-nautilus-jjsk7
  Oct  7 13:31:38.096: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct  7 13:31:38.096: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct  7 13:31:38.096: INFO: update-demo-nautilus-jjsk7 is verified up and running
  Oct  7 13:31:38.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-n7ngm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:31:38.145: INFO: stderr: ""
  Oct  7 13:31:38.145: INFO: stdout: "true"
  Oct  7 13:31:38.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-n7ngm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct  7 13:31:38.194: INFO: stderr: ""
  Oct  7 13:31:38.194: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct  7 13:31:38.194: INFO: validating pod update-demo-nautilus-n7ngm
  Oct  7 13:31:38.200: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct  7 13:31:38.200: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct  7 13:31:38.200: INFO: update-demo-nautilus-n7ngm is verified up and running
  STEP: scaling down the replication controller @ 10/07/23 13:31:38.2
  Oct  7 13:31:38.201: INFO: scanned /root for discovery docs: <nil>
  Oct  7 13:31:38.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1007 13:31:38.589843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:39.267: INFO: stderr: ""
  Oct  7 13:31:39.267: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/07/23 13:31:39.268
  Oct  7 13:31:39.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct  7 13:31:39.317: INFO: stderr: ""
  Oct  7 13:31:39.317: INFO: stdout: "update-demo-nautilus-jjsk7 update-demo-nautilus-n7ngm "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 10/07/23 13:31:39.317
  E1007 13:31:39.589919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:40.590213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:41.590276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:42.590984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:43.591078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:44.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct  7 13:31:44.366: INFO: stderr: ""
  Oct  7 13:31:44.366: INFO: stdout: "update-demo-nautilus-jjsk7 "
  Oct  7 13:31:44.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-jjsk7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:31:44.413: INFO: stderr: ""
  Oct  7 13:31:44.413: INFO: stdout: "true"
  Oct  7 13:31:44.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-jjsk7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct  7 13:31:44.460: INFO: stderr: ""
  Oct  7 13:31:44.460: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct  7 13:31:44.460: INFO: validating pod update-demo-nautilus-jjsk7
  Oct  7 13:31:44.464: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct  7 13:31:44.464: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct  7 13:31:44.464: INFO: update-demo-nautilus-jjsk7 is verified up and running
  STEP: scaling up the replication controller @ 10/07/23 13:31:44.464
  Oct  7 13:31:44.465: INFO: scanned /root for discovery docs: <nil>
  Oct  7 13:31:44.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1007 13:31:44.592149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:45.529: INFO: stderr: ""
  Oct  7 13:31:45.529: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/07/23 13:31:45.53
  Oct  7 13:31:45.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct  7 13:31:45.579: INFO: stderr: ""
  Oct  7 13:31:45.579: INFO: stdout: "update-demo-nautilus-jjsk7 update-demo-nautilus-pj54f "
  Oct  7 13:31:45.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-jjsk7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E1007 13:31:45.592504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:45.626: INFO: stderr: ""
  Oct  7 13:31:45.626: INFO: stdout: "true"
  Oct  7 13:31:45.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-jjsk7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct  7 13:31:45.675: INFO: stderr: ""
  Oct  7 13:31:45.675: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct  7 13:31:45.675: INFO: validating pod update-demo-nautilus-jjsk7
  Oct  7 13:31:45.680: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct  7 13:31:45.680: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct  7 13:31:45.680: INFO: update-demo-nautilus-jjsk7 is verified up and running
  Oct  7 13:31:45.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-pj54f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:31:45.727: INFO: stderr: ""
  Oct  7 13:31:45.727: INFO: stdout: "true"
  Oct  7 13:31:45.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods update-demo-nautilus-pj54f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct  7 13:31:45.775: INFO: stderr: ""
  Oct  7 13:31:45.775: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct  7 13:31:45.775: INFO: validating pod update-demo-nautilus-pj54f
  Oct  7 13:31:45.780: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct  7 13:31:45.780: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct  7 13:31:45.780: INFO: update-demo-nautilus-pj54f is verified up and running
  STEP: using delete to clean up resources @ 10/07/23 13:31:45.78
  Oct  7 13:31:45.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 delete --grace-period=0 --force -f -'
  Oct  7 13:31:45.834: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 13:31:45.834: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct  7 13:31:45.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get rc,svc -l name=update-demo --no-headers'
  Oct  7 13:31:45.905: INFO: stderr: "No resources found in kubectl-9141 namespace.\n"
  Oct  7 13:31:45.905: INFO: stdout: ""
  Oct  7 13:31:45.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-9141 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct  7 13:31:45.958: INFO: stderr: ""
  Oct  7 13:31:45.958: INFO: stdout: ""
  Oct  7 13:31:45.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9141" for this suite. @ 10/07/23 13:31:45.962
â€¢ [13.447 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 10/07/23 13:31:45.969
  Oct  7 13:31:45.970: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename podtemplate @ 10/07/23 13:31:45.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:45.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:45.989
  STEP: Create set of pod templates @ 10/07/23 13:31:45.991
  Oct  7 13:31:45.996: INFO: created test-podtemplate-1
  Oct  7 13:31:46.000: INFO: created test-podtemplate-2
  Oct  7 13:31:46.003: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/07/23 13:31:46.003
  STEP: delete collection of pod templates @ 10/07/23 13:31:46.006
  Oct  7 13:31:46.006: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/07/23 13:31:46.024
  Oct  7 13:31:46.024: INFO: requesting list of pod templates to confirm quantity
  Oct  7 13:31:46.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7328" for this suite. @ 10/07/23 13:31:46.03
â€¢ [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 10/07/23 13:31:46.037
  Oct  7 13:31:46.037: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 13:31:46.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:46.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:46.054
  STEP: set up a multi version CRD @ 10/07/23 13:31:46.057
  Oct  7 13:31:46.057: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:31:46.592761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:47.593133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:48.593730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 10/07/23 13:31:49.215
  STEP: check the new version name is served @ 10/07/23 13:31:49.227
  E1007 13:31:49.593818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 10/07/23 13:31:49.95
  STEP: check the other version is not changed @ 10/07/23 13:31:50.59
  E1007 13:31:50.593798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:51.594811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:52.594915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:31:53.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9872" for this suite. @ 10/07/23 13:31:53.106
â€¢ [7.078 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 10/07/23 13:31:53.115
  Oct  7 13:31:53.115: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:31:53.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:31:53.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:31:53.137
  STEP: Creating configMap with name cm-test-opt-del-0e50a32c-3e6b-4a47-a2c0-260d8af54e12 @ 10/07/23 13:31:53.145
  STEP: Creating configMap with name cm-test-opt-upd-15207a08-4cb4-424e-9e4c-68271808575a @ 10/07/23 13:31:53.149
  STEP: Creating the pod @ 10/07/23 13:31:53.154
  E1007 13:31:53.595532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:54.595606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-0e50a32c-3e6b-4a47-a2c0-260d8af54e12 @ 10/07/23 13:31:55.208
  STEP: Updating configmap cm-test-opt-upd-15207a08-4cb4-424e-9e4c-68271808575a @ 10/07/23 13:31:55.215
  STEP: Creating configMap with name cm-test-opt-create-37d5a146-3fcf-4faf-9f11-de0f8d420e88 @ 10/07/23 13:31:55.22
  STEP: waiting to observe update in volume @ 10/07/23 13:31:55.224
  E1007 13:31:55.596206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:56.596403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:57.597433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:58.597530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:31:59.598421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:00.598761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:01.599444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:02.599615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:03.599680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:04.599788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:05.600304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:06.600500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:07.600958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:08.601048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:09.601137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:10.602009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:11.602696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:12.602967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:13.603048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:14.604046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:15.604139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:16.604445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:17.605157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:18.605251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:19.605544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:20.606539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:21.607308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:22.607499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:23.608106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:24.608330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:25.608984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:26.609069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:27.609848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:28.610067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:29.610606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:30.610991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:31.611460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:32.611567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:33.612257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:34.613065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:35.613300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:36.614305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:37.614611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:38.614718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:39.614751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:40.615036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:41.615110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:42.615288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:43.615373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:44.615557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:45.616603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:46.617554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:47.618075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:48.618242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:49.619016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:50.619227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:51.619728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:52.619833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:53.619908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:54.619953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:55.620310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:56.620496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:57.621470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:58.621563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:32:59.622029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:00.622111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:01.622843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:02.622953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:03.623317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:04.624181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:05.624873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:06.624980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:07.625403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:08.625884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:09.626111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:10.627084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:11.627964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:12.628071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:13.628716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:14.629546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:15.629918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:16.630038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:17.630335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:18.630594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:19.631115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:20.632098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:21.633051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:22.633165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:23.634115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:24.634244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:25.634665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:26.635037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:27.635140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:27.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-656" for this suite. @ 10/07/23 13:33:27.669
â€¢ [94.561 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 10/07/23 13:33:27.677
  Oct  7 13:33:27.677: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:33:27.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:33:27.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:33:27.696
  STEP: creating a ConfigMap @ 10/07/23 13:33:27.698
  STEP: fetching the ConfigMap @ 10/07/23 13:33:27.703
  STEP: patching the ConfigMap @ 10/07/23 13:33:27.706
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/07/23 13:33:27.711
  STEP: deleting the ConfigMap by collection with a label selector @ 10/07/23 13:33:27.715
  STEP: listing all ConfigMaps in test namespace @ 10/07/23 13:33:27.724
  Oct  7 13:33:27.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9487" for this suite. @ 10/07/23 13:33:27.731
â€¢ [0.061 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 10/07/23 13:33:27.738
  Oct  7 13:33:27.738: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 13:33:27.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:33:27.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:33:27.757
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-872 @ 10/07/23 13:33:27.76
  STEP: changing the ExternalName service to type=NodePort @ 10/07/23 13:33:27.765
  STEP: creating replication controller externalname-service in namespace services-872 @ 10/07/23 13:33:27.784
  I1007 13:33:27.790578      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-872, replica count: 2
  E1007 13:33:28.635996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:29.636098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:30.637076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1007 13:33:30.841484      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 13:33:30.841: INFO: Creating new exec pod
  E1007 13:33:31.637183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:32.637268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:33.637362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:33.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct  7 13:33:33.996: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct  7 13:33:33.996: INFO: stdout: ""
  E1007 13:33:34.637533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:34.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct  7 13:33:35.116: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct  7 13:33:35.116: INFO: stdout: ""
  E1007 13:33:35.637996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:35.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct  7 13:33:36.120: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct  7 13:33:36.120: INFO: stdout: "externalname-service-4fczh"
  Oct  7 13:33:36.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.67 80'
  Oct  7 13:33:36.247: INFO: stderr: "+ nc -v -t -w 2 10.152.183.67 80\n+ echo hostName\nConnection to 10.152.183.67 80 port [tcp/http] succeeded!\n"
  Oct  7 13:33:36.247: INFO: stdout: ""
  E1007 13:33:36.638765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:37.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.67 80'
  Oct  7 13:33:37.375: INFO: stderr: "+ nc -v -t -w 2 10.152.183.67 80\n+ echo hostName\nConnection to 10.152.183.67 80 port [tcp/http] succeeded!\n"
  Oct  7 13:33:37.375: INFO: stdout: ""
  E1007 13:33:37.638824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:38.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.67 80'
  Oct  7 13:33:38.370: INFO: stderr: "+ nc -v -t -w 2 10.152.183.67 80\nConnection to 10.152.183.67 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct  7 13:33:38.370: INFO: stdout: ""
  E1007 13:33:38.638979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:39.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.67 80'
  Oct  7 13:33:39.364: INFO: stderr: "+ nc -v -t -w 2 10.152.183.67 80\n+ echo hostName\nConnection to 10.152.183.67 80 port [tcp/http] succeeded!\n"
  Oct  7 13:33:39.364: INFO: stdout: "externalname-service-4fczh"
  Oct  7 13:33:39.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.40.4 30931'
  Oct  7 13:33:39.484: INFO: stderr: "+ nc -v -t -w 2 172.31.40.4 30931\n+ echo hostName\nConnection to 172.31.40.4 30931 port [tcp/*] succeeded!\n"
  Oct  7 13:33:39.484: INFO: stdout: "externalname-service-cxdds"
  Oct  7 13:33:39.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.122 30931'
  Oct  7 13:33:39.610: INFO: stderr: "+ nc -v -t -w 2 172.31.0.122 30931\n+ echo hostName\nConnection to 172.31.0.122 30931 port [tcp/*] succeeded!\n"
  Oct  7 13:33:39.610: INFO: stdout: ""
  E1007 13:33:39.639436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:40.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-872 exec execpodcw7qc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.122 30931'
  E1007 13:33:40.640418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:40.715: INFO: stderr: "+ nc -v -t -w 2 172.31.0.122 30931\nConnection to 172.31.0.122 30931 port [tcp/*] succeeded!\n+ echo hostName\n"
  Oct  7 13:33:40.715: INFO: stdout: "externalname-service-cxdds"
  Oct  7 13:33:40.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 13:33:40.718: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-872" for this suite. @ 10/07/23 13:33:40.742
â€¢ [13.011 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/07/23 13:33:40.749
  Oct  7 13:33:40.749: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 13:33:40.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:33:40.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:33:40.77
  Oct  7 13:33:40.773: INFO: Creating deployment "webserver-deployment"
  Oct  7 13:33:40.779: INFO: Waiting for observed generation 1
  E1007 13:33:41.640940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:42.641564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:42.787: INFO: Waiting for all required pods to come up
  Oct  7 13:33:42.791: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/07/23 13:33:42.792
  E1007 13:33:43.642208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:44.642289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:44.801: INFO: Waiting for deployment "webserver-deployment" to complete
  Oct  7 13:33:44.808: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Oct  7 13:33:44.819: INFO: Updating deployment webserver-deployment
  Oct  7 13:33:44.819: INFO: Waiting for observed generation 2
  E1007 13:33:45.643225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:46.643427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:33:46.826: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Oct  7 13:33:46.829: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Oct  7 13:33:46.833: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct  7 13:33:46.843: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Oct  7 13:33:46.843: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Oct  7 13:33:46.846: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct  7 13:33:46.852: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Oct  7 13:33:46.852: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Oct  7 13:33:46.861: INFO: Updating deployment webserver-deployment
  Oct  7 13:33:46.861: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Oct  7 13:33:46.868: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Oct  7 13:33:46.871: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Oct  7 13:33:46.885: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f4a3d6e-6ed8-46b5-9dd0-865756ab6515",
      ResourceVersion: (string) (len=5) "33720",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct  7 13:33:46.892: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
      ResourceVersion: (string) (len=5) "33724",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2f4a3d6e-6ed8-46b5-9dd0-865756ab6515",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 34 61 33 64  36 65 2d 36 65 64 38 2d  |\"2f4a3d6e-6ed8-|
              00000120  34 36 62 35 2d 39 64 64  30 2d 38 36 35 37 35 36  |46b5-9dd0-865756|
              00000130  61 62 36 35 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ab6515\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 13:33:46.894: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Oct  7 13:33:46.894: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
      ResourceVersion: (string) (len=5) "33721",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2f4a3d6e-6ed8-46b5-9dd0-865756ab6515",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 34 61 33 64  36 65 2d 36 65 64 38 2d  |\"2f4a3d6e-6ed8-|
              00000120  34 36 62 35 2d 39 64 64  30 2d 38 36 35 37 35 36  |46b5-9dd0-865756|
              00000130  61 62 36 35 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ab6515\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 13:33:46.899: INFO: Pod "webserver-deployment-557759b7c7-4p4m9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4p4m9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fce81358-531b-424b-b24d-915e8e88b140",
      ResourceVersion: (string) (len=5) "33725",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhmqk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhmqk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.901: INFO: Pod "webserver-deployment-557759b7c7-585bx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-585bx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2a9d4d4-7163-4158-bd7f-b52a7d4d988e",
      ResourceVersion: (string) (len=5) "33567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 31 2e 33 32 5c 22  |192.168.161.32\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2xnl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2xnl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.122",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.161.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ae350431c20b118c36cea23c0593ccb9b901c7f10a479b9a0dcee7773bcf9a8d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.903: INFO: Pod "webserver-deployment-557759b7c7-98vv5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-98vv5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ee55a43-ceaa-4c24-84f0-c94e5bee7312",
      ResourceVersion: (string) (len=5) "33583",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 32 2e 32 36 5c 22 7d  |192.168.62.26\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgf5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgf5z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.62.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.62.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282422,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://283cfd1428fc44f6e0e5a16e9444e2567d92b3ed9b93b02fcb702b0f1afc979e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.904: INFO: Pod "webserver-deployment-557759b7c7-gsz6t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gsz6t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d886c82c-4895-4c6b-b95c-1bf2311226d7",
      ResourceVersion: (string) (len=5) "33570",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 31 2e 31 38 5c 22  |192.168.161.18\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6t5tw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6t5tw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.122",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.161.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://62f04190ef8e0b81ed8a7d3bf8200100eed502efbc5532f57849e08519772648",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.906: INFO: Pod "webserver-deployment-557759b7c7-lhqrr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lhqrr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80701b00-d352-465d-8159-218548613d65",
      ResourceVersion: (string) (len=5) "33543",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 32 2e 32 33 30 5c 22  |192.168.52.230\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-97rsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-97rsl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-40-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.40.4",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.52.230",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.52.230"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3586800dcbe87f38ada8e9332b216aecd8d8cd68feba7ea267dfcc0f04ae3242",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.907: INFO: Pod "webserver-deployment-557759b7c7-llbfr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-llbfr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a987d5c3-d508-4a90-a5ac-f01ccddf6023",
      ResourceVersion: (string) (len=5) "33564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 31 2e 31 32 5c 22  |192.168.161.12\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ht9fm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ht9fm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.122",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.161.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://419af3f3e6bececa469f7bae021e3c37d0cafe3d895631f40a2dea6eded21bc9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.909: INFO: Pod "webserver-deployment-557759b7c7-nj8n9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nj8n9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4d18b46-5fdc-4cc9-9837-d22493213e9e",
      ResourceVersion: (string) (len=5) "33731",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cnbjm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cnbjm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.910: INFO: Pod "webserver-deployment-557759b7c7-tx9jc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tx9jc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c76d291f-edef-4bf3-ab35-40536fd1cf80",
      ResourceVersion: (string) (len=5) "33733",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bshz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bshz2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.911: INFO: Pod "webserver-deployment-557759b7c7-vcq9c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vcq9c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c4db38b-5bc5-4ea2-87bd-650d801a794c",
      ResourceVersion: (string) (len=5) "33549",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 32 2e 32 31 38 5c 22  |192.168.52.218\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gb9zx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gb9zx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-40-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.40.4",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.52.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.52.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bdd4ad473e2c6267097dc5852abf95a902a9cba68130224df8932a29b0059a98",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.913: INFO: Pod "webserver-deployment-557759b7c7-xl68z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xl68z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24575613-7c06-4818-8555-c3325f560db4",
      ResourceVersion: (string) (len=5) "33546",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 32 2e 32 31 36 5c 22  |192.168.52.216\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qxtkn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qxtkn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-40-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.40.4",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.52.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.52.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://96082d78effa752fd919892ace5d0a62a0f914e00d536ff5dc3f06d5edd30590",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.915: INFO: Pod "webserver-deployment-557759b7c7-zqvtm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zqvtm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fcf059b-2beb-4327-9aaf-7ec3329315df",
      ResourceVersion: (string) (len=5) "33576",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5e3469a9-fbf8-4f71-a1a2-301fb2c36032",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 34 36 39 61 39 2d 66  |d\":\"5e3469a9-f|
              00000090  62 66 38 2d 34 66 37 31  2d 61 31 61 32 2d 33 30  |bf8-4f71-a1a2-30|
              000000a0  31 66 62 32 63 33 36 30  33 32 5c 22 7d 22 3a 7b  |1fb2c36032\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 32 2e 32 33 5c 22 7d  |192.168.62.23\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rthqn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rthqn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.62.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.62.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282422,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cb968e4169de1376b64600e52c522a56f0668e0cdfe2219fd6df605badd71ba6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.916: INFO: Pod "webserver-deployment-9b4f5bf69-29dcd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-29dcd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f16df0d-1124-4154-97b0-51b12314e27a",
      ResourceVersion: (string) (len=5) "33703",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282425,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 36 32 2e  35 5c 22 7d 22 3a 7b 22  |.168.62.5\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m7fcp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m7fcp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.62.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.62.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.921: INFO: Pod "webserver-deployment-9b4f5bf69-ftmkf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ftmkf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "852be749-50f7-4954-b2aa-637d91c9f946",
      ResourceVersion: (string) (len=5) "33706",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282425,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 36 32 2e  33 35 5c 22 7d 22 3a 7b  |.168.62.35\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rh46x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rh46x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-221",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.221",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.62.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.62.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.923: INFO: Pod "webserver-deployment-9b4f5bf69-j55mc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j55mc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7afdc10-43f3-48d1-af35-50f04d2d71e8",
      ResourceVersion: (string) (len=5) "33691",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282425,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 35 32 2e  32 32 32 5c 22 7d 22 3a  |.168.52.222\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nqnfz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nqnfz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-40-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.40.4",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.52.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.52.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.925: INFO: Pod "webserver-deployment-9b4f5bf69-jlfgc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jlfgc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e5832eb-11dd-4598-89e9-12589858a717",
      ResourceVersion: (string) (len=5) "33717",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 36 31  2e 33 30 5c 22 7d 22 3a  |.168.161.30\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kznlt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kznlt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.122",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.161.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.926: INFO: Pod "webserver-deployment-9b4f5bf69-kc227" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kc227",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3ce62f8-84eb-4277-9eca-9040f22f0599",
      ResourceVersion: (string) (len=5) "33734",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zs4m8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zs4m8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.927: INFO: Pod "webserver-deployment-9b4f5bf69-lr2s5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lr2s5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9279b3ce-2b91-4e29-9737-773fa7f8478c",
      ResourceVersion: (string) (len=5) "33732",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rxld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rxld",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.928: INFO: Pod "webserver-deployment-9b4f5bf69-nfc2p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nfc2p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9fa914e-c1ec-4b56-af60-9660b70788fd",
      ResourceVersion: (string) (len=5) "33719",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 36 31  2e 31 36 5c 22 7d 22 3a  |.168.161.16\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hpgwc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hpgwc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.122",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.161.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.929: INFO: Pod "webserver-deployment-9b4f5bf69-npx8l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-npx8l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbbb7976-a241-4349-9511-0c4004eff76a",
      ResourceVersion: (string) (len=5) "33730",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "32d4c0fa-a9df-4a75-9fc1-ed073b67e802",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  64 34 63 30 66 61 2d 61  |d\":\"32d4c0fa-a|
              00000090  39 64 66 2d 34 61 37 35  2d 39 66 63 31 2d 65 64  |9df-4a75-9fc1-ed|
              000000a0  30 37 33 62 36 37 65 38  30 32 5c 22 7d 22 3a 7b  |073b67e802\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2fl5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2fl5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-40-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:33:46.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7781" for this suite. @ 10/07/23 13:33:46.934
â€¢ [6.195 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/07/23 13:33:46.944
  Oct  7 13:33:46.944: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 13:33:46.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:33:47.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:33:47.028
  STEP: Creating secret with name secret-test-130e79f6-5bb4-471a-b2dd-95fa8808a9ed @ 10/07/23 13:33:47.03
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:33:47.035
  E1007 13:33:47.644388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:48.645352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:49.645476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:50.646276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:33:51.055
  Oct  7 13:33:51.059: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-secrets-776383ae-153c-46cb-b8c6-22ac0f9da28b container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:33:51.066
  Oct  7 13:33:51.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8692" for this suite. @ 10/07/23 13:33:51.085
â€¢ [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 10/07/23 13:33:51.092
  Oct  7 13:33:51.092: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:33:51.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:33:51.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:33:51.112
  STEP: Creating configMap that has name configmap-test-emptyKey-02b0d601-f5f5-42d0-819b-c3777235d5cd @ 10/07/23 13:33:51.114
  Oct  7 13:33:51.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-200" for this suite. @ 10/07/23 13:33:51.121
â€¢ [0.036 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 10/07/23 13:33:51.128
  Oct  7 13:33:51.128: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename cronjob @ 10/07/23 13:33:51.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:33:51.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:33:51.147
  STEP: Creating a ReplaceConcurrent cronjob @ 10/07/23 13:33:51.149
  STEP: Ensuring a job is scheduled @ 10/07/23 13:33:51.155
  E1007 13:33:51.646761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:52.647838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:53.648773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:54.649540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:55.650036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:56.650812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:57.650953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:58.651080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:33:59.652063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:00.652147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/07/23 13:34:01.159
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/07/23 13:34:01.162
  STEP: Ensuring the job is replaced with a new one @ 10/07/23 13:34:01.166
  E1007 13:34:01.653064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:02.653167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:03.654143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:04.654215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:05.655067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:06.655233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:07.655284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:08.655377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:09.656549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:10.657141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:11.657519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:12.657701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:13.657792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:14.657975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:15.658429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:16.658652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:17.658752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:18.658843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:19.658952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:20.659215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:21.659328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:22.659415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:23.659501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:24.660224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:25.660723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:26.660763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:27.661277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:28.661371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:29.661423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:30.661550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:31.661630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:32.662677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:33.663216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:34.663699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:35.664001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:36.664574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:37.665523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:38.665601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:39.665701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:40.666282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:41.666466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:42.666654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:43.666731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:44.667583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:45.667740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:46.667816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:47.667860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:48.667945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:49.668776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:50.669111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:51.669188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:52.669542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:53.669650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:54.669687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:55.670732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:56.670906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:57.671926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:58.672004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:34:59.672565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:00.672926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 10/07/23 13:35:01.171
  Oct  7 13:35:01.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3840" for this suite. @ 10/07/23 13:35:01.182
â€¢ [70.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 10/07/23 13:35:01.192
  Oct  7 13:35:01.192: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename gc @ 10/07/23 13:35:01.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:35:01.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:35:01.214
  STEP: create the rc @ 10/07/23 13:35:01.22
  W1007 13:35:01.225244      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1007 13:35:01.673549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:02.674668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:03.679823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:04.693852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:05.698257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:06.715207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/07/23 13:35:07.249
  STEP: wait for the rc to be deleted @ 10/07/23 13:35:07.261
  E1007 13:35:07.719676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:08.719914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:09.721262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:10.721320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:11.721437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/07/23 13:35:12.266
  E1007 13:35:12.721515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:13.721703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:14.721778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:15.722228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:16.722311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:17.723302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:18.723383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:19.723479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:20.723574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:21.723731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:22.723851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:23.723946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:24.724353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:25.724479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:26.725545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:27.726022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:28.726189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:29.727008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:30.727314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:31.728101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:32.728191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:33.728296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:34.728482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:35.729322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:36.729420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:37.729516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:38.729608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:39.729702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:40.730086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:41.731111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/07/23 13:35:42.276
  W1007 13:35:42.282159      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct  7 13:35:42.282: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct  7 13:35:42.282: INFO: Deleting pod "simpletest.rc-24jsf" in namespace "gc-5799"
  Oct  7 13:35:42.293: INFO: Deleting pod "simpletest.rc-26lj6" in namespace "gc-5799"
  Oct  7 13:35:42.304: INFO: Deleting pod "simpletest.rc-29q7t" in namespace "gc-5799"
  Oct  7 13:35:42.315: INFO: Deleting pod "simpletest.rc-2b77f" in namespace "gc-5799"
  Oct  7 13:35:42.332: INFO: Deleting pod "simpletest.rc-2vqfs" in namespace "gc-5799"
  Oct  7 13:35:42.344: INFO: Deleting pod "simpletest.rc-2xsmp" in namespace "gc-5799"
  Oct  7 13:35:42.355: INFO: Deleting pod "simpletest.rc-44ggl" in namespace "gc-5799"
  Oct  7 13:35:42.369: INFO: Deleting pod "simpletest.rc-4n6dh" in namespace "gc-5799"
  Oct  7 13:35:42.384: INFO: Deleting pod "simpletest.rc-4nsjt" in namespace "gc-5799"
  Oct  7 13:35:42.394: INFO: Deleting pod "simpletest.rc-5btf7" in namespace "gc-5799"
  Oct  7 13:35:42.404: INFO: Deleting pod "simpletest.rc-5jv67" in namespace "gc-5799"
  Oct  7 13:35:42.417: INFO: Deleting pod "simpletest.rc-5mnj5" in namespace "gc-5799"
  Oct  7 13:35:42.427: INFO: Deleting pod "simpletest.rc-5wmkv" in namespace "gc-5799"
  Oct  7 13:35:42.439: INFO: Deleting pod "simpletest.rc-6g6xw" in namespace "gc-5799"
  Oct  7 13:35:42.450: INFO: Deleting pod "simpletest.rc-6hk9f" in namespace "gc-5799"
  Oct  7 13:35:42.464: INFO: Deleting pod "simpletest.rc-6j7rl" in namespace "gc-5799"
  Oct  7 13:35:42.475: INFO: Deleting pod "simpletest.rc-6rnw8" in namespace "gc-5799"
  Oct  7 13:35:42.486: INFO: Deleting pod "simpletest.rc-6rz42" in namespace "gc-5799"
  Oct  7 13:35:42.496: INFO: Deleting pod "simpletest.rc-6tb5h" in namespace "gc-5799"
  Oct  7 13:35:42.509: INFO: Deleting pod "simpletest.rc-7gpds" in namespace "gc-5799"
  Oct  7 13:35:42.520: INFO: Deleting pod "simpletest.rc-8h96q" in namespace "gc-5799"
  Oct  7 13:35:42.532: INFO: Deleting pod "simpletest.rc-8k9gv" in namespace "gc-5799"
  Oct  7 13:35:42.543: INFO: Deleting pod "simpletest.rc-98njv" in namespace "gc-5799"
  Oct  7 13:35:42.556: INFO: Deleting pod "simpletest.rc-98xsh" in namespace "gc-5799"
  Oct  7 13:35:42.569: INFO: Deleting pod "simpletest.rc-9gdnt" in namespace "gc-5799"
  Oct  7 13:35:42.580: INFO: Deleting pod "simpletest.rc-9pfw8" in namespace "gc-5799"
  Oct  7 13:35:42.594: INFO: Deleting pod "simpletest.rc-b6fls" in namespace "gc-5799"
  Oct  7 13:35:42.604: INFO: Deleting pod "simpletest.rc-bcggc" in namespace "gc-5799"
  Oct  7 13:35:42.618: INFO: Deleting pod "simpletest.rc-bj7tp" in namespace "gc-5799"
  Oct  7 13:35:42.633: INFO: Deleting pod "simpletest.rc-c5w8l" in namespace "gc-5799"
  Oct  7 13:35:42.646: INFO: Deleting pod "simpletest.rc-cfswk" in namespace "gc-5799"
  Oct  7 13:35:42.666: INFO: Deleting pod "simpletest.rc-czf25" in namespace "gc-5799"
  Oct  7 13:35:42.680: INFO: Deleting pod "simpletest.rc-d5ddp" in namespace "gc-5799"
  Oct  7 13:35:42.694: INFO: Deleting pod "simpletest.rc-djgjq" in namespace "gc-5799"
  Oct  7 13:35:42.704: INFO: Deleting pod "simpletest.rc-dltrj" in namespace "gc-5799"
  Oct  7 13:35:42.718: INFO: Deleting pod "simpletest.rc-dlwfr" in namespace "gc-5799"
  Oct  7 13:35:42.730: INFO: Deleting pod "simpletest.rc-dpxs7" in namespace "gc-5799"
  E1007 13:35:42.731161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:35:42.741: INFO: Deleting pod "simpletest.rc-dq9q9" in namespace "gc-5799"
  Oct  7 13:35:42.751: INFO: Deleting pod "simpletest.rc-dsp9q" in namespace "gc-5799"
  Oct  7 13:35:42.761: INFO: Deleting pod "simpletest.rc-f8z7j" in namespace "gc-5799"
  Oct  7 13:35:42.771: INFO: Deleting pod "simpletest.rc-f929m" in namespace "gc-5799"
  Oct  7 13:35:42.782: INFO: Deleting pod "simpletest.rc-fnxfx" in namespace "gc-5799"
  Oct  7 13:35:42.794: INFO: Deleting pod "simpletest.rc-fvd4h" in namespace "gc-5799"
  Oct  7 13:35:42.807: INFO: Deleting pod "simpletest.rc-gjs45" in namespace "gc-5799"
  Oct  7 13:35:42.820: INFO: Deleting pod "simpletest.rc-gn5z6" in namespace "gc-5799"
  Oct  7 13:35:42.833: INFO: Deleting pod "simpletest.rc-gs7gl" in namespace "gc-5799"
  Oct  7 13:35:42.843: INFO: Deleting pod "simpletest.rc-gvpzw" in namespace "gc-5799"
  Oct  7 13:35:42.853: INFO: Deleting pod "simpletest.rc-gxlq2" in namespace "gc-5799"
  Oct  7 13:35:42.865: INFO: Deleting pod "simpletest.rc-h4ctp" in namespace "gc-5799"
  Oct  7 13:35:42.879: INFO: Deleting pod "simpletest.rc-h6rbk" in namespace "gc-5799"
  Oct  7 13:35:42.893: INFO: Deleting pod "simpletest.rc-hbf6j" in namespace "gc-5799"
  Oct  7 13:35:42.905: INFO: Deleting pod "simpletest.rc-hjwq5" in namespace "gc-5799"
  Oct  7 13:35:42.917: INFO: Deleting pod "simpletest.rc-hsmqp" in namespace "gc-5799"
  Oct  7 13:35:42.926: INFO: Deleting pod "simpletest.rc-ht77m" in namespace "gc-5799"
  Oct  7 13:35:42.938: INFO: Deleting pod "simpletest.rc-j5982" in namespace "gc-5799"
  Oct  7 13:35:42.952: INFO: Deleting pod "simpletest.rc-j5lrj" in namespace "gc-5799"
  Oct  7 13:35:42.963: INFO: Deleting pod "simpletest.rc-jkghs" in namespace "gc-5799"
  Oct  7 13:35:42.976: INFO: Deleting pod "simpletest.rc-jpkk7" in namespace "gc-5799"
  Oct  7 13:35:42.987: INFO: Deleting pod "simpletest.rc-k4wsg" in namespace "gc-5799"
  Oct  7 13:35:43.000: INFO: Deleting pod "simpletest.rc-kg4lz" in namespace "gc-5799"
  Oct  7 13:35:43.011: INFO: Deleting pod "simpletest.rc-lbclw" in namespace "gc-5799"
  Oct  7 13:35:43.022: INFO: Deleting pod "simpletest.rc-ldl5z" in namespace "gc-5799"
  Oct  7 13:35:43.033: INFO: Deleting pod "simpletest.rc-m4hp2" in namespace "gc-5799"
  Oct  7 13:35:43.044: INFO: Deleting pod "simpletest.rc-m87hz" in namespace "gc-5799"
  Oct  7 13:35:43.079: INFO: Deleting pod "simpletest.rc-mg6xk" in namespace "gc-5799"
  Oct  7 13:35:43.128: INFO: Deleting pod "simpletest.rc-nhxcw" in namespace "gc-5799"
  Oct  7 13:35:43.186: INFO: Deleting pod "simpletest.rc-nrshs" in namespace "gc-5799"
  Oct  7 13:35:43.228: INFO: Deleting pod "simpletest.rc-ntd4b" in namespace "gc-5799"
  Oct  7 13:35:43.304: INFO: Deleting pod "simpletest.rc-nzl2w" in namespace "gc-5799"
  Oct  7 13:35:43.332: INFO: Deleting pod "simpletest.rc-p8vk7" in namespace "gc-5799"
  Oct  7 13:35:43.388: INFO: Deleting pod "simpletest.rc-pfvb7" in namespace "gc-5799"
  Oct  7 13:35:43.429: INFO: Deleting pod "simpletest.rc-pmvvz" in namespace "gc-5799"
  Oct  7 13:35:43.479: INFO: Deleting pod "simpletest.rc-pxhsn" in namespace "gc-5799"
  Oct  7 13:35:43.528: INFO: Deleting pod "simpletest.rc-r5w2b" in namespace "gc-5799"
  Oct  7 13:35:43.601: INFO: Deleting pod "simpletest.rc-rlkpf" in namespace "gc-5799"
  Oct  7 13:35:43.641: INFO: Deleting pod "simpletest.rc-rvk7f" in namespace "gc-5799"
  Oct  7 13:35:43.680: INFO: Deleting pod "simpletest.rc-rww4j" in namespace "gc-5799"
  E1007 13:35:43.732105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:35:43.733: INFO: Deleting pod "simpletest.rc-rxlcx" in namespace "gc-5799"
  Oct  7 13:35:43.781: INFO: Deleting pod "simpletest.rc-s4hz6" in namespace "gc-5799"
  Oct  7 13:35:43.828: INFO: Deleting pod "simpletest.rc-sczxr" in namespace "gc-5799"
  Oct  7 13:35:43.889: INFO: Deleting pod "simpletest.rc-sd62p" in namespace "gc-5799"
  Oct  7 13:35:43.936: INFO: Deleting pod "simpletest.rc-sfv2m" in namespace "gc-5799"
  Oct  7 13:35:43.983: INFO: Deleting pod "simpletest.rc-skj5z" in namespace "gc-5799"
  Oct  7 13:35:44.027: INFO: Deleting pod "simpletest.rc-sqrkp" in namespace "gc-5799"
  Oct  7 13:35:44.079: INFO: Deleting pod "simpletest.rc-st522" in namespace "gc-5799"
  Oct  7 13:35:44.130: INFO: Deleting pod "simpletest.rc-szl8b" in namespace "gc-5799"
  Oct  7 13:35:44.178: INFO: Deleting pod "simpletest.rc-tm4gz" in namespace "gc-5799"
  Oct  7 13:35:44.229: INFO: Deleting pod "simpletest.rc-ttwv8" in namespace "gc-5799"
  Oct  7 13:35:44.286: INFO: Deleting pod "simpletest.rc-tx9kl" in namespace "gc-5799"
  Oct  7 13:35:44.329: INFO: Deleting pod "simpletest.rc-vw8b9" in namespace "gc-5799"
  Oct  7 13:35:44.381: INFO: Deleting pod "simpletest.rc-vzrvk" in namespace "gc-5799"
  Oct  7 13:35:44.438: INFO: Deleting pod "simpletest.rc-w2gnl" in namespace "gc-5799"
  Oct  7 13:35:44.484: INFO: Deleting pod "simpletest.rc-wcmnm" in namespace "gc-5799"
  Oct  7 13:35:44.537: INFO: Deleting pod "simpletest.rc-wr8c9" in namespace "gc-5799"
  Oct  7 13:35:44.580: INFO: Deleting pod "simpletest.rc-z2srx" in namespace "gc-5799"
  Oct  7 13:35:44.631: INFO: Deleting pod "simpletest.rc-zf4xq" in namespace "gc-5799"
  Oct  7 13:35:44.698: INFO: Deleting pod "simpletest.rc-zfccg" in namespace "gc-5799"
  Oct  7 13:35:44.729: INFO: Deleting pod "simpletest.rc-zfz66" in namespace "gc-5799"
  E1007 13:35:44.732490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:35:44.783: INFO: Deleting pod "simpletest.rc-zgpjq" in namespace "gc-5799"
  Oct  7 13:35:44.827: INFO: Deleting pod "simpletest.rc-zhspk" in namespace "gc-5799"
  Oct  7 13:35:44.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5799" for this suite. @ 10/07/23 13:35:44.926
â€¢ [43.788 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 10/07/23 13:35:44.982
  Oct  7 13:35:44.982: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename var-expansion @ 10/07/23 13:35:44.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:35:44.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:35:45.004
  STEP: creating the pod with failed condition @ 10/07/23 13:35:45.009
  E1007 13:35:45.735514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:46.736771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:47.737324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:48.737444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:49.738301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:50.739225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:51.739325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:52.739427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:53.739654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:54.739777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:55.740476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:56.741539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:57.741630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:58.741843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:35:59.741929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:00.742124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:01.742792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:02.743604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:03.743928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:04.744020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:05.744466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:06.744555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:07.745542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:08.746046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:09.746142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:10.746927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:11.747013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:12.747185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:13.747543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:14.747640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:15.747740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:16.748259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:17.748359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:18.748489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:19.748573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:20.748720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:21.749507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:22.749670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:23.749754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:24.749848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:25.750317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:26.750408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:27.750506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:28.750577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:29.750951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:30.751123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:31.751165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:32.751201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:33.752248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:34.752344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:35.752476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:36.752570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:37.753540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:38.754423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:39.755214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:40.756193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:41.757147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:42.757542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:43.757630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:44.757785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:45.758275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:46.758475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:47.759443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:48.760113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:49.760437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:50.760756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:51.761533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:52.761635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:53.761719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:54.761928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:55.762183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:56.762273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:57.763257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:58.763306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:36:59.764069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:00.764836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:01.764939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:02.765734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:03.765817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:04.765963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:05.766278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:06.766361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:07.767344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:08.767592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:09.768441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:10.768813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:11.769237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:12.769322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:13.769635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:14.769727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:15.769823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:16.770450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:17.770536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:18.770637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:19.770795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:20.771192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:21.772019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:22.772144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:23.772504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:24.773550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:25.774129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:26.775054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:27.775344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:28.775521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:29.776474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:30.777028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:31.777111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:32.778081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:33.778757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:34.779755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:35.779853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:36.780246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:37.780343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:38.780511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:39.781460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:40.782225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:41.783171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:42.783267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:43.783417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:44.784387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 10/07/23 13:37:45.02
  Oct  7 13:37:45.533: INFO: Successfully updated pod "var-expansion-3191231c-2fe0-4180-9a90-27b655c97f57"
  STEP: waiting for pod running @ 10/07/23 13:37:45.533
  E1007 13:37:45.784496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:46.785552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/07/23 13:37:47.542
  Oct  7 13:37:47.542: INFO: Deleting pod "var-expansion-3191231c-2fe0-4180-9a90-27b655c97f57" in namespace "var-expansion-2469"
  Oct  7 13:37:47.553: INFO: Wait up to 5m0s for pod "var-expansion-3191231c-2fe0-4180-9a90-27b655c97f57" to be fully deleted
  E1007 13:37:47.785912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:48.785987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:49.786216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:50.786462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:51.786924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:52.787008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:53.787339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:54.787712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:55.788634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:56.788722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:57.789535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:58.790023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:37:59.790069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:00.790247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:01.790642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:02.790800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:03.790819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:04.790985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:05.791467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:06.791552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:07.791936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:08.792033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:09.792876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:10.793550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:11.793637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:12.793685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:13.794028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:14.794674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:15.795178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:16.795264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:17.795592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:18.796471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:19.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2469" for this suite. @ 10/07/23 13:38:19.632
â€¢ [154.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 10/07/23 13:38:19.64
  Oct  7 13:38:19.640: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 13:38:19.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:38:19.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:38:19.659
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:38:19.662
  E1007 13:38:19.797415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:20.798262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:21.798548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:22.798641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:38:23.688
  Oct  7 13:38:23.692: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-0179d94c-5d83-4d55-80af-7c51929f34f2 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:38:23.709
  Oct  7 13:38:23.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1783" for this suite. @ 10/07/23 13:38:23.728
â€¢ [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/07/23 13:38:23.735
  Oct  7 13:38:23.735: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename deployment @ 10/07/23 13:38:23.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:38:23.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:38:23.753
  Oct  7 13:38:23.764: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E1007 13:38:23.799338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:24.799439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:25.800347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:26.800562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:27.800590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:28.768: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/07/23 13:38:28.768
  Oct  7 13:38:28.768: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1007 13:38:28.801335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:29.801454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:30.772: INFO: Creating deployment "test-rollover-deployment"
  Oct  7 13:38:30.782: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E1007 13:38:30.801563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:31.802622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:32.789: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Oct  7 13:38:32.797: INFO: Ensure that both replica sets have 1 created replica
  E1007 13:38:32.802948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:32.804: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Oct  7 13:38:32.813: INFO: Updating deployment test-rollover-deployment
  Oct  7 13:38:32.813: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1007 13:38:33.803038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:34.803086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:34.821: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Oct  7 13:38:34.828: INFO: Make sure deployment "test-rollover-deployment" is complete
  Oct  7 13:38:34.835: INFO: all replica sets need to contain the pod-template-hash label
  Oct  7 13:38:34.835: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:38:35.803635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:36.804180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:36.843: INFO: all replica sets need to contain the pod-template-hash label
  Oct  7 13:38:36.843: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:38:37.804489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:38.804580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:38.844: INFO: all replica sets need to contain the pod-template-hash label
  Oct  7 13:38:38.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:38:39.805470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:40.806106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:40.844: INFO: all replica sets need to contain the pod-template-hash label
  Oct  7 13:38:40.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:38:41.806116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:42.806689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:42.844: INFO: all replica sets need to contain the pod-template-hash label
  Oct  7 13:38:42.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 38, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 38, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:38:43.807014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:44.807994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:44.843: INFO: 
  Oct  7 13:38:44.844: INFO: Ensure that both old replica sets have no replicas
  Oct  7 13:38:44.855: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6593",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a403d41-6835-419f-9cd4-8e9d53917f87",
      ResourceVersion: (string) (len=5) "37263",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282710,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct  7 13:38:44.860: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6593",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f5d4e39-6289-4c9d-8aec-5e471c984526",
      ResourceVersion: (string) (len=5) "37253",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7a403d41-6835-419f-9cd4-8e9d53917f87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 61 34 30 33 64  34 31 2d 36 38 33 35 2d  |\"7a403d41-6835-|
              00000120  34 31 39 66 2d 39 63 64  34 2d 38 65 39 64 35 33  |419f-9cd4-8e9d53|
              00000130  39 31 37 66 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |917f87\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 13:38:44.860: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Oct  7 13:38:44.861: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6593",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28dbbd67-c55d-4abc-976c-dda6bd9601b7",
      ResourceVersion: (string) (len=5) "37262",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7a403d41-6835-419f-9cd4-8e9d53917f87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 61 34 30 33 64 34 31  2d 36 38 33 35 2d 34 31  |7a403d41-6835-41|
              000000c0  39 66 2d 39 63 64 34 2d  38 65 39 64 35 33 39 31  |9f-9cd4-8e9d5391|
              000000d0  37 66 38 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7f87\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 13:38:44.862: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6593",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e14c466-91dc-4f2f-8577-76126c192652",
      ResourceVersion: (string) (len=5) "37207",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282710,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7a403d41-6835-419f-9cd4-8e9d53917f87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 61 34 30 33 64  34 31 2d 36 38 33 35 2d  |\"7a403d41-6835-|
              00000120  34 31 39 66 2d 39 63 64  34 2d 38 65 39 64 35 33  |419f-9cd4-8e9d53|
              00000130  39 31 37 66 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |917f87\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct  7 13:38:44.866: INFO: Pod "test-rollover-deployment-5d484bf7f9-x9clz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-x9clz",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-6593",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06200dd8-077f-45c8-a2e8-2e41ce8beddb",
      ResourceVersion: (string) (len=5) "37229",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "2f5d4e39-6289-4c9d-8aec-5e471c984526",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  35 64 34 65 33 39 2d 36  |d\":\"2f5d4e39-6|
              00000090  32 38 39 2d 34 63 39 64  2d 38 61 65 63 2d 35 65  |289-4c9d-8aec-5e|
              000000a0  34 37 31 63 39 38 34 35  32 36 5c 22 7d 22 3a 7b  |471c984526\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 31 2e 35 33 5c 22  |192.168.161.53\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hj22l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hj22l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-0-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63832282712,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.122",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.161.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63832282712,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63832282713,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://36867aa02e2668192900f6b60d6afa164a4f52d9e8395e145f2e22fc9c77b94f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct  7 13:38:44.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6593" for this suite. @ 10/07/23 13:38:44.871
â€¢ [21.143 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 10/07/23 13:38:44.878
  Oct  7 13:38:44.878: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl-logs @ 10/07/23 13:38:44.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:38:44.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:38:44.91
  STEP: creating an pod @ 10/07/23 13:38:44.913
  Oct  7 13:38:44.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Oct  7 13:38:44.967: INFO: stderr: ""
  Oct  7 13:38:44.967: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/07/23 13:38:44.967
  Oct  7 13:38:44.967: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1007 13:38:45.808116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:46.808219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:46.975: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/07/23 13:38:46.975
  Oct  7 13:38:46.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 logs logs-generator logs-generator'
  Oct  7 13:38:47.031: INFO: stderr: ""
  Oct  7 13:38:47.031: INFO: stdout: "I1007 13:38:45.637542       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/pxtd 530\nI1007 13:38:45.837629       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/w6sl 530\nI1007 13:38:46.037692       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kpf 377\nI1007 13:38:46.237981       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/pzf 513\nI1007 13:38:46.438276       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/4slw 350\nI1007 13:38:46.638558       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/mmr 396\nI1007 13:38:46.837852       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/pkq6 296\n"
  STEP: limiting log lines @ 10/07/23 13:38:47.031
  Oct  7 13:38:47.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 logs logs-generator logs-generator --tail=1'
  Oct  7 13:38:47.087: INFO: stderr: ""
  Oct  7 13:38:47.087: INFO: stdout: "I1007 13:38:47.038139       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jsf 280\n"
  Oct  7 13:38:47.087: INFO: got output "I1007 13:38:47.038139       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jsf 280\n"
  STEP: limiting log bytes @ 10/07/23 13:38:47.087
  Oct  7 13:38:47.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 logs logs-generator logs-generator --limit-bytes=1'
  Oct  7 13:38:47.142: INFO: stderr: ""
  Oct  7 13:38:47.142: INFO: stdout: "I"
  Oct  7 13:38:47.142: INFO: got output "I"
  STEP: exposing timestamps @ 10/07/23 13:38:47.142
  Oct  7 13:38:47.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 logs logs-generator logs-generator --tail=1 --timestamps'
  Oct  7 13:38:47.196: INFO: stderr: ""
  Oct  7 13:38:47.196: INFO: stdout: "2023-10-07T13:38:47.038214013Z I1007 13:38:47.038139       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jsf 280\n"
  Oct  7 13:38:47.196: INFO: got output "2023-10-07T13:38:47.038214013Z I1007 13:38:47.038139       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jsf 280\n"
  STEP: restricting to a time range @ 10/07/23 13:38:47.196
  E1007 13:38:47.808499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:48.808575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:49.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 logs logs-generator logs-generator --since=1s'
  Oct  7 13:38:49.758: INFO: stderr: ""
  Oct  7 13:38:49.758: INFO: stdout: "I1007 13:38:48.838489       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/grc9 219\nI1007 13:38:49.038589       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/86q 270\nI1007 13:38:49.237878       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/f2x 357\nI1007 13:38:49.438171       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/lbf8 306\nI1007 13:38:49.638464       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/4lq 583\n"
  Oct  7 13:38:49.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 logs logs-generator logs-generator --since=24h'
  E1007 13:38:49.809008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:49.814: INFO: stderr: ""
  Oct  7 13:38:49.814: INFO: stdout: "I1007 13:38:45.637542       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/pxtd 530\nI1007 13:38:45.837629       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/w6sl 530\nI1007 13:38:46.037692       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/kpf 377\nI1007 13:38:46.237981       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/pzf 513\nI1007 13:38:46.438276       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/4slw 350\nI1007 13:38:46.638558       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/mmr 396\nI1007 13:38:46.837852       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/pkq6 296\nI1007 13:38:47.038139       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/jsf 280\nI1007 13:38:47.238440       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/whcp 206\nI1007 13:38:47.437625       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/dzpb 268\nI1007 13:38:47.637915       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/k55s 294\nI1007 13:38:47.838084       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/h9t 594\nI1007 13:38:48.038380       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/zs6 366\nI1007 13:38:48.237611       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/q7z 517\nI1007 13:38:48.437903       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/rl4j 285\nI1007 13:38:48.638199       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/w7kd 311\nI1007 13:38:48.838489       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/grc9 219\nI1007 13:38:49.038589       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/86q 270\nI1007 13:38:49.237878       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/f2x 357\nI1007 13:38:49.438171       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/lbf8 306\nI1007 13:38:49.638464       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/4lq 583\n"
  Oct  7 13:38:49.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-logs-2744 delete pod logs-generator'
  E1007 13:38:50.809494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:38:50.834: INFO: stderr: ""
  Oct  7 13:38:50.834: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Oct  7 13:38:50.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2744" for this suite. @ 10/07/23 13:38:50.84
â€¢ [5.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/07/23 13:38:50.847
  Oct  7 13:38:50.847: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename proxy @ 10/07/23 13:38:50.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:38:50.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:38:50.866
  STEP: starting an echo server on multiple ports @ 10/07/23 13:38:50.879
  STEP: creating replication controller proxy-service-xbqjq in namespace proxy-2947 @ 10/07/23 13:38:50.879
  I1007 13:38:50.885241      21 runners.go:197] Created replication controller with name: proxy-service-xbqjq, namespace: proxy-2947, replica count: 1
  E1007 13:38:51.810458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1007 13:38:51.935941      21 runners.go:197] proxy-service-xbqjq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1007 13:38:52.810919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1007 13:38:52.936502      21 runners.go:197] proxy-service-xbqjq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 13:38:52.940: INFO: setup took 2.071394422s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/07/23 13:38:52.94
  Oct  7 13:38:52.947: INFO: (0) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 6.771798ms)
  Oct  7 13:38:52.947: INFO: (0) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.089238ms)
  Oct  7 13:38:52.947: INFO: (0) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.010184ms)
  Oct  7 13:38:52.948: INFO: (0) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 7.638974ms)
  Oct  7 13:38:52.949: INFO: (0) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.357483ms)
  Oct  7 13:38:52.949: INFO: (0) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.433371ms)
  Oct  7 13:38:52.949: INFO: (0) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.575731ms)
  Oct  7 13:38:52.954: INFO: (0) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 13.159642ms)
  Oct  7 13:38:52.954: INFO: (0) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 13.335129ms)
  Oct  7 13:38:52.954: INFO: (0) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 13.412377ms)
  Oct  7 13:38:52.957: INFO: (0) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 16.492094ms)
  Oct  7 13:38:52.958: INFO: (0) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 17.892609ms)
  Oct  7 13:38:52.959: INFO: (0) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 18.290406ms)
  Oct  7 13:38:52.959: INFO: (0) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 18.095062ms)
  Oct  7 13:38:52.959: INFO: (0) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 18.257168ms)
  Oct  7 13:38:52.962: INFO: (0) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 22.056072ms)
  Oct  7 13:38:52.972: INFO: (1) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 9.158413ms)
  Oct  7 13:38:52.973: INFO: (1) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 9.997626ms)
  Oct  7 13:38:52.974: INFO: (1) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 11.670256ms)
  Oct  7 13:38:52.974: INFO: (1) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 11.785805ms)
  Oct  7 13:38:52.974: INFO: (1) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 11.664288ms)
  Oct  7 13:38:52.975: INFO: (1) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 11.840905ms)
  Oct  7 13:38:52.975: INFO: (1) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 11.763891ms)
  Oct  7 13:38:52.975: INFO: (1) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 12.142287ms)
  Oct  7 13:38:52.975: INFO: (1) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 12.207163ms)
  Oct  7 13:38:52.975: INFO: (1) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 12.12671ms)
  Oct  7 13:38:52.975: INFO: (1) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 12.594663ms)
  Oct  7 13:38:52.975: INFO: (1) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 12.516963ms)
  Oct  7 13:38:52.976: INFO: (1) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 13.509338ms)
  Oct  7 13:38:52.977: INFO: (1) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 13.979551ms)
  Oct  7 13:38:52.977: INFO: (1) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 13.96826ms)
  Oct  7 13:38:52.977: INFO: (1) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 14.200763ms)
  Oct  7 13:38:52.981: INFO: (2) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 4.180773ms)
  Oct  7 13:38:52.982: INFO: (2) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 4.633501ms)
  Oct  7 13:38:52.984: INFO: (2) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 6.323213ms)
  Oct  7 13:38:52.984: INFO: (2) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.043795ms)
  Oct  7 13:38:52.985: INFO: (2) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 6.953741ms)
  Oct  7 13:38:52.985: INFO: (2) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 7.538939ms)
  Oct  7 13:38:52.985: INFO: (2) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.499473ms)
  Oct  7 13:38:52.985: INFO: (2) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 7.493707ms)
  Oct  7 13:38:52.985: INFO: (2) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 8.03143ms)
  Oct  7 13:38:52.986: INFO: (2) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 8.826074ms)
  Oct  7 13:38:52.986: INFO: (2) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 9.014427ms)
  Oct  7 13:38:52.986: INFO: (2) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.17147ms)
  Oct  7 13:38:52.986: INFO: (2) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 9.117922ms)
  Oct  7 13:38:52.987: INFO: (2) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.382576ms)
  Oct  7 13:38:52.987: INFO: (2) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.485229ms)
  Oct  7 13:38:52.987: INFO: (2) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 9.875125ms)
  Oct  7 13:38:52.991: INFO: (3) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 4.154683ms)
  Oct  7 13:38:52.992: INFO: (3) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 5.15103ms)
  Oct  7 13:38:52.993: INFO: (3) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 5.114037ms)
  Oct  7 13:38:52.994: INFO: (3) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.409605ms)
  Oct  7 13:38:52.994: INFO: (3) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 6.200568ms)
  Oct  7 13:38:52.994: INFO: (3) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.405423ms)
  Oct  7 13:38:52.994: INFO: (3) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 6.810971ms)
  Oct  7 13:38:52.995: INFO: (3) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.140791ms)
  Oct  7 13:38:52.995: INFO: (3) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 7.397748ms)
  Oct  7 13:38:52.995: INFO: (3) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 7.766547ms)
  Oct  7 13:38:52.996: INFO: (3) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 8.354022ms)
  Oct  7 13:38:52.996: INFO: (3) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 8.527506ms)
  Oct  7 13:38:52.996: INFO: (3) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 8.809053ms)
  Oct  7 13:38:52.997: INFO: (3) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 8.936889ms)
  Oct  7 13:38:52.997: INFO: (3) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.154304ms)
  Oct  7 13:38:52.997: INFO: (3) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 9.722316ms)
  Oct  7 13:38:53.002: INFO: (4) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 4.745549ms)
  Oct  7 13:38:53.004: INFO: (4) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 6.292856ms)
  Oct  7 13:38:53.004: INFO: (4) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 6.653405ms)
  Oct  7 13:38:53.005: INFO: (4) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.655775ms)
  Oct  7 13:38:53.005: INFO: (4) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.61705ms)
  Oct  7 13:38:53.005: INFO: (4) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.916415ms)
  Oct  7 13:38:53.006: INFO: (4) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 8.274734ms)
  Oct  7 13:38:53.006: INFO: (4) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.232984ms)
  Oct  7 13:38:53.006: INFO: (4) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 8.777882ms)
  Oct  7 13:38:53.007: INFO: (4) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.708066ms)
  Oct  7 13:38:53.007: INFO: (4) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 9.563917ms)
  Oct  7 13:38:53.007: INFO: (4) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.822984ms)
  Oct  7 13:38:53.007: INFO: (4) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 9.61717ms)
  Oct  7 13:38:53.008: INFO: (4) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.928012ms)
  Oct  7 13:38:53.008: INFO: (4) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 10.568345ms)
  Oct  7 13:38:53.008: INFO: (4) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 10.900647ms)
  Oct  7 13:38:53.013: INFO: (5) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 4.205637ms)
  Oct  7 13:38:53.013: INFO: (5) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 4.877269ms)
  Oct  7 13:38:53.014: INFO: (5) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 5.69346ms)
  Oct  7 13:38:53.015: INFO: (5) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 6.061122ms)
  Oct  7 13:38:53.016: INFO: (5) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.995667ms)
  Oct  7 13:38:53.016: INFO: (5) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.220432ms)
  Oct  7 13:38:53.016: INFO: (5) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.353735ms)
  Oct  7 13:38:53.016: INFO: (5) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 7.300744ms)
  Oct  7 13:38:53.016: INFO: (5) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.595407ms)
  Oct  7 13:38:53.017: INFO: (5) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 8.193689ms)
  Oct  7 13:38:53.017: INFO: (5) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 8.214501ms)
  Oct  7 13:38:53.017: INFO: (5) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 8.681408ms)
  Oct  7 13:38:53.017: INFO: (5) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.564547ms)
  Oct  7 13:38:53.018: INFO: (5) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 8.756921ms)
  Oct  7 13:38:53.018: INFO: (5) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.008134ms)
  Oct  7 13:38:53.019: INFO: (5) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.811236ms)
  Oct  7 13:38:53.023: INFO: (6) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 4.471799ms)
  Oct  7 13:38:53.025: INFO: (6) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 6.288489ms)
  Oct  7 13:38:53.025: INFO: (6) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 6.163212ms)
  Oct  7 13:38:53.026: INFO: (6) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.759762ms)
  Oct  7 13:38:53.026: INFO: (6) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.59436ms)
  Oct  7 13:38:53.027: INFO: (6) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.840958ms)
  Oct  7 13:38:53.027: INFO: (6) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 7.72851ms)
  Oct  7 13:38:53.027: INFO: (6) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 8.110071ms)
  Oct  7 13:38:53.027: INFO: (6) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 8.55213ms)
  Oct  7 13:38:53.028: INFO: (6) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.927345ms)
  Oct  7 13:38:53.028: INFO: (6) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 9.288105ms)
  Oct  7 13:38:53.028: INFO: (6) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.429884ms)
  Oct  7 13:38:53.029: INFO: (6) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.978685ms)
  Oct  7 13:38:53.029: INFO: (6) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 10.466615ms)
  Oct  7 13:38:53.029: INFO: (6) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 10.448339ms)
  Oct  7 13:38:53.030: INFO: (6) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 10.804881ms)
  Oct  7 13:38:53.036: INFO: (7) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.47913ms)
  Oct  7 13:38:53.037: INFO: (7) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 7.041597ms)
  Oct  7 13:38:53.037: INFO: (7) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 7.18391ms)
  Oct  7 13:38:53.037: INFO: (7) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.132838ms)
  Oct  7 13:38:53.037: INFO: (7) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 7.217591ms)
  Oct  7 13:38:53.037: INFO: (7) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.437664ms)
  Oct  7 13:38:53.038: INFO: (7) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.880672ms)
  Oct  7 13:38:53.038: INFO: (7) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.154098ms)
  Oct  7 13:38:53.038: INFO: (7) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 8.408955ms)
  Oct  7 13:38:53.038: INFO: (7) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.637766ms)
  Oct  7 13:38:53.039: INFO: (7) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 8.906997ms)
  Oct  7 13:38:53.039: INFO: (7) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 9.17212ms)
  Oct  7 13:38:53.039: INFO: (7) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.596323ms)
  Oct  7 13:38:53.040: INFO: (7) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.713199ms)
  Oct  7 13:38:53.040: INFO: (7) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 10.027896ms)
  Oct  7 13:38:53.040: INFO: (7) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 10.543628ms)
  Oct  7 13:38:53.045: INFO: (8) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 4.265435ms)
  Oct  7 13:38:53.047: INFO: (8) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 5.985256ms)
  Oct  7 13:38:53.047: INFO: (8) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 5.931039ms)
  Oct  7 13:38:53.048: INFO: (8) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.854959ms)
  Oct  7 13:38:53.048: INFO: (8) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.951315ms)
  Oct  7 13:38:53.048: INFO: (8) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.178368ms)
  Oct  7 13:38:53.049: INFO: (8) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 8.296759ms)
  Oct  7 13:38:53.049: INFO: (8) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 8.124547ms)
  Oct  7 13:38:53.049: INFO: (8) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.052353ms)
  Oct  7 13:38:53.049: INFO: (8) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.238218ms)
  Oct  7 13:38:53.049: INFO: (8) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 8.43052ms)
  Oct  7 13:38:53.049: INFO: (8) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 8.768763ms)
  Oct  7 13:38:53.050: INFO: (8) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 9.396435ms)
  Oct  7 13:38:53.050: INFO: (8) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.163648ms)
  Oct  7 13:38:53.051: INFO: (8) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 10.038836ms)
  Oct  7 13:38:53.051: INFO: (8) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 10.13695ms)
  Oct  7 13:38:53.056: INFO: (9) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 5.339512ms)
  Oct  7 13:38:53.058: INFO: (9) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 7.277894ms)
  Oct  7 13:38:53.058: INFO: (9) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.104876ms)
  Oct  7 13:38:53.059: INFO: (9) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.51404ms)
  Oct  7 13:38:53.059: INFO: (9) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.067919ms)
  Oct  7 13:38:53.059: INFO: (9) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.916933ms)
  Oct  7 13:38:53.060: INFO: (9) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 8.292377ms)
  Oct  7 13:38:53.060: INFO: (9) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 8.395953ms)
  Oct  7 13:38:53.060: INFO: (9) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 8.572869ms)
  Oct  7 13:38:53.060: INFO: (9) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 8.70163ms)
  Oct  7 13:38:53.060: INFO: (9) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.542476ms)
  Oct  7 13:38:53.060: INFO: (9) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 9.173314ms)
  Oct  7 13:38:53.061: INFO: (9) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.509764ms)
  Oct  7 13:38:53.061: INFO: (9) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.655967ms)
  Oct  7 13:38:53.061: INFO: (9) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.449803ms)
  Oct  7 13:38:53.061: INFO: (9) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 10.195749ms)
  Oct  7 13:38:53.066: INFO: (10) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 4.65778ms)
  Oct  7 13:38:53.066: INFO: (10) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 5.143228ms)
  Oct  7 13:38:53.067: INFO: (10) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 5.514895ms)
  Oct  7 13:38:53.068: INFO: (10) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.504874ms)
  Oct  7 13:38:53.068: INFO: (10) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 6.833698ms)
  Oct  7 13:38:53.068: INFO: (10) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.89771ms)
  Oct  7 13:38:53.068: INFO: (10) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 6.960287ms)
  Oct  7 13:38:53.069: INFO: (10) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.555643ms)
  Oct  7 13:38:53.069: INFO: (10) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 8.115792ms)
  Oct  7 13:38:53.069: INFO: (10) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.977128ms)
  Oct  7 13:38:53.070: INFO: (10) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 7.945722ms)
  Oct  7 13:38:53.070: INFO: (10) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 8.565992ms)
  Oct  7 13:38:53.070: INFO: (10) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 8.773253ms)
  Oct  7 13:38:53.070: INFO: (10) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 8.973432ms)
  Oct  7 13:38:53.071: INFO: (10) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 9.191846ms)
  Oct  7 13:38:53.071: INFO: (10) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 9.58023ms)
  Oct  7 13:38:53.075: INFO: (11) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 4.214477ms)
  Oct  7 13:38:53.077: INFO: (11) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 5.958393ms)
  Oct  7 13:38:53.078: INFO: (11) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.856371ms)
  Oct  7 13:38:53.078: INFO: (11) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 6.785201ms)
  Oct  7 13:38:53.079: INFO: (11) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 7.342054ms)
  Oct  7 13:38:53.079: INFO: (11) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 7.615941ms)
  Oct  7 13:38:53.080: INFO: (11) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 8.110366ms)
  Oct  7 13:38:53.080: INFO: (11) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.891504ms)
  Oct  7 13:38:53.081: INFO: (11) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.367996ms)
  Oct  7 13:38:53.081: INFO: (11) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 9.425218ms)
  Oct  7 13:38:53.081: INFO: (11) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 9.52418ms)
  Oct  7 13:38:53.081: INFO: (11) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 9.648836ms)
  Oct  7 13:38:53.081: INFO: (11) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 10.150931ms)
  Oct  7 13:38:53.082: INFO: (11) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 10.215484ms)
  Oct  7 13:38:53.082: INFO: (11) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 11.219325ms)
  Oct  7 13:38:53.083: INFO: (11) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 11.197407ms)
  Oct  7 13:38:53.088: INFO: (12) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 5.047622ms)
  Oct  7 13:38:53.089: INFO: (12) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.19219ms)
  Oct  7 13:38:53.090: INFO: (12) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 6.628265ms)
  Oct  7 13:38:53.090: INFO: (12) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 6.686982ms)
  Oct  7 13:38:53.090: INFO: (12) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 7.285846ms)
  Oct  7 13:38:53.090: INFO: (12) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.262217ms)
  Oct  7 13:38:53.091: INFO: (12) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 7.910649ms)
  Oct  7 13:38:53.091: INFO: (12) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 8.058514ms)
  Oct  7 13:38:53.091: INFO: (12) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 8.289214ms)
  Oct  7 13:38:53.091: INFO: (12) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.582317ms)
  Oct  7 13:38:53.091: INFO: (12) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.38665ms)
  Oct  7 13:38:53.092: INFO: (12) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 8.794362ms)
  Oct  7 13:38:53.092: INFO: (12) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.193168ms)
  Oct  7 13:38:53.092: INFO: (12) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.404503ms)
  Oct  7 13:38:53.093: INFO: (12) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.90088ms)
  Oct  7 13:38:53.093: INFO: (12) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 10.089915ms)
  Oct  7 13:38:53.097: INFO: (13) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 4.173124ms)
  Oct  7 13:38:53.098: INFO: (13) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 4.467498ms)
  Oct  7 13:38:53.099: INFO: (13) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 5.978962ms)
  Oct  7 13:38:53.100: INFO: (13) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.808533ms)
  Oct  7 13:38:53.101: INFO: (13) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.184833ms)
  Oct  7 13:38:53.101: INFO: (13) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 7.488268ms)
  Oct  7 13:38:53.101: INFO: (13) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 7.765589ms)
  Oct  7 13:38:53.102: INFO: (13) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.476391ms)
  Oct  7 13:38:53.102: INFO: (13) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 8.252358ms)
  Oct  7 13:38:53.102: INFO: (13) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.82337ms)
  Oct  7 13:38:53.102: INFO: (13) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.06236ms)
  Oct  7 13:38:53.103: INFO: (13) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 9.412803ms)
  Oct  7 13:38:53.103: INFO: (13) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.639726ms)
  Oct  7 13:38:53.103: INFO: (13) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 9.501012ms)
  Oct  7 13:38:53.103: INFO: (13) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.645616ms)
  Oct  7 13:38:53.105: INFO: (13) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 11.88087ms)
  Oct  7 13:38:53.110: INFO: (14) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 4.483294ms)
  Oct  7 13:38:53.112: INFO: (14) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 5.957278ms)
  Oct  7 13:38:53.112: INFO: (14) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.457432ms)
  Oct  7 13:38:53.113: INFO: (14) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 7.163935ms)
  Oct  7 13:38:53.113: INFO: (14) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 7.255637ms)
  Oct  7 13:38:53.113: INFO: (14) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 7.21044ms)
  Oct  7 13:38:53.113: INFO: (14) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.832256ms)
  Oct  7 13:38:53.114: INFO: (14) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.8764ms)
  Oct  7 13:38:53.114: INFO: (14) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 8.402952ms)
  Oct  7 13:38:53.114: INFO: (14) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.356199ms)
  Oct  7 13:38:53.114: INFO: (14) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 9.112712ms)
  Oct  7 13:38:53.115: INFO: (14) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 8.948615ms)
  Oct  7 13:38:53.115: INFO: (14) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 9.035658ms)
  Oct  7 13:38:53.115: INFO: (14) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.144731ms)
  Oct  7 13:38:53.115: INFO: (14) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.240224ms)
  Oct  7 13:38:53.116: INFO: (14) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.979107ms)
  Oct  7 13:38:53.121: INFO: (15) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 4.928705ms)
  Oct  7 13:38:53.122: INFO: (15) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 6.00438ms)
  Oct  7 13:38:53.123: INFO: (15) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 7.611248ms)
  Oct  7 13:38:53.123: INFO: (15) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 7.458248ms)
  Oct  7 13:38:53.124: INFO: (15) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 7.927455ms)
  Oct  7 13:38:53.124: INFO: (15) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.194189ms)
  Oct  7 13:38:53.124: INFO: (15) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.231135ms)
  Oct  7 13:38:53.124: INFO: (15) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.29039ms)
  Oct  7 13:38:53.124: INFO: (15) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 8.283132ms)
  Oct  7 13:38:53.124: INFO: (15) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 8.611165ms)
  Oct  7 13:38:53.125: INFO: (15) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.062521ms)
  Oct  7 13:38:53.125: INFO: (15) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.954656ms)
  Oct  7 13:38:53.125: INFO: (15) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 9.391246ms)
  Oct  7 13:38:53.125: INFO: (15) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.696492ms)
  Oct  7 13:38:53.125: INFO: (15) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 9.789632ms)
  Oct  7 13:38:53.126: INFO: (15) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 10.373845ms)
  Oct  7 13:38:53.131: INFO: (16) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 4.363485ms)
  Oct  7 13:38:53.131: INFO: (16) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 4.746958ms)
  Oct  7 13:38:53.132: INFO: (16) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 5.810894ms)
  Oct  7 13:38:53.132: INFO: (16) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 5.770953ms)
  Oct  7 13:38:53.132: INFO: (16) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 6.01855ms)
  Oct  7 13:38:53.133: INFO: (16) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.879524ms)
  Oct  7 13:38:53.134: INFO: (16) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.009234ms)
  Oct  7 13:38:53.134: INFO: (16) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 6.938747ms)
  Oct  7 13:38:53.134: INFO: (16) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 6.877763ms)
  Oct  7 13:38:53.134: INFO: (16) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.78123ms)
  Oct  7 13:38:53.135: INFO: (16) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 8.400819ms)
  Oct  7 13:38:53.135: INFO: (16) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 8.51959ms)
  Oct  7 13:38:53.136: INFO: (16) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 8.944615ms)
  Oct  7 13:38:53.136: INFO: (16) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.174649ms)
  Oct  7 13:38:53.137: INFO: (16) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.8606ms)
  Oct  7 13:38:53.137: INFO: (16) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 10.084928ms)
  Oct  7 13:38:53.141: INFO: (17) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 4.321837ms)
  Oct  7 13:38:53.143: INFO: (17) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 5.967116ms)
  Oct  7 13:38:53.143: INFO: (17) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 5.950768ms)
  Oct  7 13:38:53.144: INFO: (17) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 6.439497ms)
  Oct  7 13:38:53.144: INFO: (17) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.198336ms)
  Oct  7 13:38:53.144: INFO: (17) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 7.301633ms)
  Oct  7 13:38:53.144: INFO: (17) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 7.133575ms)
  Oct  7 13:38:53.145: INFO: (17) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.12804ms)
  Oct  7 13:38:53.145: INFO: (17) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.360099ms)
  Oct  7 13:38:53.146: INFO: (17) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 9.179749ms)
  Oct  7 13:38:53.146: INFO: (17) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.308862ms)
  Oct  7 13:38:53.146: INFO: (17) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 9.22438ms)
  Oct  7 13:38:53.146: INFO: (17) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.435074ms)
  Oct  7 13:38:53.147: INFO: (17) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 10.337603ms)
  Oct  7 13:38:53.148: INFO: (17) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 10.756327ms)
  Oct  7 13:38:53.148: INFO: (17) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 10.770639ms)
  Oct  7 13:38:53.153: INFO: (18) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 4.97112ms)
  Oct  7 13:38:53.154: INFO: (18) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 5.827279ms)
  Oct  7 13:38:53.156: INFO: (18) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.946219ms)
  Oct  7 13:38:53.156: INFO: (18) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 8.126213ms)
  Oct  7 13:38:53.156: INFO: (18) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.30879ms)
  Oct  7 13:38:53.156: INFO: (18) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.160608ms)
  Oct  7 13:38:53.157: INFO: (18) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 8.675226ms)
  Oct  7 13:38:53.157: INFO: (18) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 8.658912ms)
  Oct  7 13:38:53.157: INFO: (18) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 8.487111ms)
  Oct  7 13:38:53.157: INFO: (18) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 8.8295ms)
  Oct  7 13:38:53.158: INFO: (18) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 9.289854ms)
  Oct  7 13:38:53.158: INFO: (18) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.669482ms)
  Oct  7 13:38:53.158: INFO: (18) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 9.55022ms)
  Oct  7 13:38:53.158: INFO: (18) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 9.854656ms)
  Oct  7 13:38:53.158: INFO: (18) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 10.108362ms)
  Oct  7 13:38:53.159: INFO: (18) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 10.372202ms)
  Oct  7 13:38:53.163: INFO: (19) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q/proxy/rewriteme">test</a> (200; 4.396783ms)
  Oct  7 13:38:53.165: INFO: (19) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:462/proxy/: tls qux (200; 5.611645ms)
  Oct  7 13:38:53.165: INFO: (19) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 5.902734ms)
  Oct  7 13:38:53.166: INFO: (19) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:160/proxy/: foo (200; 6.670304ms)
  Oct  7 13:38:53.166: INFO: (19) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 7.352398ms)
  Oct  7 13:38:53.166: INFO: (19) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">test<... (200; 7.455217ms)
  Oct  7 13:38:53.167: INFO: (19) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:443/proxy/tlsrewritem... (200; 7.921745ms)
  Oct  7 13:38:53.167: INFO: (19) /api/v1/namespaces/proxy-2947/pods/proxy-service-xbqjq-2v42q:162/proxy/: bar (200; 8.019333ms)
  Oct  7 13:38:53.167: INFO: (19) /api/v1/namespaces/proxy-2947/pods/https:proxy-service-xbqjq-2v42q:460/proxy/: tls baz (200; 8.18443ms)
  Oct  7 13:38:53.168: INFO: (19) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname2/proxy/: bar (200; 8.491063ms)
  Oct  7 13:38:53.168: INFO: (19) /api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/: <a href="/api/v1/namespaces/proxy-2947/pods/http:proxy-service-xbqjq-2v42q:1080/proxy/rewriteme">... (200; 8.767605ms)
  Oct  7 13:38:53.168: INFO: (19) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname2/proxy/: tls qux (200; 9.153243ms)
  Oct  7 13:38:53.168: INFO: (19) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname1/proxy/: foo (200; 9.025614ms)
  Oct  7 13:38:53.168: INFO: (19) /api/v1/namespaces/proxy-2947/services/http:proxy-service-xbqjq:portname2/proxy/: bar (200; 9.227116ms)
  Oct  7 13:38:53.169: INFO: (19) /api/v1/namespaces/proxy-2947/services/https:proxy-service-xbqjq:tlsportname1/proxy/: tls baz (200; 10.262814ms)
  Oct  7 13:38:53.170: INFO: (19) /api/v1/namespaces/proxy-2947/services/proxy-service-xbqjq:portname1/proxy/: foo (200; 10.727983ms)
  Oct  7 13:38:53.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-xbqjq in namespace proxy-2947, will wait for the garbage collector to delete the pods @ 10/07/23 13:38:53.174
  Oct  7 13:38:53.235: INFO: Deleting ReplicationController proxy-service-xbqjq took: 6.651633ms
  Oct  7 13:38:53.335: INFO: Terminating ReplicationController proxy-service-xbqjq pods took: 100.510456ms
  E1007 13:38:53.811564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:54.812468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:55.812907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-2947" for this suite. @ 10/07/23 13:38:55.936
â€¢ [5.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 10/07/23 13:38:55.946
  Oct  7 13:38:55.946: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-preemption @ 10/07/23 13:38:55.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:38:55.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:38:55.969
  Oct  7 13:38:55.986: INFO: Waiting up to 1m0s for all nodes to be ready
  E1007 13:38:56.813664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:57.814510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:58.814905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:38:59.814985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:00.815126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:01.815304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:02.815388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:03.815563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:04.816048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:05.816482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:06.817542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:07.817643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:08.817745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:09.817815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:10.818489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:11.819488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:12.819937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:13.820026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:14.820515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:15.821430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:16.821527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:17.821621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:18.821735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:19.821910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:20.822198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:21.822387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:22.822476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:23.822733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:24.822968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:25.823460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:26.823622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:27.823660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:28.823755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:29.823839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:30.824873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:31.824983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:32.825054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:33.825148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:34.825229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:35.825446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:36.826385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:37.826466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:38.826572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:39.827630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:40.828283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:41.828402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:42.828508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:43.828498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:44.829539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:45.829637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:46.830478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:47.830643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:48.831026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:49.831949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:50.832142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:51.832326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:52.832479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:53.833540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:54.833892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:55.834146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:39:56.005: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/07/23 13:39:56.009
  Oct  7 13:39:56.028: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct  7 13:39:56.034: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct  7 13:39:56.059: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct  7 13:39:56.069: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct  7 13:39:56.094: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct  7 13:39:56.101: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/07/23 13:39:56.101
  E1007 13:39:56.834261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:57.835055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/07/23 13:39:58.128
  E1007 13:39:58.835134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:39:59.837243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:00.837223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:01.837317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:02.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5563" for this suite. @ 10/07/23 13:40:02.217
â€¢ [66.277 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 10/07/23 13:40:02.224
  Oct  7 13:40:02.224: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replication-controller @ 10/07/23 13:40:02.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:40:02.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:40:02.245
  STEP: Creating ReplicationController "e2e-rc-2r82r" @ 10/07/23 13:40:02.248
  Oct  7 13:40:02.252: INFO: Get Replication Controller "e2e-rc-2r82r" to confirm replicas
  E1007 13:40:02.837716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:03.256: INFO: Get Replication Controller "e2e-rc-2r82r" to confirm replicas
  Oct  7 13:40:03.260: INFO: Found 1 replicas for "e2e-rc-2r82r" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-2r82r" @ 10/07/23 13:40:03.26
  STEP: Updating a scale subresource @ 10/07/23 13:40:03.263
  STEP: Verifying replicas where modified for replication controller "e2e-rc-2r82r" @ 10/07/23 13:40:03.268
  Oct  7 13:40:03.268: INFO: Get Replication Controller "e2e-rc-2r82r" to confirm replicas
  E1007 13:40:03.837863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:04.272: INFO: Get Replication Controller "e2e-rc-2r82r" to confirm replicas
  Oct  7 13:40:04.276: INFO: Found 2 replicas for "e2e-rc-2r82r" replication controller
  Oct  7 13:40:04.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9591" for this suite. @ 10/07/23 13:40:04.28
â€¢ [2.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 10/07/23 13:40:04.287
  Oct  7 13:40:04.287: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pod-network-test @ 10/07/23 13:40:04.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:40:04.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:40:04.305
  STEP: Performing setup for networking test in namespace pod-network-test-3213 @ 10/07/23 13:40:04.308
  STEP: creating a selector @ 10/07/23 13:40:04.308
  STEP: Creating the service pods in kubernetes @ 10/07/23 13:40:04.308
  Oct  7 13:40:04.308: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1007 13:40:04.837916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:05.838414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:06.838521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:07.838612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:08.838699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:09.839488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:10.839535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:11.839718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:12.840263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:13.840357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:14.840503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:15.841476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:16.841562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:17.841654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:18.841831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:19.841878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:20.842017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:21.842060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:22.843056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:23.843124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:24.843833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:25.844292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/07/23 13:40:26.407
  E1007 13:40:26.845137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:27.845559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:28.445: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct  7 13:40:28.445: INFO: Going to poll 192.168.161.58 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct  7 13:40:28.449: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.161.58:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3213 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:40:28.450: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:40:28.450: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:40:28.450: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3213/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.161.58%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct  7 13:40:28.520: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct  7 13:40:28.520: INFO: Going to poll 192.168.62.9 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct  7 13:40:28.524: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.62.9:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3213 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:40:28.524: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:40:28.524: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:40:28.524: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3213/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.62.9%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct  7 13:40:28.597: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct  7 13:40:28.597: INFO: Going to poll 192.168.52.249 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct  7 13:40:28.601: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.52.249:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3213 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:40:28.601: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:40:28.601: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:40:28.601: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3213/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.52.249%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct  7 13:40:28.681: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct  7 13:40:28.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3213" for this suite. @ 10/07/23 13:40:28.685
â€¢ [24.405 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 10/07/23 13:40:28.692
  Oct  7 13:40:28.692: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 13:40:28.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:40:28.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:40:28.712
  STEP: Creating pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637 @ 10/07/23 13:40:28.715
  E1007 13:40:28.846405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:29.846502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 13:40:30.731
  Oct  7 13:40:30.734: INFO: Initial restart count of pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 is 0
  Oct  7 13:40:30.739: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:30.847336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:31.847420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:32.743: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:32.847763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:33.847859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:34.748: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:34.848303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:35.848493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:36.752: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:36.848744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:37.848838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:38.757: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:38.849303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:39.849911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:40.762: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:40.850146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:41.850329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:42.766: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:42.851177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:43.851367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:44.769: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:44.851922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:45.852415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:46.774: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:46.853201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:47.853291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:48.778: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:48.853612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:49.854084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:50.783: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:50.854475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:51.854638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:52.787: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:52.854794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:53.854884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:54.792: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:54.855123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:55.855459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:56.796: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:56.855714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:57.855873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:40:58.801: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:40:58.856292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:40:59.856480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:00.805: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:00.857532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:01.857635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:02.809: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:02.857862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:03.857949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:04.813: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:04.858779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:05.859136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:06.818: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:06.859296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:07.859504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:08.822: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:08.859670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:09.859848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:10.826: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:10.860088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:11.860292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:12.831: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:12.860452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:13.860510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:14.835: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:14.861434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:15.861655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:16.839: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:16.862006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:17.862106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:18.844: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  E1007 13:41:18.862828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:19.862953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:20.849: INFO: Get pod busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 in namespace container-probe-2637
  Oct  7 13:41:20.849: INFO: Restart count of pod container-probe-2637/busybox-54b0b863-243a-4328-b34d-7e0e10e1ddb2 is now 1 (50.114488509s elapsed)
  Oct  7 13:41:20.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:41:20.853
  E1007 13:41:20.863803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-2637" for this suite. @ 10/07/23 13:41:20.866
â€¢ [52.180 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 10/07/23 13:41:20.873
  Oct  7 13:41:20.873: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 13:41:20.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:41:20.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:41:20.896
  STEP: Creating service test in namespace statefulset-6488 @ 10/07/23 13:41:20.899
  STEP: Creating a new StatefulSet @ 10/07/23 13:41:20.905
  Oct  7 13:41:20.917: INFO: Found 0 stateful pods, waiting for 3
  E1007 13:41:21.863932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:22.864163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:23.864212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:24.864284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:25.864412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:26.864497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:27.865559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:28.865734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:29.865842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:30.865891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:41:30.922: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:41:30.922: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:41:30.922: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/07/23 13:41:30.933
  Oct  7 13:41:30.952: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/07/23 13:41:30.952
  E1007 13:41:31.865999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:32.866094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:33.866250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:34.866349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:35.866412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:36.866506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:37.866585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:38.866977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:39.867081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:40.867277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/07/23 13:41:40.97
  STEP: Performing a canary update @ 10/07/23 13:41:40.97
  Oct  7 13:41:40.990: INFO: Updating stateful set ss2
  Oct  7 13:41:40.999: INFO: Waiting for Pod statefulset-6488/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1007 13:41:41.868072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:42.868441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:43.868341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:44.868472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:45.868562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:46.869552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:47.869748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:48.869926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:49.870066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:50.870315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/07/23 13:41:51.007
  Oct  7 13:41:51.039: INFO: Found 1 stateful pods, waiting for 3
  E1007 13:41:51.871256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:52.871377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:53.871521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:54.871724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:55.871789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:56.871938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:57.872022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:58.872110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:41:59.872180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:00.872392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:42:01.044: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:42:01.044: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:42:01.044: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/07/23 13:42:01.051
  Oct  7 13:42:01.070: INFO: Updating stateful set ss2
  Oct  7 13:42:01.079: INFO: Waiting for Pod statefulset-6488/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1007 13:42:01.873280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:02.873602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:03.873663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:04.874577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:05.875465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:06.875613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:07.875802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:08.875963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:09.876443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:10.876479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:42:11.108: INFO: Updating stateful set ss2
  Oct  7 13:42:11.116: INFO: Waiting for StatefulSet statefulset-6488/ss2 to complete update
  Oct  7 13:42:11.116: INFO: Waiting for Pod statefulset-6488/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1007 13:42:11.877540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:12.877633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:13.877801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:14.878013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:15.878338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:16.878724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:17.878819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:18.878977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:19.879108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:20.879363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:42:21.124: INFO: Deleting all statefulset in ns statefulset-6488
  Oct  7 13:42:21.128: INFO: Scaling statefulset ss2 to 0
  E1007 13:42:21.879468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:22.879549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:23.879709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:24.879781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:25.880166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:26.880266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:27.880968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:28.881047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:29.881546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:30.882334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:42:31.145: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 13:42:31.149: INFO: Deleting statefulset ss2
  Oct  7 13:42:31.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6488" for this suite. @ 10/07/23 13:42:31.168
â€¢ [70.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/07/23 13:42:31.176
  Oct  7 13:42:31.176: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename hostport @ 10/07/23 13:42:31.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:42:31.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:42:31.2
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/07/23 13:42:31.206
  E1007 13:42:31.882437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:32.882630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.40.4 on the node which pod1 resides and expect scheduled @ 10/07/23 13:42:33.221
  E1007 13:42:33.882712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:34.882807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.40.4 but use UDP protocol on the node which pod2 resides @ 10/07/23 13:42:35.235
  E1007 13:42:35.883451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:36.884484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:37.884588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:38.884667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:39.884768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:40.885024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:41.885131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:42.885211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:43.885308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:44.885361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:45.885551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:46.885646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:47.886391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:48.886489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/07/23 13:42:49.288
  Oct  7 13:42:49.288: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.40.4 http://127.0.0.1:54323/hostname] Namespace:hostport-3604 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:42:49.288: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:42:49.288: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:42:49.288: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3604/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.40.4+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.40.4, port: 54323 @ 10/07/23 13:42:49.372
  Oct  7 13:42:49.372: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.40.4:54323/hostname] Namespace:hostport-3604 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:42:49.372: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:42:49.372: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:42:49.373: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3604/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.40.4%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.40.4, port: 54323 UDP @ 10/07/23 13:42:49.443
  Oct  7 13:42:49.443: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.40.4 54323] Namespace:hostport-3604 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:42:49.443: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:42:49.444: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:42:49.444: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3604/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.40.4+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1007 13:42:49.887416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:50.888328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:51.888504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:52.889557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:53.889791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:42:54.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3604" for this suite. @ 10/07/23 13:42:54.522
â€¢ [23.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 10/07/23 13:42:54.533
  Oct  7 13:42:54.533: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pod-network-test @ 10/07/23 13:42:54.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:42:54.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:42:54.554
  STEP: Performing setup for networking test in namespace pod-network-test-4237 @ 10/07/23 13:42:54.557
  STEP: creating a selector @ 10/07/23 13:42:54.557
  STEP: Creating the service pods in kubernetes @ 10/07/23 13:42:54.557
  Oct  7 13:42:54.557: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1007 13:42:54.889904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:55.889957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:56.890881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:57.890972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:58.891757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:42:59.891831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:00.892401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:01.892568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:02.893492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:03.894470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:04.895070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:05.895173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:06.895257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:07.895442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:08.895495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:09.895587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:10.895676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:11.895785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:12.895848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:13.896055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:14.896493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:15.897543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/07/23 13:43:16.656
  E1007 13:43:16.898043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:17.898802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:18.675: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct  7 13:43:18.675: INFO: Breadth first check of 192.168.161.61 on host 172.31.0.122...
  Oct  7 13:43:18.679: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.62.12:9080/dial?request=hostname&protocol=udp&host=192.168.161.61&port=8081&tries=1'] Namespace:pod-network-test-4237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:43:18.679: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:43:18.680: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:43:18.680: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.62.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.161.61%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct  7 13:43:18.754: INFO: Waiting for responses: map[]
  Oct  7 13:43:18.754: INFO: reached 192.168.161.61 after 0/1 tries
  Oct  7 13:43:18.754: INFO: Breadth first check of 192.168.62.8 on host 172.31.31.221...
  Oct  7 13:43:18.758: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.62.12:9080/dial?request=hostname&protocol=udp&host=192.168.62.8&port=8081&tries=1'] Namespace:pod-network-test-4237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:43:18.758: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:43:18.758: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:43:18.758: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.62.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.62.8%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct  7 13:43:18.836: INFO: Waiting for responses: map[]
  Oct  7 13:43:18.836: INFO: reached 192.168.62.8 after 0/1 tries
  Oct  7 13:43:18.836: INFO: Breadth first check of 192.168.52.212 on host 172.31.40.4...
  Oct  7 13:43:18.840: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.62.12:9080/dial?request=hostname&protocol=udp&host=192.168.52.212&port=8081&tries=1'] Namespace:pod-network-test-4237 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct  7 13:43:18.840: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  Oct  7 13:43:18.840: INFO: ExecWithOptions: Clientset creation
  Oct  7 13:43:18.840: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4237/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.62.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.52.212%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E1007 13:43:18.899583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:18.917: INFO: Waiting for responses: map[]
  Oct  7 13:43:18.917: INFO: reached 192.168.52.212 after 0/1 tries
  Oct  7 13:43:18.917: INFO: Going to retry 0 out of 3 pods....
  Oct  7 13:43:18.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4237" for this suite. @ 10/07/23 13:43:18.921
â€¢ [24.396 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 10/07/23 13:43:18.928
  Oct  7 13:43:18.928: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svcaccounts @ 10/07/23 13:43:18.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:18.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:18.948
  STEP: Creating ServiceAccount "e2e-sa-ddbdb"  @ 10/07/23 13:43:18.951
  Oct  7 13:43:18.956: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-ddbdb"  @ 10/07/23 13:43:18.956
  Oct  7 13:43:18.965: INFO: AutomountServiceAccountToken: true
  Oct  7 13:43:18.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-467" for this suite. @ 10/07/23 13:43:18.969
â€¢ [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 10/07/23 13:43:18.976
  Oct  7 13:43:18.976: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename endpointslice @ 10/07/23 13:43:18.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:18.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:18.995
  E1007 13:43:19.900111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:20.900351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:21.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6284" for this suite. @ 10/07/23 13:43:21.048
â€¢ [2.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 10/07/23 13:43:21.055
  Oct  7 13:43:21.055: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 13:43:21.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:21.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:21.076
  STEP: Setting up server cert @ 10/07/23 13:43:21.097
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 13:43:21.243
  STEP: Deploying the webhook pod @ 10/07/23 13:43:21.25
  STEP: Wait for the deployment to be ready @ 10/07/23 13:43:21.262
  Oct  7 13:43:21.269: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1007 13:43:21.900491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:22.900601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/07/23 13:43:23.28
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 13:43:23.291
  E1007 13:43:23.900695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:24.291: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct  7 13:43:24.299: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1933-crds.webhook.example.com via the AdmissionRegistration API @ 10/07/23 13:43:24.81
  STEP: Creating a custom resource while v1 is storage version @ 10/07/23 13:43:24.824
  E1007 13:43:24.901224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:25.901597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/07/23 13:43:26.866
  STEP: Patching the custom resource while v2 is storage version @ 10/07/23 13:43:26.881
  E1007 13:43:26.902024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:26.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9866" for this suite. @ 10/07/23 13:43:27.531
  STEP: Destroying namespace "webhook-markers-8182" for this suite. @ 10/07/23 13:43:27.54
â€¢ [6.493 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 10/07/23 13:43:27.554
  Oct  7 13:43:27.555: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename field-validation @ 10/07/23 13:43:27.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:27.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:27.574
  Oct  7 13:43:27.577: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:43:27.902245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:28.902267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:29.902490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1007 13:43:30.126623      21 warnings.go:70] unknown field "alpha"
  W1007 13:43:30.126640      21 warnings.go:70] unknown field "beta"
  W1007 13:43:30.126643      21 warnings.go:70] unknown field "delta"
  W1007 13:43:30.126647      21 warnings.go:70] unknown field "epsilon"
  W1007 13:43:30.126650      21 warnings.go:70] unknown field "gamma"
  Oct  7 13:43:30.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1962" for this suite. @ 10/07/23 13:43:30.674
â€¢ [3.128 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 10/07/23 13:43:30.682
  Oct  7 13:43:30.682: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename resourcequota @ 10/07/23 13:43:30.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:30.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:30.702
  STEP: Counting existing ResourceQuota @ 10/07/23 13:43:30.704
  E1007 13:43:30.903335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:31.904170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:32.905190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:33.906109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:34.906804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/07/23 13:43:35.709
  STEP: Ensuring resource quota status is calculated @ 10/07/23 13:43:35.713
  E1007 13:43:35.907681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:36.907769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 10/07/23 13:43:37.718
  STEP: Ensuring resource quota status captures replicaset creation @ 10/07/23 13:43:37.729
  E1007 13:43:37.907867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:38.907950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 10/07/23 13:43:39.733
  STEP: Ensuring resource quota status released usage @ 10/07/23 13:43:39.74
  E1007 13:43:39.908560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:40.909564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:41.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4145" for this suite. @ 10/07/23 13:43:41.749
â€¢ [11.074 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 10/07/23 13:43:41.757
  Oct  7 13:43:41.757: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename services @ 10/07/23 13:43:41.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:41.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:41.777
  STEP: creating service in namespace services-4838 @ 10/07/23 13:43:41.78
  STEP: creating service affinity-clusterip in namespace services-4838 @ 10/07/23 13:43:41.78
  STEP: creating replication controller affinity-clusterip in namespace services-4838 @ 10/07/23 13:43:41.79
  I1007 13:43:41.796496      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4838, replica count: 3
  E1007 13:43:41.909707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:42.910250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:43.909964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1007 13:43:44.847531      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct  7 13:43:44.855: INFO: Creating new exec pod
  E1007 13:43:44.910897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:45.911418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:46.912346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:47.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4838 exec execpod-affinitytnjsh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E1007 13:43:47.912648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:47.994: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Oct  7 13:43:47.994: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 13:43:47.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4838 exec execpod-affinitytnjsh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.46 80'
  Oct  7 13:43:48.100: INFO: stderr: "+ nc -v -t -w 2 10.152.183.46 80\n+ echo hostName\nConnection to 10.152.183.46 80 port [tcp/http] succeeded!\n"
  Oct  7 13:43:48.100: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct  7 13:43:48.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=services-4838 exec execpod-affinitytnjsh -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.46:80/ ; done'
  Oct  7 13:43:48.290: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.46:80/\n"
  Oct  7 13:43:48.290: INFO: stdout: "\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6\naffinity-clusterip-qh7j6"
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Received response from host: affinity-clusterip-qh7j6
  Oct  7 13:43:48.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 13:43:48.294: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4838, will wait for the garbage collector to delete the pods @ 10/07/23 13:43:48.306
  Oct  7 13:43:48.367: INFO: Deleting ReplicationController affinity-clusterip took: 6.473597ms
  Oct  7 13:43:48.468: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.668438ms
  E1007 13:43:48.912868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:49.912916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:50.913402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4838" for this suite. @ 10/07/23 13:43:51.685
â€¢ [9.936 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 10/07/23 13:43:51.693
  Oct  7 13:43:51.693: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:43:51.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:51.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:51.714
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/07/23 13:43:51.717
  Oct  7 13:43:51.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-5537 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct  7 13:43:51.769: INFO: stderr: ""
  Oct  7 13:43:51.770: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/07/23 13:43:51.77
  E1007 13:43:51.913896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:52.914001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:53.914727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:54.914838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:43:55.915236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/07/23 13:43:56.821
  Oct  7 13:43:56.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-5537 get pod e2e-test-httpd-pod -o json'
  Oct  7 13:43:56.869: INFO: stderr: ""
  Oct  7 13:43:56.869: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-10-07T13:43:51Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5537\",\n        \"resourceVersion\": \"39271\",\n        \"uid\": \"e09be4b0-f93c-48db-9010-5d97326c379d\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-7p8bm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-31-221\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-7p8bm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-07T13:43:51Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-07T13:43:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-07T13:43:53Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-07T13:43:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://e702fb46e7a817ba7f734daf535e70934d085ab5c716880d7443ebb1b0d8c6d5\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-10-07T13:43:52Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.31.221\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.62.36\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.62.36\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-10-07T13:43:51Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/07/23 13:43:56.869
  Oct  7 13:43:56.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-5537 replace -f -'
  E1007 13:43:56.916179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:57.027: INFO: stderr: ""
  Oct  7 13:43:57.027: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 10/07/23 13:43:57.027
  Oct  7 13:43:57.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-5537 delete pods e2e-test-httpd-pod'
  E1007 13:43:57.916496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:58.429: INFO: stderr: ""
  Oct  7 13:43:58.429: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct  7 13:43:58.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5537" for this suite. @ 10/07/23 13:43:58.434
â€¢ [6.749 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 10/07/23 13:43:58.442
  Oct  7 13:43:58.442: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename aggregator @ 10/07/23 13:43:58.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:43:58.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:43:58.463
  Oct  7 13:43:58.467: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Registering the sample API server. @ 10/07/23 13:43:58.468
  Oct  7 13:43:58.902: INFO: Found ClusterRoles; assuming RBAC is enabled.
  E1007 13:43:58.916682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:43:58.931: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1007 13:43:59.917493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:00.918373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:00.974: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:01.918779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:02.918860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:02.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:03.918949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:04.919020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:04.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:05.919527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:06.919609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:06.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:07.919775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:08.919852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:08.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:09.919959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:10.920875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:10.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:11.920973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:12.921544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:12.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:13.921720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:14.922527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:14.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:15.923067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:16.923131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:16.980: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:17.923330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:18.923429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:18.980: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 7, 13, 43, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1007 13:44:19.923527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:20.924251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:21.099: INFO: Waited 112.6922ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/07/23 13:44:21.134
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/07/23 13:44:21.138
  STEP: List APIServices @ 10/07/23 13:44:21.146
  Oct  7 13:44:21.152: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/07/23 13:44:21.152
  Oct  7 13:44:21.165: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/07/23 13:44:21.165
  Oct  7 13:44:21.177: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.October, 7, 13, 44, 20, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/07/23 13:44:21.177
  Oct  7 13:44:21.182: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-10-07 13:44:20 +0000 UTC Passed all checks passed}
  Oct  7 13:44:21.182: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct  7 13:44:21.182: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/07/23 13:44:21.182
  Oct  7 13:44:21.194: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1382848621" @ 10/07/23 13:44:21.194
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/07/23 13:44:21.205
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/07/23 13:44:21.213
  STEP: Patch APIService Status @ 10/07/23 13:44:21.217
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/07/23 13:44:21.229
  Oct  7 13:44:21.233: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-10-07 13:44:20 +0000 UTC Passed all checks passed}
  Oct  7 13:44:21.233: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct  7 13:44:21.233: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Oct  7 13:44:21.233: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 10/07/23 13:44:21.233
  STEP: Confirm that the generated APIService has been deleted @ 10/07/23 13:44:21.239
  Oct  7 13:44:21.239: INFO: Requesting list of APIServices to confirm quantity
  Oct  7 13:44:21.243: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Oct  7 13:44:21.243: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Oct  7 13:44:21.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1429" for this suite. @ 10/07/23 13:44:21.362
â€¢ [22.928 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/07/23 13:44:21.371
  Oct  7 13:44:21.371: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename pods @ 10/07/23 13:44:21.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:44:21.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:44:21.392
  E1007 13:44:21.924503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:22.924583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:23.924681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:24.925557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:25.926346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:26.926431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:44:27.456
  Oct  7 13:44:27.460: INFO: Trying to get logs from node ip-172-31-31-221 pod client-envvars-7a94a387-6027-4df7-b56a-8a742e4b3102 container env3cont: <nil>
  STEP: delete the pod @ 10/07/23 13:44:27.484
  Oct  7 13:44:27.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8380" for this suite. @ 10/07/23 13:44:27.509
â€¢ [6.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 10/07/23 13:44:27.516
  Oct  7 13:44:27.516: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 13:44:27.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:44:27.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:44:27.54
  STEP: Creating service test in namespace statefulset-3365 @ 10/07/23 13:44:27.544
  STEP: Creating stateful set ss in namespace statefulset-3365 @ 10/07/23 13:44:27.552
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3365 @ 10/07/23 13:44:27.559
  Oct  7 13:44:27.564: INFO: Found 0 stateful pods, waiting for 1
  E1007 13:44:27.927008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:28.927209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:29.927287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:30.927329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:31.927518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:32.927595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:33.927766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:34.928175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:35.928490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:36.928566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:37.569: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/07/23 13:44:37.569
  Oct  7 13:44:37.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-3365 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 13:44:37.702: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 13:44:37.702: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 13:44:37.702: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 13:44:37.706: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1007 13:44:37.929165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:38.929265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:39.929556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:40.930174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:41.930259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:42.931254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:43.931455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:44.931627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:45.932540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:46.932629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:47.712: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 13:44:47.712: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct  7 13:44:47.727: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Oct  7 13:44:47.727: INFO: ss-0  ip-172-31-31-221  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:27 +0000 UTC  }]
  Oct  7 13:44:47.727: INFO: 
  Oct  7 13:44:47.727: INFO: StatefulSet ss has not reached scale 3, at 1
  E1007 13:44:47.932931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:48.732: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996097857s
  E1007 13:44:48.933566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:49.737: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990951784s
  E1007 13:44:49.934247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:50.742: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986384304s
  E1007 13:44:50.934574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:51.747: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981177355s
  E1007 13:44:51.934966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:52.751: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976550967s
  E1007 13:44:52.935060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:53.756: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972466168s
  E1007 13:44:53.935638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:54.760: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967906114s
  E1007 13:44:54.936596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:55.765: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.963221475s
  E1007 13:44:55.936784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:56.770: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.708592ms
  E1007 13:44:56.937291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3365 @ 10/07/23 13:44:57.77
  Oct  7 13:44:57.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-3365 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 13:44:57.890: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct  7 13:44:57.891: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 13:44:57.891: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct  7 13:44:57.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-3365 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1007 13:44:57.937464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:44:58.023: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct  7 13:44:58.023: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 13:44:58.023: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct  7 13:44:58.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-3365 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct  7 13:44:58.138: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct  7 13:44:58.138: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct  7 13:44:58.138: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct  7 13:44:58.142: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:44:58.142: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct  7 13:44:58.142: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/07/23 13:44:58.142
  Oct  7 13:44:58.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-3365 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 13:44:58.263: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 13:44:58.263: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 13:44:58.263: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 13:44:58.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-3365 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 13:44:58.382: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 13:44:58.382: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 13:44:58.382: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 13:44:58.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=statefulset-3365 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct  7 13:44:58.500: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct  7 13:44:58.500: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct  7 13:44:58.500: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct  7 13:44:58.500: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct  7 13:44:58.503: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1007 13:44:58.937496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:44:59.937592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:00.937790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:01.937891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:02.938007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:03.938090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:04.938181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:05.938487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:06.939186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:07.939407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:08.513: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 13:45:08.513: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 13:45:08.513: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct  7 13:45:08.525: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Oct  7 13:45:08.525: INFO: ss-0  ip-172-31-31-221  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:58 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:58 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:27 +0000 UTC  }]
  Oct  7 13:45:08.525: INFO: ss-1  ip-172-31-0-122   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:47 +0000 UTC  }]
  Oct  7 13:45:08.525: INFO: ss-2  ip-172-31-40-4    Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:47 +0000 UTC  }]
  Oct  7 13:45:08.525: INFO: 
  Oct  7 13:45:08.525: INFO: StatefulSet ss has not reached scale 0, at 3
  E1007 13:45:08.939669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:09.530: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Oct  7 13:45:09.530: INFO: ss-0  ip-172-31-31-221  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:27 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:58 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:58 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:27 +0000 UTC  }]
  Oct  7 13:45:09.530: INFO: ss-1  ip-172-31-0-122   Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:47 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-07 13:44:47 +0000 UTC  }]
  Oct  7 13:45:09.530: INFO: 
  Oct  7 13:45:09.530: INFO: StatefulSet ss has not reached scale 0, at 2
  E1007 13:45:09.939756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:10.535: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.990599092s
  E1007 13:45:10.940606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:11.538: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986770701s
  E1007 13:45:11.941446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:12.543: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982787815s
  E1007 13:45:12.941553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:13.546: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97882222s
  E1007 13:45:13.942094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:14.551: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.974155816s
  E1007 13:45:14.942187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:15.556: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.969833416s
  E1007 13:45:15.942752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:16.560: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.965508577s
  E1007 13:45:16.943695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:17.564: INFO: Verifying statefulset ss doesn't scale past 0 for another 961.513953ms
  E1007 13:45:17.944216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3365 @ 10/07/23 13:45:18.564
  Oct  7 13:45:18.569: INFO: Scaling statefulset ss to 0
  Oct  7 13:45:18.581: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 13:45:18.584: INFO: Deleting all statefulset in ns statefulset-3365
  Oct  7 13:45:18.587: INFO: Scaling statefulset ss to 0
  Oct  7 13:45:18.599: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 13:45:18.602: INFO: Deleting statefulset ss
  Oct  7 13:45:18.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3365" for this suite. @ 10/07/23 13:45:18.62
â€¢ [51.113 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 10/07/23 13:45:18.63
  Oct  7 13:45:18.630: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename gc @ 10/07/23 13:45:18.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:45:18.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:45:18.654
  STEP: create the rc @ 10/07/23 13:45:18.662
  W1007 13:45:18.667150      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1007 13:45:18.944574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:19.945918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:20.946723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:21.948557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:22.952414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:23.953122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/07/23 13:45:24.684
  STEP: wait for the rc to be deleted @ 10/07/23 13:45:24.693
  E1007 13:45:24.953759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:25.715: INFO: 80 pods remaining
  Oct  7 13:45:25.715: INFO: 80 pods has nil DeletionTimestamp
  Oct  7 13:45:25.715: INFO: 
  E1007 13:45:25.976516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:26.716: INFO: 70 pods remaining
  Oct  7 13:45:26.724: INFO: 70 pods has nil DeletionTimestamp
  Oct  7 13:45:26.724: INFO: 
  E1007 13:45:26.976858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:27.705: INFO: 60 pods remaining
  Oct  7 13:45:27.705: INFO: 60 pods has nil DeletionTimestamp
  Oct  7 13:45:27.705: INFO: 
  E1007 13:45:27.977154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:28.705: INFO: 40 pods remaining
  Oct  7 13:45:28.705: INFO: 40 pods has nil DeletionTimestamp
  Oct  7 13:45:28.705: INFO: 
  E1007 13:45:28.996538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:29.708: INFO: 30 pods remaining
  Oct  7 13:45:29.710: INFO: 30 pods has nil DeletionTimestamp
  Oct  7 13:45:29.710: INFO: 
  E1007 13:45:30.008575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:45:30.704: INFO: 20 pods remaining
  Oct  7 13:45:30.704: INFO: 20 pods has nil DeletionTimestamp
  Oct  7 13:45:30.705: INFO: 
  E1007 13:45:31.009429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/07/23 13:45:31.699
  W1007 13:45:31.705226      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct  7 13:45:31.705: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct  7 13:45:31.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9077" for this suite. @ 10/07/23 13:45:31.709
â€¢ [13.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/07/23 13:45:31.718
  Oct  7 13:45:31.718: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename subpath @ 10/07/23 13:45:31.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:45:31.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:45:31.762
  STEP: Setting up data @ 10/07/23 13:45:31.766
  STEP: Creating pod pod-subpath-test-downwardapi-nn45 @ 10/07/23 13:45:31.775
  STEP: Creating a pod to test atomic-volume-subpath @ 10/07/23 13:45:31.775
  E1007 13:45:32.010269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:33.010454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:34.011481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:35.011578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:36.011901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:37.011984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:38.012071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:39.012800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:40.013167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:41.014038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:42.014360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:43.014938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:44.015411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:45.015521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:46.016115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:47.016217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:48.016303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:49.016476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:50.017145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:51.017232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:52.017426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:53.018305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:54.019329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:55.020389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:45:55.841
  Oct  7 13:45:55.845: INFO: Trying to get logs from node ip-172-31-31-221 pod pod-subpath-test-downwardapi-nn45 container test-container-subpath-downwardapi-nn45: <nil>
  STEP: delete the pod @ 10/07/23 13:45:55.853
  STEP: Deleting pod pod-subpath-test-downwardapi-nn45 @ 10/07/23 13:45:55.87
  Oct  7 13:45:55.870: INFO: Deleting pod "pod-subpath-test-downwardapi-nn45" in namespace "subpath-45"
  Oct  7 13:45:55.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-45" for this suite. @ 10/07/23 13:45:55.88
â€¢ [24.169 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 10/07/23 13:45:55.888
  Oct  7 13:45:55.888: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:45:55.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:45:55.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:45:55.913
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:45:55.915
  E1007 13:45:56.020840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:57.020976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:58.021907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:45:59.022014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:45:59.936
  Oct  7 13:45:59.940: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-2e24e570-9b90-4b74-a99a-b3938af0be50 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:45:59.948
  Oct  7 13:45:59.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7516" for this suite. @ 10/07/23 13:45:59.967
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 10/07/23 13:45:59.975
  Oct  7 13:45:59.975: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename security-context-test @ 10/07/23 13:45:59.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:45:59.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:45:59.998
  E1007 13:46:00.021992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:01.022218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:02.022763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:03.022941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:46:04.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1007 13:46:04.023576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "security-context-test-9497" for this suite. @ 10/07/23 13:46:04.025
â€¢ [4.057 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 10/07/23 13:46:04.032
  Oct  7 13:46:04.032: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svcaccounts @ 10/07/23 13:46:04.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:46:04.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:46:04.055
  Oct  7 13:46:04.072: INFO: created pod
  E1007 13:46:05.024028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:06.024119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:07.024491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:08.025553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:46:08.084
  E1007 13:46:09.025650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:10.025744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:11.025824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:12.025916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:13.026039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:14.026117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:15.026273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:16.026359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:17.026465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:18.026544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:19.026787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:20.027066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:21.028072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:22.028169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:23.028326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:24.028477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:25.029546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:26.029829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:27.029919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:28.030080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:29.030165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:30.030256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:31.030556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:32.030717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:33.030996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:34.031199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:35.031324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:36.031646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:37.032567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:38.033543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:46:38.085: INFO: polling logs
  Oct  7 13:46:38.094: INFO: Pod logs: 
  I1007 13:46:04.774048       1 log.go:194] OK: Got token
  I1007 13:46:04.774101       1 log.go:194] validating with in-cluster discovery
  I1007 13:46:04.774395       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1007 13:46:04.774423       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8632:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000424b50), NotBefore:(*jwt.NumericDate)(0xc000424c38), IssuedAt:(*jwt.NumericDate)(0xc000424b60), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8632", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d6f33ea2-e02b-4b5e-8343-07890d9f37ba"}}}
  I1007 13:46:04.785339       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1007 13:46:04.792036       1 log.go:194] OK: Validated signature on JWT
  I1007 13:46:04.792112       1 log.go:194] OK: Got valid claims from token!
  I1007 13:46:04.792140       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8632:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000483b68), NotBefore:(*jwt.NumericDate)(0xc000483b90), IssuedAt:(*jwt.NumericDate)(0xc000483b70), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8632", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d6f33ea2-e02b-4b5e-8343-07890d9f37ba"}}}

  Oct  7 13:46:38.094: INFO: completed pod
  Oct  7 13:46:38.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8632" for this suite. @ 10/07/23 13:46:38.105
â€¢ [34.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 10/07/23 13:46:38.113
  Oct  7 13:46:38.113: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename statefulset @ 10/07/23 13:46:38.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:46:38.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:46:38.133
  STEP: Creating service test in namespace statefulset-1663 @ 10/07/23 13:46:38.136
  STEP: Creating statefulset ss in namespace statefulset-1663 @ 10/07/23 13:46:38.146
  Oct  7 13:46:38.154: INFO: Found 0 stateful pods, waiting for 1
  E1007 13:46:39.033663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:40.033741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:41.033790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:42.033935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:43.034031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:44.034639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:45.034746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:46.035620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:47.035785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:48.035886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:46:48.159: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/07/23 13:46:48.166
  STEP: Getting /status @ 10/07/23 13:46:48.175
  Oct  7 13:46:48.179: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/07/23 13:46:48.179
  Oct  7 13:46:48.189: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/07/23 13:46:48.189
  Oct  7 13:46:48.190: INFO: Observed &StatefulSet event: ADDED
  Oct  7 13:46:48.190: INFO: Found Statefulset ss in namespace statefulset-1663 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct  7 13:46:48.190: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/07/23 13:46:48.19
  Oct  7 13:46:48.191: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct  7 13:46:48.196: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/07/23 13:46:48.196
  Oct  7 13:46:48.198: INFO: Observed &StatefulSet event: ADDED
  Oct  7 13:46:48.198: INFO: Observed Statefulset ss in namespace statefulset-1663 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct  7 13:46:48.198: INFO: Observed &StatefulSet event: MODIFIED
  Oct  7 13:46:48.198: INFO: Deleting all statefulset in ns statefulset-1663
  Oct  7 13:46:48.202: INFO: Scaling statefulset ss to 0
  E1007 13:46:49.035996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:50.036169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:51.036436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:52.036504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:53.036581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:54.036655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:55.036760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:56.037561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:57.037635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:46:58.037822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:46:58.219: INFO: Waiting for statefulset status.replicas updated to 0
  Oct  7 13:46:58.223: INFO: Deleting statefulset ss
  Oct  7 13:46:58.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1663" for this suite. @ 10/07/23 13:46:58.239
â€¢ [20.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 10/07/23 13:46:58.251
  Oct  7 13:46:58.251: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename replication-controller @ 10/07/23 13:46:58.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:46:58.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:46:58.269
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/07/23 13:46:58.272
  E1007 13:46:59.037928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:00.038024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 10/07/23 13:47:00.292
  STEP: Then the orphan pod is adopted @ 10/07/23 13:47:00.298
  E1007 13:47:01.038868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:01.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-809" for this suite. @ 10/07/23 13:47:01.309
â€¢ [3.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/07/23 13:47:01.318
  Oct  7 13:47:01.318: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-runtime @ 10/07/23 13:47:01.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:47:01.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:47:01.338
  STEP: create the container @ 10/07/23 13:47:01.341
  W1007 13:47:01.349358      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/07/23 13:47:01.349
  E1007 13:47:02.039940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:03.040166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:04.040500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/07/23 13:47:04.367
  STEP: the container should be terminated @ 10/07/23 13:47:04.37
  STEP: the termination message should be set @ 10/07/23 13:47:04.37
  Oct  7 13:47:04.370: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/07/23 13:47:04.37
  Oct  7 13:47:04.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3363" for this suite. @ 10/07/23 13:47:04.388
â€¢ [3.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 10/07/23 13:47:04.395
  Oct  7 13:47:04.395: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubectl @ 10/07/23 13:47:04.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:47:04.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:47:04.413
  STEP: creating a replication controller @ 10/07/23 13:47:04.416
  Oct  7 13:47:04.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 create -f -'
  Oct  7 13:47:04.563: INFO: stderr: ""
  Oct  7 13:47:04.563: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/07/23 13:47:04.563
  Oct  7 13:47:04.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct  7 13:47:04.621: INFO: stderr: ""
  Oct  7 13:47:04.621: INFO: stdout: "update-demo-nautilus-44mr4 update-demo-nautilus-f82lc "
  Oct  7 13:47:04.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods update-demo-nautilus-44mr4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:47:04.668: INFO: stderr: ""
  Oct  7 13:47:04.668: INFO: stdout: ""
  Oct  7 13:47:04.668: INFO: update-demo-nautilus-44mr4 is created but not running
  E1007 13:47:05.041106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:06.041191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:07.041272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:08.041388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:09.041483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:09.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct  7 13:47:09.740: INFO: stderr: ""
  Oct  7 13:47:09.740: INFO: stdout: "update-demo-nautilus-44mr4 update-demo-nautilus-f82lc "
  Oct  7 13:47:09.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods update-demo-nautilus-44mr4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:47:09.790: INFO: stderr: ""
  Oct  7 13:47:09.790: INFO: stdout: "true"
  Oct  7 13:47:09.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods update-demo-nautilus-44mr4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct  7 13:47:09.836: INFO: stderr: ""
  Oct  7 13:47:09.836: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct  7 13:47:09.836: INFO: validating pod update-demo-nautilus-44mr4
  Oct  7 13:47:09.842: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct  7 13:47:09.843: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct  7 13:47:09.843: INFO: update-demo-nautilus-44mr4 is verified up and running
  Oct  7 13:47:09.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods update-demo-nautilus-f82lc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct  7 13:47:09.890: INFO: stderr: ""
  Oct  7 13:47:09.890: INFO: stdout: "true"
  Oct  7 13:47:09.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods update-demo-nautilus-f82lc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct  7 13:47:09.939: INFO: stderr: ""
  Oct  7 13:47:09.939: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct  7 13:47:09.939: INFO: validating pod update-demo-nautilus-f82lc
  Oct  7 13:47:09.945: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct  7 13:47:09.945: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct  7 13:47:09.945: INFO: update-demo-nautilus-f82lc is verified up and running
  STEP: using delete to clean up resources @ 10/07/23 13:47:09.945
  Oct  7 13:47:09.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 delete --grace-period=0 --force -f -'
  Oct  7 13:47:09.998: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct  7 13:47:09.998: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct  7 13:47:09.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get rc,svc -l name=update-demo --no-headers'
  E1007 13:47:10.042173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:10.071: INFO: stderr: "No resources found in kubectl-2296 namespace.\n"
  Oct  7 13:47:10.071: INFO: stdout: ""
  Oct  7 13:47:10.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-169175172 --namespace=kubectl-2296 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct  7 13:47:10.139: INFO: stderr: ""
  Oct  7 13:47:10.139: INFO: stdout: ""
  Oct  7 13:47:10.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2296" for this suite. @ 10/07/23 13:47:10.144
â€¢ [5.755 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 10/07/23 13:47:10.15
  Oct  7 13:47:10.150: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename container-probe @ 10/07/23 13:47:10.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:47:10.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:47:10.171
  STEP: Creating pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941 @ 10/07/23 13:47:10.173
  E1007 13:47:11.042359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:12.042456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/07/23 13:47:12.19
  Oct  7 13:47:12.194: INFO: Initial restart count of pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c is 0
  Oct  7 13:47:12.198: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:13.042544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:14.042725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:14.202: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:15.043085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:16.043566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:16.208: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:17.043902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:18.043996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:18.212: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:19.044321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:20.044509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:20.217: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:21.045172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:22.045260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:22.221: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:23.045565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:24.045725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:24.225: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:25.045835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:26.045968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:26.230: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:27.046171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:28.046421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:28.234: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:29.046614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:30.046717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:30.239: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:31.046807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:32.047060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:32.243: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:33.047140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:34.047379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:34.247: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:35.047495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:36.047961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:36.252: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:37.048879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:38.048967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:38.256: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:39.049514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:40.049624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:40.261: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:41.050152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:42.050384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:42.265: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:43.050608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:44.050752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:44.269: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:45.051367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:46.051432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:46.273: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:47.052333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:48.052480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:48.278: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:49.053539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:50.053597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:50.283: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:51.054141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:52.054736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:52.287: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:53.055684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:54.055834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:54.292: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:55.055932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:56.056297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:56.296: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:57.057115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:47:58.057211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:47:58.301: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:47:59.057758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:00.057915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:00.306: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:01.058885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:02.059115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:02.311: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:03.059207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:04.059297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:04.316: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:05.059624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:06.060695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:06.321: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:07.060788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:08.061553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:08.325: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:09.061643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:10.061729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:10.331: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:11.062528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:12.062681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:12.335: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:13.063499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:14.063573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:14.339: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:15.064595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:16.065537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:16.344: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:17.066087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:18.066438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:18.348: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:19.067409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:20.067500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:20.353: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:21.068466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:22.069537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:22.357: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:23.069632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:24.069798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:24.361: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:25.070729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:26.071062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:26.366: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:27.071150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:28.071331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:28.370: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:29.071414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:30.071564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:30.375: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:31.071713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:32.071807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:32.379: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:33.072139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:34.072306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:34.383: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:35.073277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:36.073405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:36.388: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:37.073585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:38.073677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:38.393: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:39.074215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:40.074285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:40.398: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:41.074380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:42.074475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:42.403: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:43.074611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:44.074755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:44.408: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:45.075803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:46.076203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:46.413: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:47.076474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:48.077543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:48.419: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:49.078083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:50.078176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:50.425: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:51.079176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:52.079370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:52.429: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:53.079638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:54.080071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:54.434: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:55.081022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:56.081544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:56.439: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:57.081624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:48:58.081780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:48:58.443: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:48:59.082653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:00.082944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:00.448: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:01.083945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:02.083981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:02.452: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:03.084009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:04.084730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:04.457: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:05.085543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:06.085863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:06.461: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:07.086035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:08.086129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:08.465: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:09.086194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:10.086291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:10.474: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:11.087270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:12.087359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:12.478: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:13.088087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:14.088705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:14.483: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:15.089543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:16.089591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:16.488: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:17.089673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:18.089831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:18.492: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:19.089921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:20.090239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:20.497: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:21.090505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:22.090573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:22.501: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:23.091449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:24.091537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:24.505: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:25.092446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:26.092484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:26.510: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:27.092693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:28.092780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:28.514: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:29.092872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:30.093539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:30.519: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:31.094241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:32.094341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:32.523: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:33.095403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:34.095499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:34.528: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:35.095585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:36.095910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:36.533: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:37.096233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:38.097219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:38.537: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:39.098135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:40.098293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:40.542: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:41.099149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:42.100165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:42.547: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:43.100533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:44.100492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:44.552: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:45.101102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:46.101207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:46.557: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:47.101760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:48.101901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:48.562: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:49.102290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:50.102328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:50.567: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:51.102951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:52.103045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:52.571: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:53.103225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:54.103312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:54.576: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:55.103584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:56.104469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:56.581: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:57.104554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:49:58.105544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:49:58.585: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:49:59.106225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:00.106639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:00.590: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:01.107592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:02.107800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:02.595: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:03.108760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:04.109543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:04.599: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:05.110361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:06.110636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:06.604: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:07.111698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:08.111789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:08.608: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:09.112090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:10.113096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:10.613: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:11.114090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:12.114181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:12.617: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:13.114268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:14.114961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:14.622: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:15.115918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:16.116012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:16.626: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:17.117067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:18.117543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:18.631: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:19.117625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:20.117802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:20.635: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:21.117892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:22.118955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:22.640: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:23.119046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:24.119134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:24.645: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:25.120169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:26.120488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:26.649: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:27.121542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:28.121702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:28.654: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:29.122651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:30.122745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:30.659: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:31.122832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:32.123057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:32.663: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:33.123208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:34.124101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:34.668: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:35.124859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:36.124947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:36.672: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:37.125002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:38.125540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:38.677: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:39.126332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:40.126480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:40.683: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:41.126701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:42.126860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:42.687: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:43.127315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:44.127469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:44.691: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:45.128335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:46.128476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:46.696: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:47.129565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:48.129767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:48.700: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:49.130036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:50.131053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:50.705: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:51.131705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:52.131798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:52.709: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:53.132054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:54.132999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:54.713: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:55.133034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:56.133187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:56.717: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:57.134032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:50:58.134121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:50:58.721: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:50:59.135169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:00.135409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:00.726: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:51:01.135751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:02.135909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:02.730: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:51:03.136143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:04.136225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:04.734: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:51:05.136316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:06.136481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:06.738: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:51:07.137408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:08.137491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:08.742: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:51:09.138324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:10.138409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:10.747: INFO: Get pod busybox-b1b48754-bb69-4bc7-8831-55f0ea10b52c in namespace container-probe-4941
  E1007 13:51:11.138987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:12.139080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:12.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/07/23 13:51:12.751
  STEP: Destroying namespace "container-probe-4941" for this suite. @ 10/07/23 13:51:12.766
â€¢ [242.622 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 10/07/23 13:51:12.773
  Oct  7 13:51:12.773: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 13:51:12.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:12.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:12.794
  STEP: Creating a pod to test downward API volume plugin @ 10/07/23 13:51:12.797
  E1007 13:51:13.139153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:14.139992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:15.140080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:16.140493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:51:16.821
  Oct  7 13:51:16.824: INFO: Trying to get logs from node ip-172-31-31-221 pod downwardapi-volume-b341976c-1578-4688-9075-ef93ca43bd33 container client-container: <nil>
  STEP: delete the pod @ 10/07/23 13:51:16.842
  Oct  7 13:51:16.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2418" for this suite. @ 10/07/23 13:51:16.862
â€¢ [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 10/07/23 13:51:16.87
  Oct  7 13:51:16.870: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename runtimeclass @ 10/07/23 13:51:16.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:16.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:16.889
  Oct  7 13:51:16.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7597" for this suite. @ 10/07/23 13:51:16.902
â€¢ [0.039 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 10/07/23 13:51:16.91
  Oct  7 13:51:16.910: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 13:51:16.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:16.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:16.929
  STEP: Setting up server cert @ 10/07/23 13:51:17.1
  E1007 13:51:17.141284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 13:51:17.405
  STEP: Deploying the webhook pod @ 10/07/23 13:51:17.414
  STEP: Wait for the deployment to be ready @ 10/07/23 13:51:17.425
  Oct  7 13:51:17.432: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1007 13:51:18.141375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:19.141486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/07/23 13:51:19.443
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 13:51:19.455
  E1007 13:51:20.141576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:20.456: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct  7 13:51:20.463: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7777-crds.webhook.example.com via the AdmissionRegistration API @ 10/07/23 13:51:20.979
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/07/23 13:51:20.995
  E1007 13:51:21.142338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:22.142434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:51:23.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1007 13:51:23.142955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3660" for this suite. @ 10/07/23 13:51:23.609
  STEP: Destroying namespace "webhook-markers-3313" for this suite. @ 10/07/23 13:51:23.617
â€¢ [6.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/07/23 13:51:23.624
  Oct  7 13:51:23.624: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename conformance-tests @ 10/07/23 13:51:23.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:23.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:23.643
  STEP: Getting node addresses @ 10/07/23 13:51:23.646
  Oct  7 13:51:23.646: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Oct  7 13:51:23.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-381" for this suite. @ 10/07/23 13:51:23.655
â€¢ [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 10/07/23 13:51:23.663
  Oct  7 13:51:23.663: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svcaccounts @ 10/07/23 13:51:23.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:23.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:23.684
  Oct  7 13:51:23.703: INFO: created pod pod-service-account-defaultsa
  Oct  7 13:51:23.703: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Oct  7 13:51:23.710: INFO: created pod pod-service-account-mountsa
  Oct  7 13:51:23.710: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Oct  7 13:51:23.715: INFO: created pod pod-service-account-nomountsa
  Oct  7 13:51:23.715: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Oct  7 13:51:23.720: INFO: created pod pod-service-account-defaultsa-mountspec
  Oct  7 13:51:23.720: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Oct  7 13:51:23.727: INFO: created pod pod-service-account-mountsa-mountspec
  Oct  7 13:51:23.727: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Oct  7 13:51:23.733: INFO: created pod pod-service-account-nomountsa-mountspec
  Oct  7 13:51:23.733: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Oct  7 13:51:23.740: INFO: created pod pod-service-account-defaultsa-nomountspec
  Oct  7 13:51:23.740: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Oct  7 13:51:23.750: INFO: created pod pod-service-account-mountsa-nomountspec
  Oct  7 13:51:23.750: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Oct  7 13:51:23.758: INFO: created pod pod-service-account-nomountsa-nomountspec
  Oct  7 13:51:23.758: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Oct  7 13:51:23.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1812" for this suite. @ 10/07/23 13:51:23.768
â€¢ [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 10/07/23 13:51:23.778
  Oct  7 13:51:23.778: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename security-context @ 10/07/23 13:51:23.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:23.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:23.8
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/07/23 13:51:23.803
  E1007 13:51:24.143045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:25.143234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:26.143385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:27.143932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:51:27.824
  Oct  7 13:51:27.828: INFO: Trying to get logs from node ip-172-31-40-4 pod security-context-36c7892a-2948-4ac8-b9b5-4a42084c9e95 container test-container: <nil>
  STEP: delete the pod @ 10/07/23 13:51:27.845
  Oct  7 13:51:27.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2294" for this suite. @ 10/07/23 13:51:27.862
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/07/23 13:51:27.87
  Oct  7 13:51:27.870: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename projected @ 10/07/23 13:51:27.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:27.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:27.894
  STEP: Creating projection with secret that has name projected-secret-test-map-d4ab74e6-546e-439b-aa18-76029f913112 @ 10/07/23 13:51:27.897
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:51:27.901
  E1007 13:51:28.144251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:29.144959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:30.145512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:31.145537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:51:31.922
  Oct  7 13:51:31.926: INFO: Trying to get logs from node ip-172-31-40-4 pod pod-projected-secrets-81f9b723-9330-47af-8a98-6413c6ee67e0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:51:31.933
  Oct  7 13:51:31.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7303" for this suite. @ 10/07/23 13:51:31.951
â€¢ [4.089 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 10/07/23 13:51:31.958
  Oct  7 13:51:31.959: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-preemption @ 10/07/23 13:51:31.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:51:31.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:51:31.978
  Oct  7 13:51:31.996: INFO: Waiting up to 1m0s for all nodes to be ready
  E1007 13:51:32.146170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:33.146237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:34.147253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:35.147414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:36.148487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:37.149547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:38.150351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:39.150442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:40.151192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:41.151516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:42.152161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:43.152544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:44.152929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:45.153804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:46.154617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:47.154708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:48.155464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:49.155610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:50.156114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:51.157108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:52.158023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:53.158112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:54.158214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:55.158304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:56.158348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:57.158509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:58.159562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:51:59.159649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:00.160273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:01.160508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:02.161547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:03.161692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:04.162310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:05.163105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:06.164098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:07.164825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:08.165538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:09.165608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:10.166278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:11.166508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:12.167074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:13.167234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:14.168196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:15.168477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:16.169321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:17.169477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:18.170214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:19.170379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:20.171306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:21.171984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:22.172770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:23.172955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:24.173041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:25.173157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:26.174171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:27.174267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:28.174978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:29.175073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:30.175766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:31.175850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:52:32.016: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/07/23 13:52:32.019
  Oct  7 13:52:32.019: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/07/23 13:52:32.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:32.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:32.042
  Oct  7 13:52:32.061: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Oct  7 13:52:32.066: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Oct  7 13:52:32.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct  7 13:52:32.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9536" for this suite. @ 10/07/23 13:52:32.14
  STEP: Destroying namespace "sched-preemption-2900" for this suite. @ 10/07/23 13:52:32.146
â€¢ [60.195 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 10/07/23 13:52:32.154
  Oct  7 13:52:32.154: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename security-context-test @ 10/07/23 13:52:32.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:32.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:32.171
  E1007 13:52:32.176199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:33.176506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:34.176586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:35.177540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:36.177883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:52:36.203: INFO: Got logs for pod "busybox-privileged-false-35b2a92a-5351-4ee6-b65d-d6ec2807cc7a": "ip: RTNETLINK answers: Operation not permitted\n"
  Oct  7 13:52:36.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4748" for this suite. @ 10/07/23 13:52:36.207
â€¢ [4.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 10/07/23 13:52:36.214
  Oct  7 13:52:36.214: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename disruption @ 10/07/23 13:52:36.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:36.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:36.235
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/07/23 13:52:36.238
  STEP: Waiting for the pdb to be processed @ 10/07/23 13:52:36.243
  E1007 13:52:37.178654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:38.178770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/07/23 13:52:38.255
  STEP: Waiting for all pods to be running @ 10/07/23 13:52:38.255
  Oct  7 13:52:38.259: INFO: pods: 0 < 3
  E1007 13:52:39.179193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:40.179268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/07/23 13:52:40.263
  STEP: Updating the pdb to allow a pod to be evicted @ 10/07/23 13:52:40.273
  STEP: Waiting for the pdb to be processed @ 10/07/23 13:52:40.281
  E1007 13:52:41.179370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:42.179456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/07/23 13:52:42.289
  STEP: Waiting for all pods to be running @ 10/07/23 13:52:42.289
  STEP: Waiting for the pdb to observed all healthy pods @ 10/07/23 13:52:42.293
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/07/23 13:52:42.317
  STEP: Waiting for the pdb to be processed @ 10/07/23 13:52:42.339
  STEP: Waiting for all pods to be running @ 10/07/23 13:52:42.346
  Oct  7 13:52:42.351: INFO: running pods: 2 < 3
  E1007 13:52:43.179559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:44.179631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/07/23 13:52:44.356
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/07/23 13:52:44.366
  STEP: Waiting for the pdb to be deleted @ 10/07/23 13:52:44.372
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/07/23 13:52:44.375
  STEP: Waiting for all pods to be running @ 10/07/23 13:52:44.375
  Oct  7 13:52:44.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4427" for this suite. @ 10/07/23 13:52:44.399
â€¢ [8.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/07/23 13:52:44.408
  Oct  7 13:52:44.408: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename containers @ 10/07/23 13:52:44.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:44.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:44.435
  STEP: Creating a pod to test override all @ 10/07/23 13:52:44.437
  E1007 13:52:45.179739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:46.179811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:47.180802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:48.180911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:52:48.458
  Oct  7 13:52:48.461: INFO: Trying to get logs from node ip-172-31-31-221 pod client-containers-8f5b729b-233e-40a2-845f-3c89539f7ede container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 13:52:48.47
  Oct  7 13:52:48.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2284" for this suite. @ 10/07/23 13:52:48.491
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 10/07/23 13:52:48.501
  Oct  7 13:52:48.501: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename configmap @ 10/07/23 13:52:48.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:48.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:48.519
  STEP: Creating configMap with name configmap-test-upd-871a002c-8120-45e8-8a7d-33f4034e0df6 @ 10/07/23 13:52:48.526
  STEP: Creating the pod @ 10/07/23 13:52:48.531
  E1007 13:52:49.181006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:50.181064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 10/07/23 13:52:50.548
  STEP: Waiting for pod with binary data @ 10/07/23 13:52:50.556
  Oct  7 13:52:50.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1329" for this suite. @ 10/07/23 13:52:50.567
â€¢ [2.073 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/07/23 13:52:50.574
  Oct  7 13:52:50.574: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename kubelet-test @ 10/07/23 13:52:50.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:50.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:50.594
  E1007 13:52:51.181575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:52.181677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:52:52.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-904" for this suite. @ 10/07/23 13:52:52.639
â€¢ [2.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/07/23 13:52:52.646
  Oct  7 13:52:52.646: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename secrets @ 10/07/23 13:52:52.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:52.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:52.665
  STEP: Creating secret with name secret-test-map-f4b9c7a1-4311-4789-9cdf-a753f1e29cfd @ 10/07/23 13:52:52.668
  STEP: Creating a pod to test consume secrets @ 10/07/23 13:52:52.672
  E1007 13:52:53.181998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:54.182400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:55.182491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:56.182664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:52:56.695
  Oct  7 13:52:56.698: INFO: Trying to get logs from node ip-172-31-0-122 pod pod-secrets-c1cce70e-cafc-4b9c-9838-b280b0ae6c55 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/07/23 13:52:56.705
  Oct  7 13:52:56.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9925" for this suite. @ 10/07/23 13:52:56.726
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 10/07/23 13:52:56.734
  Oct  7 13:52:56.734: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename webhook @ 10/07/23 13:52:56.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:52:56.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:52:56.76
  STEP: Setting up server cert @ 10/07/23 13:52:56.782
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/07/23 13:52:56.957
  STEP: Deploying the webhook pod @ 10/07/23 13:52:56.965
  STEP: Wait for the deployment to be ready @ 10/07/23 13:52:56.976
  Oct  7 13:52:56.986: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1007 13:52:57.183409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:52:58.183486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/07/23 13:52:58.996
  STEP: Verifying the service has paired with the endpoint @ 10/07/23 13:52:59.007
  E1007 13:52:59.184265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:53:00.008: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/07/23 13:53:00.016
  STEP: create a namespace for the webhook @ 10/07/23 13:53:00.03
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/07/23 13:53:00.048
  Oct  7 13:53:00.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9570" for this suite. @ 10/07/23 13:53:00.104
  STEP: Destroying namespace "webhook-markers-7499" for this suite. @ 10/07/23 13:53:00.112
  STEP: Destroying namespace "fail-closed-namespace-6123" for this suite. @ 10/07/23 13:53:00.119
â€¢ [3.391 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 10/07/23 13:53:00.125
  Oct  7 13:53:00.125: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename downward-api @ 10/07/23 13:53:00.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:53:00.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:53:00.146
  STEP: Creating a pod to test downward api env vars @ 10/07/23 13:53:00.148
  E1007 13:53:00.184532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:01.185568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:02.185934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:03.186047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:53:04.171
  Oct  7 13:53:04.174: INFO: Trying to get logs from node ip-172-31-31-221 pod downward-api-5beb84f0-ef12-4f9c-bcb1-5f11169c7636 container dapi-container: <nil>
  STEP: delete the pod @ 10/07/23 13:53:04.183
  E1007 13:53:04.186406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:53:04.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2131" for this suite. @ 10/07/23 13:53:04.201
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 10/07/23 13:53:04.216
  Oct  7 13:53:04.216: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename svcaccounts @ 10/07/23 13:53:04.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:53:04.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:53:04.235
  STEP: Creating a pod to test service account token:  @ 10/07/23 13:53:04.238
  E1007 13:53:05.186537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:06.186680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:07.186782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:08.187055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/07/23 13:53:08.26
  Oct  7 13:53:08.264: INFO: Trying to get logs from node ip-172-31-31-221 pod test-pod-1660dbbb-cb81-4b96-96af-8ef3c2bcce1b container agnhost-container: <nil>
  STEP: delete the pod @ 10/07/23 13:53:08.272
  Oct  7 13:53:08.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1189" for this suite. @ 10/07/23 13:53:08.292
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 10/07/23 13:53:08.3
  Oct  7 13:53:08.300: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/07/23 13:53:08.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:53:08.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:53:08.322
  STEP: set up a multi version CRD @ 10/07/23 13:53:08.327
  Oct  7 13:53:08.327: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  E1007 13:53:09.187706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:10.188286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:11.188725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 10/07/23 13:53:11.793
  STEP: check the unserved version gets removed @ 10/07/23 13:53:11.814
  E1007 13:53:12.189340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 10/07/23 13:53:12.621
  E1007 13:53:13.190229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1007 13:53:14.191200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct  7 13:53:15.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7878" for this suite. @ 10/07/23 13:53:15.14
â€¢ [6.847 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 10/07/23 13:53:15.147
  Oct  7 13:53:15.148: INFO: >>> kubeConfig: /tmp/kubeconfig-169175172
  STEP: Building a namespace api object, basename field-validation @ 10/07/23 13:53:15.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/07/23 13:53:15.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/07/23 13:53:15.165
  STEP: apply creating a deployment @ 10/07/23 13:53:15.167
  Oct  7 13:53:15.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8671" for this suite. @ 10/07/23 13:53:15.188
  E1007 13:53:15.191371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Oct  7 13:53:15.195: INFO: Running AfterSuite actions on node 1
  Oct  7 13:53:15.195: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.053 seconds]
------------------------------

Ran 380 of 7387 Specs in 5789.520 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h36m29.803081067s
Test Suite Passed
