  I1104 12:09:02.441774      19 e2e.go:117] Starting e2e run "7e6ea5aa-1a68-4b8d-88bd-9a5f09fd3b25" on Ginkgo node 1
  Nov  4 12:09:02.462: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1699099742 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Nov  4 12:09:02.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:09:02.612: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Nov  4 12:09:02.644: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Nov  4 12:09:02.648: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Nov  4 12:09:02.648: INFO: e2e test version: v1.28.3
  Nov  4 12:09:02.650: INFO: kube-apiserver version: v1.28.3
  Nov  4 12:09:02.650: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:09:02.655: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.044 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 11/04/23 12:09:03.15
  Nov  4 12:09:03.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 12:09:03.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:09:03.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:09:03.172
  STEP: Creating configMap configmap-7207/configmap-test-ee10c35f-e71f-4380-9460-4b734326d57c @ 11/04/23 12:09:03.184
  STEP: Creating a pod to test consume configMaps @ 11/04/23 12:09:03.189
  STEP: Saw pod success @ 11/04/23 12:09:15.231
  Nov  4 12:09:15.234: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-cd55d952-56fc-4b35-9a47-46334c49a187 container env-test: <nil>
  STEP: delete the pod @ 11/04/23 12:09:15.25
  Nov  4 12:09:15.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7207" for this suite. @ 11/04/23 12:09:15.272
• [12.128 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/04/23 12:09:15.278
  Nov  4 12:09:15.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename events @ 11/04/23 12:09:15.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:09:15.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:09:15.297
  STEP: creating a test event @ 11/04/23 12:09:15.302
  STEP: listing events in all namespaces @ 11/04/23 12:09:15.307
  STEP: listing events in test namespace @ 11/04/23 12:09:15.315
  STEP: listing events with field selection filtering on source @ 11/04/23 12:09:15.319
  STEP: listing events with field selection filtering on reportingController @ 11/04/23 12:09:15.322
  STEP: getting the test event @ 11/04/23 12:09:15.325
  STEP: patching the test event @ 11/04/23 12:09:15.328
  STEP: getting the test event @ 11/04/23 12:09:15.336
  STEP: updating the test event @ 11/04/23 12:09:15.339
  STEP: getting the test event @ 11/04/23 12:09:15.346
  STEP: deleting the test event @ 11/04/23 12:09:15.349
  STEP: listing events in all namespaces @ 11/04/23 12:09:15.356
  STEP: listing events in test namespace @ 11/04/23 12:09:15.363
  Nov  4 12:09:15.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3802" for this suite. @ 11/04/23 12:09:15.37
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 11/04/23 12:09:15.379
  Nov  4 12:09:15.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:09:15.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:09:15.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:09:15.396
  STEP: Counting existing ResourceQuota @ 11/04/23 12:09:15.399
  STEP: Creating a ResourceQuota @ 11/04/23 12:09:20.403
  STEP: Ensuring resource quota status is calculated @ 11/04/23 12:09:20.41
  STEP: Creating a ReplicationController @ 11/04/23 12:09:22.414
  STEP: Ensuring resource quota status captures replication controller creation @ 11/04/23 12:09:22.425
  STEP: Deleting a ReplicationController @ 11/04/23 12:09:24.43
  STEP: Ensuring resource quota status released usage @ 11/04/23 12:09:24.436
  Nov  4 12:09:26.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4919" for this suite. @ 11/04/23 12:09:26.445
• [11.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 11/04/23 12:09:26.454
  Nov  4 12:09:26.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pod-network-test @ 11/04/23 12:09:26.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:09:26.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:09:26.473
  STEP: Performing setup for networking test in namespace pod-network-test-3114 @ 11/04/23 12:09:26.476
  STEP: creating a selector @ 11/04/23 12:09:26.476
  STEP: Creating the service pods in kubernetes @ 11/04/23 12:09:26.476
  Nov  4 12:09:26.476: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/04/23 12:09:48.593
  Nov  4 12:09:50.625: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov  4 12:09:50.625: INFO: Going to poll 192.168.55.71 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov  4 12:09:50.628: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.55.71 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3114 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:09:50.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:09:50.629: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:09:50.629: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3114/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.55.71+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov  4 12:09:51.698: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov  4 12:09:51.698: INFO: Going to poll 192.168.46.67 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov  4 12:09:51.702: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.46.67 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3114 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:09:51.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:09:51.703: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:09:51.703: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3114/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.46.67+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov  4 12:09:52.781: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov  4 12:09:52.781: INFO: Going to poll 192.168.193.66 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov  4 12:09:52.785: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.193.66 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3114 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:09:52.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:09:52.786: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:09:52.786: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3114/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.193.66+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov  4 12:09:53.848: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov  4 12:09:53.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3114" for this suite. @ 11/04/23 12:09:53.852
• [27.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 11/04/23 12:09:53.861
  Nov  4 12:09:53.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 12:09:53.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:09:53.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:09:53.881
  STEP: set up a multi version CRD @ 11/04/23 12:09:53.885
  Nov  4 12:09:53.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: rename a version @ 11/04/23 12:09:56.982
  STEP: check the new version name is served @ 11/04/23 12:09:56.997
  STEP: check the old version name is removed @ 11/04/23 12:09:57.781
  STEP: check the other version is not changed @ 11/04/23 12:09:58.409
  Nov  4 12:10:01.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3789" for this suite. @ 11/04/23 12:10:01.013
• [7.160 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 11/04/23 12:10:01.021
  Nov  4 12:10:01.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replicaset @ 11/04/23 12:10:01.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:01.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:01.038
  Nov  4 12:10:01.040: INFO: Creating ReplicaSet my-hostname-basic-e1f1ee7f-e0dd-42d0-ba99-5bbca32de2c6
  Nov  4 12:10:01.049: INFO: Pod name my-hostname-basic-e1f1ee7f-e0dd-42d0-ba99-5bbca32de2c6: Found 0 pods out of 1
  Nov  4 12:10:06.053: INFO: Pod name my-hostname-basic-e1f1ee7f-e0dd-42d0-ba99-5bbca32de2c6: Found 1 pods out of 1
  Nov  4 12:10:06.053: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-e1f1ee7f-e0dd-42d0-ba99-5bbca32de2c6" is running
  Nov  4 12:10:06.056: INFO: Pod "my-hostname-basic-e1f1ee7f-e0dd-42d0-ba99-5bbca32de2c6-8rxxq" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:10:01 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:10:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:10:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:10:01 +0000 UTC Reason: Message:}])
  Nov  4 12:10:06.056: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/04/23 12:10:06.056
  Nov  4 12:10:06.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4917" for this suite. @ 11/04/23 12:10:06.069
• [5.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/04/23 12:10:06.077
  Nov  4 12:10:06.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 12:10:06.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:06.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:06.094
  Nov  4 12:10:06.102: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Nov  4 12:10:11.108: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/04/23 12:10:11.108
  Nov  4 12:10:11.108: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/04/23 12:10:11.116
  Nov  4 12:10:11.124: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6765",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b5b44ce-49b5-4650-bc59-da99115ae8f7",
      ResourceVersion: (string) (len=4) "3402",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834696611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov  4 12:10:11.128: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Nov  4 12:10:11.128: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Nov  4 12:10:11.128: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6765",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3090673d-36ea-46c2-a8ab-707d16ef5144",
      ResourceVersion: (string) (len=4) "3403",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834696606,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7b5b44ce-49b5-4650-bc59-da99115ae8f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696610,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 37 62 35 62 34 34 63  |"uid\":\"7b5b44c|
              00000040  65 2d 34 39 62 35 2d 34  36 35 30 2d 62 63 35 39  |e-49b5-4650-bc59|
              00000050  2d 64 61 39 39 31 31 35  61 65 38 66 37 5c 22 7d  |-da99115ae8f7\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 12:10:11.135: INFO: Pod "test-cleanup-controller-b9mvs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-b9mvs",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6765",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62c16427-3428-4411-b09c-01532e553a0d",
      ResourceVersion: (string) (len=4) "3399",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834696606,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "3090673d-36ea-46c2-a8ab-707d16ef5144",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 30 39 30 36 37 33 64  |uid\":\"3090673d|
              00000080  2d 33 36 65 61 2d 34 36  63 32 2d 61 38 61 62 2d  |-36ea-46c2-a8ab-|
              00000090  37 30 37 64 31 36 65 66  35 31 34 34 5c 22 7d 22  |707d16ef5144\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696610,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 36 2e 37 30 5c 22 7d  |192.168.46.70\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-28r9j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-28r9j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696610,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696610,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834696606,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.46.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.46.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834696606,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834696609,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fb06ca0f9320240bbd6b4b0b9d36d010a88e7c65f6403b425507de625ef7c17c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:10:11.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6765" for this suite. @ 11/04/23 12:10:11.142
• [5.073 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 11/04/23 12:10:11.15
  Nov  4 12:10:11.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename namespaces @ 11/04/23 12:10:11.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:11.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:11.169
  STEP: Creating namespace "e2e-ns-dwzb7" @ 11/04/23 12:10:11.172
  Nov  4 12:10:11.187: INFO: Namespace "e2e-ns-dwzb7-8873" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-dwzb7-8873" @ 11/04/23 12:10:11.187
  Nov  4 12:10:11.198: INFO: Namespace "e2e-ns-dwzb7-8873" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-dwzb7-8873" @ 11/04/23 12:10:11.198
  Nov  4 12:10:11.205: INFO: Namespace "e2e-ns-dwzb7-8873" has []v1.FinalizerName{"kubernetes"}
  Nov  4 12:10:11.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3318" for this suite. @ 11/04/23 12:10:11.21
  STEP: Destroying namespace "e2e-ns-dwzb7-8873" for this suite. @ 11/04/23 12:10:11.216
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 11/04/23 12:10:11.224
  Nov  4 12:10:11.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 12:10:11.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:11.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:11.242
  STEP: Creating configMap with name configmap-test-upd-0c6f1201-2a38-494e-b0e2-27af2569b84e @ 11/04/23 12:10:11.292
  STEP: Creating the pod @ 11/04/23 12:10:11.297
  STEP: Waiting for pod with text data @ 11/04/23 12:10:13.312
  STEP: Waiting for pod with binary data @ 11/04/23 12:10:13.326
  Nov  4 12:10:13.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7388" for this suite. @ 11/04/23 12:10:13.334
• [2.114 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 11/04/23 12:10:13.339
  Nov  4 12:10:13.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:10:13.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:13.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:13.357
  STEP: Discovering how many secrets are in namespace by default @ 11/04/23 12:10:13.359
  STEP: Counting existing ResourceQuota @ 11/04/23 12:10:18.362
  STEP: Creating a ResourceQuota @ 11/04/23 12:10:23.366
  STEP: Ensuring resource quota status is calculated @ 11/04/23 12:10:23.372
  STEP: Creating a Secret @ 11/04/23 12:10:25.376
  STEP: Ensuring resource quota status captures secret creation @ 11/04/23 12:10:25.39
  STEP: Deleting a secret @ 11/04/23 12:10:27.393
  STEP: Ensuring resource quota status released usage @ 11/04/23 12:10:27.398
  Nov  4 12:10:29.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8121" for this suite. @ 11/04/23 12:10:29.406
• [16.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 11/04/23 12:10:29.412
  Nov  4 12:10:29.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename namespaces @ 11/04/23 12:10:29.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:29.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:29.483
  STEP: Read namespace status @ 11/04/23 12:10:29.485
  Nov  4 12:10:29.488: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/04/23 12:10:29.488
  Nov  4 12:10:29.494: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/04/23 12:10:29.494
  Nov  4 12:10:29.500: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Nov  4 12:10:29.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1240" for this suite. @ 11/04/23 12:10:29.502
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/04/23 12:10:29.509
  Nov  4 12:10:29.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 12:10:29.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:29.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:29.528
  Nov  4 12:10:29.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: creating the pod @ 11/04/23 12:10:29.531
  STEP: submitting the pod to kubernetes @ 11/04/23 12:10:29.531
  Nov  4 12:10:31.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4728" for this suite. @ 11/04/23 12:10:31.631
• [2.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/04/23 12:10:31.637
  Nov  4 12:10:31.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename conformance-tests @ 11/04/23 12:10:31.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:31.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:31.658
  STEP: Getting node addresses @ 11/04/23 12:10:31.66
  Nov  4 12:10:31.660: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Nov  4 12:10:31.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8245" for this suite. @ 11/04/23 12:10:31.667
• [0.036 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 11/04/23 12:10:31.673
  Nov  4 12:10:31.673: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 12:10:31.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:10:31.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:10:31.693
  STEP: Creating service test in namespace statefulset-8287 @ 11/04/23 12:10:31.695
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/04/23 12:10:31.699
  STEP: Creating stateful set ss in namespace statefulset-8287 @ 11/04/23 12:10:31.703
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8287 @ 11/04/23 12:10:31.711
  Nov  4 12:10:31.714: INFO: Found 0 stateful pods, waiting for 1
  Nov  4 12:10:41.723: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/04/23 12:10:41.723
  Nov  4 12:10:41.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:10:41.855: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:10:41.855: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:10:41.855: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:10:41.859: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Nov  4 12:10:51.863: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:10:51.863: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov  4 12:10:51.877: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999838s
  Nov  4 12:10:52.880: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996402895s
  Nov  4 12:10:53.883: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.99330698s
  Nov  4 12:10:54.889: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.990563902s
  Nov  4 12:10:55.893: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.983732354s
  Nov  4 12:10:56.897: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.979769566s
  Nov  4 12:10:57.902: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.976238481s
  Nov  4 12:10:58.905: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.97174204s
  Nov  4 12:10:59.909: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.968543707s
  Nov  4 12:11:00.913: INFO: Verifying statefulset ss doesn't scale past 1 for another 963.768674ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8287 @ 11/04/23 12:11:01.913
  Nov  4 12:11:01.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 12:11:02.038: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov  4 12:11:02.038: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 12:11:02.038: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov  4 12:11:02.041: INFO: Found 1 stateful pods, waiting for 3
  Nov  4 12:11:12.048: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:11:12.048: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:11:12.048: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/04/23 12:11:12.048
  STEP: Scale down will halt with unhealthy stateful pod @ 11/04/23 12:11:12.048
  Nov  4 12:11:12.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:11:12.176: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:11:12.176: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:11:12.176: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:11:12.176: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:11:12.314: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:11:12.314: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:11:12.314: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:11:12.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:11:12.446: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:11:12.446: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:11:12.446: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:11:12.446: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov  4 12:11:12.448: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Nov  4 12:11:22.456: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:11:22.456: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:11:22.456: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:11:22.466: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999984s
  Nov  4 12:11:23.470: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997032389s
  Nov  4 12:11:24.473: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993823816s
  Nov  4 12:11:25.477: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.989823192s
  Nov  4 12:11:26.482: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.985823123s
  Nov  4 12:11:27.486: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.980671838s
  Nov  4 12:11:28.490: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.976595451s
  Nov  4 12:11:29.493: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.973542216s
  Nov  4 12:11:30.497: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.96983199s
  Nov  4 12:11:31.500: INFO: Verifying statefulset ss doesn't scale past 3 for another 967.047916ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8287 @ 11/04/23 12:11:32.5
  Nov  4 12:11:32.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 12:11:32.625: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov  4 12:11:32.625: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 12:11:32.625: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov  4 12:11:32.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 12:11:32.744: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov  4 12:11:32.744: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 12:11:32.744: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov  4 12:11:32.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-8287 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 12:11:32.862: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov  4 12:11:32.862: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 12:11:32.862: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov  4 12:11:32.862: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/04/23 12:11:42.879
  Nov  4 12:11:42.879: INFO: Deleting all statefulset in ns statefulset-8287
  Nov  4 12:11:42.881: INFO: Scaling statefulset ss to 0
  Nov  4 12:11:42.889: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 12:11:42.891: INFO: Deleting statefulset ss
  Nov  4 12:11:42.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8287" for this suite. @ 11/04/23 12:11:42.905
• [71.239 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/04/23 12:11:42.913
  Nov  4 12:11:42.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename daemonsets @ 11/04/23 12:11:42.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:11:42.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:11:42.929
  Nov  4 12:11:42.944: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/04/23 12:11:42.948
  Nov  4 12:11:42.952: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:42.952: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:42.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:11:42.954: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  Nov  4 12:11:43.958: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:43.958: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:43.960: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov  4 12:11:43.960: INFO: Node ip-172-31-44-230 is running 0 daemon pod, expected 1
  Nov  4 12:11:44.959: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:44.959: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:44.962: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 12:11:44.962: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/04/23 12:11:44.974
  STEP: Check that daemon pods images are updated. @ 11/04/23 12:11:44.983
  Nov  4 12:11:44.986: INFO: Wrong image for pod: daemon-set-8vrg7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov  4 12:11:44.986: INFO: Wrong image for pod: daemon-set-b2jmf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov  4 12:11:44.986: INFO: Wrong image for pod: daemon-set-q9vs9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov  4 12:11:44.988: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:44.989: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:45.992: INFO: Wrong image for pod: daemon-set-b2jmf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov  4 12:11:45.992: INFO: Pod daemon-set-chd92 is not available
  Nov  4 12:11:45.992: INFO: Wrong image for pod: daemon-set-q9vs9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov  4 12:11:45.995: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:45.995: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:46.993: INFO: Wrong image for pod: daemon-set-b2jmf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov  4 12:11:46.997: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:46.997: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:47.991: INFO: Wrong image for pod: daemon-set-b2jmf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov  4 12:11:47.991: INFO: Pod daemon-set-jj2xs is not available
  Nov  4 12:11:47.994: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:47.995: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:48.992: INFO: Pod daemon-set-4z65z is not available
  Nov  4 12:11:48.995: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:48.995: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/04/23 12:11:48.995
  Nov  4 12:11:48.999: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:49.000: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:49.004: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov  4 12:11:49.006: INFO: Node ip-172-31-75-164 is running 0 daemon pod, expected 1
  Nov  4 12:11:50.009: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:50.009: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:11:50.012: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 12:11:50.012: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/04/23 12:11:50.026
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-485, will wait for the garbage collector to delete the pods @ 11/04/23 12:11:50.027
  Nov  4 12:11:50.086: INFO: Deleting DaemonSet.extensions daemon-set took: 6.271528ms
  Nov  4 12:11:50.188: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.745075ms
  Nov  4 12:11:51.691: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:11:51.691: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov  4 12:11:51.693: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4205"},"items":null}

  Nov  4 12:11:51.697: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4205"},"items":null}

  Nov  4 12:11:51.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-485" for this suite. @ 11/04/23 12:11:51.709
• [8.802 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 11/04/23 12:11:51.715
  Nov  4 12:11:51.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 12:11:51.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:11:51.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:11:51.743
  STEP: Creating pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460 @ 11/04/23 12:11:51.745
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 12:11:53.76
  Nov  4 12:11:53.764: INFO: Initial restart count of pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 is 0
  Nov  4 12:11:53.767: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:11:55.771: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:11:57.776: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:11:59.779: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:01.785: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:03.789: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:05.793: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:07.797: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:09.802: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:11.805: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:13.810: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:15.813: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:17.816: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:19.819: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:21.822: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:23.826: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:25.830: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:27.834: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:29.837: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:31.841: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:33.845: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:35.847: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:37.852: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:39.854: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:41.858: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:43.861: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:45.868: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:47.872: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:49.876: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:51.879: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:53.882: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:55.885: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:57.889: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:12:59.892: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:01.897: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:03.901: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:05.904: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:07.909: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:09.913: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:11.916: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:13.921: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:15.925: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:17.929: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:19.932: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:21.937: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:23.940: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:25.944: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:27.948: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:29.953: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:31.956: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:33.960: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:35.964: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:37.968: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:39.973: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:41.977: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:43.982: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:45.985: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:47.989: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:49.992: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:51.997: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:54.000: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:56.005: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:13:58.010: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:00.013: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:02.018: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:04.022: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:06.026: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:08.030: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:10.034: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:12.037: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:14.042: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:16.045: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:18.050: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:20.053: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:22.057: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:24.060: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:26.065: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:28.070: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:30.074: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:32.078: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:34.082: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:36.085: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:38.089: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:40.092: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:42.097: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:44.101: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:46.104: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:48.109: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:50.112: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:52.116: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:54.120: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:56.125: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:14:58.128: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:00.133: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:02.137: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:04.140: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:06.144: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:08.147: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:10.150: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:12.153: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:14.157: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:16.161: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:18.166: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:20.170: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:22.175: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:24.178: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:26.182: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:28.187: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:30.191: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:32.195: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:34.200: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:36.203: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:38.206: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:40.211: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:42.214: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:44.219: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:46.223: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:48.225: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:50.229: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:52.232: INFO: Get pod test-grpc-a475a128-5497-402f-ac39-792a62d77941 in namespace container-probe-6460
  Nov  4 12:15:54.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 12:15:54.237
  STEP: Destroying namespace "container-probe-6460" for this suite. @ 11/04/23 12:15:54.251
• [242.541 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 11/04/23 12:15:54.258
  Nov  4 12:15:54.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:15:54.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:15:54.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:15:54.277
  STEP: Creating a ResourceQuota with terminating scope @ 11/04/23 12:15:54.28
  STEP: Ensuring ResourceQuota status is calculated @ 11/04/23 12:15:54.286
  STEP: Creating a ResourceQuota with not terminating scope @ 11/04/23 12:15:56.29
  STEP: Ensuring ResourceQuota status is calculated @ 11/04/23 12:15:56.298
  STEP: Creating a long running pod @ 11/04/23 12:15:58.301
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/04/23 12:15:58.313
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/04/23 12:16:00.317
  STEP: Deleting the pod @ 11/04/23 12:16:02.323
  STEP: Ensuring resource quota status released the pod usage @ 11/04/23 12:16:02.333
  STEP: Creating a terminating pod @ 11/04/23 12:16:04.336
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/04/23 12:16:04.347
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/04/23 12:16:06.351
  STEP: Deleting the pod @ 11/04/23 12:16:08.353
  STEP: Ensuring resource quota status released the pod usage @ 11/04/23 12:16:08.363
  Nov  4 12:16:10.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6716" for this suite. @ 11/04/23 12:16:10.371
• [16.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/04/23 12:16:10.378
  Nov  4 12:16:10.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename events @ 11/04/23 12:16:10.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:16:10.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:16:10.398
  STEP: Create set of events @ 11/04/23 12:16:10.4
  STEP: get a list of Events with a label in the current namespace @ 11/04/23 12:16:10.418
  STEP: delete a list of events @ 11/04/23 12:16:10.421
  Nov  4 12:16:10.421: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/04/23 12:16:10.439
  Nov  4 12:16:10.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3127" for this suite. @ 11/04/23 12:16:10.447
• [0.074 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 11/04/23 12:16:10.453
  Nov  4 12:16:10.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename job @ 11/04/23 12:16:10.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:16:10.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:16:10.471
  STEP: Creating Indexed job @ 11/04/23 12:16:10.473
  STEP: Ensuring job reaches completions @ 11/04/23 12:16:10.48
  STEP: Ensuring pods with index for job exist @ 11/04/23 12:16:18.485
  Nov  4 12:16:18.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8170" for this suite. @ 11/04/23 12:16:18.49
• [8.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 11/04/23 12:16:18.497
  Nov  4 12:16:18.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename taint-single-pod @ 11/04/23 12:16:18.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:16:18.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:16:18.514
  Nov  4 12:16:18.516: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov  4 12:17:18.531: INFO: Waiting for terminating namespaces to be deleted...
  Nov  4 12:17:18.535: INFO: Starting informer...
  STEP: Starting pod... @ 11/04/23 12:17:18.535
  Nov  4 12:17:18.747: INFO: Pod is running on ip-172-31-44-230. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/04/23 12:17:18.747
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/04/23 12:17:18.757
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/04/23 12:17:18.759
  Nov  4 12:17:18.759: INFO: Pod wasn't evicted. Proceeding
  Nov  4 12:17:18.759: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/04/23 12:17:18.767
  STEP: Waiting some time to make sure that toleration time passed. @ 11/04/23 12:17:18.772
  Nov  4 12:18:33.773: INFO: Pod wasn't evicted. Test successful
  Nov  4 12:18:33.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7972" for this suite. @ 11/04/23 12:18:33.776
• [135.288 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/04/23 12:18:33.785
  Nov  4 12:18:33.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 12:18:33.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:18:33.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:18:33.804
  Nov  4 12:18:33.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: creating the pod @ 11/04/23 12:18:33.807
  STEP: submitting the pod to kubernetes @ 11/04/23 12:18:33.807
  Nov  4 12:18:35.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2095" for this suite. @ 11/04/23 12:18:35.849
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/04/23 12:18:35.856
  Nov  4 12:18:35.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename watch @ 11/04/23 12:18:35.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:18:35.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:18:35.872
  STEP: creating a watch on configmaps with a certain label @ 11/04/23 12:18:35.874
  STEP: creating a new configmap @ 11/04/23 12:18:35.875
  STEP: modifying the configmap once @ 11/04/23 12:18:35.88
  STEP: changing the label value of the configmap @ 11/04/23 12:18:35.885
  STEP: Expecting to observe a delete notification for the watched object @ 11/04/23 12:18:35.892
  Nov  4 12:18:35.892: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5598  07b76cc1-02e0-4289-87fd-170ce092da13 5309 0 2023-11-04 12:18:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-04 12:18:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:18:35.892: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5598  07b76cc1-02e0-4289-87fd-170ce092da13 5310 0 2023-11-04 12:18:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-04 12:18:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:18:35.893: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5598  07b76cc1-02e0-4289-87fd-170ce092da13 5311 0 2023-11-04 12:18:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-04 12:18:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/04/23 12:18:35.893
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/04/23 12:18:35.9
  STEP: changing the label value of the configmap back @ 11/04/23 12:18:45.902
  STEP: modifying the configmap a third time @ 11/04/23 12:18:45.909
  STEP: deleting the configmap @ 11/04/23 12:18:45.916
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/04/23 12:18:45.922
  Nov  4 12:18:45.922: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5598  07b76cc1-02e0-4289-87fd-170ce092da13 5362 0 2023-11-04 12:18:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-04 12:18:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:18:45.922: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5598  07b76cc1-02e0-4289-87fd-170ce092da13 5363 0 2023-11-04 12:18:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-04 12:18:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:18:45.922: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5598  07b76cc1-02e0-4289-87fd-170ce092da13 5364 0 2023-11-04 12:18:35 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-04 12:18:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:18:45.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5598" for this suite. @ 11/04/23 12:18:45.926
• [10.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/04/23 12:18:45.933
  Nov  4 12:18:45.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 12:18:45.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:18:45.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:18:45.954
  STEP: Creating secret with name secret-test-ffea0f59-683e-43c1-be6f-921e29a272f1 @ 11/04/23 12:18:45.956
  STEP: Creating a pod to test consume secrets @ 11/04/23 12:18:45.962
  STEP: Saw pod success @ 11/04/23 12:18:49.984
  Nov  4 12:18:49.987: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-e8202976-4ba8-4480-a6c4-5d77820618c9 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:18:50.002
  Nov  4 12:18:50.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5012" for this suite. @ 11/04/23 12:18:50.017
• [4.091 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 11/04/23 12:18:50.024
  Nov  4 12:18:50.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename namespaces @ 11/04/23 12:18:50.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:18:50.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:18:50.041
  STEP: creating a Namespace @ 11/04/23 12:18:50.044
  STEP: patching the Namespace @ 11/04/23 12:18:50.057
  STEP: get the Namespace and ensuring it has the label @ 11/04/23 12:18:50.061
  Nov  4 12:18:50.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2481" for this suite. @ 11/04/23 12:18:50.07
  STEP: Destroying namespace "nspatchtest-40c7e73f-3e18-4ef2-8bec-1a5bee946cc2-2241" for this suite. @ 11/04/23 12:18:50.076
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 11/04/23 12:18:50.082
  Nov  4 12:18:50.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename gc @ 11/04/23 12:18:50.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:18:50.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:18:50.097
  STEP: create the rc @ 11/04/23 12:18:50.099
  W1104 12:18:50.107998      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/04/23 12:18:55.113
  STEP: wait for all pods to be garbage collected @ 11/04/23 12:18:55.124
  STEP: Gathering metrics @ 11/04/23 12:19:00.13
  W1104 12:19:00.134393      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov  4 12:19:00.134: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov  4 12:19:00.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8750" for this suite. @ 11/04/23 12:19:00.137
• [10.077 seconds]
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/04/23 12:19:00.159
  Nov  4 12:19:00.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 12:19:00.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:19:00.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:19:00.182
  STEP: creating the pod @ 11/04/23 12:19:00.185
  STEP: submitting the pod to kubernetes @ 11/04/23 12:19:00.185
  W1104 12:19:00.193338      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 11/04/23 12:19:02.203
  STEP: updating the pod @ 11/04/23 12:19:02.205
  Nov  4 12:19:02.715: INFO: Successfully updated pod "pod-update-activedeadlineseconds-10536eeb-04e6-4597-b41f-b58d89278155"
  Nov  4 12:19:06.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4622" for this suite. @ 11/04/23 12:19:06.728
• [6.575 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 11/04/23 12:19:06.734
  Nov  4 12:19:06.734: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename gc @ 11/04/23 12:19:06.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:19:06.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:19:06.751
  STEP: create the rc @ 11/04/23 12:19:06.757
  W1104 12:19:06.761966      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/04/23 12:19:12.765
  STEP: wait for the rc to be deleted @ 11/04/23 12:19:12.774
  Nov  4 12:19:13.785: INFO: 80 pods remaining
  Nov  4 12:19:13.789: INFO: 80 pods has nil DeletionTimestamp
  Nov  4 12:19:13.789: INFO: 
  Nov  4 12:19:14.784: INFO: 71 pods remaining
  Nov  4 12:19:14.784: INFO: 70 pods has nil DeletionTimestamp
  Nov  4 12:19:14.784: INFO: 
  Nov  4 12:19:15.792: INFO: 60 pods remaining
  Nov  4 12:19:15.792: INFO: 60 pods has nil DeletionTimestamp
  Nov  4 12:19:15.792: INFO: 
  Nov  4 12:19:16.784: INFO: 40 pods remaining
  Nov  4 12:19:16.784: INFO: 40 pods has nil DeletionTimestamp
  Nov  4 12:19:16.784: INFO: 
  Nov  4 12:19:17.789: INFO: 30 pods remaining
  Nov  4 12:19:17.789: INFO: 30 pods has nil DeletionTimestamp
  Nov  4 12:19:17.789: INFO: 
  Nov  4 12:19:18.818: INFO: 20 pods remaining
  Nov  4 12:19:18.819: INFO: 20 pods has nil DeletionTimestamp
  Nov  4 12:19:18.819: INFO: 
  STEP: Gathering metrics @ 11/04/23 12:19:19.787
  W1104 12:19:19.795293      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov  4 12:19:19.795: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov  4 12:19:19.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7402" for this suite. @ 11/04/23 12:19:19.806
• [13.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 11/04/23 12:19:19.815
  Nov  4 12:19:19.815: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename gc @ 11/04/23 12:19:19.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:19:19.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:19:19.855
  Nov  4 12:19:19.896: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"7db400dd-d3de-4d3e-bd9d-df21d46a74cd", Controller:(*bool)(0xc004a6b986), BlockOwnerDeletion:(*bool)(0xc004a6b987)}}
  Nov  4 12:19:19.902: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"798005df-79a3-40dc-b971-501d3c54c981", Controller:(*bool)(0xc004b278de), BlockOwnerDeletion:(*bool)(0xc004b278df)}}
  Nov  4 12:19:19.907: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"2184c682-5570-4a61-aac2-e1375fdf6696", Controller:(*bool)(0xc004a6bbb6), BlockOwnerDeletion:(*bool)(0xc004a6bbb7)}}
  Nov  4 12:19:24.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6171" for this suite. @ 11/04/23 12:19:24.923
• [5.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/04/23 12:19:24.931
  Nov  4 12:19:24.931: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename subpath @ 11/04/23 12:19:24.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:19:24.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:19:24.953
  STEP: Setting up data @ 11/04/23 12:19:24.958
  STEP: Creating pod pod-subpath-test-configmap-n5z4 @ 11/04/23 12:19:24.965
  STEP: Creating a pod to test atomic-volume-subpath @ 11/04/23 12:19:24.965
  STEP: Saw pod success @ 11/04/23 12:19:49.024
  Nov  4 12:19:49.027: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-subpath-test-configmap-n5z4 container test-container-subpath-configmap-n5z4: <nil>
  STEP: delete the pod @ 11/04/23 12:19:49.033
  STEP: Deleting pod pod-subpath-test-configmap-n5z4 @ 11/04/23 12:19:49.045
  Nov  4 12:19:49.045: INFO: Deleting pod "pod-subpath-test-configmap-n5z4" in namespace "subpath-1915"
  Nov  4 12:19:49.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1915" for this suite. @ 11/04/23 12:19:49.05
• [24.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 11/04/23 12:19:49.056
  Nov  4 12:19:49.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svcaccounts @ 11/04/23 12:19:49.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:19:49.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:19:49.074
  Nov  4 12:19:49.088: INFO: created pod
  STEP: Saw pod success @ 11/04/23 12:19:53.098
  Nov  4 12:20:23.098: INFO: polling logs
  Nov  4 12:20:23.109: INFO: Pod logs: 
  I1104 12:19:49.746478       1 log.go:194] OK: Got token
  I1104 12:19:49.746527       1 log.go:194] validating with in-cluster discovery
  I1104 12:19:49.746872       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1104 12:19:49.746899       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-391:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001ea0a0), NotBefore:(*jwt.NumericDate)(0xc0001eaba8), IssuedAt:(*jwt.NumericDate)(0xc0001ea0b0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-391", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9d137096-0148-4771-b79a-e77a71038b4f"}}}
  I1104 12:19:49.756850       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1104 12:19:49.762531       1 log.go:194] OK: Validated signature on JWT
  I1104 12:19:49.762656       1 log.go:194] OK: Got valid claims from token!
  I1104 12:19:49.762705       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-391:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048f48), NotBefore:(*jwt.NumericDate)(0xc000048f70), IssuedAt:(*jwt.NumericDate)(0xc000048f50), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-391", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9d137096-0148-4771-b79a-e77a71038b4f"}}}

  Nov  4 12:20:23.109: INFO: completed pod
  Nov  4 12:20:23.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-391" for this suite. @ 11/04/23 12:20:23.118
• [34.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 11/04/23 12:20:23.124
  Nov  4 12:20:23.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 12:20:23.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:20:23.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:20:23.144
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/04/23 12:20:23.146
  STEP: Saw pod success @ 11/04/23 12:20:27.166
  Nov  4 12:20:27.169: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-2ba7656a-ff2c-4dfb-9ceb-7385380be2fe container test-container: <nil>
  STEP: delete the pod @ 11/04/23 12:20:27.175
  Nov  4 12:20:27.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3530" for this suite. @ 11/04/23 12:20:27.192
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 11/04/23 12:20:27.201
  Nov  4 12:20:27.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:20:27.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:20:27.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:20:27.22
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9526 @ 11/04/23 12:20:27.222
  STEP: changing the ExternalName service to type=ClusterIP @ 11/04/23 12:20:27.228
  STEP: creating replication controller externalname-service in namespace services-9526 @ 11/04/23 12:20:27.239
  I1104 12:20:27.247062      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9526, replica count: 2
  I1104 12:20:30.298442      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 12:20:30.298: INFO: Creating new exec pod
  Nov  4 12:20:33.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9526 exec execpodm2hnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:20:33.442: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:20:33.442: INFO: stdout: ""
  Nov  4 12:20:34.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9526 exec execpodm2hnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:20:34.558: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:20:34.558: INFO: stdout: ""
  Nov  4 12:20:35.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9526 exec execpodm2hnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:20:35.562: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:20:35.562: INFO: stdout: ""
  Nov  4 12:20:36.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9526 exec execpodm2hnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:20:36.562: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:20:36.562: INFO: stdout: "externalname-service-54m4f"
  Nov  4 12:20:36.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9526 exec execpodm2hnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  Nov  4 12:20:36.691: INFO: stderr: "+ nc -v -t -w 2 10.152.183.237 80\n+ echo hostName\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n"
  Nov  4 12:20:36.691: INFO: stdout: "externalname-service-bk6bm"
  Nov  4 12:20:36.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 12:20:36.694: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-9526" for this suite. @ 11/04/23 12:20:36.71
• [9.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/04/23 12:20:36.718
  Nov  4 12:20:36.718: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename proxy @ 11/04/23 12:20:36.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:20:36.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:20:36.741
  STEP: starting an echo server on multiple ports @ 11/04/23 12:20:36.75
  STEP: creating replication controller proxy-service-jlrmp in namespace proxy-3757 @ 11/04/23 12:20:36.75
  I1104 12:20:36.756390      19 runners.go:197] Created replication controller with name: proxy-service-jlrmp, namespace: proxy-3757, replica count: 1
  I1104 12:20:37.806941      19 runners.go:197] proxy-service-jlrmp Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I1104 12:20:38.807351      19 runners.go:197] proxy-service-jlrmp Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 12:20:38.810: INFO: setup took 2.066077454s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/04/23 12:20:38.81
  Nov  4 12:20:38.815: INFO: (0) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.250776ms)
  Nov  4 12:20:38.819: INFO: (0) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 9.129581ms)
  Nov  4 12:20:38.821: INFO: (0) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 10.466383ms)
  Nov  4 12:20:38.821: INFO: (0) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 10.546929ms)
  Nov  4 12:20:38.821: INFO: (0) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 11.285347ms)
  Nov  4 12:20:38.821: INFO: (0) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 11.378675ms)
  Nov  4 12:20:38.821: INFO: (0) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 11.246035ms)
  Nov  4 12:20:38.822: INFO: (0) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 11.677043ms)
  Nov  4 12:20:38.822: INFO: (0) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 11.646352ms)
  Nov  4 12:20:38.822: INFO: (0) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 11.934009ms)
  Nov  4 12:20:38.822: INFO: (0) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 11.835372ms)
  Nov  4 12:20:38.824: INFO: (0) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 14.41311ms)
  Nov  4 12:20:38.825: INFO: (0) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 14.530905ms)
  Nov  4 12:20:38.825: INFO: (0) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 14.850845ms)
  Nov  4 12:20:38.825: INFO: (0) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 15.257435ms)
  Nov  4 12:20:38.825: INFO: (0) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 15.30031ms)
  Nov  4 12:20:38.830: INFO: (1) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 4.197112ms)
  Nov  4 12:20:38.830: INFO: (1) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 4.228853ms)
  Nov  4 12:20:38.830: INFO: (1) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 4.324426ms)
  Nov  4 12:20:38.830: INFO: (1) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 4.587415ms)
  Nov  4 12:20:38.831: INFO: (1) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 5.082877ms)
  Nov  4 12:20:38.831: INFO: (1) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 5.155638ms)
  Nov  4 12:20:38.831: INFO: (1) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 5.529166ms)
  Nov  4 12:20:38.832: INFO: (1) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.941746ms)
  Nov  4 12:20:38.832: INFO: (1) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.280315ms)
  Nov  4 12:20:38.833: INFO: (1) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 7.144374ms)
  Nov  4 12:20:38.833: INFO: (1) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 7.433263ms)
  Nov  4 12:20:38.833: INFO: (1) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 7.746422ms)
  Nov  4 12:20:38.834: INFO: (1) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.213138ms)
  Nov  4 12:20:38.834: INFO: (1) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 8.756155ms)
  Nov  4 12:20:38.834: INFO: (1) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 8.859223ms)
  Nov  4 12:20:38.836: INFO: (1) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 9.72091ms)
  Nov  4 12:20:38.839: INFO: (2) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 3.746355ms)
  Nov  4 12:20:38.840: INFO: (2) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 4.238841ms)
  Nov  4 12:20:38.840: INFO: (2) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 4.474217ms)
  Nov  4 12:20:38.841: INFO: (2) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 5.054206ms)
  Nov  4 12:20:38.841: INFO: (2) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 4.851861ms)
  Nov  4 12:20:38.842: INFO: (2) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.594895ms)
  Nov  4 12:20:38.842: INFO: (2) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 5.829237ms)
  Nov  4 12:20:38.842: INFO: (2) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.121773ms)
  Nov  4 12:20:38.842: INFO: (2) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 6.12171ms)
  Nov  4 12:20:38.843: INFO: (2) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.955775ms)
  Nov  4 12:20:38.843: INFO: (2) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 7.053869ms)
  Nov  4 12:20:38.843: INFO: (2) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 7.451332ms)
  Nov  4 12:20:38.843: INFO: (2) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 7.670281ms)
  Nov  4 12:20:38.844: INFO: (2) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 7.899323ms)
  Nov  4 12:20:38.844: INFO: (2) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 8.286836ms)
  Nov  4 12:20:38.845: INFO: (2) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.820776ms)
  Nov  4 12:20:38.848: INFO: (3) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 3.462356ms)
  Nov  4 12:20:38.849: INFO: (3) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 3.82832ms)
  Nov  4 12:20:38.849: INFO: (3) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 4.503901ms)
  Nov  4 12:20:38.850: INFO: (3) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 4.952404ms)
  Nov  4 12:20:38.850: INFO: (3) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.339022ms)
  Nov  4 12:20:38.850: INFO: (3) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.096071ms)
  Nov  4 12:20:38.851: INFO: (3) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.37062ms)
  Nov  4 12:20:38.851: INFO: (3) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 6.133535ms)
  Nov  4 12:20:38.852: INFO: (3) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 6.573032ms)
  Nov  4 12:20:38.852: INFO: (3) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 6.845629ms)
  Nov  4 12:20:38.852: INFO: (3) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 7.378969ms)
  Nov  4 12:20:38.852: INFO: (3) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 7.131029ms)
  Nov  4 12:20:38.853: INFO: (3) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 7.9473ms)
  Nov  4 12:20:38.853: INFO: (3) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.399483ms)
  Nov  4 12:20:38.854: INFO: (3) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 8.593912ms)
  Nov  4 12:20:38.854: INFO: (3) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 8.939786ms)
  Nov  4 12:20:38.859: INFO: (4) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 4.292606ms)
  Nov  4 12:20:38.860: INFO: (4) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 5.245033ms)
  Nov  4 12:20:38.860: INFO: (4) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 5.648506ms)
  Nov  4 12:20:38.861: INFO: (4) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.069051ms)
  Nov  4 12:20:38.861: INFO: (4) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.702084ms)
  Nov  4 12:20:38.861: INFO: (4) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 6.74005ms)
  Nov  4 12:20:38.861: INFO: (4) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 6.668989ms)
  Nov  4 12:20:38.862: INFO: (4) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 6.953892ms)
  Nov  4 12:20:38.862: INFO: (4) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 7.147943ms)
  Nov  4 12:20:38.862: INFO: (4) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 7.588042ms)
  Nov  4 12:20:38.863: INFO: (4) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 8.324736ms)
  Nov  4 12:20:38.863: INFO: (4) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 8.493678ms)
  Nov  4 12:20:38.863: INFO: (4) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 8.890399ms)
  Nov  4 12:20:38.863: INFO: (4) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 8.744752ms)
  Nov  4 12:20:38.863: INFO: (4) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 9.008153ms)
  Nov  4 12:20:38.863: INFO: (4) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.738779ms)
  Nov  4 12:20:38.867: INFO: (5) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 3.653031ms)
  Nov  4 12:20:38.867: INFO: (5) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 3.822152ms)
  Nov  4 12:20:38.868: INFO: (5) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 4.111341ms)
  Nov  4 12:20:38.868: INFO: (5) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 4.605558ms)
  Nov  4 12:20:38.869: INFO: (5) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.00676ms)
  Nov  4 12:20:38.869: INFO: (5) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 5.69709ms)
  Nov  4 12:20:38.869: INFO: (5) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 5.623984ms)
  Nov  4 12:20:38.870: INFO: (5) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 6.017651ms)
  Nov  4 12:20:38.870: INFO: (5) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.464136ms)
  Nov  4 12:20:38.871: INFO: (5) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 6.732005ms)
  Nov  4 12:20:38.871: INFO: (5) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 7.523206ms)
  Nov  4 12:20:38.871: INFO: (5) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 7.787141ms)
  Nov  4 12:20:38.871: INFO: (5) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 7.609681ms)
  Nov  4 12:20:38.872: INFO: (5) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 8.302936ms)
  Nov  4 12:20:38.872: INFO: (5) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.757511ms)
  Nov  4 12:20:38.873: INFO: (5) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 9.639225ms)
  Nov  4 12:20:38.878: INFO: (6) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 4.04252ms)
  Nov  4 12:20:38.878: INFO: (6) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 4.185181ms)
  Nov  4 12:20:38.878: INFO: (6) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 4.678779ms)
  Nov  4 12:20:38.879: INFO: (6) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 5.089319ms)
  Nov  4 12:20:38.879: INFO: (6) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 5.203272ms)
  Nov  4 12:20:38.879: INFO: (6) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 5.455198ms)
  Nov  4 12:20:38.879: INFO: (6) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.727113ms)
  Nov  4 12:20:38.880: INFO: (6) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 6.256642ms)
  Nov  4 12:20:38.881: INFO: (6) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 6.738522ms)
  Nov  4 12:20:38.881: INFO: (6) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 6.710772ms)
  Nov  4 12:20:38.881: INFO: (6) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 6.87661ms)
  Nov  4 12:20:38.882: INFO: (6) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 8.303651ms)
  Nov  4 12:20:38.883: INFO: (6) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 8.605345ms)
  Nov  4 12:20:38.883: INFO: (6) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 9.028848ms)
  Nov  4 12:20:38.889: INFO: (6) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 14.648185ms)
  Nov  4 12:20:38.889: INFO: (6) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 15.325733ms)
  Nov  4 12:20:38.894: INFO: (7) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 4.313625ms)
  Nov  4 12:20:38.894: INFO: (7) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 3.932528ms)
  Nov  4 12:20:38.894: INFO: (7) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 5.105257ms)
  Nov  4 12:20:38.895: INFO: (7) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.336179ms)
  Nov  4 12:20:38.895: INFO: (7) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 5.479623ms)
  Nov  4 12:20:38.896: INFO: (7) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.296621ms)
  Nov  4 12:20:38.896: INFO: (7) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 6.177361ms)
  Nov  4 12:20:38.896: INFO: (7) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 6.73204ms)
  Nov  4 12:20:38.896: INFO: (7) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 6.80494ms)
  Nov  4 12:20:38.897: INFO: (7) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 7.807832ms)
  Nov  4 12:20:38.898: INFO: (7) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 8.034057ms)
  Nov  4 12:20:38.898: INFO: (7) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 8.298459ms)
  Nov  4 12:20:38.898: INFO: (7) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 8.293829ms)
  Nov  4 12:20:38.898: INFO: (7) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 8.591663ms)
  Nov  4 12:20:38.899: INFO: (7) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 9.155885ms)
  Nov  4 12:20:38.900: INFO: (7) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 9.962406ms)
  Nov  4 12:20:38.903: INFO: (8) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 3.482801ms)
  Nov  4 12:20:38.905: INFO: (8) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.086584ms)
  Nov  4 12:20:38.905: INFO: (8) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 5.241898ms)
  Nov  4 12:20:38.905: INFO: (8) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.350916ms)
  Nov  4 12:20:38.906: INFO: (8) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.616238ms)
  Nov  4 12:20:38.907: INFO: (8) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 6.982504ms)
  Nov  4 12:20:38.907: INFO: (8) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 6.85389ms)
  Nov  4 12:20:38.907: INFO: (8) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 6.922538ms)
  Nov  4 12:20:38.907: INFO: (8) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 7.152886ms)
  Nov  4 12:20:38.907: INFO: (8) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 7.250473ms)
  Nov  4 12:20:38.907: INFO: (8) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 7.637171ms)
  Nov  4 12:20:38.908: INFO: (8) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 7.923434ms)
  Nov  4 12:20:38.909: INFO: (8) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 8.740568ms)
  Nov  4 12:20:38.909: INFO: (8) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 9.035772ms)
  Nov  4 12:20:38.909: INFO: (8) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 9.43135ms)
  Nov  4 12:20:38.909: INFO: (8) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 9.472122ms)
  Nov  4 12:20:38.913: INFO: (9) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 3.844245ms)
  Nov  4 12:20:38.914: INFO: (9) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 4.479467ms)
  Nov  4 12:20:38.914: INFO: (9) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 4.447317ms)
  Nov  4 12:20:38.915: INFO: (9) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.17168ms)
  Nov  4 12:20:38.916: INFO: (9) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.715841ms)
  Nov  4 12:20:38.916: INFO: (9) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.46222ms)
  Nov  4 12:20:38.916: INFO: (9) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 6.528011ms)
  Nov  4 12:20:38.917: INFO: (9) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 7.145471ms)
  Nov  4 12:20:38.917: INFO: (9) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 7.612047ms)
  Nov  4 12:20:38.917: INFO: (9) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 7.838484ms)
  Nov  4 12:20:38.918: INFO: (9) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 7.952303ms)
  Nov  4 12:20:38.918: INFO: (9) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.12085ms)
  Nov  4 12:20:38.918: INFO: (9) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 8.498395ms)
  Nov  4 12:20:38.919: INFO: (9) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 8.902716ms)
  Nov  4 12:20:38.919: INFO: (9) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 9.41145ms)
  Nov  4 12:20:38.919: INFO: (9) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 9.585758ms)
  Nov  4 12:20:38.924: INFO: (10) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 4.195519ms)
  Nov  4 12:20:38.925: INFO: (10) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 5.263666ms)
  Nov  4 12:20:38.925: INFO: (10) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 5.172883ms)
  Nov  4 12:20:38.925: INFO: (10) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 5.067436ms)
  Nov  4 12:20:38.925: INFO: (10) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 5.545174ms)
  Nov  4 12:20:38.926: INFO: (10) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 6.124851ms)
  Nov  4 12:20:38.927: INFO: (10) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.859123ms)
  Nov  4 12:20:38.927: INFO: (10) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 7.010917ms)
  Nov  4 12:20:38.927: INFO: (10) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 7.203557ms)
  Nov  4 12:20:38.927: INFO: (10) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 7.388815ms)
  Nov  4 12:20:38.927: INFO: (10) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 7.722618ms)
  Nov  4 12:20:38.927: INFO: (10) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 7.498859ms)
  Nov  4 12:20:38.928: INFO: (10) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 7.961223ms)
  Nov  4 12:20:38.928: INFO: (10) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.635915ms)
  Nov  4 12:20:38.929: INFO: (10) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 8.891371ms)
  Nov  4 12:20:38.929: INFO: (10) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 9.798427ms)
  Nov  4 12:20:38.933: INFO: (11) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 3.949156ms)
  Nov  4 12:20:38.935: INFO: (11) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.093637ms)
  Nov  4 12:20:38.936: INFO: (11) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 6.192519ms)
  Nov  4 12:20:38.937: INFO: (11) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 6.963626ms)
  Nov  4 12:20:38.937: INFO: (11) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 7.414213ms)
  Nov  4 12:20:38.937: INFO: (11) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 7.574754ms)
  Nov  4 12:20:38.938: INFO: (11) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 8.022268ms)
  Nov  4 12:20:38.938: INFO: (11) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 8.16614ms)
  Nov  4 12:20:38.938: INFO: (11) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 8.428323ms)
  Nov  4 12:20:38.938: INFO: (11) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 8.846749ms)
  Nov  4 12:20:38.939: INFO: (11) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 8.662164ms)
  Nov  4 12:20:38.939: INFO: (11) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 9.083445ms)
  Nov  4 12:20:38.939: INFO: (11) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 9.461749ms)
  Nov  4 12:20:38.939: INFO: (11) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 9.565904ms)
  Nov  4 12:20:38.940: INFO: (11) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 9.768328ms)
  Nov  4 12:20:38.940: INFO: (11) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 10.178014ms)
  Nov  4 12:20:38.944: INFO: (12) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 4.401646ms)
  Nov  4 12:20:38.945: INFO: (12) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 4.397786ms)
  Nov  4 12:20:38.946: INFO: (12) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 5.981645ms)
  Nov  4 12:20:38.946: INFO: (12) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 5.900863ms)
  Nov  4 12:20:38.946: INFO: (12) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 6.14812ms)
  Nov  4 12:20:38.946: INFO: (12) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.990356ms)
  Nov  4 12:20:38.947: INFO: (12) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 6.935201ms)
  Nov  4 12:20:38.947: INFO: (12) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 7.028681ms)
  Nov  4 12:20:38.948: INFO: (12) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 7.531996ms)
  Nov  4 12:20:38.948: INFO: (12) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 7.787368ms)
  Nov  4 12:20:38.948: INFO: (12) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 7.615406ms)
  Nov  4 12:20:38.948: INFO: (12) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 7.687928ms)
  Nov  4 12:20:38.948: INFO: (12) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 8.088376ms)
  Nov  4 12:20:38.949: INFO: (12) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.510298ms)
  Nov  4 12:20:38.949: INFO: (12) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 8.939032ms)
  Nov  4 12:20:38.949: INFO: (12) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 9.367389ms)
  Nov  4 12:20:38.954: INFO: (13) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 4.269307ms)
  Nov  4 12:20:38.955: INFO: (13) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 4.996584ms)
  Nov  4 12:20:38.955: INFO: (13) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 5.070686ms)
  Nov  4 12:20:38.957: INFO: (13) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.959406ms)
  Nov  4 12:20:38.957: INFO: (13) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 7.160852ms)
  Nov  4 12:20:38.957: INFO: (13) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 7.335697ms)
  Nov  4 12:20:38.957: INFO: (13) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 7.522615ms)
  Nov  4 12:20:38.957: INFO: (13) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 7.679403ms)
  Nov  4 12:20:38.957: INFO: (13) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 7.666652ms)
  Nov  4 12:20:38.957: INFO: (13) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 7.749025ms)
  Nov  4 12:20:38.958: INFO: (13) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 7.812062ms)
  Nov  4 12:20:38.958: INFO: (13) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 7.885626ms)
  Nov  4 12:20:38.958: INFO: (13) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 8.45483ms)
  Nov  4 12:20:38.958: INFO: (13) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 8.38353ms)
  Nov  4 12:20:38.958: INFO: (13) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 8.380526ms)
  Nov  4 12:20:38.959: INFO: (13) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 9.096951ms)
  Nov  4 12:20:38.963: INFO: (14) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 3.508845ms)
  Nov  4 12:20:38.963: INFO: (14) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 4.088558ms)
  Nov  4 12:20:38.964: INFO: (14) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 4.654239ms)
  Nov  4 12:20:38.964: INFO: (14) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 5.125915ms)
  Nov  4 12:20:38.965: INFO: (14) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.39923ms)
  Nov  4 12:20:38.965: INFO: (14) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 5.885176ms)
  Nov  4 12:20:38.966: INFO: (14) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.949616ms)
  Nov  4 12:20:38.967: INFO: (14) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 7.610219ms)
  Nov  4 12:20:38.967: INFO: (14) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 7.585459ms)
  Nov  4 12:20:38.967: INFO: (14) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 7.575459ms)
  Nov  4 12:20:38.967: INFO: (14) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 7.661409ms)
  Nov  4 12:20:38.967: INFO: (14) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 8.312302ms)
  Nov  4 12:20:38.968: INFO: (14) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 8.050467ms)
  Nov  4 12:20:38.968: INFO: (14) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 8.386069ms)
  Nov  4 12:20:38.968: INFO: (14) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 9.132709ms)
  Nov  4 12:20:38.969: INFO: (14) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 9.703116ms)
  Nov  4 12:20:38.974: INFO: (15) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 4.406336ms)
  Nov  4 12:20:38.974: INFO: (15) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 5.009512ms)
  Nov  4 12:20:38.974: INFO: (15) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.032681ms)
  Nov  4 12:20:38.974: INFO: (15) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 4.964567ms)
  Nov  4 12:20:38.975: INFO: (15) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 5.718405ms)
  Nov  4 12:20:38.975: INFO: (15) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 6.152243ms)
  Nov  4 12:20:38.976: INFO: (15) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.381576ms)
  Nov  4 12:20:38.976: INFO: (15) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 6.498315ms)
  Nov  4 12:20:38.976: INFO: (15) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.760556ms)
  Nov  4 12:20:38.976: INFO: (15) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 6.734773ms)
  Nov  4 12:20:38.977: INFO: (15) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 7.226416ms)
  Nov  4 12:20:38.977: INFO: (15) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 7.322333ms)
  Nov  4 12:20:38.977: INFO: (15) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 7.886105ms)
  Nov  4 12:20:38.978: INFO: (15) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 8.215072ms)
  Nov  4 12:20:38.978: INFO: (15) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 8.532078ms)
  Nov  4 12:20:38.978: INFO: (15) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 9.192445ms)
  Nov  4 12:20:38.982: INFO: (16) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 3.72021ms)
  Nov  4 12:20:38.983: INFO: (16) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 4.24984ms)
  Nov  4 12:20:38.983: INFO: (16) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 4.491179ms)
  Nov  4 12:20:38.983: INFO: (16) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 4.659092ms)
  Nov  4 12:20:38.984: INFO: (16) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 5.143851ms)
  Nov  4 12:20:38.985: INFO: (16) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 5.986659ms)
  Nov  4 12:20:38.985: INFO: (16) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 5.95993ms)
  Nov  4 12:20:38.985: INFO: (16) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.652188ms)
  Nov  4 12:20:38.985: INFO: (16) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.696693ms)
  Nov  4 12:20:38.986: INFO: (16) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 7.086491ms)
  Nov  4 12:20:38.986: INFO: (16) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 7.543431ms)
  Nov  4 12:20:38.987: INFO: (16) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 7.995672ms)
  Nov  4 12:20:38.987: INFO: (16) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 8.265782ms)
  Nov  4 12:20:38.987: INFO: (16) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 8.498076ms)
  Nov  4 12:20:38.987: INFO: (16) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 8.418864ms)
  Nov  4 12:20:38.989: INFO: (16) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 9.891463ms)
  Nov  4 12:20:38.992: INFO: (17) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 3.469882ms)
  Nov  4 12:20:38.992: INFO: (17) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 3.530405ms)
  Nov  4 12:20:38.994: INFO: (17) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 5.047759ms)
  Nov  4 12:20:38.994: INFO: (17) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 4.91079ms)
  Nov  4 12:20:38.994: INFO: (17) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.106423ms)
  Nov  4 12:20:38.994: INFO: (17) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 5.594998ms)
  Nov  4 12:20:38.995: INFO: (17) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 5.736702ms)
  Nov  4 12:20:38.995: INFO: (17) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 6.026076ms)
  Nov  4 12:20:38.996: INFO: (17) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 6.612531ms)
  Nov  4 12:20:38.996: INFO: (17) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 6.679332ms)
  Nov  4 12:20:38.996: INFO: (17) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 6.824957ms)
  Nov  4 12:20:38.996: INFO: (17) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 6.938789ms)
  Nov  4 12:20:38.996: INFO: (17) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 7.523798ms)
  Nov  4 12:20:38.996: INFO: (17) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 7.604184ms)
  Nov  4 12:20:38.997: INFO: (17) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 8.163582ms)
  Nov  4 12:20:38.998: INFO: (17) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 9.410177ms)
  Nov  4 12:20:39.002: INFO: (18) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 3.818438ms)
  Nov  4 12:20:39.003: INFO: (18) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 4.405938ms)
  Nov  4 12:20:39.004: INFO: (18) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 5.041699ms)
  Nov  4 12:20:39.004: INFO: (18) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 5.46895ms)
  Nov  4 12:20:39.004: INFO: (18) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 5.545641ms)
  Nov  4 12:20:39.005: INFO: (18) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.003044ms)
  Nov  4 12:20:39.005: INFO: (18) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 6.17224ms)
  Nov  4 12:20:39.005: INFO: (18) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 7.08116ms)
  Nov  4 12:20:39.006: INFO: (18) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 7.378766ms)
  Nov  4 12:20:39.006: INFO: (18) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 7.803283ms)
  Nov  4 12:20:39.006: INFO: (18) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 7.750082ms)
  Nov  4 12:20:39.007: INFO: (18) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 8.12327ms)
  Nov  4 12:20:39.007: INFO: (18) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 8.996612ms)
  Nov  4 12:20:39.008: INFO: (18) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 9.379674ms)
  Nov  4 12:20:39.008: INFO: (18) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 9.590695ms)
  Nov  4 12:20:39.008: INFO: (18) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 9.901238ms)
  Nov  4 12:20:39.013: INFO: (19) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 4.385097ms)
  Nov  4 12:20:39.013: INFO: (19) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">test<... (200; 4.577064ms)
  Nov  4 12:20:39.013: INFO: (19) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 5.228869ms)
  Nov  4 12:20:39.014: INFO: (19) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf/proxy/rewriteme">test</a> (200; 5.528139ms)
  Nov  4 12:20:39.014: INFO: (19) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:462/proxy/: tls qux (200; 5.41678ms)
  Nov  4 12:20:39.014: INFO: (19) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:443/proxy/tlsrewritem... (200; 5.832608ms)
  Nov  4 12:20:39.015: INFO: (19) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:160/proxy/: foo (200; 6.175995ms)
  Nov  4 12:20:39.015: INFO: (19) /api/v1/namespaces/proxy-3757/pods/proxy-service-jlrmp-h85wf:162/proxy/: bar (200; 6.650608ms)
  Nov  4 12:20:39.016: INFO: (19) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname2/proxy/: bar (200; 7.213993ms)
  Nov  4 12:20:39.016: INFO: (19) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname2/proxy/: tls qux (200; 7.132768ms)
  Nov  4 12:20:39.016: INFO: (19) /api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3757/pods/http:proxy-service-jlrmp-h85wf:1080/proxy/rewriteme">... (200; 7.309164ms)
  Nov  4 12:20:39.017: INFO: (19) /api/v1/namespaces/proxy-3757/pods/https:proxy-service-jlrmp-h85wf:460/proxy/: tls baz (200; 7.686746ms)
  Nov  4 12:20:39.017: INFO: (19) /api/v1/namespaces/proxy-3757/services/https:proxy-service-jlrmp:tlsportname1/proxy/: tls baz (200; 7.907722ms)
  Nov  4 12:20:39.017: INFO: (19) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname2/proxy/: bar (200; 8.277573ms)
  Nov  4 12:20:39.017: INFO: (19) /api/v1/namespaces/proxy-3757/services/proxy-service-jlrmp:portname1/proxy/: foo (200; 8.156419ms)
  Nov  4 12:20:39.018: INFO: (19) /api/v1/namespaces/proxy-3757/services/http:proxy-service-jlrmp:portname1/proxy/: foo (200; 9.600507ms)
  Nov  4 12:20:39.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-jlrmp in namespace proxy-3757, will wait for the garbage collector to delete the pods @ 11/04/23 12:20:39.021
  Nov  4 12:20:39.109: INFO: Deleting ReplicationController proxy-service-jlrmp took: 34.935511ms
  Nov  4 12:20:39.210: INFO: Terminating ReplicationController proxy-service-jlrmp pods took: 101.005938ms
  STEP: Destroying namespace "proxy-3757" for this suite. @ 11/04/23 12:20:41.611
• [4.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/04/23 12:20:41.619
  Nov  4 12:20:41.619: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 12:20:41.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:20:41.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:20:41.636
  Nov  4 12:20:41.638: INFO: Creating deployment "webserver-deployment"
  Nov  4 12:20:41.643: INFO: Waiting for observed generation 1
  Nov  4 12:20:43.651: INFO: Waiting for all required pods to come up
  Nov  4 12:20:43.655: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/04/23 12:20:43.655
  Nov  4 12:20:43.655: INFO: Waiting for deployment "webserver-deployment" to complete
  Nov  4 12:20:43.661: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Nov  4 12:20:43.667: INFO: Updating deployment webserver-deployment
  Nov  4 12:20:43.667: INFO: Waiting for observed generation 2
  Nov  4 12:20:45.674: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Nov  4 12:20:45.677: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Nov  4 12:20:45.680: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov  4 12:20:45.688: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Nov  4 12:20:45.688: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Nov  4 12:20:45.690: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov  4 12:20:45.695: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Nov  4 12:20:45.695: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Nov  4 12:20:45.704: INFO: Updating deployment webserver-deployment
  Nov  4 12:20:45.704: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Nov  4 12:20:45.708: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Nov  4 12:20:45.712: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Nov  4 12:20:45.729: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2aa5ec05-cfa7-4e01-80e4-35e46603f0b5",
      ResourceVersion: (string) (len=4) "8704",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov  4 12:20:45.735: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
      ResourceVersion: (string) (len=4) "8707",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2aa5ec05-cfa7-4e01-80e4-35e46603f0b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 61 61 35 65 63  30 35 2d 63 66 61 37 2d  |\"2aa5ec05-cfa7-|
              00000120  34 65 30 31 2d 38 30 65  34 2d 33 35 65 34 36 36  |4e01-80e4-35e466|
              00000130  30 33 66 30 62 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |03f0b5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 12:20:45.736: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Nov  4 12:20:45.736: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
      ResourceVersion: (string) (len=4) "8705",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2aa5ec05-cfa7-4e01-80e4-35e46603f0b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 61 61 35 65 63  30 35 2d 63 66 61 37 2d  |\"2aa5ec05-cfa7-|
              00000120  34 65 30 31 2d 38 30 65  34 2d 33 35 65 34 36 36  |4e01-80e4-35e466|
              00000130  30 33 66 30 62 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |03f0b5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 12:20:45.742: INFO: Pod "webserver-deployment-557759b7c7-7dpfd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7dpfd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10e41ffb-0e9c-4022-8490-c6ac0424333a",
      ResourceVersion: (string) (len=4) "8715",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2j982",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2j982",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.743: INFO: Pod "webserver-deployment-557759b7c7-7kj6m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7kj6m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56bcd416-fc1c-4135-bc8f-f5d3cb2cde1b",
      ResourceVersion: (string) (len=4) "8709",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ck92z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ck92z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.745: INFO: Pod "webserver-deployment-557759b7c7-8jv2g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8jv2g",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8694c4cd-fb22-4518-af16-b616476dc367",
      ResourceVersion: (string) (len=4) "8552",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 31 31 30 5c 22  |192.168.55.110\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5wq8h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5wq8h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-218",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.218",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://81759dccd50508e548eeccc1f35bdd3dee63571071a7b08dfd7ea6b4b1169ff6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.746: INFO: Pod "webserver-deployment-557759b7c7-9x95v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9x95v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04b031fa-3ea1-4344-9114-2dadf7c82596",
      ResourceVersion: (string) (len=4) "8570",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 33 2e 31 30 39 5c  |192.168.193.109\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lwc29",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lwc29",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.193.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.193.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ad49b3ada6de65d7064a16b9dd7cd21155db3db6e393b7cfbb1574198256758b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.750: INFO: Pod "webserver-deployment-557759b7c7-bgwmr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bgwmr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f87c195-417d-456f-b065-10fd1d14b947",
      ResourceVersion: (string) (len=4) "8574",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 36 2e 31 32 35 5c 22  |192.168.46.125\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75jql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75jql",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.46.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.46.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3dd81475ebea0b925023e6d298c5beaac78a703c43fa354a2811ca6884167310",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.753: INFO: Pod "webserver-deployment-557759b7c7-fjhpd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fjhpd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e960a17-cdab-43bf-94eb-a3f3fc20e2ae",
      ResourceVersion: (string) (len=4) "8712",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k59tx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k59tx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.755: INFO: Pod "webserver-deployment-557759b7c7-hbh8r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hbh8r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b72e6dd-8bea-49cf-aa76-8fb7c5bac68c",
      ResourceVersion: (string) (len=4) "8558",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 31 30 39 5c 22  |192.168.55.109\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ptk9f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ptk9f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-218",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.218",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://778e2b190e5b0e29cc056fed87137fd9aad304f422cacadbe4cdb7d90200bb43",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.757: INFO: Pod "webserver-deployment-557759b7c7-n52mp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n52mp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97a741af-ce4c-4f1b-98a4-a6c915f3ca13",
      ResourceVersion: (string) (len=4) "8562",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 33 2e 31 31 30 5c  |192.168.193.110\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwvfp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwvfp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.193.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.193.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://18f4e725a8147445bacf91d3a5c228fb6081e630ba10e7cf453462decac20ed6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.758: INFO: Pod "webserver-deployment-557759b7c7-qkcbx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qkcbx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79807725-a0dd-46b0-8daa-96f7f7c3bb14",
      ResourceVersion: (string) (len=4) "8564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 33 2e 31 30 38 5c  |192.168.193.108\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p4f2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p4f2x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.193.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.193.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aba49f6ac7de2aa055655ad2dbd4ac2370578a874a48f56b0662d560bee9d5ce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.761: INFO: Pod "webserver-deployment-557759b7c7-wpxvp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wpxvp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17090ce5-38db-4ef5-a0e3-65bb578b8b39",
      ResourceVersion: (string) (len=4) "8555",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 31 30 38 5c 22  |192.168.55.108\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5bnj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5bnj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-218",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.218",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a0b9001e16abb4d6579c1a13cc27930995ca54c5fbbd236e832fdb47de9ce983",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.764: INFO: Pod "webserver-deployment-557759b7c7-xvhfh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xvhfh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56d4c544-af34-4b04-b182-cf7c5b21ee9d",
      ResourceVersion: (string) (len=4) "8580",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f90258f0-f1e3-44a0-bb6e-581a09ae0e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 32 35 38 66 30 2d 66  |d\":\"f90258f0-f|
              00000090  31 65 33 2d 34 34 61 30  2d 62 62 36 65 2d 35 38  |1e3-44a0-bb6e-58|
              000000a0  31 61 30 39 61 65 30 65  36 62 5c 22 7d 22 3a 7b  |1a09ae0e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 36 2e 31 32 34 5c 22  |192.168.46.124\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xbh2m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xbh2m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.46.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.46.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://43751e3b7864c7b5cfb141f814a170dac855417b355c506e02582df42d759cb2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.765: INFO: Pod "webserver-deployment-9b4f5bf69-d46qr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d46qr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "922906da-c4e4-496b-931b-bd573450dc94",
      ResourceVersion: (string) (len=4) "8672",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  30 34 36 61 33 32 2d 33  |d\":\"e0046a32-3|
              00000090  64 66 38 2d 34 39 64 35  2d 38 34 37 37 2d 62 33  |df8-49d5-8477-b3|
              000000a0  30 66 35 30 63 30 30 34  62 65 5c 22 7d 22 3a 7b  |0f50c004be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 34 36 2e  31 32 37 5c 22 7d 22 3a  |.168.46.127\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rmbrt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rmbrt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.46.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.46.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.767: INFO: Pod "webserver-deployment-9b4f5bf69-hhkfh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hhkfh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16986a24-9d48-45de-8f51-bf4841babaf5",
      ResourceVersion: (string) (len=4) "8716",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  30 34 36 61 33 32 2d 33  |d\":\"e0046a32-3|
              00000090  64 66 38 2d 34 39 64 35  2d 38 34 37 37 2d 62 33  |df8-49d5-8477-b3|
              000000a0  30 66 35 30 63 30 30 34  62 65 5c 22 7d 22 3a 7b  |0f50c004be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tt4g9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tt4g9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.767: INFO: Pod "webserver-deployment-9b4f5bf69-jsb5d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jsb5d",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ead7b4db-ab0c-4659-b9a3-485a5a603f84",
      ResourceVersion: (string) (len=4) "8714",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  30 34 36 61 33 32 2d 33  |d\":\"e0046a32-3|
              00000090  64 66 38 2d 34 39 64 35  2d 38 34 37 37 2d 62 33  |df8-49d5-8477-b3|
              000000a0  30 66 35 30 63 30 30 34  62 65 5c 22 7d 22 3a 7b  |0f50c004be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kvrjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kvrjc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.770: INFO: Pod "webserver-deployment-9b4f5bf69-mvmpw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mvmpw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99fb55e6-4400-4b48-b337-986145fe1272",
      ResourceVersion: (string) (len=4) "8702",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  30 34 36 61 33 32 2d 33  |d\":\"e0046a32-3|
              00000090  64 66 38 2d 34 39 64 35  2d 38 34 37 37 2d 62 33  |df8-49d5-8477-b3|
              000000a0  30 66 35 30 63 30 30 34  62 65 5c 22 7d 22 3a 7b  |0f50c004be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 34 36 2e  36 36 5c 22 7d 22 3a 7b  |.168.46.66\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2vtcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2vtcx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.46.66",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.46.66"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.771: INFO: Pod "webserver-deployment-9b4f5bf69-qwzfc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qwzfc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fd2646e-8da0-40b0-acac-5e1c841c0a4d",
      ResourceVersion: (string) (len=4) "8692",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  30 34 36 61 33 32 2d 33  |d\":\"e0046a32-3|
              00000090  64 66 38 2d 34 39 64 35  2d 38 34 37 37 2d 62 33  |df8-49d5-8477-b3|
              000000a0  30 66 35 30 63 30 30 34  62 65 5c 22 7d 22 3a 7b  |0f50c004be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 35 35 2e  31 31 31 5c 22 7d 22 3a  |.168.55.111\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rxhjv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rxhjv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-218",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.218",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.773: INFO: Pod "webserver-deployment-9b4f5bf69-vf7b9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vf7b9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9ed9eb6-f7e4-43ab-818f-d0343c65d32e",
      ResourceVersion: (string) (len=4) "8700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  30 34 36 61 33 32 2d 33  |d\":\"e0046a32-3|
              00000090  64 66 38 2d 34 39 64 35  2d 38 34 37 37 2d 62 33  |df8-49d5-8477-b3|
              000000a0  30 66 35 30 63 30 30 34  62 65 5c 22 7d 22 3a 7b  |0f50c004be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 39 33  2e 31 31 32 5c 22 7d 22  |.168.193.112\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hd5v5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hd5v5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.193.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.193.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.778: INFO: Pod "webserver-deployment-9b4f5bf69-xstj6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xstj6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ca9fb72-885c-4d7f-8337-ac40c0e8b254",
      ResourceVersion: (string) (len=4) "8697",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e0046a32-3df8-49d5-8477-b30f50c004be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  30 34 36 61 33 32 2d 33  |d\":\"e0046a32-3|
              00000090  64 66 38 2d 34 39 64 35  2d 38 34 37 37 2d 62 33  |df8-49d5-8477-b3|
              000000a0  30 66 35 30 63 30 30 34  62 65 5c 22 7d 22 3a 7b  |0f50c004be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 39 33  2e 31 31 31 5c 22 7d 22  |.168.193.111\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5tglq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5tglq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.193.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.193.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:45.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4164" for this suite. @ 11/04/23 12:20:45.795
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/04/23 12:20:45.801
  Nov  4 12:20:45.801: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename daemonsets @ 11/04/23 12:20:45.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:20:45.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:20:45.835
  Nov  4 12:20:45.855: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/04/23 12:20:45.86
  Nov  4 12:20:45.861: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:20:45.861: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/04/23 12:20:45.861
  Nov  4 12:20:45.882: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:20:45.882: INFO: Node ip-172-31-75-164 is running 0 daemon pod, expected 1
  Nov  4 12:20:46.885: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:20:46.885: INFO: Node ip-172-31-75-164 is running 0 daemon pod, expected 1
  Nov  4 12:20:47.887: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov  4 12:20:47.887: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/04/23 12:20:47.889
  Nov  4 12:20:47.901: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov  4 12:20:47.901: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Nov  4 12:20:48.907: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:20:48.907: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/04/23 12:20:48.907
  Nov  4 12:20:48.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:20:48.917: INFO: Node ip-172-31-75-164 is running 0 daemon pod, expected 1
  Nov  4 12:20:49.923: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:20:49.923: INFO: Node ip-172-31-75-164 is running 0 daemon pod, expected 1
  Nov  4 12:20:50.920: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov  4 12:20:50.920: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/04/23 12:20:50.925
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8378, will wait for the garbage collector to delete the pods @ 11/04/23 12:20:50.925
  Nov  4 12:20:50.984: INFO: Deleting DaemonSet.extensions daemon-set took: 5.266256ms
  Nov  4 12:20:51.085: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.986017ms
  Nov  4 12:20:52.587: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:20:52.587: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov  4 12:20:52.591: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9116"},"items":null}

  Nov  4 12:20:52.593: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9116"},"items":null}

  Nov  4 12:20:52.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8378" for this suite. @ 11/04/23 12:20:52.618
• [6.823 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 11/04/23 12:20:52.626
  Nov  4 12:20:52.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 12:20:52.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:20:52.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:20:52.648
  STEP: creating a Deployment @ 11/04/23 12:20:52.653
  Nov  4 12:20:52.653: INFO: Creating simple deployment test-deployment-jwjs2
  Nov  4 12:20:52.679: INFO: deployment "test-deployment-jwjs2" doesn't have the required revision set
  STEP: Getting /status @ 11/04/23 12:20:54.69
  Nov  4 12:20:54.692: INFO: Deployment test-deployment-jwjs2 has Conditions: [{Available True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jwjs2-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/04/23 12:20:54.693
  Nov  4 12:20:54.702: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 12, 20, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 12, 20, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 12, 20, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 12, 20, 52, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-jwjs2-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/04/23 12:20:54.702
  Nov  4 12:20:54.704: INFO: Observed &Deployment event: ADDED
  Nov  4 12:20:54.705: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jwjs2-5d576bd769"}
  Nov  4 12:20:54.705: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.706: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jwjs2-5d576bd769"}
  Nov  4 12:20:54.706: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov  4 12:20:54.707: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.707: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov  4 12:20:54.708: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jwjs2-5d576bd769" is progressing.}
  Nov  4 12:20:54.708: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.708: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov  4 12:20:54.708: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jwjs2-5d576bd769" has successfully progressed.}
  Nov  4 12:20:54.709: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.710: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov  4 12:20:54.710: INFO: Observed Deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jwjs2-5d576bd769" has successfully progressed.}
  Nov  4 12:20:54.710: INFO: Found Deployment test-deployment-jwjs2 in namespace deployment-5395 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov  4 12:20:54.710: INFO: Deployment test-deployment-jwjs2 has an updated status
  STEP: patching the Statefulset Status @ 11/04/23 12:20:54.71
  Nov  4 12:20:54.710: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov  4 12:20:54.717: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/04/23 12:20:54.717
  Nov  4 12:20:54.721: INFO: Observed &Deployment event: ADDED
  Nov  4 12:20:54.721: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jwjs2-5d576bd769"}
  Nov  4 12:20:54.721: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.721: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jwjs2-5d576bd769"}
  Nov  4 12:20:54.721: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov  4 12:20:54.722: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.722: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov  4 12:20:54.722: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:52 +0000 UTC 2023-11-04 12:20:52 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jwjs2-5d576bd769" is progressing.}
  Nov  4 12:20:54.722: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.722: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov  4 12:20:54.722: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jwjs2-5d576bd769" has successfully progressed.}
  Nov  4 12:20:54.723: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.723: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov  4 12:20:54.723: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-04 12:20:53 +0000 UTC 2023-11-04 12:20:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jwjs2-5d576bd769" has successfully progressed.}
  Nov  4 12:20:54.723: INFO: Observed deployment test-deployment-jwjs2 in namespace deployment-5395 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov  4 12:20:54.723: INFO: Observed &Deployment event: MODIFIED
  Nov  4 12:20:54.723: INFO: Found deployment test-deployment-jwjs2 in namespace deployment-5395 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Nov  4 12:20:54.723: INFO: Deployment test-deployment-jwjs2 has a patched status
  Nov  4 12:20:54.727: INFO: Deployment "test-deployment-jwjs2":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-jwjs2",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5395",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbfec52d-9977-420d-9dbc-041080cfd598",
      ResourceVersion: (string) (len=4) "9151",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697252,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697254,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-jwjs2-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov  4 12:20:54.730: INFO: New ReplicaSet "test-deployment-jwjs2-5d576bd769" of Deployment "test-deployment-jwjs2":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-jwjs2-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5395",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0684eef-7315-4846-861a-23a557b844a3",
      ResourceVersion: (string) (len=4) "9146",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697252,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-jwjs2",
          UID: (types.UID) (len=36) "dbfec52d-9977-420d-9dbc-041080cfd598",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 62 66  |k:{\"uid\":\"dbf|
              00000120  65 63 35 32 64 2d 39 39  37 37 2d 34 32 30 64 2d  |ec52d-9977-420d-|
              00000130  39 64 62 63 2d 30 34 31  30 38 30 63 66 64 35 39  |9dbc-041080cfd59|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697253,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 12:20:54.736: INFO: Pod "test-deployment-jwjs2-5d576bd769-6jc42" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-jwjs2-5d576bd769-6jc42",
      GenerateName: (string) (len=33) "test-deployment-jwjs2-5d576bd769-",
      Namespace: (string) (len=15) "deployment-5395",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a3d4130-ffa4-4cc9-bc4e-07badac2d758",
      ResourceVersion: (string) (len=4) "9145",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697252,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-jwjs2-5d576bd769",
          UID: (types.UID) (len=36) "c0684eef-7315-4846-861a-23a557b844a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 30 36 38 34 65 65  66 2d 37 33 31 35 2d 34  |"c0684eef-7315-4|
              000000a0  38 34 36 2d 38 36 31 61  2d 32 33 61 35 35 37 62  |846-861a-23a557b|
              000000b0  38 34 34 61 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |844a3\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697253,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 36 2e 36 37 5c 22 7d  |192.168.46.67\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lnlg2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lnlg2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697253,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697253,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834697252,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.46.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.46.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834697252,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834697253,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f44aa93fffe01cef5bb02f2518faa234bf1d1c235f0cd36c5ac104dc2f5c190",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 12:20:54.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5395" for this suite. @ 11/04/23 12:20:54.74
• [2.119 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 11/04/23 12:20:54.745
  Nov  4 12:20:54.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/04/23 12:20:54.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:20:54.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:20:54.764
  STEP: create the container to handle the HTTPGet hook request. @ 11/04/23 12:20:54.769
  STEP: create the pod with lifecycle hook @ 11/04/23 12:20:56.788
  STEP: check poststart hook @ 11/04/23 12:20:58.803
  STEP: delete the pod with lifecycle hook @ 11/04/23 12:20:58.819
  Nov  4 12:21:00.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4446" for this suite. @ 11/04/23 12:21:00.835
• [6.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/04/23 12:21:00.842
  Nov  4 12:21:00.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename init-container @ 11/04/23 12:21:00.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:00.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:00.859
  STEP: creating the pod @ 11/04/23 12:21:00.862
  Nov  4 12:21:00.862: INFO: PodSpec: initContainers in spec.initContainers
  Nov  4 12:21:05.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3936" for this suite. @ 11/04/23 12:21:05.788
• [4.953 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/04/23 12:21:05.795
  Nov  4 12:21:05.795: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename watch @ 11/04/23 12:21:05.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:05.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:05.812
  STEP: getting a starting resourceVersion @ 11/04/23 12:21:05.814
  STEP: starting a background goroutine to produce watch events @ 11/04/23 12:21:05.818
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/04/23 12:21:05.818
  Nov  4 12:21:08.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2376" for this suite. @ 11/04/23 12:21:08.651
• [2.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 11/04/23 12:21:08.702
  Nov  4 12:21:08.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:21:08.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:08.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:08.721
  STEP: Creating a ResourceQuota with best effort scope @ 11/04/23 12:21:08.723
  STEP: Ensuring ResourceQuota status is calculated @ 11/04/23 12:21:08.727
  STEP: Creating a ResourceQuota with not best effort scope @ 11/04/23 12:21:10.731
  STEP: Ensuring ResourceQuota status is calculated @ 11/04/23 12:21:10.736
  STEP: Creating a best-effort pod @ 11/04/23 12:21:12.739
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/04/23 12:21:12.75
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/04/23 12:21:14.753
  STEP: Deleting the pod @ 11/04/23 12:21:16.757
  STEP: Ensuring resource quota status released the pod usage @ 11/04/23 12:21:16.766
  STEP: Creating a not best-effort pod @ 11/04/23 12:21:18.771
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/04/23 12:21:18.785
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/04/23 12:21:20.788
  STEP: Deleting the pod @ 11/04/23 12:21:22.792
  STEP: Ensuring resource quota status released the pod usage @ 11/04/23 12:21:22.801
  Nov  4 12:21:24.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-157" for this suite. @ 11/04/23 12:21:24.809
• [16.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 11/04/23 12:21:24.814
  Nov  4 12:21:24.814: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename events @ 11/04/23 12:21:24.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:24.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:24.833
  STEP: creating a test event @ 11/04/23 12:21:24.835
  STEP: listing all events in all namespaces @ 11/04/23 12:21:24.84
  STEP: patching the test event @ 11/04/23 12:21:24.846
  STEP: fetching the test event @ 11/04/23 12:21:24.854
  STEP: updating the test event @ 11/04/23 12:21:24.858
  STEP: getting the test event @ 11/04/23 12:21:24.866
  STEP: deleting the test event @ 11/04/23 12:21:24.868
  STEP: listing all events in all namespaces @ 11/04/23 12:21:24.874
  Nov  4 12:21:24.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6874" for this suite. @ 11/04/23 12:21:24.886
• [0.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 11/04/23 12:21:24.891
  Nov  4 12:21:24.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 12:21:24.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:24.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:24.912
  STEP: Creating a pod to test downward api env vars @ 11/04/23 12:21:24.914
  STEP: Saw pod success @ 11/04/23 12:21:28.934
  Nov  4 12:21:28.937: INFO: Trying to get logs from node ip-172-31-44-230 pod downward-api-e976f5ad-3350-41a9-a567-0d2cb7a38b53 container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 12:21:28.945
  Nov  4 12:21:28.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-837" for this suite. @ 11/04/23 12:21:28.965
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 11/04/23 12:21:28.971
  Nov  4 12:21:28.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename field-validation @ 11/04/23 12:21:28.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:28.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:28.988
  Nov  4 12:21:28.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:21:32.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-963" for this suite. @ 11/04/23 12:21:32.083
• [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 11/04/23 12:21:32.092
  Nov  4 12:21:32.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:21:32.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:32.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:32.109
  STEP: Starting the proxy @ 11/04/23 12:21:32.111
  Nov  4 12:21:32.111: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-9130 proxy --unix-socket=/tmp/kubectl-proxy-unix2264945091/test'
  STEP: retrieving proxy /api/ output @ 11/04/23 12:21:32.147
  Nov  4 12:21:32.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9130" for this suite. @ 11/04/23 12:21:32.152
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 11/04/23 12:21:32.158
  Nov  4 12:21:32.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sysctl @ 11/04/23 12:21:32.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:32.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:32.176
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/04/23 12:21:32.178
  STEP: Watching for error events or started pod @ 11/04/23 12:21:32.185
  STEP: Waiting for pod completion @ 11/04/23 12:21:34.189
  STEP: Checking that the pod succeeded @ 11/04/23 12:21:36.198
  STEP: Getting logs from the pod @ 11/04/23 12:21:36.198
  STEP: Checking that the sysctl is actually updated @ 11/04/23 12:21:36.203
  Nov  4 12:21:36.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8004" for this suite. @ 11/04/23 12:21:36.206
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 11/04/23 12:21:36.213
  Nov  4 12:21:36.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:21:36.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:36.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:36.232
  STEP: Setting up server cert @ 11/04/23 12:21:36.254
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:21:36.685
  STEP: Deploying the webhook pod @ 11/04/23 12:21:36.693
  STEP: Wait for the deployment to be ready @ 11/04/23 12:21:36.701
  Nov  4 12:21:36.708: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/04/23 12:21:38.716
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:21:38.727
  Nov  4 12:21:39.728: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/04/23 12:21:39.733
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/04/23 12:21:39.734
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/04/23 12:21:39.734
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/04/23 12:21:39.734
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/04/23 12:21:39.735
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/04/23 12:21:39.735
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/04/23 12:21:39.736
  Nov  4 12:21:39.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2033" for this suite. @ 11/04/23 12:21:39.774
  STEP: Destroying namespace "webhook-markers-682" for this suite. @ 11/04/23 12:21:39.777
• [3.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 11/04/23 12:21:39.786
  Nov  4 12:21:39.786: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:21:39.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:39.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:39.803
  STEP: starting the proxy server @ 11/04/23 12:21:39.805
  Nov  4 12:21:39.806: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-8729 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/04/23 12:21:39.841
  Nov  4 12:21:39.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8729" for this suite. @ 11/04/23 12:21:39.85
• [0.071 seconds]
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 11/04/23 12:21:39.857
  Nov  4 12:21:39.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 12:21:39.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:39.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:39.875
  STEP: creating a ConfigMap @ 11/04/23 12:21:39.877
  STEP: fetching the ConfigMap @ 11/04/23 12:21:39.881
  STEP: patching the ConfigMap @ 11/04/23 12:21:39.883
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/04/23 12:21:39.888
  STEP: deleting the ConfigMap by collection with a label selector @ 11/04/23 12:21:39.891
  STEP: listing all ConfigMaps in test namespace @ 11/04/23 12:21:39.898
  Nov  4 12:21:39.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6666" for this suite. @ 11/04/23 12:21:39.902
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 11/04/23 12:21:39.908
  Nov  4 12:21:39.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:21:39.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:39.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:39.931
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:21:39.933
  STEP: Saw pod success @ 11/04/23 12:21:43.95
  Nov  4 12:21:43.952: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-1af1ef80-10f4-4686-934c-6d176171cf8a container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:21:43.958
  Nov  4 12:21:43.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5730" for this suite. @ 11/04/23 12:21:43.977
• [4.074 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 11/04/23 12:21:43.983
  Nov  4 12:21:43.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename field-validation @ 11/04/23 12:21:43.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:43.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:44
  Nov  4 12:21:44.002: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  W1104 12:21:44.003273      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0015bc6a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1104 12:21:46.549172      19 warnings.go:70] unknown field "alpha"
  W1104 12:21:46.549191      19 warnings.go:70] unknown field "beta"
  W1104 12:21:46.549195      19 warnings.go:70] unknown field "delta"
  W1104 12:21:46.549198      19 warnings.go:70] unknown field "epsilon"
  W1104 12:21:46.549201      19 warnings.go:70] unknown field "gamma"
  Nov  4 12:21:47.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3681" for this suite. @ 11/04/23 12:21:47.086
• [3.108 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 11/04/23 12:21:47.091
  Nov  4 12:21:47.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename field-validation @ 11/04/23 12:21:47.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:47.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:47.113
  STEP: apply creating a deployment @ 11/04/23 12:21:47.115
  Nov  4 12:21:47.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6486" for this suite. @ 11/04/23 12:21:47.13
• [0.044 seconds]
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/04/23 12:21:47.135
  Nov  4 12:21:47.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 12:21:47.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:47.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:47.157
  STEP: Creating secret with name secret-test-f5aa8742-abbd-4387-bf39-36ba60513e15 @ 11/04/23 12:21:47.178
  STEP: Creating a pod to test consume secrets @ 11/04/23 12:21:47.183
  STEP: Saw pod success @ 11/04/23 12:21:51.201
  Nov  4 12:21:51.205: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-0fcc2283-1397-45e9-ae7f-1c72de337a43 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:21:51.211
  Nov  4 12:21:51.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5627" for this suite. @ 11/04/23 12:21:51.231
  STEP: Destroying namespace "secret-namespace-3126" for this suite. @ 11/04/23 12:21:51.248
• [4.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 11/04/23 12:21:51.257
  Nov  4 12:21:51.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 12:21:51.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:21:51.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:21:51.276
  Nov  4 12:22:51.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5395" for this suite. @ 11/04/23 12:22:51.296
• [60.046 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 11/04/23 12:22:51.303
  Nov  4 12:22:51.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 12:22:51.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:22:51.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:22:51.322
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/04/23 12:22:51.324
  STEP: Saw pod success @ 11/04/23 12:22:55.34
  Nov  4 12:22:55.342: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-21c23622-25a7-41f0-94f3-730b6c4300b1 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 12:22:55.35
  Nov  4 12:22:55.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-21" for this suite. @ 11/04/23 12:22:55.364
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 11/04/23 12:22:55.371
  Nov  4 12:22:55.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename cronjob @ 11/04/23 12:22:55.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:22:55.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:22:55.39
  STEP: Creating a ReplaceConcurrent cronjob @ 11/04/23 12:22:55.392
  STEP: Ensuring a job is scheduled @ 11/04/23 12:22:55.397
  STEP: Ensuring exactly one is scheduled @ 11/04/23 12:23:01.4
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/04/23 12:23:01.402
  STEP: Ensuring the job is replaced with a new one @ 11/04/23 12:23:01.404
  STEP: Removing cronjob @ 11/04/23 12:24:01.408
  Nov  4 12:24:01.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8179" for this suite. @ 11/04/23 12:24:01.416
• [66.052 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 11/04/23 12:24:01.423
  Nov  4 12:24:01.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename runtimeclass @ 11/04/23 12:24:01.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:01.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:01.442
  Nov  4 12:24:01.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8505" for this suite. @ 11/04/23 12:24:01.454
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 11/04/23 12:24:01.459
  Nov  4 12:24:01.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/04/23 12:24:01.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:01.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:01.475
  STEP: fetching the /apis discovery document @ 11/04/23 12:24:01.477
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/04/23 12:24:01.478
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/04/23 12:24:01.478
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/04/23 12:24:01.478
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/04/23 12:24:01.479
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/04/23 12:24:01.479
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/04/23 12:24:01.48
  Nov  4 12:24:01.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2684" for this suite. @ 11/04/23 12:24:01.483
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 11/04/23 12:24:01.488
  Nov  4 12:24:01.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 12:24:01.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:01.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:01.505
  STEP: creating a secret @ 11/04/23 12:24:01.507
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/04/23 12:24:01.51
  STEP: patching the secret @ 11/04/23 12:24:01.513
  STEP: deleting the secret using a LabelSelector @ 11/04/23 12:24:01.52
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/04/23 12:24:01.526
  Nov  4 12:24:01.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4104" for this suite. @ 11/04/23 12:24:01.532
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 11/04/23 12:24:01.539
  Nov  4 12:24:01.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename disruption @ 11/04/23 12:24:01.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:01.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:01.554
  STEP: Creating a kubernetes client @ 11/04/23 12:24:01.556
  Nov  4 12:24:01.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename disruption-2 @ 11/04/23 12:24:01.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:01.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:01.574
  STEP: Waiting for the pdb to be processed @ 11/04/23 12:24:01.58
  STEP: Waiting for the pdb to be processed @ 11/04/23 12:24:03.59
  STEP: Waiting for the pdb to be processed @ 11/04/23 12:24:05.601
  STEP: listing a collection of PDBs across all namespaces @ 11/04/23 12:24:07.607
  STEP: listing a collection of PDBs in namespace disruption-1161 @ 11/04/23 12:24:07.61
  STEP: deleting a collection of PDBs @ 11/04/23 12:24:07.613
  STEP: Waiting for the PDB collection to be deleted @ 11/04/23 12:24:07.625
  Nov  4 12:24:07.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 12:24:07.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7411" for this suite. @ 11/04/23 12:24:07.633
  STEP: Destroying namespace "disruption-1161" for this suite. @ 11/04/23 12:24:07.638
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 11/04/23 12:24:07.645
  Nov  4 12:24:07.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:24:07.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:07.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:07.663
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:24:07.666
  STEP: Saw pod success @ 11/04/23 12:24:11.685
  Nov  4 12:24:11.688: INFO: Trying to get logs from node ip-172-31-75-164 pod downwardapi-volume-3a80f048-20fc-4e8f-8a18-9321f0f8ac5e container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:24:11.702
  Nov  4 12:24:11.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4532" for this suite. @ 11/04/23 12:24:11.717
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/04/23 12:24:11.724
  Nov  4 12:24:11.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename daemonsets @ 11/04/23 12:24:11.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:11.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:11.742
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/04/23 12:24:11.761
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/04/23 12:24:11.765
  Nov  4 12:24:11.768: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:11.769: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:11.772: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:24:11.772: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  Nov  4 12:24:12.776: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:12.776: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:12.778: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:24:12.778: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  Nov  4 12:24:13.775: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:13.775: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:13.778: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 12:24:13.778: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/04/23 12:24:13.78
  Nov  4 12:24:13.794: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:13.794: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:24:13.798: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 12:24:13.798: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/04/23 12:24:13.798
  STEP: Deleting DaemonSet "daemon-set" @ 11/04/23 12:24:14.81
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5736, will wait for the garbage collector to delete the pods @ 11/04/23 12:24:14.81
  Nov  4 12:24:14.869: INFO: Deleting DaemonSet.extensions daemon-set took: 5.866753ms
  Nov  4 12:24:14.969: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.568516ms
  Nov  4 12:24:16.473: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:24:16.473: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov  4 12:24:16.475: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10564"},"items":null}

  Nov  4 12:24:16.478: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10564"},"items":null}

  Nov  4 12:24:16.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5736" for this suite. @ 11/04/23 12:24:16.492
• [4.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 11/04/23 12:24:16.498
  Nov  4 12:24:16.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replicaset @ 11/04/23 12:24:16.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:16.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:16.515
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/04/23 12:24:16.517
  Nov  4 12:24:16.523: INFO: Pod name sample-pod: Found 0 pods out of 1
  Nov  4 12:24:21.531: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/04/23 12:24:21.531
  STEP: getting scale subresource @ 11/04/23 12:24:21.531
  STEP: updating a scale subresource @ 11/04/23 12:24:21.535
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/04/23 12:24:21.54
  STEP: Patch a scale subresource @ 11/04/23 12:24:21.543
  Nov  4 12:24:21.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6534" for this suite. @ 11/04/23 12:24:21.56
• [5.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 11/04/23 12:24:21.567
  Nov  4 12:24:21.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:24:21.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:21.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:21.598
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7325 @ 11/04/23 12:24:21.6
  STEP: changing the ExternalName service to type=NodePort @ 11/04/23 12:24:21.603
  STEP: creating replication controller externalname-service in namespace services-7325 @ 11/04/23 12:24:21.623
  I1104 12:24:21.628416      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7325, replica count: 2
  I1104 12:24:24.679550      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 12:24:24.679: INFO: Creating new exec pod
  Nov  4 12:24:27.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:24:27.833: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:27.833: INFO: stdout: ""
  Nov  4 12:24:28.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:24:28.960: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:28.960: INFO: stdout: ""
  Nov  4 12:24:29.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:24:29.963: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:29.963: INFO: stdout: ""
  Nov  4 12:24:30.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:24:30.956: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:30.956: INFO: stdout: ""
  Nov  4 12:24:31.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:24:31.949: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:31.949: INFO: stdout: ""
  Nov  4 12:24:32.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov  4 12:24:32.957: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:32.957: INFO: stdout: "externalname-service-vbdd9"
  Nov  4 12:24:32.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.239 80'
  Nov  4 12:24:33.080: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.239 80\nConnection to 10.152.183.239 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:33.080: INFO: stdout: ""
  Nov  4 12:24:34.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.239 80'
  Nov  4 12:24:34.205: INFO: stderr: "+ nc -v -t -w 2 10.152.183.239 80\n+ echo hostName\nConnection to 10.152.183.239 80 port [tcp/http] succeeded!\n"
  Nov  4 12:24:34.205: INFO: stdout: "externalname-service-spc6j"
  Nov  4 12:24:34.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.44.230 32361'
  Nov  4 12:24:34.318: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.44.230 32361\nConnection to 172.31.44.230 32361 port [tcp/*] succeeded!\n"
  Nov  4 12:24:34.318: INFO: stdout: "externalname-service-vbdd9"
  Nov  4 12:24:34.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7325 exec execpod7666b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.218 32361'
  Nov  4 12:24:34.447: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.23.218 32361\nConnection to 172.31.23.218 32361 port [tcp/*] succeeded!\n"
  Nov  4 12:24:34.447: INFO: stdout: "externalname-service-vbdd9"
  Nov  4 12:24:34.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 12:24:34.450: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-7325" for this suite. @ 11/04/23 12:24:34.465
• [12.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 11/04/23 12:24:34.471
  Nov  4 12:24:34.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename gc @ 11/04/23 12:24:34.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:34.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:34.491
  STEP: create the deployment @ 11/04/23 12:24:34.493
  W1104 12:24:34.499268      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/04/23 12:24:34.499
  STEP: delete the deployment @ 11/04/23 12:24:35.007
  STEP: wait for all rs to be garbage collected @ 11/04/23 12:24:35.014
  STEP: expected 0 rs, got 1 rs @ 11/04/23 12:24:35.018
  STEP: expected 0 pods, got 2 pods @ 11/04/23 12:24:35.021
  STEP: Gathering metrics @ 11/04/23 12:24:35.529
  W1104 12:24:35.535682      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov  4 12:24:35.536: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov  4 12:24:35.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2158" for this suite. @ 11/04/23 12:24:35.54
• [1.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 11/04/23 12:24:35.549
  Nov  4 12:24:35.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 12:24:35.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:35.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:35.573
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:24:35.576
  STEP: Saw pod success @ 11/04/23 12:24:39.592
  Nov  4 12:24:39.596: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-a02735be-beb3-43c6-a7f1-7c5d42f3e2fa container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:24:39.612
  Nov  4 12:24:39.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2277" for this suite. @ 11/04/23 12:24:39.629
• [4.089 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 11/04/23 12:24:39.639
  Nov  4 12:24:39.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename job @ 11/04/23 12:24:39.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:39.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:39.661
  STEP: Creating a job @ 11/04/23 12:24:39.664
  STEP: Ensuring job reaches completions @ 11/04/23 12:24:39.671
  Nov  4 12:24:51.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6112" for this suite. @ 11/04/23 12:24:51.679
• [12.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 11/04/23 12:24:51.686
  Nov  4 12:24:51.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:24:51.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:51.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:51.705
  Nov  4 12:24:51.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5736 create -f -'
  Nov  4 12:24:51.887: INFO: stderr: ""
  Nov  4 12:24:51.887: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Nov  4 12:24:51.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5736 create -f -'
  Nov  4 12:24:52.045: INFO: stderr: ""
  Nov  4 12:24:52.045: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/04/23 12:24:52.045
  Nov  4 12:24:53.049: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 12:24:53.049: INFO: Found 0 / 1
  Nov  4 12:24:54.049: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 12:24:54.049: INFO: Found 1 / 1
  Nov  4 12:24:54.049: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov  4 12:24:54.052: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 12:24:54.052: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov  4 12:24:54.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5736 describe pod agnhost-primary-jgsl8'
  Nov  4 12:24:54.114: INFO: stderr: ""
  Nov  4 12:24:54.114: INFO: stdout: "Name:             agnhost-primary-jgsl8\nNamespace:        kubectl-5736\nPriority:         0\nService Account:  default\nNode:             ip-172-31-44-230/172.31.44.230\nStart Time:       Sat, 04 Nov 2023 12:24:51 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.46.88\nIPs:\n  IP:           192.168.46.88\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4e127b4d7d12629d4215752ea120e0d52186cd62bb0b5fcfe02bf1f095622a0c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 04 Nov 2023 12:24:52 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-87dfc (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-87dfc:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5736/agnhost-primary-jgsl8 to ip-172-31-44-230\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Nov  4 12:24:54.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5736 describe rc agnhost-primary'
  Nov  4 12:24:54.171: INFO: stderr: ""
  Nov  4 12:24:54.171: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5736\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-jgsl8\n"
  Nov  4 12:24:54.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5736 describe service agnhost-primary'
  Nov  4 12:24:54.233: INFO: stderr: ""
  Nov  4 12:24:54.233: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5736\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.218\nIPs:               10.152.183.218\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.46.88:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Nov  4 12:24:54.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5736 describe node ip-172-31-23-218'
  Nov  4 12:24:54.329: INFO: stderr: ""
  Nov  4 12:24:54.329: INFO: stdout: "Name:               ip-172-31-23-218\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-23-218\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 04 Nov 2023 11:55:45 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-23-218\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 04 Nov 2023 12:24:53 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 04 Nov 2023 11:56:29 +0000   Sat, 04 Nov 2023 11:56:29 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 04 Nov 2023 12:21:27 +0000   Sat, 04 Nov 2023 11:55:45 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 04 Nov 2023 12:21:27 +0000   Sat, 04 Nov 2023 11:55:45 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 04 Nov 2023 12:21:27 +0000   Sat, 04 Nov 2023 11:55:45 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 04 Nov 2023 12:21:27 +0000   Sat, 04 Nov 2023 11:55:59 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.23.218\n  Hostname:    ip-172-31-23-218\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7978648Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7876248Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec299aa20cf0f316f5fce7a7bde3427d\n  System UUID:                     ec299aa2-0cf0-f316-f5fc-e7a7bde3427d\n  Boot ID:                         25a2043a-7ec0-42fe-8915-7ddd258da727\n  Kernel Version:                  6.2.0-1015-aws\n  OS Image:                        Ubuntu 22.04.3 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.28.3\n  Kube-Proxy Version:              v1.28.3\nNon-terminated Pods:               (9 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  default-http-backend-kubernetes-worker-5c79cc75ff-q5bhb    10m (0%)      10m (0%)    20Mi (0%)        20Mi (0%)      29m\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-45gdq           0 (0%)        0 (0%)      0 (0%)           0 (0%)         28m\n  kube-system                      calico-node-ft4tq                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         29m\n  kube-system                      coredns-59cfb5bf46-lztjc                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     31m\n  kube-system                      kube-state-metrics-78c475f58b-qrr4j                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         31m\n  kube-system                      metrics-server-v0.6.3-69d7fbfdf8-h454w                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     31m\n  kubernetes-dashboard             dashboard-metrics-scraper-5dd7cb5fc-sq444                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         31m\n  kubernetes-dashboard             kubernetes-dashboard-7b899cb9d9-s867z                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         31m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-5275133b46c64358-79s4x    0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                365m (18%)  110m (5%)\n  memory             140Mi (1%)  490Mi (6%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 29m                kube-proxy       \n  Normal   Starting                 28m                kube-proxy       \n  Normal   Starting                 28m                kube-proxy       \n  Normal   Starting                 28m                kube-proxy       \n  Normal   Starting                 29m                kube-proxy       \n  Normal   Starting                 29m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      29m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  29m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    29m (x6 over 29m)  kubelet          Node ip-172-31-23-218 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     29m (x6 over 29m)  kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  29m (x6 over 29m)  kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientMemory\n  Normal   RegisteredNode           29m                node-controller  Node ip-172-31-23-218 event: Registered Node ip-172-31-23-218 in Controller\n  Normal   Starting                 29m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      29m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  29m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  29m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    29m                kubelet          Node ip-172-31-23-218 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     29m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientPID\n  Normal   NodeReady                28m                kubelet          Node ip-172-31-23-218 status is now: NodeReady\n  Warning  InvalidDiskCapacity      28m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  28m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 28m                kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  28m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      28m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientPID\n  Normal   Starting                 28m                kubelet          Starting kubelet.\n  Normal   Starting                 28m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      28m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  28m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     28m                kubelet          Node ip-172-31-23-218 status is now: NodeHasSufficientPID\n"
  Nov  4 12:24:54.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5736 describe namespace kubectl-5736'
  Nov  4 12:24:54.390: INFO: stderr: ""
  Nov  4 12:24:54.391: INFO: stdout: "Name:         kubectl-5736\nLabels:       e2e-framework=kubectl\n              e2e-run=7e6ea5aa-1a68-4b8d-88bd-9a5f09fd3b25\n              kubernetes.io/metadata.name=kubectl-5736\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Nov  4 12:24:54.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5736" for this suite. @ 11/04/23 12:24:54.394
• [2.714 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/04/23 12:24:54.4
  Nov  4 12:24:54.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename cronjob @ 11/04/23 12:24:54.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:24:54.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:24:54.417
  STEP: Creating a suspended cronjob @ 11/04/23 12:24:54.419
  STEP: Ensuring no jobs are scheduled @ 11/04/23 12:24:54.425
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/04/23 12:29:54.431
  STEP: Removing cronjob @ 11/04/23 12:29:54.434
  Nov  4 12:29:54.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6311" for this suite. @ 11/04/23 12:29:54.442
• [300.048 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 11/04/23 12:29:54.449
  Nov  4 12:29:54.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:29:54.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:29:54.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:29:54.471
  STEP: creating service multi-endpoint-test in namespace services-7160 @ 11/04/23 12:29:54.474
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7160 to expose endpoints map[] @ 11/04/23 12:29:54.483
  Nov  4 12:29:54.486: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Nov  4 12:29:55.495: INFO: successfully validated that service multi-endpoint-test in namespace services-7160 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7160 @ 11/04/23 12:29:55.495
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7160 to expose endpoints map[pod1:[100]] @ 11/04/23 12:29:57.51
  Nov  4 12:29:57.520: INFO: successfully validated that service multi-endpoint-test in namespace services-7160 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7160 @ 11/04/23 12:29:57.52
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7160 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/04/23 12:29:59.535
  Nov  4 12:29:59.547: INFO: successfully validated that service multi-endpoint-test in namespace services-7160 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/04/23 12:29:59.547
  Nov  4 12:29:59.547: INFO: Creating new exec pod
  Nov  4 12:30:02.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7160 exec execpodz8jdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Nov  4 12:30:02.698: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Nov  4 12:30:02.698: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:30:02.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7160 exec execpodz8jdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.109 80'
  Nov  4 12:30:02.812: INFO: stderr: "+ nc -v -t -w 2 10.152.183.109 80\nConnection to 10.152.183.109 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Nov  4 12:30:02.812: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:30:02.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7160 exec execpodz8jdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Nov  4 12:30:02.932: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Nov  4 12:30:02.932: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:30:02.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-7160 exec execpodz8jdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.109 81'
  Nov  4 12:30:03.058: INFO: stderr: "+ nc -v -t -w 2 10.152.183.109 81\n+ echo hostName\nConnection to 10.152.183.109 81 port [tcp/*] succeeded!\n"
  Nov  4 12:30:03.058: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7160 @ 11/04/23 12:30:03.058
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7160 to expose endpoints map[pod2:[101]] @ 11/04/23 12:30:03.073
  Nov  4 12:30:04.091: INFO: successfully validated that service multi-endpoint-test in namespace services-7160 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7160 @ 11/04/23 12:30:04.091
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7160 to expose endpoints map[] @ 11/04/23 12:30:04.101
  Nov  4 12:30:05.117: INFO: successfully validated that service multi-endpoint-test in namespace services-7160 exposes endpoints map[]
  Nov  4 12:30:05.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7160" for this suite. @ 11/04/23 12:30:05.136
• [10.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 11/04/23 12:30:05.145
  Nov  4 12:30:05.145: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 12:30:05.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:30:05.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:30:05.164
  STEP: Creating configMap with name configmap-test-volume-54479ce0-7b8d-4f46-87e9-5f1b3d47a80b @ 11/04/23 12:30:05.166
  STEP: Creating a pod to test consume configMaps @ 11/04/23 12:30:05.169
  STEP: Saw pod success @ 11/04/23 12:30:09.186
  Nov  4 12:30:09.190: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-30c7fdcf-a873-4c97-ab8d-8954a90ea72e container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:30:09.207
  Nov  4 12:30:09.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2141" for this suite. @ 11/04/23 12:30:09.224
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/04/23 12:30:09.233
  Nov  4 12:30:09.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename hostport @ 11/04/23 12:30:09.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:30:09.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:30:09.252
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/04/23 12:30:09.257
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.23.218 on the node which pod1 resides and expect scheduled @ 11/04/23 12:30:11.272
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.23.218 but use UDP protocol on the node which pod2 resides @ 11/04/23 12:30:23.302
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/04/23 12:30:27.327
  Nov  4 12:30:27.327: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.23.218 http://127.0.0.1:54323/hostname] Namespace:hostport-1529 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:30:27.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:30:27.327: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:30:27.327: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1529/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.23.218+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.23.218, port: 54323 @ 11/04/23 12:30:27.4
  Nov  4 12:30:27.400: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.23.218:54323/hostname] Namespace:hostport-1529 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:30:27.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:30:27.401: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:30:27.401: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1529/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.23.218%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.23.218, port: 54323 UDP @ 11/04/23 12:30:27.471
  Nov  4 12:30:27.471: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.23.218 54323] Namespace:hostport-1529 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:30:27.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:30:27.472: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:30:27.472: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1529/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.23.218+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Nov  4 12:30:32.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1529" for this suite. @ 11/04/23 12:30:32.548
• [23.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 11/04/23 12:30:32.554
  Nov  4 12:30:32.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:30:32.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:30:32.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:30:32.575
  STEP: Setting up server cert @ 11/04/23 12:30:32.6
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:30:32.782
  STEP: Deploying the webhook pod @ 11/04/23 12:30:32.792
  STEP: Wait for the deployment to be ready @ 11/04/23 12:30:32.802
  Nov  4 12:30:32.815: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/04/23 12:30:34.824
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:30:34.832
  Nov  4 12:30:35.833: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/04/23 12:30:35.839
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/04/23 12:30:35.854
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/04/23 12:30:35.861
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/04/23 12:30:35.871
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/04/23 12:30:35.881
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/04/23 12:30:35.887
  Nov  4 12:30:35.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5276" for this suite. @ 11/04/23 12:30:35.928
  STEP: Destroying namespace "webhook-markers-4743" for this suite. @ 11/04/23 12:30:35.933
• [3.388 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 11/04/23 12:30:35.942
  Nov  4 12:30:35.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:30:35.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:30:35.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:30:35.961
  STEP: Setting up server cert @ 11/04/23 12:30:35.99
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:30:36.14
  STEP: Deploying the webhook pod @ 11/04/23 12:30:36.145
  STEP: Wait for the deployment to be ready @ 11/04/23 12:30:36.154
  Nov  4 12:30:36.161: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/04/23 12:30:38.17
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:30:38.178
  Nov  4 12:30:39.179: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/04/23 12:30:39.185
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/04/23 12:30:39.202
  STEP: Creating a configMap that should not be mutated @ 11/04/23 12:30:39.208
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/04/23 12:30:39.217
  STEP: Creating a configMap that should be mutated @ 11/04/23 12:30:39.223
  Nov  4 12:30:39.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4726" for this suite. @ 11/04/23 12:30:39.277
  STEP: Destroying namespace "webhook-markers-8475" for this suite. @ 11/04/23 12:30:39.282
• [3.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 11/04/23 12:30:39.292
  Nov  4 12:30:39.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 12:30:39.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:30:39.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:30:39.313
  STEP: Creating service test in namespace statefulset-7895 @ 11/04/23 12:30:39.315
  STEP: Looking for a node to schedule stateful set and pod @ 11/04/23 12:30:39.323
  STEP: Creating pod with conflicting port in namespace statefulset-7895 @ 11/04/23 12:30:39.327
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7895 @ 11/04/23 12:30:39.333
  STEP: Creating statefulset with conflicting port in namespace statefulset-7895 @ 11/04/23 12:30:41.341
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7895 @ 11/04/23 12:30:41.347
  Nov  4 12:30:41.360: INFO: Observed stateful pod in namespace: statefulset-7895, name: ss-0, uid: 5acfee3b-c454-4f20-8e48-ad90d295c19f, status phase: Pending. Waiting for statefulset controller to delete.
  Nov  4 12:30:41.379: INFO: Observed stateful pod in namespace: statefulset-7895, name: ss-0, uid: 5acfee3b-c454-4f20-8e48-ad90d295c19f, status phase: Failed. Waiting for statefulset controller to delete.
  Nov  4 12:30:41.388: INFO: Observed stateful pod in namespace: statefulset-7895, name: ss-0, uid: 5acfee3b-c454-4f20-8e48-ad90d295c19f, status phase: Failed. Waiting for statefulset controller to delete.
  Nov  4 12:30:41.391: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7895
  STEP: Removing pod with conflicting port in namespace statefulset-7895 @ 11/04/23 12:30:41.391
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7895 and will be in running state @ 11/04/23 12:30:41.402
  Nov  4 12:30:43.412: INFO: Deleting all statefulset in ns statefulset-7895
  Nov  4 12:30:43.416: INFO: Scaling statefulset ss to 0
  Nov  4 12:30:53.432: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 12:30:53.434: INFO: Deleting statefulset ss
  Nov  4 12:30:53.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7895" for this suite. @ 11/04/23 12:30:53.448
• [14.163 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/04/23 12:30:53.455
  Nov  4 12:30:53.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svc-latency @ 11/04/23 12:30:53.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:30:53.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:30:53.474
  Nov  4 12:30:53.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2002 @ 11/04/23 12:30:53.477
  I1104 12:30:53.481707      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2002, replica count: 1
  I1104 12:30:54.533662      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1104 12:30:55.533804      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 12:30:55.645: INFO: Created: latency-svc-8nxqx
  Nov  4 12:30:55.655: INFO: Got endpoints: latency-svc-8nxqx [20.943671ms]
  Nov  4 12:30:55.665: INFO: Created: latency-svc-t6x9p
  Nov  4 12:30:55.675: INFO: Got endpoints: latency-svc-t6x9p [19.745999ms]
  Nov  4 12:30:55.676: INFO: Created: latency-svc-ht9b5
  Nov  4 12:30:55.680: INFO: Created: latency-svc-tl7d7
  Nov  4 12:30:55.681: INFO: Got endpoints: latency-svc-ht9b5 [25.180557ms]
  Nov  4 12:30:55.686: INFO: Got endpoints: latency-svc-tl7d7 [30.488927ms]
  Nov  4 12:30:55.688: INFO: Created: latency-svc-p4kjm
  Nov  4 12:30:55.696: INFO: Got endpoints: latency-svc-p4kjm [39.969946ms]
  Nov  4 12:30:55.699: INFO: Created: latency-svc-ms78b
  Nov  4 12:30:55.704: INFO: Created: latency-svc-2h5v5
  Nov  4 12:30:55.706: INFO: Got endpoints: latency-svc-ms78b [50.350994ms]
  Nov  4 12:30:55.712: INFO: Created: latency-svc-t9c8f
  Nov  4 12:30:55.713: INFO: Got endpoints: latency-svc-2h5v5 [57.735312ms]
  Nov  4 12:30:55.719: INFO: Got endpoints: latency-svc-t9c8f [63.328476ms]
  Nov  4 12:30:55.720: INFO: Created: latency-svc-bb6p2
  Nov  4 12:30:55.723: INFO: Created: latency-svc-swg6b
  Nov  4 12:30:55.727: INFO: Got endpoints: latency-svc-bb6p2 [70.946015ms]
  Nov  4 12:30:55.729: INFO: Created: latency-svc-wf8kj
  Nov  4 12:30:55.731: INFO: Got endpoints: latency-svc-swg6b [74.275018ms]
  Nov  4 12:30:55.737: INFO: Got endpoints: latency-svc-wf8kj [80.406553ms]
  Nov  4 12:30:55.741: INFO: Created: latency-svc-pqcp5
  Nov  4 12:30:55.746: INFO: Got endpoints: latency-svc-pqcp5 [89.675451ms]
  Nov  4 12:30:55.748: INFO: Created: latency-svc-27nlj
  Nov  4 12:30:55.755: INFO: Got endpoints: latency-svc-27nlj [98.335041ms]
  Nov  4 12:30:55.755: INFO: Created: latency-svc-4dkkv
  Nov  4 12:30:55.763: INFO: Got endpoints: latency-svc-4dkkv [107.401643ms]
  Nov  4 12:30:55.765: INFO: Created: latency-svc-5c6t5
  Nov  4 12:30:55.768: INFO: Created: latency-svc-rmbt7
  Nov  4 12:30:55.776: INFO: Got endpoints: latency-svc-5c6t5 [120.076439ms]
  Nov  4 12:30:55.778: INFO: Created: latency-svc-p99w6
  Nov  4 12:30:55.779: INFO: Got endpoints: latency-svc-rmbt7 [122.937059ms]
  Nov  4 12:30:55.786: INFO: Created: latency-svc-nh9f9
  Nov  4 12:30:55.787: INFO: Got endpoints: latency-svc-p99w6 [111.90128ms]
  Nov  4 12:30:55.792: INFO: Got endpoints: latency-svc-nh9f9 [111.137018ms]
  Nov  4 12:30:55.792: INFO: Created: latency-svc-l6cc2
  Nov  4 12:30:55.795: INFO: Created: latency-svc-7v2rw
  Nov  4 12:30:55.800: INFO: Got endpoints: latency-svc-l6cc2 [113.667662ms]
  Nov  4 12:30:55.803: INFO: Got endpoints: latency-svc-7v2rw [107.194099ms]
  Nov  4 12:30:55.804: INFO: Created: latency-svc-qm6fc
  Nov  4 12:30:55.810: INFO: Created: latency-svc-qxd2r
  Nov  4 12:30:55.814: INFO: Created: latency-svc-p2scz
  Nov  4 12:30:55.821: INFO: Created: latency-svc-wgrzf
  Nov  4 12:30:55.824: INFO: Got endpoints: latency-svc-qm6fc [118.071365ms]
  Nov  4 12:30:55.827: INFO: Got endpoints: latency-svc-qxd2r [113.216609ms]
  Nov  4 12:30:55.827: INFO: Created: latency-svc-b454s
  Nov  4 12:30:55.834: INFO: Created: latency-svc-5cs44
  Nov  4 12:30:55.840: INFO: Created: latency-svc-2c9lh
  Nov  4 12:30:55.843: INFO: Created: latency-svc-pd6z8
  Nov  4 12:30:55.852: INFO: Got endpoints: latency-svc-p2scz [133.167589ms]
  Nov  4 12:30:55.852: INFO: Got endpoints: latency-svc-wgrzf [125.394675ms]
  Nov  4 12:30:55.853: INFO: Created: latency-svc-hqr4k
  Nov  4 12:30:55.862: INFO: Created: latency-svc-x465z
  Nov  4 12:30:55.865: INFO: Created: latency-svc-tws64
  Nov  4 12:30:55.870: INFO: Got endpoints: latency-svc-b454s [139.711914ms]
  Nov  4 12:30:55.873: INFO: Created: latency-svc-5gl8t
  Nov  4 12:30:55.873: INFO: Got endpoints: latency-svc-5cs44 [136.534996ms]
  Nov  4 12:30:55.880: INFO: Got endpoints: latency-svc-2c9lh [133.862532ms]
  Nov  4 12:30:55.883: INFO: Created: latency-svc-hlvkj
  Nov  4 12:30:55.886: INFO: Got endpoints: latency-svc-pd6z8 [131.198334ms]
  Nov  4 12:30:55.888: INFO: Got endpoints: latency-svc-hqr4k [124.833355ms]
  Nov  4 12:30:55.890: INFO: Created: latency-svc-rj49t
  Nov  4 12:30:55.895: INFO: Got endpoints: latency-svc-x465z [118.645262ms]
  Nov  4 12:30:55.897: INFO: Created: latency-svc-2qwkz
  Nov  4 12:30:55.903: INFO: Created: latency-svc-qxqhv
  Nov  4 12:30:55.909: INFO: Created: latency-svc-k9kcl
  Nov  4 12:30:55.910: INFO: Got endpoints: latency-svc-tws64 [131.548347ms]
  Nov  4 12:30:55.917: INFO: Created: latency-svc-pzj9f
  Nov  4 12:30:55.926: INFO: Got endpoints: latency-svc-rj49t [125.758703ms]
  Nov  4 12:30:55.926: INFO: Got endpoints: latency-svc-hlvkj [133.636669ms]
  Nov  4 12:30:55.926: INFO: Got endpoints: latency-svc-5gl8t [139.104453ms]
  Nov  4 12:30:55.926: INFO: Got endpoints: latency-svc-2qwkz [123.39485ms]
  Nov  4 12:30:55.929: INFO: Created: latency-svc-g8r9v
  Nov  4 12:30:55.931: INFO: Created: latency-svc-t8z6l
  Nov  4 12:30:55.937: INFO: Created: latency-svc-f8zkr
  Nov  4 12:30:55.943: INFO: Created: latency-svc-4sq5v
  Nov  4 12:30:55.947: INFO: Created: latency-svc-cbdfj
  Nov  4 12:30:55.952: INFO: Created: latency-svc-bchrc
  Nov  4 12:30:55.961: INFO: Created: latency-svc-wgthv
  Nov  4 12:30:55.961: INFO: Got endpoints: latency-svc-qxqhv [137.363388ms]
  Nov  4 12:30:55.964: INFO: Created: latency-svc-m4zvc
  Nov  4 12:30:55.970: INFO: Created: latency-svc-fjhmd
  Nov  4 12:30:55.978: INFO: Created: latency-svc-vvdxs
  Nov  4 12:30:55.981: INFO: Created: latency-svc-lvq6p
  Nov  4 12:30:55.986: INFO: Created: latency-svc-tf5qd
  Nov  4 12:30:55.993: INFO: Created: latency-svc-4dbtw
  Nov  4 12:30:56.001: INFO: Got endpoints: latency-svc-k9kcl [174.89007ms]
  Nov  4 12:30:56.010: INFO: Created: latency-svc-cbms2
  Nov  4 12:30:56.051: INFO: Got endpoints: latency-svc-pzj9f [198.788364ms]
  Nov  4 12:30:56.059: INFO: Created: latency-svc-bfz7w
  Nov  4 12:30:56.103: INFO: Got endpoints: latency-svc-g8r9v [250.303874ms]
  Nov  4 12:30:56.112: INFO: Created: latency-svc-x5zx4
  Nov  4 12:30:56.152: INFO: Got endpoints: latency-svc-t8z6l [282.000912ms]
  Nov  4 12:30:56.164: INFO: Created: latency-svc-kt77h
  Nov  4 12:30:56.202: INFO: Got endpoints: latency-svc-f8zkr [328.508592ms]
  Nov  4 12:30:56.212: INFO: Created: latency-svc-cbc8w
  Nov  4 12:30:56.252: INFO: Got endpoints: latency-svc-4sq5v [372.369898ms]
  Nov  4 12:30:56.263: INFO: Created: latency-svc-kztx6
  Nov  4 12:30:56.304: INFO: Got endpoints: latency-svc-cbdfj [417.832996ms]
  Nov  4 12:30:56.313: INFO: Created: latency-svc-9525d
  Nov  4 12:30:56.351: INFO: Got endpoints: latency-svc-bchrc [463.381551ms]
  Nov  4 12:30:56.359: INFO: Created: latency-svc-4gtvt
  Nov  4 12:30:56.401: INFO: Got endpoints: latency-svc-wgthv [506.457793ms]
  Nov  4 12:30:56.412: INFO: Created: latency-svc-jngvm
  Nov  4 12:30:56.451: INFO: Got endpoints: latency-svc-m4zvc [540.406753ms]
  Nov  4 12:30:56.460: INFO: Created: latency-svc-jsx57
  Nov  4 12:30:56.501: INFO: Got endpoints: latency-svc-fjhmd [575.379108ms]
  Nov  4 12:30:56.510: INFO: Created: latency-svc-jgjmj
  Nov  4 12:30:56.552: INFO: Got endpoints: latency-svc-vvdxs [626.10096ms]
  Nov  4 12:30:56.561: INFO: Created: latency-svc-5lv22
  Nov  4 12:30:56.601: INFO: Got endpoints: latency-svc-lvq6p [675.75503ms]
  Nov  4 12:30:56.614: INFO: Created: latency-svc-6vqvk
  Nov  4 12:30:56.650: INFO: Got endpoints: latency-svc-tf5qd [723.755116ms]
  Nov  4 12:30:56.662: INFO: Created: latency-svc-kkwrb
  Nov  4 12:30:56.703: INFO: Got endpoints: latency-svc-4dbtw [741.110907ms]
  Nov  4 12:30:56.712: INFO: Created: latency-svc-bx8zp
  Nov  4 12:30:56.753: INFO: Got endpoints: latency-svc-cbms2 [751.42227ms]
  Nov  4 12:30:56.762: INFO: Created: latency-svc-qrwv8
  Nov  4 12:30:56.803: INFO: Got endpoints: latency-svc-bfz7w [751.005791ms]
  Nov  4 12:30:56.811: INFO: Created: latency-svc-hsw2n
  Nov  4 12:30:56.852: INFO: Got endpoints: latency-svc-x5zx4 [748.684012ms]
  Nov  4 12:30:56.862: INFO: Created: latency-svc-qh8tm
  Nov  4 12:30:56.900: INFO: Got endpoints: latency-svc-kt77h [747.448814ms]
  Nov  4 12:30:56.911: INFO: Created: latency-svc-842n4
  Nov  4 12:30:56.950: INFO: Got endpoints: latency-svc-cbc8w [748.299352ms]
  Nov  4 12:30:56.959: INFO: Created: latency-svc-bxfmh
  Nov  4 12:30:57.002: INFO: Got endpoints: latency-svc-kztx6 [749.279598ms]
  Nov  4 12:30:57.011: INFO: Created: latency-svc-jk7z2
  Nov  4 12:30:57.053: INFO: Got endpoints: latency-svc-9525d [749.229078ms]
  Nov  4 12:30:57.062: INFO: Created: latency-svc-blhj4
  Nov  4 12:30:57.101: INFO: Got endpoints: latency-svc-4gtvt [749.089189ms]
  Nov  4 12:30:57.117: INFO: Created: latency-svc-mlss2
  Nov  4 12:30:57.151: INFO: Got endpoints: latency-svc-jngvm [749.109553ms]
  Nov  4 12:30:57.160: INFO: Created: latency-svc-wbcwm
  Nov  4 12:30:57.201: INFO: Got endpoints: latency-svc-jsx57 [750.201587ms]
  Nov  4 12:30:57.210: INFO: Created: latency-svc-bxkzc
  Nov  4 12:30:57.253: INFO: Got endpoints: latency-svc-jgjmj [751.2866ms]
  Nov  4 12:30:57.261: INFO: Created: latency-svc-sg56c
  Nov  4 12:30:57.301: INFO: Got endpoints: latency-svc-5lv22 [748.608076ms]
  Nov  4 12:30:57.311: INFO: Created: latency-svc-v8btn
  Nov  4 12:30:57.350: INFO: Got endpoints: latency-svc-6vqvk [748.466092ms]
  Nov  4 12:30:57.360: INFO: Created: latency-svc-6pm4h
  Nov  4 12:30:57.400: INFO: Got endpoints: latency-svc-kkwrb [749.850163ms]
  Nov  4 12:30:57.409: INFO: Created: latency-svc-7qs26
  Nov  4 12:30:57.452: INFO: Got endpoints: latency-svc-bx8zp [749.635782ms]
  Nov  4 12:30:57.461: INFO: Created: latency-svc-rm486
  Nov  4 12:30:57.502: INFO: Got endpoints: latency-svc-qrwv8 [749.266495ms]
  Nov  4 12:30:57.511: INFO: Created: latency-svc-g885p
  Nov  4 12:30:57.550: INFO: Got endpoints: latency-svc-hsw2n [746.956552ms]
  Nov  4 12:30:57.560: INFO: Created: latency-svc-xlxs7
  Nov  4 12:30:57.601: INFO: Got endpoints: latency-svc-qh8tm [748.849923ms]
  Nov  4 12:30:57.612: INFO: Created: latency-svc-pfmt2
  Nov  4 12:30:57.653: INFO: Got endpoints: latency-svc-842n4 [752.13745ms]
  Nov  4 12:30:57.662: INFO: Created: latency-svc-rgj89
  Nov  4 12:30:57.702: INFO: Got endpoints: latency-svc-bxfmh [751.70712ms]
  Nov  4 12:30:57.711: INFO: Created: latency-svc-cxdbz
  Nov  4 12:30:57.752: INFO: Got endpoints: latency-svc-jk7z2 [750.411501ms]
  Nov  4 12:30:57.766: INFO: Created: latency-svc-tdnc2
  Nov  4 12:30:57.800: INFO: Got endpoints: latency-svc-blhj4 [746.742654ms]
  Nov  4 12:30:57.811: INFO: Created: latency-svc-fmc9f
  Nov  4 12:30:57.850: INFO: Got endpoints: latency-svc-mlss2 [748.829703ms]
  Nov  4 12:30:57.858: INFO: Created: latency-svc-gqdd8
  Nov  4 12:30:57.903: INFO: Got endpoints: latency-svc-wbcwm [751.893981ms]
  Nov  4 12:30:57.912: INFO: Created: latency-svc-pp4l2
  Nov  4 12:30:57.952: INFO: Got endpoints: latency-svc-bxkzc [750.988242ms]
  Nov  4 12:30:57.961: INFO: Created: latency-svc-j7dvx
  Nov  4 12:30:58.001: INFO: Got endpoints: latency-svc-sg56c [748.456055ms]
  Nov  4 12:30:58.009: INFO: Created: latency-svc-wb6k5
  Nov  4 12:30:58.051: INFO: Got endpoints: latency-svc-v8btn [749.682907ms]
  Nov  4 12:30:58.062: INFO: Created: latency-svc-8krl2
  Nov  4 12:30:58.102: INFO: Got endpoints: latency-svc-6pm4h [751.476998ms]
  Nov  4 12:30:58.110: INFO: Created: latency-svc-z7fzz
  Nov  4 12:30:58.151: INFO: Got endpoints: latency-svc-7qs26 [750.856075ms]
  Nov  4 12:30:58.162: INFO: Created: latency-svc-d9tfh
  Nov  4 12:30:58.201: INFO: Got endpoints: latency-svc-rm486 [748.998202ms]
  Nov  4 12:30:58.210: INFO: Created: latency-svc-hjz4c
  Nov  4 12:30:58.251: INFO: Got endpoints: latency-svc-g885p [748.754114ms]
  Nov  4 12:30:58.260: INFO: Created: latency-svc-c58dp
  Nov  4 12:30:58.301: INFO: Got endpoints: latency-svc-xlxs7 [750.920649ms]
  Nov  4 12:30:58.310: INFO: Created: latency-svc-qxlz8
  Nov  4 12:30:58.350: INFO: Got endpoints: latency-svc-pfmt2 [748.764775ms]
  Nov  4 12:30:58.360: INFO: Created: latency-svc-zchnx
  Nov  4 12:30:58.402: INFO: Got endpoints: latency-svc-rgj89 [749.431152ms]
  Nov  4 12:30:58.411: INFO: Created: latency-svc-mcvcv
  Nov  4 12:30:58.452: INFO: Got endpoints: latency-svc-cxdbz [749.542505ms]
  Nov  4 12:30:58.460: INFO: Created: latency-svc-4vkzd
  Nov  4 12:30:58.502: INFO: Got endpoints: latency-svc-tdnc2 [749.78213ms]
  Nov  4 12:30:58.511: INFO: Created: latency-svc-jtwdc
  Nov  4 12:30:58.564: INFO: Got endpoints: latency-svc-fmc9f [764.171273ms]
  Nov  4 12:30:58.573: INFO: Created: latency-svc-cdtsf
  Nov  4 12:30:58.602: INFO: Got endpoints: latency-svc-gqdd8 [752.562406ms]
  Nov  4 12:30:58.612: INFO: Created: latency-svc-l77nf
  Nov  4 12:30:58.661: INFO: Got endpoints: latency-svc-pp4l2 [758.046415ms]
  Nov  4 12:30:58.673: INFO: Created: latency-svc-6zl68
  Nov  4 12:30:58.702: INFO: Got endpoints: latency-svc-j7dvx [749.339311ms]
  Nov  4 12:30:58.711: INFO: Created: latency-svc-5jglz
  Nov  4 12:30:58.753: INFO: Got endpoints: latency-svc-wb6k5 [752.216493ms]
  Nov  4 12:30:58.763: INFO: Created: latency-svc-96v5n
  Nov  4 12:30:58.800: INFO: Got endpoints: latency-svc-8krl2 [749.074679ms]
  Nov  4 12:30:58.810: INFO: Created: latency-svc-mnfkv
  Nov  4 12:30:58.852: INFO: Got endpoints: latency-svc-z7fzz [750.556516ms]
  Nov  4 12:30:58.861: INFO: Created: latency-svc-jtdqm
  Nov  4 12:30:58.903: INFO: Got endpoints: latency-svc-d9tfh [751.922823ms]
  Nov  4 12:30:58.913: INFO: Created: latency-svc-dldf4
  Nov  4 12:30:58.952: INFO: Got endpoints: latency-svc-hjz4c [751.153578ms]
  Nov  4 12:30:58.963: INFO: Created: latency-svc-kn5w6
  Nov  4 12:30:59.002: INFO: Got endpoints: latency-svc-c58dp [750.325496ms]
  Nov  4 12:30:59.011: INFO: Created: latency-svc-8t95c
  Nov  4 12:30:59.051: INFO: Got endpoints: latency-svc-qxlz8 [750.099812ms]
  Nov  4 12:30:59.060: INFO: Created: latency-svc-rjw9s
  Nov  4 12:30:59.101: INFO: Got endpoints: latency-svc-zchnx [750.671526ms]
  Nov  4 12:30:59.113: INFO: Created: latency-svc-ks56g
  Nov  4 12:30:59.151: INFO: Got endpoints: latency-svc-mcvcv [748.578854ms]
  Nov  4 12:30:59.159: INFO: Created: latency-svc-pl8r5
  Nov  4 12:30:59.204: INFO: Got endpoints: latency-svc-4vkzd [751.98701ms]
  Nov  4 12:30:59.212: INFO: Created: latency-svc-5642m
  Nov  4 12:30:59.304: INFO: Got endpoints: latency-svc-jtwdc [801.728585ms]
  Nov  4 12:30:59.312: INFO: Created: latency-svc-28s4p
  Nov  4 12:30:59.353: INFO: Got endpoints: latency-svc-cdtsf [788.157883ms]
  Nov  4 12:30:59.364: INFO: Created: latency-svc-r9tqh
  Nov  4 12:30:59.401: INFO: Got endpoints: latency-svc-l77nf [798.563347ms]
  Nov  4 12:30:59.410: INFO: Created: latency-svc-znx4z
  Nov  4 12:30:59.452: INFO: Got endpoints: latency-svc-6zl68 [791.310259ms]
  Nov  4 12:30:59.462: INFO: Created: latency-svc-4tzv8
  Nov  4 12:30:59.502: INFO: Got endpoints: latency-svc-5jglz [800.123796ms]
  Nov  4 12:30:59.510: INFO: Created: latency-svc-wtv6f
  Nov  4 12:30:59.554: INFO: Got endpoints: latency-svc-96v5n [800.843415ms]
  Nov  4 12:30:59.562: INFO: Created: latency-svc-tlggf
  Nov  4 12:30:59.602: INFO: Got endpoints: latency-svc-mnfkv [801.463909ms]
  Nov  4 12:30:59.612: INFO: Created: latency-svc-f4wbn
  Nov  4 12:30:59.651: INFO: Got endpoints: latency-svc-jtdqm [799.188878ms]
  Nov  4 12:30:59.664: INFO: Created: latency-svc-gk9sc
  Nov  4 12:30:59.702: INFO: Got endpoints: latency-svc-dldf4 [798.306414ms]
  Nov  4 12:30:59.711: INFO: Created: latency-svc-ns6hc
  Nov  4 12:30:59.751: INFO: Got endpoints: latency-svc-kn5w6 [798.935949ms]
  Nov  4 12:30:59.761: INFO: Created: latency-svc-zw8bd
  Nov  4 12:30:59.804: INFO: Got endpoints: latency-svc-8t95c [801.920031ms]
  Nov  4 12:30:59.813: INFO: Created: latency-svc-m4qpb
  Nov  4 12:30:59.854: INFO: Got endpoints: latency-svc-rjw9s [803.193782ms]
  Nov  4 12:30:59.862: INFO: Created: latency-svc-8cbf6
  Nov  4 12:30:59.902: INFO: Got endpoints: latency-svc-ks56g [801.115512ms]
  Nov  4 12:30:59.913: INFO: Created: latency-svc-s6x79
  Nov  4 12:30:59.951: INFO: Got endpoints: latency-svc-pl8r5 [799.595973ms]
  Nov  4 12:30:59.961: INFO: Created: latency-svc-pbp9q
  Nov  4 12:31:00.003: INFO: Got endpoints: latency-svc-5642m [798.981079ms]
  Nov  4 12:31:00.012: INFO: Created: latency-svc-vgjsj
  Nov  4 12:31:00.054: INFO: Got endpoints: latency-svc-28s4p [750.166343ms]
  Nov  4 12:31:00.076: INFO: Created: latency-svc-wbqqt
  Nov  4 12:31:00.103: INFO: Got endpoints: latency-svc-r9tqh [750.446743ms]
  Nov  4 12:31:00.112: INFO: Created: latency-svc-zvx54
  Nov  4 12:31:00.152: INFO: Got endpoints: latency-svc-znx4z [750.813438ms]
  Nov  4 12:31:00.161: INFO: Created: latency-svc-4m7zp
  Nov  4 12:31:00.200: INFO: Got endpoints: latency-svc-4tzv8 [748.173949ms]
  Nov  4 12:31:00.211: INFO: Created: latency-svc-h5p2n
  Nov  4 12:31:00.251: INFO: Got endpoints: latency-svc-wtv6f [749.070177ms]
  Nov  4 12:31:00.260: INFO: Created: latency-svc-sj4sj
  Nov  4 12:31:00.302: INFO: Got endpoints: latency-svc-tlggf [747.975582ms]
  Nov  4 12:31:00.311: INFO: Created: latency-svc-pxnrq
  Nov  4 12:31:00.354: INFO: Got endpoints: latency-svc-f4wbn [752.022114ms]
  Nov  4 12:31:00.364: INFO: Created: latency-svc-97lh4
  Nov  4 12:31:00.402: INFO: Got endpoints: latency-svc-gk9sc [750.150848ms]
  Nov  4 12:31:00.414: INFO: Created: latency-svc-n7mlb
  Nov  4 12:31:00.460: INFO: Got endpoints: latency-svc-ns6hc [758.329967ms]
  Nov  4 12:31:00.470: INFO: Created: latency-svc-5qlm2
  Nov  4 12:31:00.502: INFO: Got endpoints: latency-svc-zw8bd [750.559906ms]
  Nov  4 12:31:00.511: INFO: Created: latency-svc-4n5jq
  Nov  4 12:31:00.553: INFO: Got endpoints: latency-svc-m4qpb [748.605682ms]
  Nov  4 12:31:00.561: INFO: Created: latency-svc-64d2v
  Nov  4 12:31:00.603: INFO: Got endpoints: latency-svc-8cbf6 [748.858656ms]
  Nov  4 12:31:00.611: INFO: Created: latency-svc-r8lq8
  Nov  4 12:31:00.652: INFO: Got endpoints: latency-svc-s6x79 [750.435737ms]
  Nov  4 12:31:00.665: INFO: Created: latency-svc-75spv
  Nov  4 12:31:00.702: INFO: Got endpoints: latency-svc-pbp9q [751.536573ms]
  Nov  4 12:31:00.711: INFO: Created: latency-svc-nqm4d
  Nov  4 12:31:00.752: INFO: Got endpoints: latency-svc-vgjsj [749.638538ms]
  Nov  4 12:31:00.762: INFO: Created: latency-svc-mt76t
  Nov  4 12:31:00.802: INFO: Got endpoints: latency-svc-wbqqt [748.453342ms]
  Nov  4 12:31:00.812: INFO: Created: latency-svc-czptf
  Nov  4 12:31:00.852: INFO: Got endpoints: latency-svc-zvx54 [748.984779ms]
  Nov  4 12:31:00.861: INFO: Created: latency-svc-6p9bg
  Nov  4 12:31:00.902: INFO: Got endpoints: latency-svc-4m7zp [749.58841ms]
  Nov  4 12:31:00.912: INFO: Created: latency-svc-2n2g9
  Nov  4 12:31:00.952: INFO: Got endpoints: latency-svc-h5p2n [751.379399ms]
  Nov  4 12:31:00.966: INFO: Created: latency-svc-lh8h4
  Nov  4 12:31:01.003: INFO: Got endpoints: latency-svc-sj4sj [751.526326ms]
  Nov  4 12:31:01.012: INFO: Created: latency-svc-bllz7
  Nov  4 12:31:01.052: INFO: Got endpoints: latency-svc-pxnrq [750.248334ms]
  Nov  4 12:31:01.061: INFO: Created: latency-svc-8q2gw
  Nov  4 12:31:01.103: INFO: Got endpoints: latency-svc-97lh4 [748.427194ms]
  Nov  4 12:31:01.112: INFO: Created: latency-svc-7xd4b
  Nov  4 12:31:01.152: INFO: Got endpoints: latency-svc-n7mlb [750.390433ms]
  Nov  4 12:31:01.162: INFO: Created: latency-svc-sn6jt
  Nov  4 12:31:01.200: INFO: Got endpoints: latency-svc-5qlm2 [740.096143ms]
  Nov  4 12:31:01.210: INFO: Created: latency-svc-6dgt4
  Nov  4 12:31:01.252: INFO: Got endpoints: latency-svc-4n5jq [749.921009ms]
  Nov  4 12:31:01.262: INFO: Created: latency-svc-h6x9j
  Nov  4 12:31:01.303: INFO: Got endpoints: latency-svc-64d2v [750.187904ms]
  Nov  4 12:31:01.312: INFO: Created: latency-svc-74j6l
  Nov  4 12:31:01.352: INFO: Got endpoints: latency-svc-r8lq8 [748.850752ms]
  Nov  4 12:31:01.362: INFO: Created: latency-svc-98qk7
  Nov  4 12:31:01.402: INFO: Got endpoints: latency-svc-75spv [749.630743ms]
  Nov  4 12:31:01.413: INFO: Created: latency-svc-mpv6s
  Nov  4 12:31:01.452: INFO: Got endpoints: latency-svc-nqm4d [749.759928ms]
  Nov  4 12:31:01.462: INFO: Created: latency-svc-jqbvg
  Nov  4 12:31:01.503: INFO: Got endpoints: latency-svc-mt76t [750.408335ms]
  Nov  4 12:31:01.511: INFO: Created: latency-svc-mzqlv
  Nov  4 12:31:01.551: INFO: Got endpoints: latency-svc-czptf [748.682586ms]
  Nov  4 12:31:01.560: INFO: Created: latency-svc-tw2ph
  Nov  4 12:31:01.603: INFO: Got endpoints: latency-svc-6p9bg [750.836354ms]
  Nov  4 12:31:01.613: INFO: Created: latency-svc-jwd64
  Nov  4 12:31:01.655: INFO: Got endpoints: latency-svc-2n2g9 [753.233589ms]
  Nov  4 12:31:01.666: INFO: Created: latency-svc-xtnm7
  Nov  4 12:31:01.700: INFO: Got endpoints: latency-svc-lh8h4 [748.423599ms]
  Nov  4 12:31:01.710: INFO: Created: latency-svc-ns4cl
  Nov  4 12:31:01.752: INFO: Got endpoints: latency-svc-bllz7 [749.52546ms]
  Nov  4 12:31:01.761: INFO: Created: latency-svc-rdpbt
  Nov  4 12:31:01.802: INFO: Got endpoints: latency-svc-8q2gw [749.617632ms]
  Nov  4 12:31:01.810: INFO: Created: latency-svc-cz2w9
  Nov  4 12:31:01.852: INFO: Got endpoints: latency-svc-7xd4b [749.415577ms]
  Nov  4 12:31:01.862: INFO: Created: latency-svc-mdc7x
  Nov  4 12:31:01.903: INFO: Got endpoints: latency-svc-sn6jt [750.945894ms]
  Nov  4 12:31:01.914: INFO: Created: latency-svc-tb476
  Nov  4 12:31:01.951: INFO: Got endpoints: latency-svc-6dgt4 [750.705635ms]
  Nov  4 12:31:01.961: INFO: Created: latency-svc-qfrwl
  Nov  4 12:31:02.001: INFO: Got endpoints: latency-svc-h6x9j [748.940874ms]
  Nov  4 12:31:02.020: INFO: Created: latency-svc-r8zbx
  Nov  4 12:31:02.053: INFO: Got endpoints: latency-svc-74j6l [749.901363ms]
  Nov  4 12:31:02.063: INFO: Created: latency-svc-sc478
  Nov  4 12:31:02.103: INFO: Got endpoints: latency-svc-98qk7 [750.732871ms]
  Nov  4 12:31:02.113: INFO: Created: latency-svc-x9bn6
  Nov  4 12:31:02.151: INFO: Got endpoints: latency-svc-mpv6s [748.700895ms]
  Nov  4 12:31:02.162: INFO: Created: latency-svc-wrbch
  Nov  4 12:31:02.201: INFO: Got endpoints: latency-svc-jqbvg [749.439675ms]
  Nov  4 12:31:02.215: INFO: Created: latency-svc-mftk2
  Nov  4 12:31:02.251: INFO: Got endpoints: latency-svc-mzqlv [747.848145ms]
  Nov  4 12:31:02.260: INFO: Created: latency-svc-c5zc2
  Nov  4 12:31:02.302: INFO: Got endpoints: latency-svc-tw2ph [750.327674ms]
  Nov  4 12:31:02.311: INFO: Created: latency-svc-898pq
  Nov  4 12:31:02.353: INFO: Got endpoints: latency-svc-jwd64 [750.180578ms]
  Nov  4 12:31:02.362: INFO: Created: latency-svc-nzlxt
  Nov  4 12:31:02.402: INFO: Got endpoints: latency-svc-xtnm7 [747.118791ms]
  Nov  4 12:31:02.413: INFO: Created: latency-svc-w7gng
  Nov  4 12:31:02.450: INFO: Got endpoints: latency-svc-ns4cl [749.542697ms]
  Nov  4 12:31:02.461: INFO: Created: latency-svc-vmqh9
  Nov  4 12:31:02.503: INFO: Got endpoints: latency-svc-rdpbt [750.230187ms]
  Nov  4 12:31:02.512: INFO: Created: latency-svc-f7ghh
  Nov  4 12:31:02.554: INFO: Got endpoints: latency-svc-cz2w9 [751.653049ms]
  Nov  4 12:31:02.562: INFO: Created: latency-svc-8tgbj
  Nov  4 12:31:02.603: INFO: Got endpoints: latency-svc-mdc7x [750.379161ms]
  Nov  4 12:31:02.612: INFO: Created: latency-svc-h5d2b
  Nov  4 12:31:02.652: INFO: Got endpoints: latency-svc-tb476 [748.347612ms]
  Nov  4 12:31:02.665: INFO: Created: latency-svc-lxbmz
  Nov  4 12:31:02.701: INFO: Got endpoints: latency-svc-qfrwl [749.509026ms]
  Nov  4 12:31:02.710: INFO: Created: latency-svc-htnps
  Nov  4 12:31:02.752: INFO: Got endpoints: latency-svc-r8zbx [750.381116ms]
  Nov  4 12:31:02.760: INFO: Created: latency-svc-kp4hg
  Nov  4 12:31:02.804: INFO: Got endpoints: latency-svc-sc478 [751.144982ms]
  Nov  4 12:31:02.812: INFO: Created: latency-svc-zcnr4
  Nov  4 12:31:02.852: INFO: Got endpoints: latency-svc-x9bn6 [748.774638ms]
  Nov  4 12:31:02.860: INFO: Created: latency-svc-bq8zs
  Nov  4 12:31:02.902: INFO: Got endpoints: latency-svc-wrbch [750.96625ms]
  Nov  4 12:31:02.914: INFO: Created: latency-svc-bhjz7
  Nov  4 12:31:02.951: INFO: Got endpoints: latency-svc-mftk2 [749.455639ms]
  Nov  4 12:31:02.961: INFO: Created: latency-svc-plc44
  Nov  4 12:31:03.001: INFO: Got endpoints: latency-svc-c5zc2 [749.845491ms]
  Nov  4 12:31:03.010: INFO: Created: latency-svc-xwdms
  Nov  4 12:31:03.052: INFO: Got endpoints: latency-svc-898pq [749.642206ms]
  Nov  4 12:31:03.061: INFO: Created: latency-svc-vm5nz
  Nov  4 12:31:03.102: INFO: Got endpoints: latency-svc-nzlxt [748.509498ms]
  Nov  4 12:31:03.119: INFO: Created: latency-svc-txwjt
  Nov  4 12:31:03.152: INFO: Got endpoints: latency-svc-w7gng [748.99016ms]
  Nov  4 12:31:03.162: INFO: Created: latency-svc-mxmg2
  Nov  4 12:31:03.201: INFO: Got endpoints: latency-svc-vmqh9 [750.577984ms]
  Nov  4 12:31:03.212: INFO: Created: latency-svc-kwjks
  Nov  4 12:31:03.253: INFO: Got endpoints: latency-svc-f7ghh [749.846725ms]
  Nov  4 12:31:03.262: INFO: Created: latency-svc-9mjbx
  Nov  4 12:31:03.303: INFO: Got endpoints: latency-svc-8tgbj [748.996332ms]
  Nov  4 12:31:03.312: INFO: Created: latency-svc-6t69c
  Nov  4 12:31:03.352: INFO: Got endpoints: latency-svc-h5d2b [749.213714ms]
  Nov  4 12:31:03.362: INFO: Created: latency-svc-vtmp5
  Nov  4 12:31:03.401: INFO: Got endpoints: latency-svc-lxbmz [749.423331ms]
  Nov  4 12:31:03.414: INFO: Created: latency-svc-knpx6
  Nov  4 12:31:03.453: INFO: Got endpoints: latency-svc-htnps [752.496201ms]
  Nov  4 12:31:03.465: INFO: Created: latency-svc-fw72s
  Nov  4 12:31:03.501: INFO: Got endpoints: latency-svc-kp4hg [749.640988ms]
  Nov  4 12:31:03.511: INFO: Created: latency-svc-mdv89
  Nov  4 12:31:03.552: INFO: Got endpoints: latency-svc-zcnr4 [748.353618ms]
  Nov  4 12:31:03.602: INFO: Got endpoints: latency-svc-bq8zs [749.85807ms]
  Nov  4 12:31:03.654: INFO: Got endpoints: latency-svc-bhjz7 [751.691028ms]
  Nov  4 12:31:03.703: INFO: Got endpoints: latency-svc-plc44 [751.979408ms]
  Nov  4 12:31:03.753: INFO: Got endpoints: latency-svc-xwdms [752.024915ms]
  Nov  4 12:31:03.803: INFO: Got endpoints: latency-svc-vm5nz [751.203859ms]
  Nov  4 12:31:03.851: INFO: Got endpoints: latency-svc-txwjt [748.901673ms]
  Nov  4 12:31:03.903: INFO: Got endpoints: latency-svc-mxmg2 [751.120065ms]
  Nov  4 12:31:03.951: INFO: Got endpoints: latency-svc-kwjks [749.911846ms]
  Nov  4 12:31:04.003: INFO: Got endpoints: latency-svc-9mjbx [749.754593ms]
  Nov  4 12:31:04.051: INFO: Got endpoints: latency-svc-6t69c [747.85356ms]
  Nov  4 12:31:04.103: INFO: Got endpoints: latency-svc-vtmp5 [750.840301ms]
  Nov  4 12:31:04.150: INFO: Got endpoints: latency-svc-knpx6 [748.80642ms]
  Nov  4 12:31:04.202: INFO: Got endpoints: latency-svc-fw72s [748.833156ms]
  Nov  4 12:31:04.249: INFO: Got endpoints: latency-svc-mdv89 [747.571261ms]
  Nov  4 12:31:04.249: INFO: Latencies: [19.745999ms 25.180557ms 30.488927ms 39.969946ms 50.350994ms 57.735312ms 63.328476ms 70.946015ms 74.275018ms 80.406553ms 89.675451ms 98.335041ms 107.194099ms 107.401643ms 111.137018ms 111.90128ms 113.216609ms 113.667662ms 118.071365ms 118.645262ms 120.076439ms 122.937059ms 123.39485ms 124.833355ms 125.394675ms 125.758703ms 131.198334ms 131.548347ms 133.167589ms 133.636669ms 133.862532ms 136.534996ms 137.363388ms 139.104453ms 139.711914ms 174.89007ms 198.788364ms 250.303874ms 282.000912ms 328.508592ms 372.369898ms 417.832996ms 463.381551ms 506.457793ms 540.406753ms 575.379108ms 626.10096ms 675.75503ms 723.755116ms 740.096143ms 741.110907ms 746.742654ms 746.956552ms 747.118791ms 747.448814ms 747.571261ms 747.848145ms 747.85356ms 747.975582ms 748.173949ms 748.299352ms 748.347612ms 748.353618ms 748.423599ms 748.427194ms 748.453342ms 748.456055ms 748.466092ms 748.509498ms 748.578854ms 748.605682ms 748.608076ms 748.682586ms 748.684012ms 748.700895ms 748.754114ms 748.764775ms 748.774638ms 748.80642ms 748.829703ms 748.833156ms 748.849923ms 748.850752ms 748.858656ms 748.901673ms 748.940874ms 748.984779ms 748.99016ms 748.996332ms 748.998202ms 749.070177ms 749.074679ms 749.089189ms 749.109553ms 749.213714ms 749.229078ms 749.266495ms 749.279598ms 749.339311ms 749.415577ms 749.423331ms 749.431152ms 749.439675ms 749.455639ms 749.509026ms 749.52546ms 749.542505ms 749.542697ms 749.58841ms 749.617632ms 749.630743ms 749.635782ms 749.638538ms 749.640988ms 749.642206ms 749.682907ms 749.754593ms 749.759928ms 749.78213ms 749.845491ms 749.846725ms 749.850163ms 749.85807ms 749.901363ms 749.911846ms 749.921009ms 750.099812ms 750.150848ms 750.166343ms 750.180578ms 750.187904ms 750.201587ms 750.230187ms 750.248334ms 750.325496ms 750.327674ms 750.379161ms 750.381116ms 750.390433ms 750.408335ms 750.411501ms 750.435737ms 750.446743ms 750.556516ms 750.559906ms 750.577984ms 750.671526ms 750.705635ms 750.732871ms 750.813438ms 750.836354ms 750.840301ms 750.856075ms 750.920649ms 750.945894ms 750.96625ms 750.988242ms 751.005791ms 751.120065ms 751.144982ms 751.153578ms 751.203859ms 751.2866ms 751.379399ms 751.42227ms 751.476998ms 751.526326ms 751.536573ms 751.653049ms 751.691028ms 751.70712ms 751.893981ms 751.922823ms 751.979408ms 751.98701ms 752.022114ms 752.024915ms 752.13745ms 752.216493ms 752.496201ms 752.562406ms 753.233589ms 758.046415ms 758.329967ms 764.171273ms 788.157883ms 791.310259ms 798.306414ms 798.563347ms 798.935949ms 798.981079ms 799.188878ms 799.595973ms 800.123796ms 800.843415ms 801.115512ms 801.463909ms 801.728585ms 801.920031ms 803.193782ms]
  Nov  4 12:31:04.249: INFO: 50 %ile: 749.423331ms
  Nov  4 12:31:04.249: INFO: 90 %ile: 752.562406ms
  Nov  4 12:31:04.249: INFO: 99 %ile: 801.920031ms
  Nov  4 12:31:04.249: INFO: Total sample count: 200
  Nov  4 12:31:04.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2002" for this suite. @ 11/04/23 12:31:04.254
• [10.805 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 11/04/23 12:31:04.26
  Nov  4 12:31:04.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svcaccounts @ 11/04/23 12:31:04.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:04.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:04.278
  STEP: reading a file in the container @ 11/04/23 12:31:06.299
  Nov  4 12:31:06.299: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4505 pod-service-account-41e263f9-5fc5-486f-92bc-1e8154a31bc6 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 11/04/23 12:31:06.42
  Nov  4 12:31:06.420: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4505 pod-service-account-41e263f9-5fc5-486f-92bc-1e8154a31bc6 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/04/23 12:31:06.535
  Nov  4 12:31:06.535: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4505 pod-service-account-41e263f9-5fc5-486f-92bc-1e8154a31bc6 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Nov  4 12:31:06.656: INFO: Got root ca configmap in namespace "svcaccounts-4505"
  Nov  4 12:31:06.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4505" for this suite. @ 11/04/23 12:31:06.66
• [2.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 11/04/23 12:31:06.669
  Nov  4 12:31:06.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:31:06.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:06.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:06.688
  STEP: Creating configMap with name projected-configmap-test-volume-map-e252905b-d481-47f8-9f03-99b72e41faf7 @ 11/04/23 12:31:06.69
  STEP: Creating a pod to test consume configMaps @ 11/04/23 12:31:06.693
  STEP: Saw pod success @ 11/04/23 12:31:10.714
  Nov  4 12:31:10.717: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-configmaps-22bf24a4-7526-4b01-8bf5-3b0fa739d976 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 12:31:10.724
  Nov  4 12:31:10.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2885" for this suite. @ 11/04/23 12:31:10.741
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 11/04/23 12:31:10.749
  Nov  4 12:31:10.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 12:31:10.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:10.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:10.77
  STEP: Creating a test headless service @ 11/04/23 12:31:10.772
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8174 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8174;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8174 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8174;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8174.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8174.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8174.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8174.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8174.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8174.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8174.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8174.svc;check="$$(dig +notcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_udp@PTR;check="$$(dig +tcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_tcp@PTR;sleep 1; done
   @ 11/04/23 12:31:10.786
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8174 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8174;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8174 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8174;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8174.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8174.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8174.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8174.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8174.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8174.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8174.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8174.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8174.svc;check="$$(dig +notcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_udp@PTR;check="$$(dig +tcp +noall +answer +search 192.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.192_tcp@PTR;sleep 1; done
   @ 11/04/23 12:31:10.786
  STEP: creating a pod to probe DNS @ 11/04/23 12:31:10.787
  STEP: submitting the pod to kubernetes @ 11/04/23 12:31:10.787
  STEP: retrieving the pod @ 11/04/23 12:31:18.816
  STEP: looking for the results for each expected name from probers @ 11/04/23 12:31:18.819
  Nov  4 12:31:18.824: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.827: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.831: INFO: Unable to read wheezy_udp@dns-test-service.dns-8174 from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.834: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8174 from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.838: INFO: Unable to read wheezy_udp@dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.842: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.844: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.849: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.864: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.868: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.871: INFO: Unable to read jessie_udp@dns-test-service.dns-8174 from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.874: INFO: Unable to read jessie_tcp@dns-test-service.dns-8174 from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.878: INFO: Unable to read jessie_udp@dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.881: INFO: Unable to read jessie_tcp@dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.883: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.887: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8174.svc from pod dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f: the server could not find the requested resource (get pods dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f)
  Nov  4 12:31:18.900: INFO: Lookups using dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8174 wheezy_tcp@dns-test-service.dns-8174 wheezy_udp@dns-test-service.dns-8174.svc wheezy_tcp@dns-test-service.dns-8174.svc wheezy_udp@_http._tcp.dns-test-service.dns-8174.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8174.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8174 jessie_tcp@dns-test-service.dns-8174 jessie_udp@dns-test-service.dns-8174.svc jessie_tcp@dns-test-service.dns-8174.svc jessie_udp@_http._tcp.dns-test-service.dns-8174.svc jessie_tcp@_http._tcp.dns-test-service.dns-8174.svc]

  Nov  4 12:31:18.906: INFO: Pod client logs for webserver: 
  Nov  4 12:31:18.913: INFO: Pod client logs for querier: 
  Nov  4 12:31:18.917: INFO: Pod client logs for jessie-querier: 
  Nov  4 12:31:24.000: INFO: DNS probes using dns-8174/dns-test-f77aca0b-6a0a-461d-9fe3-ed242e6c106f succeeded

  Nov  4 12:31:24.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 12:31:24.002
  STEP: deleting the test service @ 11/04/23 12:31:24.012
  STEP: deleting the test headless service @ 11/04/23 12:31:24.033
  STEP: Destroying namespace "dns-8174" for this suite. @ 11/04/23 12:31:24.046
• [13.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 11/04/23 12:31:24.054
  Nov  4 12:31:24.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:31:24.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:24.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:24.077
  STEP: Setting up server cert @ 11/04/23 12:31:24.098
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:31:24.373
  STEP: Deploying the webhook pod @ 11/04/23 12:31:24.381
  STEP: Wait for the deployment to be ready @ 11/04/23 12:31:24.393
  Nov  4 12:31:24.400: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Nov  4 12:31:26.408: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov  4 12:31:28.413: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 12, 31, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 11/04/23 12:31:30.413
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:31:30.42
  Nov  4 12:31:31.420: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov  4 12:31:31.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2292-crds.webhook.example.com via the AdmissionRegistration API @ 11/04/23 12:31:31.937
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/04/23 12:31:31.951
  Nov  4 12:31:33.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5249" for this suite. @ 11/04/23 12:31:34.559
  STEP: Destroying namespace "webhook-markers-6201" for this suite. @ 11/04/23 12:31:34.567
• [10.518 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 11/04/23 12:31:34.573
  Nov  4 12:31:34.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 12:31:34.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:34.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:34.593
  STEP: Creating a pod to test env composition @ 11/04/23 12:31:34.595
  STEP: Saw pod success @ 11/04/23 12:31:38.613
  Nov  4 12:31:38.616: INFO: Trying to get logs from node ip-172-31-44-230 pod var-expansion-e173d1c9-1005-4d04-8d36-dfc1c84957f1 container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 12:31:38.623
  Nov  4 12:31:38.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1299" for this suite. @ 11/04/23 12:31:38.639
• [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 11/04/23 12:31:38.646
  Nov  4 12:31:38.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 12:31:38.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:38.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:38.664
  STEP: Creating the pod @ 11/04/23 12:31:38.666
  Nov  4 12:31:41.205: INFO: Successfully updated pod "annotationupdated8e73afd-d16e-40ce-aa9e-d3447777d0fe"
  Nov  4 12:31:43.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4992" for this suite. @ 11/04/23 12:31:43.222
• [4.583 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 11/04/23 12:31:43.229
  Nov  4 12:31:43.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:31:43.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:43.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:43.253
  STEP: creating service endpoint-test2 in namespace services-8144 @ 11/04/23 12:31:43.255
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8144 to expose endpoints map[] @ 11/04/23 12:31:43.263
  Nov  4 12:31:43.265: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Nov  4 12:31:44.273: INFO: successfully validated that service endpoint-test2 in namespace services-8144 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8144 @ 11/04/23 12:31:44.273
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8144 to expose endpoints map[pod1:[80]] @ 11/04/23 12:31:46.291
  Nov  4 12:31:46.298: INFO: successfully validated that service endpoint-test2 in namespace services-8144 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/04/23 12:31:46.298
  Nov  4 12:31:46.298: INFO: Creating new exec pod
  Nov  4 12:31:49.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8144 exec execpodhjsl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov  4 12:31:49.439: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov  4 12:31:49.439: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:31:49.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8144 exec execpodhjsl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  Nov  4 12:31:49.566: INFO: stderr: "+ nc -v -t -w 2 10.152.183.62 80\n+ echo hostName\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n"
  Nov  4 12:31:49.566: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8144 @ 11/04/23 12:31:49.566
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8144 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/04/23 12:31:51.582
  Nov  4 12:31:51.593: INFO: successfully validated that service endpoint-test2 in namespace services-8144 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/04/23 12:31:51.593
  Nov  4 12:31:52.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8144 exec execpodhjsl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov  4 12:31:52.721: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov  4 12:31:52.721: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:31:52.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8144 exec execpodhjsl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  Nov  4 12:31:52.844: INFO: stderr: "+ nc -v -t -w 2 10.152.183.62 80\n+ echo hostName\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n"
  Nov  4 12:31:52.844: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8144 @ 11/04/23 12:31:52.844
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8144 to expose endpoints map[pod2:[80]] @ 11/04/23 12:31:52.863
  Nov  4 12:31:52.873: INFO: successfully validated that service endpoint-test2 in namespace services-8144 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/04/23 12:31:52.873
  Nov  4 12:31:53.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8144 exec execpodhjsl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov  4 12:31:54.001: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov  4 12:31:54.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:31:54.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8144 exec execpodhjsl9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  Nov  4 12:31:54.129: INFO: stderr: "+ nc -v -t -w 2 10.152.183.62 80\n+ echo hostName\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n"
  Nov  4 12:31:54.129: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8144 @ 11/04/23 12:31:54.129
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8144 to expose endpoints map[] @ 11/04/23 12:31:54.139
  Nov  4 12:31:54.150: INFO: successfully validated that service endpoint-test2 in namespace services-8144 exposes endpoints map[]
  Nov  4 12:31:54.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8144" for this suite. @ 11/04/23 12:31:54.168
• [10.945 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 11/04/23 12:31:54.175
  Nov  4 12:31:54.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename security-context-test @ 11/04/23 12:31:54.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:54.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:54.2
  Nov  4 12:31:58.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2700" for this suite. @ 11/04/23 12:31:58.245
• [4.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 11/04/23 12:31:58.251
  Nov  4 12:31:58.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:31:58.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:31:58.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:31:58.27
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9385 @ 11/04/23 12:31:58.272
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/04/23 12:31:58.283
  STEP: creating service externalsvc in namespace services-9385 @ 11/04/23 12:31:58.283
  STEP: creating replication controller externalsvc in namespace services-9385 @ 11/04/23 12:31:58.301
  I1104 12:31:58.309307      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9385, replica count: 2
  I1104 12:32:01.361552      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/04/23 12:32:01.365
  Nov  4 12:32:01.380: INFO: Creating new exec pod
  Nov  4 12:32:03.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9385 exec execpodbz85z -- /bin/sh -x -c nslookup nodeport-service.services-9385.svc.cluster.local'
  Nov  4 12:32:03.559: INFO: stderr: "+ nslookup nodeport-service.services-9385.svc.cluster.local\n"
  Nov  4 12:32:03.559: INFO: stdout: "Server:\t\t10.152.183.121\nAddress:\t10.152.183.121#53\n\nnodeport-service.services-9385.svc.cluster.local\tcanonical name = externalsvc.services-9385.svc.cluster.local.\nName:\texternalsvc.services-9385.svc.cluster.local\nAddress: 10.152.183.66\n\n"
  Nov  4 12:32:03.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-9385, will wait for the garbage collector to delete the pods @ 11/04/23 12:32:03.562
  Nov  4 12:32:03.623: INFO: Deleting ReplicationController externalsvc took: 7.562611ms
  Nov  4 12:32:03.724: INFO: Terminating ReplicationController externalsvc pods took: 100.999302ms
  Nov  4 12:32:06.944: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-9385" for this suite. @ 11/04/23 12:32:06.954
• [8.709 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 11/04/23 12:32:06.96
  Nov  4 12:32:06.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 12:32:06.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:32:06.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:32:06.978
  STEP: Creating service test in namespace statefulset-9102 @ 11/04/23 12:32:06.98
  STEP: Creating stateful set ss in namespace statefulset-9102 @ 11/04/23 12:32:06.986
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9102 @ 11/04/23 12:32:06.992
  Nov  4 12:32:06.994: INFO: Found 0 stateful pods, waiting for 1
  Nov  4 12:32:17.001: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/04/23 12:32:17.001
  Nov  4 12:32:17.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-9102 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:32:17.122: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:32:17.122: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:32:17.122: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:32:17.125: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Nov  4 12:32:27.128: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:32:27.128: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov  4 12:32:27.144: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Nov  4 12:32:27.144: INFO: ss-0  ip-172-31-75-164  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:07 +0000 UTC  }]
  Nov  4 12:32:27.144: INFO: 
  Nov  4 12:32:27.144: INFO: StatefulSet ss has not reached scale 3, at 1
  Nov  4 12:32:28.150: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994723517s
  Nov  4 12:32:29.153: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989319635s
  Nov  4 12:32:30.158: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98528846s
  Nov  4 12:32:31.162: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.98084852s
  Nov  4 12:32:32.167: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.977271295s
  Nov  4 12:32:33.171: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971990039s
  Nov  4 12:32:34.176: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967894517s
  Nov  4 12:32:35.180: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962878929s
  Nov  4 12:32:36.183: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.449662ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9102 @ 11/04/23 12:32:37.183
  Nov  4 12:32:37.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-9102 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 12:32:37.312: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov  4 12:32:37.312: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 12:32:37.312: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov  4 12:32:37.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-9102 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 12:32:37.443: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov  4 12:32:37.443: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 12:32:37.443: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov  4 12:32:37.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-9102 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 12:32:37.565: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov  4 12:32:37.565: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 12:32:37.565: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov  4 12:32:37.568: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:32:37.568: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:32:37.568: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/04/23 12:32:37.568
  Nov  4 12:32:37.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-9102 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:32:37.688: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:32:37.688: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:32:37.688: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:32:37.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-9102 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:32:37.809: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:32:37.809: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:32:37.809: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:32:37.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-9102 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 12:32:37.931: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 12:32:37.931: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 12:32:37.931: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov  4 12:32:37.931: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov  4 12:32:37.935: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Nov  4 12:32:47.943: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:32:47.943: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:32:47.943: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov  4 12:32:47.953: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Nov  4 12:32:47.953: INFO: ss-0  ip-172-31-75-164  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:07 +0000 UTC  }]
  Nov  4 12:32:47.953: INFO: ss-1  ip-172-31-23-218  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:27 +0000 UTC  }]
  Nov  4 12:32:47.953: INFO: ss-2  ip-172-31-44-230  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 12:32:27 +0000 UTC  }]
  Nov  4 12:32:47.953: INFO: 
  Nov  4 12:32:47.953: INFO: StatefulSet ss has not reached scale 0, at 3
  Nov  4 12:32:48.957: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.996412007s
  Nov  4 12:32:49.960: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992838006s
  Nov  4 12:32:50.965: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.989679061s
  Nov  4 12:32:51.968: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.985514186s
  Nov  4 12:32:52.973: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.981860584s
  Nov  4 12:32:53.975: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.977774738s
  Nov  4 12:32:54.978: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.974955245s
  Nov  4 12:32:55.982: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.972225432s
  Nov  4 12:32:56.986: INFO: Verifying statefulset ss doesn't scale past 0 for another 967.725152ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9102 @ 11/04/23 12:32:57.987
  Nov  4 12:32:57.990: INFO: Scaling statefulset ss to 0
  Nov  4 12:32:58.000: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 12:32:58.002: INFO: Deleting all statefulset in ns statefulset-9102
  Nov  4 12:32:58.004: INFO: Scaling statefulset ss to 0
  Nov  4 12:32:58.012: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 12:32:58.014: INFO: Deleting statefulset ss
  Nov  4 12:32:58.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9102" for this suite. @ 11/04/23 12:32:58.026
• [51.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/04/23 12:32:58.033
  Nov  4 12:32:58.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/04/23 12:32:58.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:32:58.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:32:58.058
  STEP: Creating 50 configmaps @ 11/04/23 12:32:58.06
  STEP: Creating RC which spawns configmap-volume pods @ 11/04/23 12:32:58.288
  Nov  4 12:32:58.396: INFO: Pod name wrapped-volume-race-19a46863-d7bc-4427-ba41-18ed011c142d: Found 3 pods out of 5
  Nov  4 12:33:03.400: INFO: Pod name wrapped-volume-race-19a46863-d7bc-4427-ba41-18ed011c142d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/04/23 12:33:03.4
  STEP: Creating RC which spawns configmap-volume pods @ 11/04/23 12:33:03.417
  Nov  4 12:33:03.430: INFO: Pod name wrapped-volume-race-70e13605-3354-4be2-8673-4b816fcdf788: Found 0 pods out of 5
  Nov  4 12:33:08.436: INFO: Pod name wrapped-volume-race-70e13605-3354-4be2-8673-4b816fcdf788: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/04/23 12:33:08.436
  STEP: Creating RC which spawns configmap-volume pods @ 11/04/23 12:33:08.455
  Nov  4 12:33:08.466: INFO: Pod name wrapped-volume-race-0842b5bf-1e33-48a8-99a3-ca964e69f201: Found 0 pods out of 5
  Nov  4 12:33:13.473: INFO: Pod name wrapped-volume-race-0842b5bf-1e33-48a8-99a3-ca964e69f201: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/04/23 12:33:13.473
  Nov  4 12:33:13.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-0842b5bf-1e33-48a8-99a3-ca964e69f201 in namespace emptydir-wrapper-7549, will wait for the garbage collector to delete the pods @ 11/04/23 12:33:13.492
  Nov  4 12:33:13.554: INFO: Deleting ReplicationController wrapped-volume-race-0842b5bf-1e33-48a8-99a3-ca964e69f201 took: 6.432395ms
  Nov  4 12:33:13.654: INFO: Terminating ReplicationController wrapped-volume-race-0842b5bf-1e33-48a8-99a3-ca964e69f201 pods took: 100.09005ms
  STEP: deleting ReplicationController wrapped-volume-race-70e13605-3354-4be2-8673-4b816fcdf788 in namespace emptydir-wrapper-7549, will wait for the garbage collector to delete the pods @ 11/04/23 12:33:15.055
  Nov  4 12:33:15.117: INFO: Deleting ReplicationController wrapped-volume-race-70e13605-3354-4be2-8673-4b816fcdf788 took: 6.644489ms
  Nov  4 12:33:15.218: INFO: Terminating ReplicationController wrapped-volume-race-70e13605-3354-4be2-8673-4b816fcdf788 pods took: 100.765026ms
  STEP: deleting ReplicationController wrapped-volume-race-19a46863-d7bc-4427-ba41-18ed011c142d in namespace emptydir-wrapper-7549, will wait for the garbage collector to delete the pods @ 11/04/23 12:33:17.019
  Nov  4 12:33:17.078: INFO: Deleting ReplicationController wrapped-volume-race-19a46863-d7bc-4427-ba41-18ed011c142d took: 5.228762ms
  Nov  4 12:33:17.179: INFO: Terminating ReplicationController wrapped-volume-race-19a46863-d7bc-4427-ba41-18ed011c142d pods took: 100.895893ms
  STEP: Cleaning up the configMaps @ 11/04/23 12:33:18.58
  STEP: Destroying namespace "emptydir-wrapper-7549" for this suite. @ 11/04/23 12:33:18.84
• [20.813 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 11/04/23 12:33:18.846
  Nov  4 12:33:18.846: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:33:18.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:33:18.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:33:18.867
  STEP: Setting up server cert @ 11/04/23 12:33:18.892
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:33:19.1
  STEP: Deploying the webhook pod @ 11/04/23 12:33:19.108
  STEP: Wait for the deployment to be ready @ 11/04/23 12:33:19.125
  Nov  4 12:33:19.133: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/04/23 12:33:21.144
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:33:21.151
  Nov  4 12:33:22.151: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/04/23 12:33:22.16
  STEP: create a configmap that should be updated by the webhook @ 11/04/23 12:33:22.178
  Nov  4 12:33:22.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7956" for this suite. @ 11/04/23 12:33:22.244
  STEP: Destroying namespace "webhook-markers-2593" for this suite. @ 11/04/23 12:33:22.251
• [3.410 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 11/04/23 12:33:22.257
  Nov  4 12:33:22.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 12:33:22.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:33:22.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:33:22.278
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/04/23 12:33:22.28
  STEP: Saw pod success @ 11/04/23 12:33:26.299
  Nov  4 12:33:26.302: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-5bfabbdb-3260-49a9-b7e3-e0b239a8cbf7 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 12:33:26.307
  Nov  4 12:33:26.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4277" for this suite. @ 11/04/23 12:33:26.327
• [4.074 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 11/04/23 12:33:26.332
  Nov  4 12:33:26.332: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replication-controller @ 11/04/23 12:33:26.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:33:26.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:33:26.349
  STEP: Creating replication controller my-hostname-basic-6dd01368-5e42-4235-b8ab-75e989c24032 @ 11/04/23 12:33:26.352
  Nov  4 12:33:26.360: INFO: Pod name my-hostname-basic-6dd01368-5e42-4235-b8ab-75e989c24032: Found 0 pods out of 1
  Nov  4 12:33:31.364: INFO: Pod name my-hostname-basic-6dd01368-5e42-4235-b8ab-75e989c24032: Found 1 pods out of 1
  Nov  4 12:33:31.364: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-6dd01368-5e42-4235-b8ab-75e989c24032" are running
  Nov  4 12:33:31.367: INFO: Pod "my-hostname-basic-6dd01368-5e42-4235-b8ab-75e989c24032-sq5br" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:33:26 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:33:27 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:33:27 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-04 12:33:26 +0000 UTC Reason: Message:}])
  Nov  4 12:33:31.367: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/04/23 12:33:31.367
  Nov  4 12:33:31.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2922" for this suite. @ 11/04/23 12:33:31.38
• [5.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/04/23 12:33:31.387
  Nov  4 12:33:31.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:33:31.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:33:31.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:33:31.408
  STEP: Creating projection with secret that has name projected-secret-test-c5d63ac3-e61e-4196-8b70-6aca2d481000 @ 11/04/23 12:33:31.41
  STEP: Creating a pod to test consume secrets @ 11/04/23 12:33:31.414
  STEP: Saw pod success @ 11/04/23 12:33:35.429
  Nov  4 12:33:35.434: INFO: Trying to get logs from node ip-172-31-75-164 pod pod-projected-secrets-35608f43-036f-45d0-94c4-e8880ea79d3e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:33:35.453
  Nov  4 12:33:35.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6803" for this suite. @ 11/04/23 12:33:35.468
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 11/04/23 12:33:35.476
  Nov  4 12:33:35.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 12:33:35.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:33:35.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:33:35.498
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/04/23 12:33:35.5
  STEP: Saw pod success @ 11/04/23 12:33:39.521
  Nov  4 12:33:39.524: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-5f08c01a-e52a-43ae-8d77-9eb71d8a9dfc container test-container: <nil>
  STEP: delete the pod @ 11/04/23 12:33:39.529
  Nov  4 12:33:39.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-914" for this suite. @ 11/04/23 12:33:39.544
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 11/04/23 12:33:39.55
  Nov  4 12:33:39.550: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-preemption @ 11/04/23 12:33:39.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:33:39.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:33:39.569
  Nov  4 12:33:39.582: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov  4 12:34:39.597: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/04/23 12:34:39.599
  Nov  4 12:34:39.617: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov  4 12:34:39.622: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Nov  4 12:34:39.635: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov  4 12:34:39.644: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov  4 12:34:39.661: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov  4 12:34:39.668: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/04/23 12:34:39.668
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/04/23 12:34:41.688
  Nov  4 12:34:45.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2879" for this suite. @ 11/04/23 12:34:45.771
• [66.225 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 11/04/23 12:34:45.776
  Nov  4 12:34:45.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:34:45.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:34:45.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:34:45.802
  STEP: Setting up server cert @ 11/04/23 12:34:45.828
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:34:46.108
  STEP: Deploying the webhook pod @ 11/04/23 12:34:46.114
  STEP: Wait for the deployment to be ready @ 11/04/23 12:34:46.123
  Nov  4 12:34:46.132: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/04/23 12:34:48.143
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:34:48.151
  Nov  4 12:34:49.151: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov  4 12:34:49.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/04/23 12:34:49.666
  STEP: Creating a custom resource that should be denied by the webhook @ 11/04/23 12:34:49.68
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/04/23 12:34:51.703
  STEP: Updating the custom resource with disallowed data should be denied @ 11/04/23 12:34:51.709
  STEP: Deleting the custom resource should be denied @ 11/04/23 12:34:51.715
  STEP: Remove the offending key and value from the custom resource data @ 11/04/23 12:34:51.721
  STEP: Deleting the updated custom resource should be successful @ 11/04/23 12:34:51.729
  Nov  4 12:34:51.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2604" for this suite. @ 11/04/23 12:34:52.293
  STEP: Destroying namespace "webhook-markers-9738" for this suite. @ 11/04/23 12:34:52.299
• [6.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 11/04/23 12:34:52.306
  Nov  4 12:34:52.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename gc @ 11/04/23 12:34:52.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:34:52.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:34:52.326
  STEP: create the rc1 @ 11/04/23 12:34:52.331
  STEP: create the rc2 @ 11/04/23 12:34:52.334
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/04/23 12:34:58.359
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/04/23 12:34:59.036
  STEP: wait for the rc to be deleted @ 11/04/23 12:34:59.05
  Nov  4 12:35:04.060: INFO: 72 pods remaining
  Nov  4 12:35:04.060: INFO: 72 pods has nil DeletionTimestamp
  Nov  4 12:35:04.060: INFO: 
  STEP: Gathering metrics @ 11/04/23 12:35:09.059
  W1104 12:35:09.062834      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov  4 12:35:09.062: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov  4 12:35:09.062: INFO: Deleting pod "simpletest-rc-to-be-deleted-2csfv" in namespace "gc-4504"
  Nov  4 12:35:09.072: INFO: Deleting pod "simpletest-rc-to-be-deleted-2j7nj" in namespace "gc-4504"
  Nov  4 12:35:09.083: INFO: Deleting pod "simpletest-rc-to-be-deleted-2klwt" in namespace "gc-4504"
  Nov  4 12:35:09.094: INFO: Deleting pod "simpletest-rc-to-be-deleted-2kx4l" in namespace "gc-4504"
  Nov  4 12:35:09.105: INFO: Deleting pod "simpletest-rc-to-be-deleted-2m75m" in namespace "gc-4504"
  Nov  4 12:35:09.118: INFO: Deleting pod "simpletest-rc-to-be-deleted-2njfg" in namespace "gc-4504"
  Nov  4 12:35:09.129: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dff8" in namespace "gc-4504"
  Nov  4 12:35:09.145: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zpsb" in namespace "gc-4504"
  Nov  4 12:35:09.154: INFO: Deleting pod "simpletest-rc-to-be-deleted-56hwf" in namespace "gc-4504"
  Nov  4 12:35:09.165: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bjfc" in namespace "gc-4504"
  Nov  4 12:35:09.176: INFO: Deleting pod "simpletest-rc-to-be-deleted-5s475" in namespace "gc-4504"
  Nov  4 12:35:09.187: INFO: Deleting pod "simpletest-rc-to-be-deleted-5z6j2" in namespace "gc-4504"
  Nov  4 12:35:09.199: INFO: Deleting pod "simpletest-rc-to-be-deleted-6rggv" in namespace "gc-4504"
  Nov  4 12:35:09.206: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zf5n" in namespace "gc-4504"
  Nov  4 12:35:09.219: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kb5l" in namespace "gc-4504"
  Nov  4 12:35:09.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vcv4" in namespace "gc-4504"
  Nov  4 12:35:09.244: INFO: Deleting pod "simpletest-rc-to-be-deleted-88ltc" in namespace "gc-4504"
  Nov  4 12:35:09.257: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bjz2" in namespace "gc-4504"
  Nov  4 12:35:09.267: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dxl6" in namespace "gc-4504"
  Nov  4 12:35:09.274: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vqbg" in namespace "gc-4504"
  Nov  4 12:35:09.286: INFO: Deleting pod "simpletest-rc-to-be-deleted-8xmxg" in namespace "gc-4504"
  Nov  4 12:35:09.298: INFO: Deleting pod "simpletest-rc-to-be-deleted-92hlf" in namespace "gc-4504"
  Nov  4 12:35:09.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-9627s" in namespace "gc-4504"
  Nov  4 12:35:09.325: INFO: Deleting pod "simpletest-rc-to-be-deleted-9n5tp" in namespace "gc-4504"
  Nov  4 12:35:09.344: INFO: Deleting pod "simpletest-rc-to-be-deleted-9r6b2" in namespace "gc-4504"
  Nov  4 12:35:09.359: INFO: Deleting pod "simpletest-rc-to-be-deleted-bh5g9" in namespace "gc-4504"
  Nov  4 12:35:09.369: INFO: Deleting pod "simpletest-rc-to-be-deleted-blh6j" in namespace "gc-4504"
  Nov  4 12:35:09.397: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9k44" in namespace "gc-4504"
  Nov  4 12:35:09.409: INFO: Deleting pod "simpletest-rc-to-be-deleted-cmskx" in namespace "gc-4504"
  Nov  4 12:35:09.421: INFO: Deleting pod "simpletest-rc-to-be-deleted-crvhn" in namespace "gc-4504"
  Nov  4 12:35:09.433: INFO: Deleting pod "simpletest-rc-to-be-deleted-d9t56" in namespace "gc-4504"
  Nov  4 12:35:09.446: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbjcb" in namespace "gc-4504"
  Nov  4 12:35:09.457: INFO: Deleting pod "simpletest-rc-to-be-deleted-dc6kv" in namespace "gc-4504"
  Nov  4 12:35:09.469: INFO: Deleting pod "simpletest-rc-to-be-deleted-dh42n" in namespace "gc-4504"
  Nov  4 12:35:09.482: INFO: Deleting pod "simpletest-rc-to-be-deleted-dhvkl" in namespace "gc-4504"
  Nov  4 12:35:09.490: INFO: Deleting pod "simpletest-rc-to-be-deleted-dv66b" in namespace "gc-4504"
  Nov  4 12:35:09.504: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvp4p" in namespace "gc-4504"
  Nov  4 12:35:09.514: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwbrz" in namespace "gc-4504"
  Nov  4 12:35:09.527: INFO: Deleting pod "simpletest-rc-to-be-deleted-dxqc6" in namespace "gc-4504"
  Nov  4 12:35:09.542: INFO: Deleting pod "simpletest-rc-to-be-deleted-f72dd" in namespace "gc-4504"
  Nov  4 12:35:09.552: INFO: Deleting pod "simpletest-rc-to-be-deleted-fq8wf" in namespace "gc-4504"
  Nov  4 12:35:09.565: INFO: Deleting pod "simpletest-rc-to-be-deleted-fsznk" in namespace "gc-4504"
  Nov  4 12:35:09.577: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2zp4" in namespace "gc-4504"
  Nov  4 12:35:09.587: INFO: Deleting pod "simpletest-rc-to-be-deleted-gg5nr" in namespace "gc-4504"
  Nov  4 12:35:09.599: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqvgw" in namespace "gc-4504"
  Nov  4 12:35:09.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-gww9g" in namespace "gc-4504"
  Nov  4 12:35:09.633: INFO: Deleting pod "simpletest-rc-to-be-deleted-h4d7s" in namespace "gc-4504"
  Nov  4 12:35:09.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-h8754" in namespace "gc-4504"
  Nov  4 12:35:09.663: INFO: Deleting pod "simpletest-rc-to-be-deleted-hqs4s" in namespace "gc-4504"
  Nov  4 12:35:09.673: INFO: Deleting pod "simpletest-rc-to-be-deleted-hxwjm" in namespace "gc-4504"
  Nov  4 12:35:09.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4504" for this suite. @ 11/04/23 12:35:09.697
• [17.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/04/23 12:35:09.706
  Nov  4 12:35:09.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 12:35:09.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:09.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:09.729
  STEP: Creating secret with name secret-test-map-a0f085e0-a068-470a-ad6b-796314f0390c @ 11/04/23 12:35:09.731
  STEP: Creating a pod to test consume secrets @ 11/04/23 12:35:09.737
  STEP: Saw pod success @ 11/04/23 12:35:13.754
  Nov  4 12:35:13.758: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-e49bd291-8893-4a95-af8b-e30392db9a78 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:35:13.773
  Nov  4 12:35:13.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-140" for this suite. @ 11/04/23 12:35:13.793
• [4.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 11/04/23 12:35:13.797
  Nov  4 12:35:13.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:35:13.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:13.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:13.82
  Nov  4 12:35:13.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6826 version'
  Nov  4 12:35:13.904: INFO: stderr: ""
  Nov  4 12:35:13.904: INFO: stdout: "Client Version: v1.28.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.3\n"
  Nov  4 12:35:13.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6826" for this suite. @ 11/04/23 12:35:13.918
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 11/04/23 12:35:13.927
  Nov  4 12:35:13.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:35:13.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:13.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:13.961
  STEP: creating Agnhost RC @ 11/04/23 12:35:13.965
  Nov  4 12:35:13.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5391 create -f -'
  Nov  4 12:35:14.227: INFO: stderr: ""
  Nov  4 12:35:14.227: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/04/23 12:35:14.228
  Nov  4 12:35:15.234: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 12:35:15.234: INFO: Found 0 / 1
  Nov  4 12:35:16.231: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 12:35:16.231: INFO: Found 1 / 1
  Nov  4 12:35:16.231: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/04/23 12:35:16.231
  Nov  4 12:35:16.236: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 12:35:16.236: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov  4 12:35:16.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5391 patch pod agnhost-primary-mxqts -p {"metadata":{"annotations":{"x":"y"}}}'
  Nov  4 12:35:16.339: INFO: stderr: ""
  Nov  4 12:35:16.339: INFO: stdout: "pod/agnhost-primary-mxqts patched\n"
  STEP: checking annotations @ 11/04/23 12:35:16.339
  Nov  4 12:35:16.342: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 12:35:16.342: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov  4 12:35:16.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5391" for this suite. @ 11/04/23 12:35:16.345
• [2.427 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 11/04/23 12:35:16.353
  Nov  4 12:35:16.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:35:16.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:16.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:16.376
  STEP: Creating configMap with name projected-configmap-test-volume-6b103cd1-a13f-48d0-a76f-fa5368171d38 @ 11/04/23 12:35:16.378
  STEP: Creating a pod to test consume configMaps @ 11/04/23 12:35:16.381
  STEP: Saw pod success @ 11/04/23 12:35:20.4
  Nov  4 12:35:20.404: INFO: Trying to get logs from node ip-172-31-75-164 pod pod-projected-configmaps-a6fab6ca-2d2b-4f61-b89e-80928439ecf4 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 12:35:20.429
  Nov  4 12:35:20.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3269" for this suite. @ 11/04/23 12:35:20.457
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/04/23 12:35:20.474
  Nov  4 12:35:20.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 12:35:20.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:20.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:20.497
  STEP: Creating secret with name secret-test-b268556d-2d5e-4bb0-ac3e-961324033e69 @ 11/04/23 12:35:20.499
  STEP: Creating a pod to test consume secrets @ 11/04/23 12:35:20.504
  STEP: Saw pod success @ 11/04/23 12:35:24.518
  Nov  4 12:35:24.520: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-3120b625-e6a1-40e0-8e53-a8405f397b7b container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:35:24.526
  Nov  4 12:35:24.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8548" for this suite. @ 11/04/23 12:35:24.542
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/04/23 12:35:24.548
  Nov  4 12:35:24.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 12:35:24.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:24.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:24.567
  STEP: Saw pod success @ 11/04/23 12:35:30.612
  Nov  4 12:35:30.615: INFO: Trying to get logs from node ip-172-31-44-230 pod client-envvars-46e1376e-81a2-4c3e-af10-43563e5a701b container env3cont: <nil>
  STEP: delete the pod @ 11/04/23 12:35:30.622
  Nov  4 12:35:30.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8225" for this suite. @ 11/04/23 12:35:30.639
• [6.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 11/04/23 12:35:30.647
  Nov  4 12:35:30.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:35:30.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:30.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:30.666
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:35:30.668
  STEP: Saw pod success @ 11/04/23 12:35:34.689
  Nov  4 12:35:34.692: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-57435e3f-778b-49da-a6cf-56431275106d container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:35:34.698
  Nov  4 12:35:34.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2929" for this suite. @ 11/04/23 12:35:34.714
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 11/04/23 12:35:34.722
  Nov  4 12:35:34.722: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename disruption @ 11/04/23 12:35:34.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:34.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:34.742
  STEP: Waiting for the pdb to be processed @ 11/04/23 12:35:34.749
  STEP: Updating PodDisruptionBudget status @ 11/04/23 12:35:36.753
  STEP: Waiting for all pods to be running @ 11/04/23 12:35:36.76
  Nov  4 12:35:36.764: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 11/04/23 12:35:38.767
  STEP: Waiting for the pdb to be processed @ 11/04/23 12:35:38.778
  STEP: Patching PodDisruptionBudget status @ 11/04/23 12:35:38.786
  STEP: Waiting for the pdb to be processed @ 11/04/23 12:35:38.793
  Nov  4 12:35:38.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2003" for this suite. @ 11/04/23 12:35:38.799
• [4.083 seconds]
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 11/04/23 12:35:38.805
  Nov  4 12:35:38.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:35:38.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:38.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:38.826
  STEP: creating service nodeport-test with type=NodePort in namespace services-9101 @ 11/04/23 12:35:38.828
  STEP: creating replication controller nodeport-test in namespace services-9101 @ 11/04/23 12:35:38.846
  I1104 12:35:38.851801      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-9101, replica count: 2
  I1104 12:35:41.903546      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 12:35:41.903: INFO: Creating new exec pod
  Nov  4 12:35:44.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9101 exec execpodzgqkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Nov  4 12:35:45.082: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov  4 12:35:45.083: INFO: stdout: ""
  Nov  4 12:35:46.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9101 exec execpodzgqkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Nov  4 12:35:46.220: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov  4 12:35:46.220: INFO: stdout: ""
  Nov  4 12:35:47.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9101 exec execpodzgqkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Nov  4 12:35:47.206: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov  4 12:35:47.206: INFO: stdout: "nodeport-test-8xpxj"
  Nov  4 12:35:47.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9101 exec execpodzgqkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.120 80'
  Nov  4 12:35:47.334: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.120 80\nConnection to 10.152.183.120 80 port [tcp/http] succeeded!\n"
  Nov  4 12:35:47.334: INFO: stdout: "nodeport-test-8xpxj"
  Nov  4 12:35:47.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9101 exec execpodzgqkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.44.230 30812'
  Nov  4 12:35:47.449: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.44.230 30812\nConnection to 172.31.44.230 30812 port [tcp/*] succeeded!\n"
  Nov  4 12:35:47.449: INFO: stdout: "nodeport-test-8xpxj"
  Nov  4 12:35:47.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9101 exec execpodzgqkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.218 30812'
  Nov  4 12:35:47.569: INFO: stderr: "+ nc -v -t -w 2 172.31.23.218 30812\n+ echo hostName\nConnection to 172.31.23.218 30812 port [tcp/*] succeeded!\n"
  Nov  4 12:35:47.569: INFO: stdout: ""
  Nov  4 12:35:48.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-9101 exec execpodzgqkm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.218 30812'
  Nov  4 12:35:48.689: INFO: stderr: "+ nc -v -t -w 2 172.31.23.218 30812\n+ echo hostName\nConnection to 172.31.23.218 30812 port [tcp/*] succeeded!\n"
  Nov  4 12:35:48.689: INFO: stdout: "nodeport-test-vqvcq"
  Nov  4 12:35:48.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9101" for this suite. @ 11/04/23 12:35:48.692
• [9.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 11/04/23 12:35:48.697
  Nov  4 12:35:48.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename lease-test @ 11/04/23 12:35:48.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:48.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:48.716
  Nov  4 12:35:48.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9006" for this suite. @ 11/04/23 12:35:48.766
• [0.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 11/04/23 12:35:48.77
  Nov  4 12:35:48.770: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 12:35:48.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:48.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:48.789
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1382.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1382.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/04/23 12:35:48.791
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1382.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1382.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/04/23 12:35:48.791
  STEP: creating a pod to probe /etc/hosts @ 11/04/23 12:35:48.791
  STEP: submitting the pod to kubernetes @ 11/04/23 12:35:48.791
  STEP: retrieving the pod @ 11/04/23 12:35:50.805
  STEP: looking for the results for each expected name from probers @ 11/04/23 12:35:50.809
  Nov  4 12:35:50.823: INFO: DNS probes using dns-1382/dns-test-c5111d77-6973-4ec0-9c6b-eacbf36fac86 succeeded

  Nov  4 12:35:50.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 12:35:50.826
  STEP: Destroying namespace "dns-1382" for this suite. @ 11/04/23 12:35:50.836
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/04/23 12:35:50.843
  Nov  4 12:35:50.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename subpath @ 11/04/23 12:35:50.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:35:50.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:35:50.862
  STEP: Setting up data @ 11/04/23 12:35:50.864
  STEP: Creating pod pod-subpath-test-projected-mf8j @ 11/04/23 12:35:50.876
  STEP: Creating a pod to test atomic-volume-subpath @ 11/04/23 12:35:50.876
  STEP: Saw pod success @ 11/04/23 12:36:12.933
  Nov  4 12:36:12.936: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-subpath-test-projected-mf8j container test-container-subpath-projected-mf8j: <nil>
  STEP: delete the pod @ 11/04/23 12:36:12.942
  STEP: Deleting pod pod-subpath-test-projected-mf8j @ 11/04/23 12:36:12.956
  Nov  4 12:36:12.956: INFO: Deleting pod "pod-subpath-test-projected-mf8j" in namespace "subpath-97"
  Nov  4 12:36:12.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-97" for this suite. @ 11/04/23 12:36:12.963
• [22.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 11/04/23 12:36:12.97
  Nov  4 12:36:12.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 12:36:12.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:36:12.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:36:12.99
  STEP: Creating pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847 @ 11/04/23 12:36:12.992
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 12:36:15.005
  Nov  4 12:36:15.008: INFO: Initial restart count of pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 is 0
  Nov  4 12:36:15.011: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:17.015: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:19.019: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:21.022: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:23.026: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:25.030: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:27.033: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:29.037: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:31.040: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:33.043: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:35.048: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:37.052: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:39.056: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:41.061: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:43.064: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:45.069: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:47.073: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:49.077: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:51.082: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:53.086: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:55.091: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:57.096: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:36:59.100: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:01.105: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:03.109: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:05.112: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:07.116: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:09.120: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:11.124: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:13.127: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:15.131: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:17.136: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:19.139: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:21.144: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:23.148: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:25.152: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:27.156: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:29.160: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:31.164: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:33.169: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:35.172: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:37.177: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:39.180: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:41.186: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:43.189: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:45.195: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:47.198: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:49.202: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:51.205: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:53.209: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:55.214: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:57.218: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:37:59.223: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:01.227: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:03.232: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:05.237: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:07.243: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:09.247: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:11.251: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:13.255: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:15.258: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:17.262: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:19.266: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:21.269: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:23.273: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:25.277: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:27.280: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:29.284: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:31.289: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:33.292: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:35.297: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:37.300: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:39.305: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:41.308: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:43.313: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:45.316: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:47.319: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:49.322: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:51.325: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:53.328: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:55.333: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:57.336: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:38:59.341: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:01.346: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:03.348: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:05.352: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:07.356: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:09.360: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:11.364: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:13.368: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:15.372: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:17.377: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:19.380: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:21.384: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:23.388: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:25.392: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:27.396: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:29.400: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:31.404: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:33.408: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:35.412: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:37.415: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:39.418: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:41.421: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:43.424: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:45.429: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:47.434: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:49.438: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:51.441: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:53.446: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:55.449: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:57.453: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:39:59.456: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:01.465: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:03.468: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:05.472: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:07.476: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:09.480: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:11.484: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:13.487: INFO: Get pod busybox-5091f12b-b74f-4463-bc5b-521e86984f94 in namespace container-probe-6847
  Nov  4 12:40:15.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 12:40:15.492
  STEP: Destroying namespace "container-probe-6847" for this suite. @ 11/04/23 12:40:15.504
• [242.545 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 11/04/23 12:40:15.516
  Nov  4 12:40:15.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 12:40:15.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:40:15.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:40:15.535
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:40:15.537
  STEP: Saw pod success @ 11/04/23 12:40:19.56
  Nov  4 12:40:19.562: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-1a4f1e4a-e994-480e-8204-f525c1758049 container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:40:19.577
  Nov  4 12:40:19.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8643" for this suite. @ 11/04/23 12:40:19.593
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 11/04/23 12:40:19.6
  Nov  4 12:40:19.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:40:19.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:40:19.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:40:19.618
  STEP: Counting existing ResourceQuota @ 11/04/23 12:40:19.62
  STEP: Creating a ResourceQuota @ 11/04/23 12:40:24.624
  STEP: Ensuring resource quota status is calculated @ 11/04/23 12:40:24.627
  Nov  4 12:40:26.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8421" for this suite. @ 11/04/23 12:40:26.635
• [7.041 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 11/04/23 12:40:26.642
  Nov  4 12:40:26.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svcaccounts @ 11/04/23 12:40:26.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:40:26.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:40:26.661
  STEP: Creating ServiceAccount "e2e-sa-wwdt2"  @ 11/04/23 12:40:26.663
  Nov  4 12:40:26.667: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-wwdt2"  @ 11/04/23 12:40:26.667
  Nov  4 12:40:26.682: INFO: AutomountServiceAccountToken: true
  Nov  4 12:40:26.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3514" for this suite. @ 11/04/23 12:40:26.685
• [0.048 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 11/04/23 12:40:26.691
  Nov  4 12:40:26.691: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename endpointslice @ 11/04/23 12:40:26.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:40:26.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:40:26.711
  Nov  4 12:40:26.719: INFO: Endpoints addresses: [172.31.41.121 172.31.81.164] , ports: [6443]
  Nov  4 12:40:26.719: INFO: EndpointSlices addresses: [172.31.41.121 172.31.81.164] , ports: [6443]
  Nov  4 12:40:26.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4628" for this suite. @ 11/04/23 12:40:26.723
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 11/04/23 12:40:26.73
  Nov  4 12:40:26.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 12:40:26.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:40:26.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:40:26.746
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:40:26.748
  STEP: Saw pod success @ 11/04/23 12:40:30.768
  Nov  4 12:40:30.771: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-629bc7aa-b112-48e6-b1f9-fe5c2739289f container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:40:30.777
  Nov  4 12:40:30.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5551" for this suite. @ 11/04/23 12:40:30.791
• [4.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 11/04/23 12:40:30.796
  Nov  4 12:40:30.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 12:40:30.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:40:30.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:40:30.815
  STEP: Creating pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262 @ 11/04/23 12:40:30.817
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 12:40:32.833
  Nov  4 12:40:32.836: INFO: Initial restart count of pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 is 0
  Nov  4 12:40:32.839: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:34.842: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:36.846: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:38.849: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:40.854: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:42.858: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:44.862: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:46.866: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:48.869: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:50.872: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:52.876: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:54.881: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:56.885: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:40:58.889: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:00.894: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:02.896: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:04.900: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:06.904: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:08.907: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:10.910: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:12.914: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:14.918: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:16.923: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:18.926: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:20.932: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:22.937: INFO: Get pod busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 in namespace container-probe-9262
  Nov  4 12:41:22.937: INFO: Restart count of pod container-probe-9262/busybox-9ee8600f-b438-4f33-b34b-04f1ad8170d8 is now 1 (50.100287547s elapsed)
  Nov  4 12:41:22.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 12:41:22.94
  STEP: Destroying namespace "container-probe-9262" for this suite. @ 11/04/23 12:41:22.953
• [52.161 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/04/23 12:41:22.957
  Nov  4 12:41:22.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename cronjob @ 11/04/23 12:41:22.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:41:22.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:41:22.979
  STEP: Creating a ForbidConcurrent cronjob @ 11/04/23 12:41:22.981
  STEP: Ensuring a job is scheduled @ 11/04/23 12:41:22.986
  STEP: Ensuring exactly one is scheduled @ 11/04/23 12:42:00.99
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/04/23 12:42:00.993
  STEP: Ensuring no more jobs are scheduled @ 11/04/23 12:42:00.995
  STEP: Removing cronjob @ 11/04/23 12:47:01.003
  Nov  4 12:47:01.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1499" for this suite. @ 11/04/23 12:47:01.011
• [338.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 11/04/23 12:47:01.018
  Nov  4 12:47:01.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:47:01.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:01.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:01.05
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:47:01.052
  STEP: Saw pod success @ 11/04/23 12:47:05.069
  Nov  4 12:47:05.073: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-85eea6e0-4e1f-4669-b57f-911970b4f85b container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:47:05.089
  Nov  4 12:47:05.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4809" for this suite. @ 11/04/23 12:47:05.103
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 11/04/23 12:47:05.115
  Nov  4 12:47:05.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:47:05.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:05.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:05.136
  STEP: creating a replication controller @ 11/04/23 12:47:05.139
  Nov  4 12:47:05.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 create -f -'
  Nov  4 12:47:05.430: INFO: stderr: ""
  Nov  4 12:47:05.430: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/04/23 12:47:05.43
  Nov  4 12:47:05.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov  4 12:47:05.499: INFO: stderr: ""
  Nov  4 12:47:05.499: INFO: stdout: "update-demo-nautilus-qcpzk update-demo-nautilus-tx8g7 "
  Nov  4 12:47:05.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods update-demo-nautilus-qcpzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 12:47:05.559: INFO: stderr: ""
  Nov  4 12:47:05.559: INFO: stdout: ""
  Nov  4 12:47:05.559: INFO: update-demo-nautilus-qcpzk is created but not running
  Nov  4 12:47:10.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov  4 12:47:10.612: INFO: stderr: ""
  Nov  4 12:47:10.612: INFO: stdout: "update-demo-nautilus-qcpzk update-demo-nautilus-tx8g7 "
  Nov  4 12:47:10.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods update-demo-nautilus-qcpzk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 12:47:10.662: INFO: stderr: ""
  Nov  4 12:47:10.662: INFO: stdout: "true"
  Nov  4 12:47:10.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods update-demo-nautilus-qcpzk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov  4 12:47:10.711: INFO: stderr: ""
  Nov  4 12:47:10.711: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov  4 12:47:10.711: INFO: validating pod update-demo-nautilus-qcpzk
  Nov  4 12:47:10.716: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov  4 12:47:10.716: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov  4 12:47:10.716: INFO: update-demo-nautilus-qcpzk is verified up and running
  Nov  4 12:47:10.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods update-demo-nautilus-tx8g7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 12:47:10.765: INFO: stderr: ""
  Nov  4 12:47:10.765: INFO: stdout: "true"
  Nov  4 12:47:10.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods update-demo-nautilus-tx8g7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov  4 12:47:10.816: INFO: stderr: ""
  Nov  4 12:47:10.816: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov  4 12:47:10.816: INFO: validating pod update-demo-nautilus-tx8g7
  Nov  4 12:47:10.820: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov  4 12:47:10.820: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov  4 12:47:10.820: INFO: update-demo-nautilus-tx8g7 is verified up and running
  STEP: using delete to clean up resources @ 11/04/23 12:47:10.821
  Nov  4 12:47:10.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 delete --grace-period=0 --force -f -'
  Nov  4 12:47:10.872: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 12:47:10.872: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov  4 12:47:10.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get rc,svc -l name=update-demo --no-headers'
  Nov  4 12:47:10.944: INFO: stderr: "No resources found in kubectl-4654 namespace.\n"
  Nov  4 12:47:10.944: INFO: stdout: ""
  Nov  4 12:47:10.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-4654 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov  4 12:47:10.995: INFO: stderr: ""
  Nov  4 12:47:10.995: INFO: stdout: ""
  Nov  4 12:47:10.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4654" for this suite. @ 11/04/23 12:47:10.998
• [5.889 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 11/04/23 12:47:11.004
  Nov  4 12:47:11.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 12:47:11.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:11.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:11.023
  STEP: Creating secret with name secret-test-cc6ac5fb-49b3-4c27-bba8-009e664b5a99 @ 11/04/23 12:47:11.025
  STEP: Creating a pod to test consume secrets @ 11/04/23 12:47:11.028
  STEP: Saw pod success @ 11/04/23 12:47:15.053
  Nov  4 12:47:15.055: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-24598b9d-930c-42c7-870d-b3f26fde8265 container secret-env-test: <nil>
  STEP: delete the pod @ 11/04/23 12:47:15.062
  Nov  4 12:47:15.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1939" for this suite. @ 11/04/23 12:47:15.078
• [4.079 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 11/04/23 12:47:15.084
  Nov  4 12:47:15.084: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svcaccounts @ 11/04/23 12:47:15.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:15.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:15.102
  STEP: Creating a pod to test service account token:  @ 11/04/23 12:47:15.104
  STEP: Saw pod success @ 11/04/23 12:47:19.122
  Nov  4 12:47:19.125: INFO: Trying to get logs from node ip-172-31-44-230 pod test-pod-234e404a-0c0d-463d-9ed6-bb7242c59cf3 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 12:47:19.134
  Nov  4 12:47:19.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5465" for this suite. @ 11/04/23 12:47:19.149
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 11/04/23 12:47:19.158
  Nov  4 12:47:19.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:47:19.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:19.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:19.177
  STEP: Setting up server cert @ 11/04/23 12:47:19.198
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:47:19.602
  STEP: Deploying the webhook pod @ 11/04/23 12:47:19.608
  STEP: Wait for the deployment to be ready @ 11/04/23 12:47:19.619
  Nov  4 12:47:19.625: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/04/23 12:47:21.634
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:47:21.643
  Nov  4 12:47:22.644: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/04/23 12:47:22.652
  STEP: create a namespace for the webhook @ 11/04/23 12:47:22.664
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/04/23 12:47:22.678
  Nov  4 12:47:22.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6796" for this suite. @ 11/04/23 12:47:22.764
  STEP: Destroying namespace "webhook-markers-9830" for this suite. @ 11/04/23 12:47:22.771
  STEP: Destroying namespace "fail-closed-namespace-8779" for this suite. @ 11/04/23 12:47:22.778
• [3.626 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 11/04/23 12:47:22.784
  Nov  4 12:47:22.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:47:22.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:22.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:22.8
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 12:47:22.802
  STEP: Saw pod success @ 11/04/23 12:47:26.82
  Nov  4 12:47:26.823: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-3af1a583-524e-45a2-99c8-2219dc8e9d83 container client-container: <nil>
  STEP: delete the pod @ 11/04/23 12:47:26.829
  Nov  4 12:47:26.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1088" for this suite. @ 11/04/23 12:47:26.847
• [4.069 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 11/04/23 12:47:26.853
  Nov  4 12:47:26.853: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:47:26.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:26.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:26.874
  STEP: Setting up server cert @ 11/04/23 12:47:26.901
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:47:27.659
  STEP: Deploying the webhook pod @ 11/04/23 12:47:27.663
  STEP: Wait for the deployment to be ready @ 11/04/23 12:47:27.674
  Nov  4 12:47:27.680: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/04/23 12:47:29.698
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:47:29.709
  Nov  4 12:47:30.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/04/23 12:47:30.774
  STEP: Creating a configMap that should be mutated @ 11/04/23 12:47:30.784
  STEP: Deleting the collection of validation webhooks @ 11/04/23 12:47:30.811
  STEP: Creating a configMap that should not be mutated @ 11/04/23 12:47:30.858
  Nov  4 12:47:30.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2544" for this suite. @ 11/04/23 12:47:30.905
  STEP: Destroying namespace "webhook-markers-868" for this suite. @ 11/04/23 12:47:30.915
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 11/04/23 12:47:30.924
  Nov  4 12:47:30.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 12:47:30.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:30.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:30.942
  Nov  4 12:47:30.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/04/23 12:47:32.208
  Nov  4 12:47:32.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-140 --namespace=crd-publish-openapi-140 create -f -'
  Nov  4 12:47:32.563: INFO: stderr: ""
  Nov  4 12:47:32.563: INFO: stdout: "e2e-test-crd-publish-openapi-3111-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov  4 12:47:32.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-140 --namespace=crd-publish-openapi-140 delete e2e-test-crd-publish-openapi-3111-crds test-cr'
  Nov  4 12:47:32.633: INFO: stderr: ""
  Nov  4 12:47:32.633: INFO: stdout: "e2e-test-crd-publish-openapi-3111-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Nov  4 12:47:32.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-140 --namespace=crd-publish-openapi-140 apply -f -'
  Nov  4 12:47:32.963: INFO: stderr: ""
  Nov  4 12:47:32.963: INFO: stdout: "e2e-test-crd-publish-openapi-3111-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov  4 12:47:32.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-140 --namespace=crd-publish-openapi-140 delete e2e-test-crd-publish-openapi-3111-crds test-cr'
  Nov  4 12:47:33.021: INFO: stderr: ""
  Nov  4 12:47:33.022: INFO: stdout: "e2e-test-crd-publish-openapi-3111-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/04/23 12:47:33.022
  Nov  4 12:47:33.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-140 explain e2e-test-crd-publish-openapi-3111-crds'
  Nov  4 12:47:33.126: INFO: stderr: ""
  Nov  4 12:47:33.126: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3111-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Nov  4 12:47:34.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-140" for this suite. @ 11/04/23 12:47:34.383
• [3.467 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/04/23 12:47:34.391
  Nov  4 12:47:34.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-runtime @ 11/04/23 12:47:34.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:34.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:34.405
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/04/23 12:47:34.416
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/04/23 12:47:49.478
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/04/23 12:47:49.481
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/04/23 12:47:49.486
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 11/04/23 12:47:49.486
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/04/23 12:47:49.504
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/04/23 12:47:52.517
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/04/23 12:47:53.523
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/04/23 12:47:53.529
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 11/04/23 12:47:53.529
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/04/23 12:47:53.546
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/04/23 12:47:54.553
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/04/23 12:47:56.562
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/04/23 12:47:56.569
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 11/04/23 12:47:56.569
  Nov  4 12:47:56.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5055" for this suite. @ 11/04/23 12:47:56.592
• [22.209 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/04/23 12:47:56.6
  Nov  4 12:47:56.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:47:56.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:47:56.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:47:56.633
  STEP: Creating configMap with name configmap-projected-all-test-volume-ed26999d-d8e4-4451-975e-2c92606caccd @ 11/04/23 12:47:56.635
  STEP: Creating secret with name secret-projected-all-test-volume-a39409a7-07a1-426a-a140-f0dd4e0d4b19 @ 11/04/23 12:47:56.642
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/04/23 12:47:56.645
  STEP: Saw pod success @ 11/04/23 12:48:00.664
  Nov  4 12:48:00.667: INFO: Trying to get logs from node ip-172-31-44-230 pod projected-volume-b1dd0cb6-3cd4-46d5-b391-7d7dca7d1c44 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:48:00.672
  Nov  4 12:48:00.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4514" for this suite. @ 11/04/23 12:48:00.688
• [4.096 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/04/23 12:48:00.697
  Nov  4 12:48:00.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 12:48:00.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:00.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:00.715
  STEP: Create set of pods @ 11/04/23 12:48:00.717
  Nov  4 12:48:00.723: INFO: created test-pod-1
  Nov  4 12:48:00.729: INFO: created test-pod-2
  Nov  4 12:48:00.738: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/04/23 12:48:00.738
  STEP: waiting for all pods to be deleted @ 11/04/23 12:48:02.781
  Nov  4 12:48:02.783: INFO: Pod quantity 3 is different from expected quantity 0
  Nov  4 12:48:03.786: INFO: Pod quantity 3 is different from expected quantity 0
  Nov  4 12:48:04.787: INFO: Pod quantity 1 is different from expected quantity 0
  Nov  4 12:48:05.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-605" for this suite. @ 11/04/23 12:48:05.789
• [5.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 11/04/23 12:48:05.794
  Nov  4 12:48:05.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename daemonsets @ 11/04/23 12:48:05.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:05.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:05.818
  STEP: Creating simple DaemonSet "daemon-set" @ 11/04/23 12:48:05.836
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/04/23 12:48:05.841
  Nov  4 12:48:05.845: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:48:05.845: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:48:05.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:48:05.849: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  Nov  4 12:48:06.852: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:48:06.852: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:48:06.856: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 12:48:06.856: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  Nov  4 12:48:07.853: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:48:07.853: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 12:48:07.855: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 12:48:07.855: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/04/23 12:48:07.859
  STEP: DeleteCollection of the DaemonSets @ 11/04/23 12:48:07.862
  STEP: Verify that ReplicaSets have been deleted @ 11/04/23 12:48:07.87
  Nov  4 12:48:07.877: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21797"},"items":null}

  Nov  4 12:48:07.880: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21797"},"items":[{"metadata":{"name":"daemon-set-8psj7","generateName":"daemon-set-","namespace":"daemonsets-868","uid":"885937ce-f113-4957-8ae4-1b717191030d","resourceVersion":"21795","creationTimestamp":"2023-11-04T12:48:05Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b51aed4a-5169-481f-af74-c8d4cf39fdc8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-04T12:48:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b51aed4a-5169-481f-af74-c8d4cf39fdc8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-04T12:48:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.193.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rl9h7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rl9h7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-75-164","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-75-164"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:07Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:07Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:05Z"}],"hostIP":"172.31.75.164","podIP":"192.168.193.117","podIPs":[{"ip":"192.168.193.117"}],"startTime":"2023-11-04T12:48:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-04T12:48:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://54a957edfd65f9ceed9e551eb832208c23cff0e9304501318d990f132fae69aa","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fh8g8","generateName":"daemon-set-","namespace":"daemonsets-868","uid":"ba9e0395-8f19-46f6-be01-ef00ad8559dc","resourceVersion":"21792","creationTimestamp":"2023-11-04T12:48:05Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b51aed4a-5169-481f-af74-c8d4cf39fdc8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-04T12:48:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b51aed4a-5169-481f-af74-c8d4cf39fdc8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-04T12:48:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.55.98\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p6mtj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p6mtj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-23-218","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-23-218"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:06Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:06Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:05Z"}],"hostIP":"172.31.23.218","podIP":"192.168.55.98","podIPs":[{"ip":"192.168.55.98"}],"startTime":"2023-11-04T12:48:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-04T12:48:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://6c25700e8eecc21e92a02aba20622d78d1c03dd2caa3b95944dcc6b52c779510","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qgj4q","generateName":"daemon-set-","namespace":"daemonsets-868","uid":"2fcb8204-dfc3-48bb-ac1f-497dca56a3e5","resourceVersion":"21790","creationTimestamp":"2023-11-04T12:48:05Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b51aed4a-5169-481f-af74-c8d4cf39fdc8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-04T12:48:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b51aed4a-5169-481f-af74-c8d4cf39fdc8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-04T12:48:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.46.90\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-84st8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-84st8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-44-230","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-44-230"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:06Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:06Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-04T12:48:05Z"}],"hostIP":"172.31.44.230","podIP":"192.168.46.90","podIPs":[{"ip":"192.168.46.90"}],"startTime":"2023-11-04T12:48:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-04T12:48:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f190e88bbc629165182604febc2862b0e441650609288a21f63971f772a6cfdd","started":true}],"qosClass":"BestEffort"}}]}

  Nov  4 12:48:07.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-868" for this suite. @ 11/04/23 12:48:07.9
• [2.112 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 11/04/23 12:48:07.907
  Nov  4 12:48:07.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pod-network-test @ 11/04/23 12:48:07.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:07.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:07.971
  STEP: Performing setup for networking test in namespace pod-network-test-2865 @ 11/04/23 12:48:07.973
  STEP: creating a selector @ 11/04/23 12:48:07.973
  STEP: Creating the service pods in kubernetes @ 11/04/23 12:48:07.973
  Nov  4 12:48:07.974: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/04/23 12:48:20.039
  Nov  4 12:48:22.053: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov  4 12:48:22.053: INFO: Breadth first check of 192.168.55.76 on host 172.31.23.218...
  Nov  4 12:48:22.056: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.46.118:9080/dial?request=hostname&protocol=udp&host=192.168.55.76&port=8081&tries=1'] Namespace:pod-network-test-2865 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:48:22.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:48:22.056: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:48:22.056: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2865/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.46.118%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.55.76%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov  4 12:48:22.135: INFO: Waiting for responses: map[]
  Nov  4 12:48:22.135: INFO: reached 192.168.55.76 after 0/1 tries
  Nov  4 12:48:22.135: INFO: Breadth first check of 192.168.46.71 on host 172.31.44.230...
  Nov  4 12:48:22.139: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.46.118:9080/dial?request=hostname&protocol=udp&host=192.168.46.71&port=8081&tries=1'] Namespace:pod-network-test-2865 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:48:22.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:48:22.140: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:48:22.140: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2865/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.46.118%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.46.71%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov  4 12:48:22.206: INFO: Waiting for responses: map[]
  Nov  4 12:48:22.206: INFO: reached 192.168.46.71 after 0/1 tries
  Nov  4 12:48:22.206: INFO: Breadth first check of 192.168.193.120 on host 172.31.75.164...
  Nov  4 12:48:22.208: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.46.118:9080/dial?request=hostname&protocol=udp&host=192.168.193.120&port=8081&tries=1'] Namespace:pod-network-test-2865 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 12:48:22.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:48:22.209: INFO: ExecWithOptions: Clientset creation
  Nov  4 12:48:22.209: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2865/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.46.118%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.193.120%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov  4 12:48:22.278: INFO: Waiting for responses: map[]
  Nov  4 12:48:22.278: INFO: reached 192.168.193.120 after 0/1 tries
  Nov  4 12:48:22.278: INFO: Going to retry 0 out of 3 pods....
  Nov  4 12:48:22.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2865" for this suite. @ 11/04/23 12:48:22.282
• [14.380 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 11/04/23 12:48:22.288
  Nov  4 12:48:22.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename podtemplate @ 11/04/23 12:48:22.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:22.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:22.308
  STEP: Create set of pod templates @ 11/04/23 12:48:22.31
  Nov  4 12:48:22.315: INFO: created test-podtemplate-1
  Nov  4 12:48:22.318: INFO: created test-podtemplate-2
  Nov  4 12:48:22.324: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/04/23 12:48:22.324
  STEP: delete collection of pod templates @ 11/04/23 12:48:22.327
  Nov  4 12:48:22.327: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/04/23 12:48:22.341
  Nov  4 12:48:22.341: INFO: requesting list of pod templates to confirm quantity
  Nov  4 12:48:22.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3435" for this suite. @ 11/04/23 12:48:22.347
• [0.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 11/04/23 12:48:22.353
  Nov  4 12:48:22.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 12:48:22.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:22.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:22.373
  Nov  4 12:48:22.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5870" for this suite. @ 11/04/23 12:48:22.414
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 11/04/23 12:48:22.421
  Nov  4 12:48:22.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename field-validation @ 11/04/23 12:48:22.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:22.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:22.443
  Nov  4 12:48:22.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  W1104 12:48:24.991604      19 warnings.go:70] unknown field "alpha"
  W1104 12:48:24.991633      19 warnings.go:70] unknown field "beta"
  W1104 12:48:24.991638      19 warnings.go:70] unknown field "delta"
  W1104 12:48:24.991642      19 warnings.go:70] unknown field "epsilon"
  W1104 12:48:24.991645      19 warnings.go:70] unknown field "gamma"
  Nov  4 12:48:25.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6963" for this suite. @ 11/04/23 12:48:25.534
• [3.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 11/04/23 12:48:25.543
  Nov  4 12:48:25.543: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:48:25.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:25.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:25.562
  STEP: Creating resourceQuota "e2e-rq-status-z5hph" @ 11/04/23 12:48:25.569
  Nov  4 12:48:25.574: INFO: Resource quota "e2e-rq-status-z5hph" reports spec: hard cpu limit of 500m
  Nov  4 12:48:25.574: INFO: Resource quota "e2e-rq-status-z5hph" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-z5hph" /status @ 11/04/23 12:48:25.574
  STEP: Confirm /status for "e2e-rq-status-z5hph" resourceQuota via watch @ 11/04/23 12:48:25.582
  Nov  4 12:48:25.583: INFO: observed resourceQuota "e2e-rq-status-z5hph" in namespace "resourcequota-1495" with hard status: v1.ResourceList(nil)
  Nov  4 12:48:25.583: INFO: Found resourceQuota "e2e-rq-status-z5hph" in namespace "resourcequota-1495" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov  4 12:48:25.583: INFO: ResourceQuota "e2e-rq-status-z5hph" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/04/23 12:48:25.585
  Nov  4 12:48:25.593: INFO: Resource quota "e2e-rq-status-z5hph" reports spec: hard cpu limit of 1
  Nov  4 12:48:25.593: INFO: Resource quota "e2e-rq-status-z5hph" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-z5hph" /status @ 11/04/23 12:48:25.593
  STEP: Confirm /status for "e2e-rq-status-z5hph" resourceQuota via watch @ 11/04/23 12:48:25.597
  Nov  4 12:48:25.599: INFO: observed resourceQuota "e2e-rq-status-z5hph" in namespace "resourcequota-1495" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov  4 12:48:25.599: INFO: Found resourceQuota "e2e-rq-status-z5hph" in namespace "resourcequota-1495" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Nov  4 12:48:25.599: INFO: ResourceQuota "e2e-rq-status-z5hph" /status was patched
  STEP: Get "e2e-rq-status-z5hph" /status @ 11/04/23 12:48:25.599
  Nov  4 12:48:25.601: INFO: Resourcequota "e2e-rq-status-z5hph" reports status: hard cpu of 1
  Nov  4 12:48:25.601: INFO: Resourcequota "e2e-rq-status-z5hph" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-z5hph" /status before checking Spec is unchanged @ 11/04/23 12:48:25.604
  Nov  4 12:48:25.608: INFO: Resourcequota "e2e-rq-status-z5hph" reports status: hard cpu of 2
  Nov  4 12:48:25.608: INFO: Resourcequota "e2e-rq-status-z5hph" reports status: hard memory of 2Gi
  Nov  4 12:48:25.610: INFO: Found resourceQuota "e2e-rq-status-z5hph" in namespace "resourcequota-1495" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Nov  4 12:48:55.620: INFO: ResourceQuota "e2e-rq-status-z5hph" Spec was unchanged and /status reset
  Nov  4 12:48:55.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1495" for this suite. @ 11/04/23 12:48:55.625
• [30.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 11/04/23 12:48:55.632
  Nov  4 12:48:55.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl-logs @ 11/04/23 12:48:55.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:48:55.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:48:55.655
  STEP: creating an pod @ 11/04/23 12:48:55.659
  Nov  4 12:48:55.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Nov  4 12:48:55.715: INFO: stderr: ""
  Nov  4 12:48:55.716: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/04/23 12:48:55.716
  Nov  4 12:48:55.716: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Nov  4 12:48:57.724: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/04/23 12:48:57.724
  Nov  4 12:48:57.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 logs logs-generator logs-generator'
  Nov  4 12:48:57.785: INFO: stderr: ""
  Nov  4 12:48:57.785: INFO: stdout: "I1104 12:48:56.380995       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/rwzs 590\nI1104 12:48:56.581101       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/tjz 496\nI1104 12:48:56.781633       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/tbv4 380\nI1104 12:48:56.981910       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/44x 214\nI1104 12:48:57.181139       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/m7nw 526\nI1104 12:48:57.381432       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/xdcj 511\nI1104 12:48:57.581616       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/lgpt 562\nI1104 12:48:57.781909       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fkzj 419\n"
  STEP: limiting log lines @ 11/04/23 12:48:57.785
  Nov  4 12:48:57.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 logs logs-generator logs-generator --tail=1'
  Nov  4 12:48:57.841: INFO: stderr: ""
  Nov  4 12:48:57.841: INFO: stdout: "I1104 12:48:57.781909       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fkzj 419\n"
  Nov  4 12:48:57.841: INFO: got output "I1104 12:48:57.781909       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fkzj 419\n"
  STEP: limiting log bytes @ 11/04/23 12:48:57.841
  Nov  4 12:48:57.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 logs logs-generator logs-generator --limit-bytes=1'
  Nov  4 12:48:57.896: INFO: stderr: ""
  Nov  4 12:48:57.896: INFO: stdout: "I"
  Nov  4 12:48:57.896: INFO: got output "I"
  STEP: exposing timestamps @ 11/04/23 12:48:57.896
  Nov  4 12:48:57.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 logs logs-generator logs-generator --tail=1 --timestamps'
  Nov  4 12:48:57.950: INFO: stderr: ""
  Nov  4 12:48:57.950: INFO: stdout: "2023-11-04T12:48:57.781989717Z I1104 12:48:57.781909       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fkzj 419\n"
  Nov  4 12:48:57.950: INFO: got output "2023-11-04T12:48:57.781989717Z I1104 12:48:57.781909       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fkzj 419\n"
  STEP: restricting to a time range @ 11/04/23 12:48:57.95
  Nov  4 12:49:00.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 logs logs-generator logs-generator --since=1s'
  Nov  4 12:49:00.506: INFO: stderr: ""
  Nov  4 12:49:00.506: INFO: stdout: "I1104 12:48:59.581372       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/wfd 377\nI1104 12:48:59.781662       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/hwp9 238\nI1104 12:48:59.981951       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/qqp 425\nI1104 12:49:00.181190       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/5cln 292\nI1104 12:49:00.381352       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/8dr8 340\n"
  Nov  4 12:49:00.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 logs logs-generator logs-generator --since=24h'
  Nov  4 12:49:00.561: INFO: stderr: ""
  Nov  4 12:49:00.561: INFO: stdout: "I1104 12:48:56.380995       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/rwzs 590\nI1104 12:48:56.581101       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/tjz 496\nI1104 12:48:56.781633       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/tbv4 380\nI1104 12:48:56.981910       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/44x 214\nI1104 12:48:57.181139       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/m7nw 526\nI1104 12:48:57.381432       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/xdcj 511\nI1104 12:48:57.581616       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/lgpt 562\nI1104 12:48:57.781909       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/fkzj 419\nI1104 12:48:57.981138       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/qzgn 361\nI1104 12:48:58.181429       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/sxn8 475\nI1104 12:48:58.381720       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/lrbc 297\nI1104 12:48:58.582008       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/gx4 545\nI1104 12:48:58.781299       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/7vd 249\nI1104 12:48:58.981585       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/flfs 450\nI1104 12:48:59.181876       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/f8jg 355\nI1104 12:48:59.381082       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/rnwc 578\nI1104 12:48:59.581372       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/wfd 377\nI1104 12:48:59.781662       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/hwp9 238\nI1104 12:48:59.981951       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/qqp 425\nI1104 12:49:00.181190       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/5cln 292\nI1104 12:49:00.381352       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/8dr8 340\n"
  Nov  4 12:49:00.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-logs-8300 delete pod logs-generator'
  Nov  4 12:49:01.028: INFO: stderr: ""
  Nov  4 12:49:01.028: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Nov  4 12:49:01.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-8300" for this suite. @ 11/04/23 12:49:01.031
• [5.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 11/04/23 12:49:01.037
  Nov  4 12:49:01.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:49:01.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:01.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:01.054
  STEP: creating service in namespace services-1882 @ 11/04/23 12:49:01.056
  STEP: creating service affinity-nodeport in namespace services-1882 @ 11/04/23 12:49:01.056
  STEP: creating replication controller affinity-nodeport in namespace services-1882 @ 11/04/23 12:49:01.068
  I1104 12:49:01.074738      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1882, replica count: 3
  I1104 12:49:04.126364      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 12:49:04.135: INFO: Creating new exec pod
  Nov  4 12:49:07.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-1882 exec execpod-affinitybnxj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Nov  4 12:49:07.272: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Nov  4 12:49:07.272: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:49:07.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-1882 exec execpod-affinitybnxj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.154 80'
  Nov  4 12:49:07.390: INFO: stderr: "+ nc -v -t -w 2 10.152.183.154 80\n+ echo hostName\nConnection to 10.152.183.154 80 port [tcp/http] succeeded!\n"
  Nov  4 12:49:07.390: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:49:07.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-1882 exec execpod-affinitybnxj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.44.230 30994'
  Nov  4 12:49:07.502: INFO: stderr: "+ nc -v -t -w 2 172.31.44.230 30994\n+ echo hostName\nConnection to 172.31.44.230 30994 port [tcp/*] succeeded!\n"
  Nov  4 12:49:07.502: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:49:07.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-1882 exec execpod-affinitybnxj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.218 30994'
  Nov  4 12:49:07.615: INFO: stderr: "+ nc -v -t -w 2 172.31.23.218 30994\n+ echo hostName\nConnection to 172.31.23.218 30994 port [tcp/*] succeeded!\n"
  Nov  4 12:49:07.615: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 12:49:07.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-1882 exec execpod-affinitybnxj2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.218:30994/ ; done'
  Nov  4 12:49:07.822: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30994/\n"
  Nov  4 12:49:07.822: INFO: stdout: "\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6\naffinity-nodeport-8hpc6"
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Received response from host: affinity-nodeport-8hpc6
  Nov  4 12:49:07.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 12:49:07.825: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1882, will wait for the garbage collector to delete the pods @ 11/04/23 12:49:07.834
  Nov  4 12:49:07.893: INFO: Deleting ReplicationController affinity-nodeport took: 6.065583ms
  Nov  4 12:49:07.994: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.070227ms
  STEP: Destroying namespace "services-1882" for this suite. @ 11/04/23 12:49:11.116
• [10.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 11/04/23 12:49:11.122
  Nov  4 12:49:11.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/04/23 12:49:11.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:11.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:11.142
  Nov  4 12:49:11.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:49:12.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2058" for this suite. @ 11/04/23 12:49:12.167
• [1.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 11/04/23 12:49:12.172
  Nov  4 12:49:12.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:49:12.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:12.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:12.194
  Nov  4 12:49:12.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6808" for this suite. @ 11/04/23 12:49:12.202
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 11/04/23 12:49:12.208
  Nov  4 12:49:12.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:49:12.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:12.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:12.228
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/04/23 12:49:12.23
  Nov  4 12:49:12.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-8444 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Nov  4 12:49:12.284: INFO: stderr: ""
  Nov  4 12:49:12.284: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/04/23 12:49:12.284
  Nov  4 12:49:12.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-8444 delete pods e2e-test-httpd-pod'
  Nov  4 12:49:14.059: INFO: stderr: ""
  Nov  4 12:49:14.059: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov  4 12:49:14.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8444" for this suite. @ 11/04/23 12:49:14.064
• [1.861 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 11/04/23 12:49:14.069
  Nov  4 12:49:14.069: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 12:49:14.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:14.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:14.088
  STEP: validating cluster-info @ 11/04/23 12:49:14.09
  Nov  4 12:49:14.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6985 cluster-info'
  Nov  4 12:49:14.144: INFO: stderr: ""
  Nov  4 12:49:14.144: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Nov  4 12:49:14.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6985" for this suite. @ 11/04/23 12:49:14.147
• [0.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/04/23 12:49:14.154
  Nov  4 12:49:14.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 12:49:14.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:14.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:14.173
  STEP: Creating projection with secret that has name projected-secret-test-9640d53c-2390-4471-9ec6-bf231a269353 @ 11/04/23 12:49:14.175
  STEP: Creating a pod to test consume secrets @ 11/04/23 12:49:14.179
  STEP: Saw pod success @ 11/04/23 12:49:18.197
  Nov  4 12:49:18.200: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-secrets-8a12f710-dd56-48d0-b93b-7f4eacbfba29 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 12:49:18.207
  Nov  4 12:49:18.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6432" for this suite. @ 11/04/23 12:49:18.228
• [4.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 11/04/23 12:49:18.234
  Nov  4 12:49:18.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:49:18.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:18.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:18.251
  STEP: Counting existing ResourceQuota @ 11/04/23 12:49:35.258
  STEP: Creating a ResourceQuota @ 11/04/23 12:49:40.261
  STEP: Ensuring resource quota status is calculated @ 11/04/23 12:49:40.266
  STEP: Creating a ConfigMap @ 11/04/23 12:49:42.27
  STEP: Ensuring resource quota status captures configMap creation @ 11/04/23 12:49:42.279
  STEP: Deleting a ConfigMap @ 11/04/23 12:49:44.284
  STEP: Ensuring resource quota status released usage @ 11/04/23 12:49:44.29
  Nov  4 12:49:46.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8064" for this suite. @ 11/04/23 12:49:46.299
• [28.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 11/04/23 12:49:46.307
  Nov  4 12:49:46.307: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 12:49:46.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:46.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:46.326
  STEP: creating an Endpoint @ 11/04/23 12:49:46.332
  STEP: waiting for available Endpoint @ 11/04/23 12:49:46.336
  STEP: listing all Endpoints @ 11/04/23 12:49:46.337
  STEP: updating the Endpoint @ 11/04/23 12:49:46.339
  STEP: fetching the Endpoint @ 11/04/23 12:49:46.346
  STEP: patching the Endpoint @ 11/04/23 12:49:46.348
  STEP: fetching the Endpoint @ 11/04/23 12:49:46.353
  STEP: deleting the Endpoint by Collection @ 11/04/23 12:49:46.357
  STEP: waiting for Endpoint deletion @ 11/04/23 12:49:46.364
  STEP: fetching the Endpoint @ 11/04/23 12:49:46.365
  Nov  4 12:49:46.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7007" for this suite. @ 11/04/23 12:49:46.37
• [0.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/04/23 12:49:46.376
  Nov  4 12:49:46.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename watch @ 11/04/23 12:49:46.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:49:46.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:49:46.394
  STEP: creating a watch on configmaps with label A @ 11/04/23 12:49:46.396
  STEP: creating a watch on configmaps with label B @ 11/04/23 12:49:46.397
  STEP: creating a watch on configmaps with label A or B @ 11/04/23 12:49:46.398
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/04/23 12:49:46.399
  Nov  4 12:49:46.403: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22563 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:49:46.403: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22563 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/04/23 12:49:46.404
  Nov  4 12:49:46.410: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22564 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:49:46.411: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22564 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/04/23 12:49:46.411
  Nov  4 12:49:46.419: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22565 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:49:46.419: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22565 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/04/23 12:49:46.419
  Nov  4 12:49:46.423: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22566 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:49:46.424: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3076  eaa53c1b-baa2-4a41-ae10-1b02d10c554e 22566 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/04/23 12:49:46.424
  Nov  4 12:49:46.428: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3076  2d50819a-a753-4141-815a-ba1c325279d5 22567 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:49:46.428: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3076  2d50819a-a753-4141-815a-ba1c325279d5 22567 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/04/23 12:49:56.432
  Nov  4 12:49:56.439: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3076  2d50819a-a753-4141-815a-ba1c325279d5 22600 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:49:56.439: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3076  2d50819a-a753-4141-815a-ba1c325279d5 22600 0 2023-11-04 12:49:46 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-04 12:49:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 12:50:06.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3076" for this suite. @ 11/04/23 12:50:06.444
• [20.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 11/04/23 12:50:06.45
  Nov  4 12:50:06.450: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 12:50:06.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:50:06.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:50:06.469
  STEP: Creating configMap with name configmap-test-volume-c9aa2c89-920c-4a2c-9e51-08b5134cc245 @ 11/04/23 12:50:06.471
  STEP: Creating a pod to test consume configMaps @ 11/04/23 12:50:06.475
  STEP: Saw pod success @ 11/04/23 12:50:10.491
  Nov  4 12:50:10.493: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-b00c01c4-f5cf-4783-a228-a13511eb6999 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 12:50:10.499
  Nov  4 12:50:10.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3215" for this suite. @ 11/04/23 12:50:10.514
• [4.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/04/23 12:50:10.519
  Nov  4 12:50:10.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-pred @ 11/04/23 12:50:10.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:50:10.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:50:10.537
  Nov  4 12:50:10.539: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov  4 12:50:10.546: INFO: Waiting for terminating namespaces to be deleted...
  Nov  4 12:50:10.548: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-218 before test
  Nov  4 12:50:10.552: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-q5bhb from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: nginx-ingress-controller-kubernetes-worker-45gdq from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: calico-node-ft4tq from kube-system started at 2023-11-04 11:55:46 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: coredns-59cfb5bf46-lztjc from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container coredns ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: kube-state-metrics-78c475f58b-qrr4j from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: metrics-server-v0.6.3-69d7fbfdf8-h454w from kube-system started at 2023-11-04 11:55:59 +0000 UTC (2 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container metrics-server ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: dashboard-metrics-scraper-5dd7cb5fc-sq444 from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: kubernetes-dashboard-7b899cb9d9-s867z from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-79s4x from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 12:50:10.552: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 12:50:10.552: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-44-230 before test
  Nov  4 12:50:10.556: INFO: nginx-ingress-controller-kubernetes-worker-7lhcf from ingress-nginx-kubernetes-worker started at 2023-11-04 12:17:30 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.556: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 12:50:10.556: INFO: calico-node-wsvp7 from kube-system started at 2023-11-04 11:55:50 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.556: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 12:50:10.556: INFO: sonobuoy from sonobuoy started at 2023-11-04 12:08:48 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.556: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov  4 12:50:10.556: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-t9qh4 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 12:50:10.556: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 12:50:10.556: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 12:50:10.556: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-75-164 before test
  Nov  4 12:50:10.562: INFO: nginx-ingress-controller-kubernetes-worker-sd86f from ingress-nginx-kubernetes-worker started at 2023-11-04 12:04:28 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.562: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 12:50:10.562: INFO: calico-node-pcwws from kube-system started at 2023-11-04 12:03:26 +0000 UTC (1 container statuses recorded)
  Nov  4 12:50:10.562: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 12:50:10.562: INFO: sonobuoy-e2e-job-62c1edfe32474614 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 12:50:10.562: INFO: 	Container e2e ready: true, restart count 0
  Nov  4 12:50:10.562: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 12:50:10.562: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-qzs89 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 12:50:10.562: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 12:50:10.562: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-23-218 @ 11/04/23 12:50:10.575
  STEP: verifying the node has the label node ip-172-31-44-230 @ 11/04/23 12:50:10.586
  STEP: verifying the node has the label node ip-172-31-75-164 @ 11/04/23 12:50:10.606
  Nov  4 12:50:10.616: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-q5bhb requesting resource cpu=10m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod nginx-ingress-controller-kubernetes-worker-45gdq requesting resource cpu=0m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod nginx-ingress-controller-kubernetes-worker-7lhcf requesting resource cpu=0m on Node ip-172-31-44-230
  Nov  4 12:50:10.616: INFO: Pod nginx-ingress-controller-kubernetes-worker-sd86f requesting resource cpu=0m on Node ip-172-31-75-164
  Nov  4 12:50:10.616: INFO: Pod calico-node-ft4tq requesting resource cpu=250m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod calico-node-pcwws requesting resource cpu=250m on Node ip-172-31-75-164
  Nov  4 12:50:10.616: INFO: Pod calico-node-wsvp7 requesting resource cpu=250m on Node ip-172-31-44-230
  Nov  4 12:50:10.616: INFO: Pod coredns-59cfb5bf46-lztjc requesting resource cpu=100m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod kube-state-metrics-78c475f58b-qrr4j requesting resource cpu=0m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-h454w requesting resource cpu=5m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-sq444 requesting resource cpu=0m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod kubernetes-dashboard-7b899cb9d9-s867z requesting resource cpu=0m on Node ip-172-31-23-218
  Nov  4 12:50:10.616: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-44-230
  Nov  4 12:50:10.616: INFO: Pod sonobuoy-e2e-job-62c1edfe32474614 requesting resource cpu=0m on Node ip-172-31-75-164
  Nov  4 12:50:10.616: INFO: Pod sonobuoy-systemd-logs-daemon-set-5275133b46c64358-79s4x requesting resource cpu=0m on Node ip-172-31-23-218
  Nov  4 12:50:10.617: INFO: Pod sonobuoy-systemd-logs-daemon-set-5275133b46c64358-qzs89 requesting resource cpu=0m on Node ip-172-31-75-164
  Nov  4 12:50:10.617: INFO: Pod sonobuoy-systemd-logs-daemon-set-5275133b46c64358-t9qh4 requesting resource cpu=0m on Node ip-172-31-44-230
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/04/23 12:50:10.617
  Nov  4 12:50:10.617: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-44-230
  Nov  4 12:50:10.627: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-75-164
  Nov  4 12:50:10.634: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-23-218
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/04/23 12:50:12.653
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-387d5f08-6081-4d9a-94b5-b948268116c4.17946c75559d5415], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8112/filler-pod-387d5f08-6081-4d9a-94b5-b948268116c4 to ip-172-31-44-230] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-387d5f08-6081-4d9a-94b5-b948268116c4.17946c757898e188], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-387d5f08-6081-4d9a-94b5-b948268116c4.17946c7579ceb828], Reason = [Created], Message = [Created container filler-pod-387d5f08-6081-4d9a-94b5-b948268116c4] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-387d5f08-6081-4d9a-94b5-b948268116c4.17946c757f89d768], Reason = [Started], Message = [Started container filler-pod-387d5f08-6081-4d9a-94b5-b948268116c4] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52233cce-3c85-49d6-9942-bf922574a67f.17946c7556853279], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8112/filler-pod-52233cce-3c85-49d6-9942-bf922574a67f to ip-172-31-23-218] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52233cce-3c85-49d6-9942-bf922574a67f.17946c7578eb64e9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52233cce-3c85-49d6-9942-bf922574a67f.17946c7579d0a0a0], Reason = [Created], Message = [Created container filler-pod-52233cce-3c85-49d6-9942-bf922574a67f] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52233cce-3c85-49d6-9942-bf922574a67f.17946c757f2daa60], Reason = [Started], Message = [Started container filler-pod-52233cce-3c85-49d6-9942-bf922574a67f] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d5abd2f-0a66-4e5b-8c05-58573ff3993e.17946c755672dfa6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8112/filler-pod-9d5abd2f-0a66-4e5b-8c05-58573ff3993e to ip-172-31-75-164] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d5abd2f-0a66-4e5b-8c05-58573ff3993e.17946c75793f4bad], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d5abd2f-0a66-4e5b-8c05-58573ff3993e.17946c757a25c056], Reason = [Created], Message = [Created container filler-pod-9d5abd2f-0a66-4e5b-8c05-58573ff3993e] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d5abd2f-0a66-4e5b-8c05-58573ff3993e.17946c75800a2968], Reason = [Started], Message = [Started container filler-pod-9d5abd2f-0a66-4e5b-8c05-58573ff3993e] @ 11/04/23 12:50:12.657
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17946c75ced923aa], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 11/04/23 12:50:12.671
  STEP: removing the label node off the node ip-172-31-23-218 @ 11/04/23 12:50:13.666
  STEP: verifying the node doesn't have the label node @ 11/04/23 12:50:13.676
  STEP: removing the label node off the node ip-172-31-44-230 @ 11/04/23 12:50:13.678
  STEP: verifying the node doesn't have the label node @ 11/04/23 12:50:13.687
  STEP: removing the label node off the node ip-172-31-75-164 @ 11/04/23 12:50:13.69
  STEP: verifying the node doesn't have the label node @ 11/04/23 12:50:13.701
  Nov  4 12:50:13.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8112" for this suite. @ 11/04/23 12:50:13.708
• [3.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 11/04/23 12:50:13.715
  Nov  4 12:50:13.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 12:50:13.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:50:13.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:50:13.734
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/04/23 12:50:13.741
  STEP: Saw pod success @ 11/04/23 12:50:17.759
  Nov  4 12:50:17.761: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-67d12496-1657-4a70-b818-116fdee2fafa container test-container: <nil>
  STEP: delete the pod @ 11/04/23 12:50:17.769
  Nov  4 12:50:17.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2817" for this suite. @ 11/04/23 12:50:17.786
• [4.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 11/04/23 12:50:17.794
  Nov  4 12:50:17.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replication-controller @ 11/04/23 12:50:17.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:50:17.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:50:17.814
  Nov  4 12:50:17.816: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/04/23 12:50:18.826
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/04/23 12:50:18.833
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/04/23 12:50:19.839
  Nov  4 12:50:19.847: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/04/23 12:50:19.847
  Nov  4 12:50:20.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6421" for this suite. @ 11/04/23 12:50:20.857
• [3.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/04/23 12:50:20.862
  Nov  4 12:50:20.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename containers @ 11/04/23 12:50:20.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:50:20.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:50:20.881
  STEP: Creating a pod to test override arguments @ 11/04/23 12:50:20.883
  STEP: Saw pod success @ 11/04/23 12:50:24.9
  Nov  4 12:50:24.904: INFO: Trying to get logs from node ip-172-31-44-230 pod client-containers-6360b4c6-7644-4719-b2b8-9602907198d0 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 12:50:24.91
  Nov  4 12:50:24.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7022" for this suite. @ 11/04/23 12:50:24.926
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 11/04/23 12:50:24.935
  Nov  4 12:50:24.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 12:50:24.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:50:24.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:50:24.957
  STEP: Setting up server cert @ 11/04/23 12:50:24.984
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 12:50:25.096
  STEP: Deploying the webhook pod @ 11/04/23 12:50:25.102
  STEP: Wait for the deployment to be ready @ 11/04/23 12:50:25.111
  Nov  4 12:50:25.118: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/04/23 12:50:27.128
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 12:50:27.136
  Nov  4 12:50:28.137: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/04/23 12:50:28.143
  STEP: create a pod that should be updated by the webhook @ 11/04/23 12:50:28.156
  Nov  4 12:50:28.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5778" for this suite. @ 11/04/23 12:50:28.214
  STEP: Destroying namespace "webhook-markers-4724" for this suite. @ 11/04/23 12:50:28.219
• [3.290 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 11/04/23 12:50:28.226
  Nov  4 12:50:28.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 12:50:28.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:50:28.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:50:28.246
  STEP: Creating configMap with name configmap-test-upd-021bf55e-2fc3-4158-9202-e9ed430bcb5b @ 11/04/23 12:50:28.251
  STEP: Creating the pod @ 11/04/23 12:50:28.255
  STEP: Updating configmap configmap-test-upd-021bf55e-2fc3-4158-9202-e9ed430bcb5b @ 11/04/23 12:50:30.275
  STEP: waiting to observe update in volume @ 11/04/23 12:50:30.281
  Nov  4 12:51:34.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6792" for this suite. @ 11/04/23 12:51:34.53
• [66.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 11/04/23 12:51:34.538
  Nov  4 12:51:34.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename events @ 11/04/23 12:51:34.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:51:34.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:51:34.556
  STEP: Create set of events @ 11/04/23 12:51:34.558
  Nov  4 12:51:34.565: INFO: created test-event-1
  Nov  4 12:51:34.568: INFO: created test-event-2
  Nov  4 12:51:34.572: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/04/23 12:51:34.572
  STEP: delete collection of events @ 11/04/23 12:51:34.575
  Nov  4 12:51:34.575: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/04/23 12:51:34.592
  Nov  4 12:51:34.592: INFO: requesting list of events to confirm quantity
  Nov  4 12:51:34.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5944" for this suite. @ 11/04/23 12:51:34.599
• [0.066 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 11/04/23 12:51:34.604
  Nov  4 12:51:34.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 12:51:34.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:51:34.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:51:34.627
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/04/23 12:51:34.629
  STEP: Saw pod success @ 11/04/23 12:51:38.647
  Nov  4 12:51:38.649: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-b89595d0-d4cb-4755-b82a-61aefcea7094 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 12:51:38.654
  Nov  4 12:51:38.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4352" for this suite. @ 11/04/23 12:51:38.671
• [4.072 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 11/04/23 12:51:38.677
  Nov  4 12:51:38.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 12:51:38.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:51:38.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:51:38.695
  STEP: Creating pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012 @ 11/04/23 12:51:38.703
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 12:51:40.715
  Nov  4 12:51:40.719: INFO: Initial restart count of pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e is 0
  Nov  4 12:51:40.721: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:42.726: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:44.729: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:46.732: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:48.737: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:50.741: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:52.744: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:54.749: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:56.753: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:51:58.756: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:00.760: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:02.766: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:04.770: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:06.773: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:08.777: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:10.781: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:12.785: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:14.790: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:16.793: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:18.798: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:20.801: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:22.807: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:24.811: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:26.816: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:28.820: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:30.825: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:32.828: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:34.832: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:36.836: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:38.840: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:40.844: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:42.848: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:44.852: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:46.856: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:48.860: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:50.865: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:52.868: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:54.873: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:56.877: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:52:58.880: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:00.884: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:02.887: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:04.891: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:06.896: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:08.901: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:10.905: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:12.910: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:14.913: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:16.918: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:18.922: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:20.925: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:22.930: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:24.933: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:26.938: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:28.945: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:30.950: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:32.953: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:34.958: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:36.964: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:38.969: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:40.973: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:42.978: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:44.981: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:46.985: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:48.994: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:50.998: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:53.001: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:55.006: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:57.009: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:53:59.013: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:01.016: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:03.020: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:05.024: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:07.028: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:09.031: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:11.036: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:13.040: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:15.044: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:17.048: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:19.052: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:21.056: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:23.061: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:25.064: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:27.068: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:29.073: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:31.078: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:33.081: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:35.084: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:37.088: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:39.093: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:41.096: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:43.101: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:45.104: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:47.107: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:49.111: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:51.116: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:53.119: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:55.123: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:57.127: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:54:59.131: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:01.134: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:03.139: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:05.143: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:07.146: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:09.149: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:11.154: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:13.158: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:15.162: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:17.165: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:19.171: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:21.174: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:23.177: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:25.180: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:27.183: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:29.187: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:31.190: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:33.193: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:35.197: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:37.204: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:39.208: INFO: Get pod test-webserver-1b049a9b-f291-4245-a219-b862e87bc21e in namespace container-probe-9012
  Nov  4 12:55:41.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 12:55:41.214
  STEP: Destroying namespace "container-probe-9012" for this suite. @ 11/04/23 12:55:41.223
• [242.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 11/04/23 12:55:41.236
  Nov  4 12:55:41.236: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 12:55:41.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:55:41.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:55:41.258
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/04/23 12:55:41.261
  Nov  4 12:55:41.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:55:42.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 12:55:47.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4756" for this suite. @ 11/04/23 12:55:47.669
• [6.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 11/04/23 12:55:47.676
  Nov  4 12:55:47.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename podtemplate @ 11/04/23 12:55:47.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:55:47.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:55:47.695
  STEP: Create a pod template @ 11/04/23 12:55:47.698
  STEP: Replace a pod template @ 11/04/23 12:55:47.704
  Nov  4 12:55:47.712: INFO: Found updated podtemplate annotation: "true"

  Nov  4 12:55:47.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6471" for this suite. @ 11/04/23 12:55:47.717
• [0.047 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/04/23 12:55:47.723
  Nov  4 12:55:47.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/04/23 12:55:47.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:55:47.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:55:47.746
  STEP: creating @ 11/04/23 12:55:47.749
  STEP: getting @ 11/04/23 12:55:47.769
  STEP: listing in namespace @ 11/04/23 12:55:47.773
  STEP: patching @ 11/04/23 12:55:47.776
  STEP: deleting @ 11/04/23 12:55:47.788
  Nov  4 12:55:47.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7890" for this suite. @ 11/04/23 12:55:47.803
• [0.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 11/04/23 12:55:47.809
  Nov  4 12:55:47.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svcaccounts @ 11/04/23 12:55:47.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:55:47.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:55:47.828
  Nov  4 12:55:47.853: INFO: created pod pod-service-account-defaultsa
  Nov  4 12:55:47.853: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Nov  4 12:55:47.860: INFO: created pod pod-service-account-mountsa
  Nov  4 12:55:47.860: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Nov  4 12:55:47.866: INFO: created pod pod-service-account-nomountsa
  Nov  4 12:55:47.866: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Nov  4 12:55:47.875: INFO: created pod pod-service-account-defaultsa-mountspec
  Nov  4 12:55:47.875: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Nov  4 12:55:47.884: INFO: created pod pod-service-account-mountsa-mountspec
  Nov  4 12:55:47.884: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Nov  4 12:55:47.893: INFO: created pod pod-service-account-nomountsa-mountspec
  Nov  4 12:55:47.893: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Nov  4 12:55:47.903: INFO: created pod pod-service-account-defaultsa-nomountspec
  Nov  4 12:55:47.903: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Nov  4 12:55:47.910: INFO: created pod pod-service-account-mountsa-nomountspec
  Nov  4 12:55:47.910: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Nov  4 12:55:47.919: INFO: created pod pod-service-account-nomountsa-nomountspec
  Nov  4 12:55:47.919: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Nov  4 12:55:47.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4850" for this suite. @ 11/04/23 12:55:47.924
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 11/04/23 12:55:47.931
  Nov  4 12:55:47.931: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-preemption @ 11/04/23 12:55:47.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:55:47.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:55:47.956
  Nov  4 12:55:47.976: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov  4 12:56:47.998: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/04/23 12:56:48.002
  Nov  4 12:56:48.002: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/04/23 12:56:48.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:56:48.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:56:48.024
  STEP: Finding an available node @ 11/04/23 12:56:48.029
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/04/23 12:56:48.029
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/04/23 12:56:50.05
  Nov  4 12:56:50.064: INFO: found a healthy node: ip-172-31-44-230
  Nov  4 12:56:56.135: INFO: pods created so far: [1 1 1]
  Nov  4 12:56:56.135: INFO: length of pods created so far: 3
  Nov  4 12:56:58.149: INFO: pods created so far: [2 2 1]
  Nov  4 12:57:05.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 12:57:05.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1368" for this suite. @ 11/04/23 12:57:05.232
  STEP: Destroying namespace "sched-preemption-1090" for this suite. @ 11/04/23 12:57:05.24
• [77.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/04/23 12:57:05.247
  Nov  4 12:57:05.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename subpath @ 11/04/23 12:57:05.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:57:05.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:57:05.266
  STEP: Setting up data @ 11/04/23 12:57:05.269
  STEP: Creating pod pod-subpath-test-configmap-d4hg @ 11/04/23 12:57:05.278
  STEP: Creating a pod to test atomic-volume-subpath @ 11/04/23 12:57:05.278
  STEP: Saw pod success @ 11/04/23 12:57:29.346
  Nov  4 12:57:29.350: INFO: Trying to get logs from node ip-172-31-75-164 pod pod-subpath-test-configmap-d4hg container test-container-subpath-configmap-d4hg: <nil>
  STEP: delete the pod @ 11/04/23 12:57:29.371
  STEP: Deleting pod pod-subpath-test-configmap-d4hg @ 11/04/23 12:57:29.389
  Nov  4 12:57:29.389: INFO: Deleting pod "pod-subpath-test-configmap-d4hg" in namespace "subpath-2537"
  Nov  4 12:57:29.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2537" for this suite. @ 11/04/23 12:57:29.397
• [24.157 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/04/23 12:57:29.405
  Nov  4 12:57:29.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 12:57:29.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:57:29.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:57:29.436
  STEP: Creating secret with name s-test-opt-del-7bd260d1-768c-4001-9109-1f2105fd2ae0 @ 11/04/23 12:57:29.446
  STEP: Creating secret with name s-test-opt-upd-7222a1b6-4bdc-494c-9edc-12c767123dc0 @ 11/04/23 12:57:29.452
  STEP: Creating the pod @ 11/04/23 12:57:29.458
  STEP: Deleting secret s-test-opt-del-7bd260d1-768c-4001-9109-1f2105fd2ae0 @ 11/04/23 12:57:31.521
  STEP: Updating secret s-test-opt-upd-7222a1b6-4bdc-494c-9edc-12c767123dc0 @ 11/04/23 12:57:31.528
  STEP: Creating secret with name s-test-opt-create-8f228a43-a296-4841-99dc-e0879bc973e5 @ 11/04/23 12:57:31.534
  STEP: waiting to observe update in volume @ 11/04/23 12:57:31.539
  Nov  4 12:58:45.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2776" for this suite. @ 11/04/23 12:58:45.857
• [76.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 11/04/23 12:58:45.866
  Nov  4 12:58:45.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replication-controller @ 11/04/23 12:58:45.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:58:45.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:58:45.887
  STEP: creating a ReplicationController @ 11/04/23 12:58:45.896
  STEP: waiting for RC to be added @ 11/04/23 12:58:45.904
  STEP: waiting for available Replicas @ 11/04/23 12:58:45.904
  STEP: patching ReplicationController @ 11/04/23 12:58:47.509
  STEP: waiting for RC to be modified @ 11/04/23 12:58:47.515
  STEP: patching ReplicationController status @ 11/04/23 12:58:47.515
  STEP: waiting for RC to be modified @ 11/04/23 12:58:47.52
  STEP: waiting for available Replicas @ 11/04/23 12:58:47.52
  STEP: fetching ReplicationController status @ 11/04/23 12:58:47.527
  STEP: patching ReplicationController scale @ 11/04/23 12:58:47.53
  STEP: waiting for RC to be modified @ 11/04/23 12:58:47.536
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/04/23 12:58:47.536
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/04/23 12:58:49.034
  STEP: updating ReplicationController status @ 11/04/23 12:58:49.038
  STEP: waiting for RC to be modified @ 11/04/23 12:58:49.044
  STEP: listing all ReplicationControllers @ 11/04/23 12:58:49.045
  STEP: checking that ReplicationController has expected values @ 11/04/23 12:58:49.049
  STEP: deleting ReplicationControllers by collection @ 11/04/23 12:58:49.049
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/04/23 12:58:49.059
  Nov  4 12:58:49.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1104 12:58:49.104788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2603" for this suite. @ 11/04/23 12:58:49.109
• [3.250 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 11/04/23 12:58:49.116
  Nov  4 12:58:49.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 12:58:49.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:58:49.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:58:49.134
  STEP: Creating a pod to test substitution in volume subpath @ 11/04/23 12:58:49.137
  E1104 12:58:50.104933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:58:51.105022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:58:52.105722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:58:53.106632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 12:58:53.162
  Nov  4 12:58:53.166: INFO: Trying to get logs from node ip-172-31-75-164 pod var-expansion-d371f10f-6f64-48fa-9365-dd77179facb8 container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 12:58:53.172
  Nov  4 12:58:53.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4477" for this suite. @ 11/04/23 12:58:53.191
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 11/04/23 12:58:53.199
  Nov  4 12:58:53.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename limitrange @ 11/04/23 12:58:53.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:58:53.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:58:53.267
  STEP: Creating a LimitRange @ 11/04/23 12:58:53.27
  STEP: Setting up watch @ 11/04/23 12:58:53.27
  STEP: Submitting a LimitRange @ 11/04/23 12:58:53.374
  STEP: Verifying LimitRange creation was observed @ 11/04/23 12:58:53.381
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/04/23 12:58:53.381
  Nov  4 12:58:53.385: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov  4 12:58:53.385: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/04/23 12:58:53.385
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/04/23 12:58:53.393
  Nov  4 12:58:53.396: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov  4 12:58:53.396: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/04/23 12:58:53.396
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/04/23 12:58:53.41
  Nov  4 12:58:53.413: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Nov  4 12:58:53.414: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/04/23 12:58:53.414
  STEP: Failing to create a Pod with more than max resources @ 11/04/23 12:58:53.416
  STEP: Updating a LimitRange @ 11/04/23 12:58:53.419
  STEP: Verifying LimitRange updating is effective @ 11/04/23 12:58:53.435
  E1104 12:58:54.107489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:58:55.108340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 11/04/23 12:58:55.439
  STEP: Failing to create a Pod with more than max resources @ 11/04/23 12:58:55.445
  STEP: Deleting a LimitRange @ 11/04/23 12:58:55.447
  STEP: Verifying the LimitRange was deleted @ 11/04/23 12:58:55.457
  E1104 12:58:56.108592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:58:57.108762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:58:58.109031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:58:59.109214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:00.109242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 12:59:00.461: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/04/23 12:59:00.461
  Nov  4 12:59:00.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3871" for this suite. @ 11/04/23 12:59:00.477
• [7.285 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 11/04/23 12:59:00.484
  Nov  4 12:59:00.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replication-controller @ 11/04/23 12:59:00.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:59:00.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:59:00.501
  STEP: Creating ReplicationController "e2e-rc-p6zxw" @ 11/04/23 12:59:00.504
  Nov  4 12:59:00.508: INFO: Get Replication Controller "e2e-rc-p6zxw" to confirm replicas
  E1104 12:59:01.109332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 12:59:01.514: INFO: Get Replication Controller "e2e-rc-p6zxw" to confirm replicas
  Nov  4 12:59:01.519: INFO: Found 1 replicas for "e2e-rc-p6zxw" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-p6zxw" @ 11/04/23 12:59:01.519
  STEP: Updating a scale subresource @ 11/04/23 12:59:01.522
  STEP: Verifying replicas where modified for replication controller "e2e-rc-p6zxw" @ 11/04/23 12:59:01.529
  Nov  4 12:59:01.529: INFO: Get Replication Controller "e2e-rc-p6zxw" to confirm replicas
  E1104 12:59:02.109666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 12:59:02.536: INFO: Get Replication Controller "e2e-rc-p6zxw" to confirm replicas
  Nov  4 12:59:02.541: INFO: Found 2 replicas for "e2e-rc-p6zxw" replication controller
  Nov  4 12:59:02.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1344" for this suite. @ 11/04/23 12:59:02.545
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 11/04/23 12:59:02.553
  Nov  4 12:59:02.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 12:59:02.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:59:02.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:59:02.575
  STEP: Counting existing ResourceQuota @ 11/04/23 12:59:02.578
  E1104 12:59:03.110091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:04.110638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:05.110727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:06.110827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:07.110920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/04/23 12:59:07.582
  STEP: Ensuring resource quota status is calculated @ 11/04/23 12:59:07.589
  E1104 12:59:08.111169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:09.111255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 11/04/23 12:59:09.593
  STEP: Creating a NodePort Service @ 11/04/23 12:59:09.611
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/04/23 12:59:09.634
  STEP: Ensuring resource quota status captures service creation @ 11/04/23 12:59:09.654
  E1104 12:59:10.111362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:11.111536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 11/04/23 12:59:11.659
  STEP: Ensuring resource quota status released usage @ 11/04/23 12:59:11.697
  E1104 12:59:12.112111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:13.112218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 12:59:13.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-508" for this suite. @ 11/04/23 12:59:13.705
• [11.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 11/04/23 12:59:13.714
  Nov  4 12:59:13.714: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 12:59:13.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 12:59:13.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 12:59:13.733
  STEP: Creating service test in namespace statefulset-9577 @ 11/04/23 12:59:13.736
  STEP: Creating a new StatefulSet @ 11/04/23 12:59:13.743
  Nov  4 12:59:13.755: INFO: Found 0 stateful pods, waiting for 3
  E1104 12:59:14.112301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:15.112502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:16.112578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:17.112692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:18.112782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:19.112877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:20.112944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:21.113031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:22.113230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:23.113301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 12:59:23.760: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:59:23.761: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:59:23.761: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/04/23 12:59:23.771
  Nov  4 12:59:23.792: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/04/23 12:59:23.792
  E1104 12:59:24.113841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:25.114655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:26.114878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:27.114990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:28.115296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:29.115395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:30.115485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:31.115640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:32.115822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:33.115926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/04/23 12:59:33.808
  STEP: Performing a canary update @ 11/04/23 12:59:33.808
  Nov  4 12:59:33.828: INFO: Updating stateful set ss2
  Nov  4 12:59:33.837: INFO: Waiting for Pod statefulset-9577/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1104 12:59:34.115992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:35.117059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:36.117161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:37.117251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:38.117398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:39.117612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:40.117707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:41.118671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:42.119436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:43.119536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/04/23 12:59:43.845
  Nov  4 12:59:43.888: INFO: Found 1 stateful pods, waiting for 3
  E1104 12:59:44.119868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:45.119949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:46.120195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:47.120286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:48.120403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:49.120491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:50.121230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:51.121319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:52.121475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:53.121603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 12:59:53.893: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:59:53.893: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 12:59:53.893: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/04/23 12:59:53.9
  Nov  4 12:59:53.921: INFO: Updating stateful set ss2
  Nov  4 12:59:53.929: INFO: Waiting for Pod statefulset-9577/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1104 12:59:54.122368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:55.122476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:56.122599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:57.122691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:58.123089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 12:59:59.123868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:00.123943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:01.124116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:02.124315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:03.124510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:03.957: INFO: Updating stateful set ss2
  Nov  4 13:00:03.965: INFO: Waiting for StatefulSet statefulset-9577/ss2 to complete update
  Nov  4 13:00:03.965: INFO: Waiting for Pod statefulset-9577/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1104 13:00:04.125539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:05.125635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:06.126685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:07.127562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:08.127643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:09.128011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:10.128099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:11.128280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:12.128442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:13.128537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:13.973: INFO: Deleting all statefulset in ns statefulset-9577
  Nov  4 13:00:13.976: INFO: Scaling statefulset ss2 to 0
  E1104 13:00:14.129251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:15.129348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:16.129436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:17.129529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:18.129619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:19.130679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:20.130763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:21.130858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:22.131389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:23.131527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:23.995: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 13:00:23.998: INFO: Deleting statefulset ss2
  Nov  4 13:00:24.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9577" for this suite. @ 11/04/23 13:00:24.018
• [70.311 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 11/04/23 13:00:24.025
  Nov  4 13:00:24.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 13:00:24.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:00:24.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:00:24.045
  STEP: Creating a pod to test substitution in container's args @ 11/04/23 13:00:24.048
  E1104 13:00:24.131760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:25.132345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:26.133016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:27.133678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:00:28.07
  Nov  4 13:00:28.074: INFO: Trying to get logs from node ip-172-31-44-230 pod var-expansion-518ca775-01bc-4c9b-bc9e-2f5e8b991f5d container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 13:00:28.086
  Nov  4 13:00:28.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4200" for this suite. @ 11/04/23 13:00:28.103
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/04/23 13:00:28.113
  Nov  4 13:00:28.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 13:00:28.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:00:28.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:00:28.132
  E1104 13:00:28.133881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:28.136: INFO: Creating simple deployment test-new-deployment
  Nov  4 13:00:28.149: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E1104 13:00:29.134676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:30.134915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 11/04/23 13:00:30.167
  STEP: updating a scale subresource @ 11/04/23 13:00:30.17
  STEP: verifying the deployment Spec.Replicas was modified @ 11/04/23 13:00:30.177
  STEP: Patch a scale subresource @ 11/04/23 13:00:30.181
  Nov  4 13:00:30.211: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-220",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a70c2d8c-f73a-4b6a-bd0c-81f1d7fe4b86",
      ResourceVersion: (string) (len=5) "25517",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov  4 13:00:30.221: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-220",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c6ae052-cb00-4783-9a25-c27cb5d05af1",
      ResourceVersion: (string) (len=5) "25526",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a70c2d8c-f73a-4b6a-bd0c-81f1d7fe4b86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 37 30 63 32 64  38 63 2d 66 37 33 61 2d  |\"a70c2d8c-f73a-|
              00000120  34 62 36 61 2d 62 64 30  63 2d 38 31 66 31 64 37  |4b6a-bd0c-81f1d7|
              00000130  66 65 34 62 38 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fe4b86\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:00:30.227: INFO: Pod "test-new-deployment-557759b7c7-gfctq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-gfctq",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-220",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0547c426-0b71-4c12-a3cc-e6806aa9d1de",
      ResourceVersion: (string) (len=5) "25466",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4c6ae052-cb00-4783-9a25-c27cb5d05af1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  36 61 65 30 35 32 2d 63  |d\":\"4c6ae052-c|
              00000090  62 30 30 2d 34 37 38 33  2d 39 61 32 35 2d 63 32  |b00-4783-9a25-c2|
              000000a0  37 63 62 35 64 30 35 61  66 31 5c 22 7d 22 3a 7b  |7cb5d05af1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 36 2e 39 37 5c 22 7d  |192.168.46.97\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4v7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4v7w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.46.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.46.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834699628,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://417db9aaa98c42f8842552351901d02722fa27707a1afd1844bcb8bb066bbb11",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 13:00:30.229: INFO: Pod "test-new-deployment-557759b7c7-rnz6l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-rnz6l",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-220",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1eacf851-f83e-4138-91eb-dcd0a663bcf7",
      ResourceVersion: (string) (len=5) "25528",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4c6ae052-cb00-4783-9a25-c27cb5d05af1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  36 61 65 30 35 32 2d 63  |d\":\"4c6ae052-c|
              00000090  62 30 30 2d 34 37 38 33  2d 39 61 32 35 2d 63 32  |b00-4783-9a25-c2|
              000000a0  37 63 62 35 64 30 35 61  66 31 5c 22 7d 22 3a 7b  |7cb5d05af1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sk6rh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sk6rh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 13:00:30.231: INFO: Pod "test-new-deployment-557759b7c7-vdvpn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-vdvpn",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-220",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ec4b9c8-0981-4bba-855d-0739f56a8741",
      ResourceVersion: (string) (len=5) "25529",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4c6ae052-cb00-4783-9a25-c27cb5d05af1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  36 61 65 30 35 32 2d 63  |d\":\"4c6ae052-c|
              00000090  62 30 30 2d 34 37 38 33  2d 39 61 32 35 2d 63 32  |b00-4783-9a25-c2|
              000000a0  37 63 62 35 64 30 35 61  66 31 5c 22 7d 22 3a 7b  |7cb5d05af1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m6686",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m6686",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 13:00:30.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-220" for this suite. @ 11/04/23 13:00:30.24
• [2.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 11/04/23 13:00:30.255
  Nov  4 13:00:30.255: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/04/23 13:00:30.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:00:30.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:00:30.283
  STEP: create the container to handle the HTTPGet hook request. @ 11/04/23 13:00:30.29
  E1104 13:00:31.135343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:32.135460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/04/23 13:00:32.314
  E1104 13:00:33.136478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:34.136568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/04/23 13:00:34.336
  E1104 13:00:35.136658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:36.136745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/04/23 13:00:36.353
  Nov  4 13:00:36.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8634" for this suite. @ 11/04/23 13:00:36.371
• [6.125 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 11/04/23 13:00:36.38
  Nov  4 13:00:36.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 13:00:36.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:00:36.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:00:36.398
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/04/23 13:00:36.401
  Nov  4 13:00:36.401: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:00:37.137681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:38.138182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:39.138456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:40.139291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:41.139933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/04/23 13:00:41.5
  Nov  4 13:00:41.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:00:42.140981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:42.841: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:00:43.141067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:44.141857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:45.142845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:46.143208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:47.144299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:47.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2552" for this suite. @ 11/04/23 13:00:47.911
• [11.538 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 11/04/23 13:00:47.918
  Nov  4 13:00:47.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 13:00:47.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:00:47.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:00:47.937
  STEP: creating service in namespace services-8985 @ 11/04/23 13:00:47.94
  STEP: creating service affinity-nodeport-transition in namespace services-8985 @ 11/04/23 13:00:47.94
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8985 @ 11/04/23 13:00:47.959
  I1104 13:00:47.966360      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-8985, replica count: 3
  E1104 13:00:48.144621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:49.145057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:50.145151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1104 13:00:51.018178      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 13:00:51.029: INFO: Creating new exec pod
  E1104 13:00:51.145789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:52.145860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:53.146189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:54.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8985 exec execpod-affinitynb7rl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1104 13:00:54.146412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:54.172: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Nov  4 13:00:54.172: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:00:54.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8985 exec execpod-affinitynb7rl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.246 80'
  Nov  4 13:00:54.302: INFO: stderr: "+ nc -v -t -w 2 10.152.183.246 80\n+ echo hostName\nConnection to 10.152.183.246 80 port [tcp/http] succeeded!\n"
  Nov  4 13:00:54.302: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:00:54.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8985 exec execpod-affinitynb7rl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.44.230 30518'
  Nov  4 13:00:54.426: INFO: stderr: "+ nc -v -t -w 2 172.31.44.230 30518\n+ echo hostName\nConnection to 172.31.44.230 30518 port [tcp/*] succeeded!\n"
  Nov  4 13:00:54.426: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:00:54.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8985 exec execpod-affinitynb7rl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.23.218 30518'
  Nov  4 13:00:54.540: INFO: stderr: "+ nc -v -t -w 2 172.31.23.218 30518\n+ echo hostName\nConnection to 172.31.23.218 30518 port [tcp/*] succeeded!\n"
  Nov  4 13:00:54.540: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:00:54.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8985 exec execpod-affinitynb7rl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.218:30518/ ; done'
  Nov  4 13:00:54.768: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n"
  Nov  4 13:00:54.768: INFO: stdout: "\naffinity-nodeport-transition-9gv8z\naffinity-nodeport-transition-9gv8z\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-shxts\naffinity-nodeport-transition-shxts\naffinity-nodeport-transition-9gv8z\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-9gv8z\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-9gv8z\naffinity-nodeport-transition-9gv8z\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-9gv8z\naffinity-nodeport-transition-shxts\naffinity-nodeport-transition-shxts"
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-9gv8z
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-9gv8z
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-shxts
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-shxts
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-9gv8z
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-9gv8z
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-9gv8z
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-9gv8z
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-9gv8z
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-shxts
  Nov  4 13:00:54.768: INFO: Received response from host: affinity-nodeport-transition-shxts
  Nov  4 13:00:54.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-8985 exec execpod-affinitynb7rl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.23.218:30518/ ; done'
  Nov  4 13:00:54.968: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.23.218:30518/\n"
  Nov  4 13:00:54.968: INFO: stdout: "\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx\naffinity-nodeport-transition-8gmsx"
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Received response from host: affinity-nodeport-transition-8gmsx
  Nov  4 13:00:54.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 13:00:54.972: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8985, will wait for the garbage collector to delete the pods @ 11/04/23 13:00:54.987
  Nov  4 13:00:55.048: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.335256ms
  E1104 13:00:55.147488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:00:55.148: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.291654ms
  E1104 13:00:56.147527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:57.147590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:00:58.148559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8985" for this suite. @ 11/04/23 13:00:58.371
• [10.461 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 11/04/23 13:00:58.38
  Nov  4 13:00:58.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:00:58.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:00:58.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:00:58.399
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:00:58.402
  E1104 13:00:59.149403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:00.149622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:01.149711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:02.149794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:01:02.431
  Nov  4 13:01:02.434: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-0f068298-6c28-49a9-a30a-608716c77b71 container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:01:02.441
  Nov  4 13:01:02.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-697" for this suite. @ 11/04/23 13:01:02.463
• [4.090 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 11/04/23 13:01:02.47
  Nov  4 13:01:02.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pod-network-test @ 11/04/23 13:01:02.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:01:02.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:01:02.487
  STEP: Performing setup for networking test in namespace pod-network-test-4081 @ 11/04/23 13:01:02.49
  STEP: creating a selector @ 11/04/23 13:01:02.49
  STEP: Creating the service pods in kubernetes @ 11/04/23 13:01:02.49
  Nov  4 13:01:02.490: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1104 13:01:03.150686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:04.150777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:05.151645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:06.151945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:07.152024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:08.152135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:09.153123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:10.153203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:11.153313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:12.153505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:13.153636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:14.153721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:15.153821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:16.154656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:17.155442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:18.156495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:19.157415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:20.157619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:21.158609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:22.158858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:23.158970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:24.159058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/04/23 13:01:24.591
  E1104 13:01:25.160031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:26.160142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:01:26.608: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov  4 13:01:26.608: INFO: Breadth first check of 192.168.55.115 on host 172.31.23.218...
  Nov  4 13:01:26.611: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.46.79:9080/dial?request=hostname&protocol=http&host=192.168.55.115&port=8083&tries=1'] Namespace:pod-network-test-4081 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:01:26.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:01:26.612: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:01:26.612: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4081/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.46.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.55.115%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov  4 13:01:26.688: INFO: Waiting for responses: map[]
  Nov  4 13:01:26.688: INFO: reached 192.168.55.115 after 0/1 tries
  Nov  4 13:01:26.688: INFO: Breadth first check of 192.168.46.117 on host 172.31.44.230...
  Nov  4 13:01:26.692: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.46.79:9080/dial?request=hostname&protocol=http&host=192.168.46.117&port=8083&tries=1'] Namespace:pod-network-test-4081 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:01:26.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:01:26.692: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:01:26.692: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4081/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.46.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.46.117%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov  4 13:01:26.765: INFO: Waiting for responses: map[]
  Nov  4 13:01:26.765: INFO: reached 192.168.46.117 after 0/1 tries
  Nov  4 13:01:26.766: INFO: Breadth first check of 192.168.193.127 on host 172.31.75.164...
  Nov  4 13:01:26.769: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.46.79:9080/dial?request=hostname&protocol=http&host=192.168.193.127&port=8083&tries=1'] Namespace:pod-network-test-4081 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:01:26.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:01:26.770: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:01:26.770: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4081/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.46.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.193.127%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov  4 13:01:26.843: INFO: Waiting for responses: map[]
  Nov  4 13:01:26.843: INFO: reached 192.168.193.127 after 0/1 tries
  Nov  4 13:01:26.843: INFO: Going to retry 0 out of 3 pods....
  Nov  4 13:01:26.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4081" for this suite. @ 11/04/23 13:01:26.847
• [24.384 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 11/04/23 13:01:26.854
  Nov  4 13:01:26.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:01:26.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:01:26.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:01:26.873
  STEP: Creating a pod to test downward api env vars @ 11/04/23 13:01:26.876
  E1104 13:01:27.160998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:28.161098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:29.161194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:30.161298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:01:30.905
  Nov  4 13:01:30.909: INFO: Trying to get logs from node ip-172-31-75-164 pod downward-api-5b075367-2964-42d8-a3e4-0c37a6eb6e2e container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 13:01:30.917
  Nov  4 13:01:30.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-699" for this suite. @ 11/04/23 13:01:30.938
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 11/04/23 13:01:30.945
  Nov  4 13:01:30.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:01:30.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:01:30.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:01:30.962
  STEP: Creating configMap with name projected-configmap-test-volume-map-93df8173-ab7c-4cd6-9dd4-6e4b75a7e50b @ 11/04/23 13:01:30.965
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:01:30.97
  E1104 13:01:31.161768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:32.162283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:33.162368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:34.162684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:01:34.994
  Nov  4 13:01:34.998: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-configmaps-38a0ef45-c8e2-43b8-aac3-88bf84b72d3f container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:01:35.005
  Nov  4 13:01:35.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1684" for this suite. @ 11/04/23 13:01:35.027
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 11/04/23 13:01:35.034
  Nov  4 13:01:35.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:01:35.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:01:35.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:01:35.053
  STEP: Creating configMap with name configmap-test-volume-36d8c30d-2112-43d4-95ec-c838d7eba499 @ 11/04/23 13:01:35.056
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:01:35.062
  E1104 13:01:35.163607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:36.163701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:37.163855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:38.163937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:01:39.091
  Nov  4 13:01:39.096: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-b7367cc5-905b-4f6e-bb0d-42869427b503 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:01:39.106
  Nov  4 13:01:39.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8105" for this suite. @ 11/04/23 13:01:39.137
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/04/23 13:01:39.149
  Nov  4 13:01:39.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 13:01:39.15
  E1104 13:01:39.164417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:01:39.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:01:39.174
  Nov  4 13:01:39.177: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Nov  4 13:01:39.186: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1104 13:01:40.164477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:41.164578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:42.164651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:43.164923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:44.165149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:01:44.191: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/04/23 13:01:44.191
  Nov  4 13:01:44.191: INFO: Creating deployment "test-rolling-update-deployment"
  Nov  4 13:01:44.198: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Nov  4 13:01:44.207: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1104 13:01:45.165228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:46.165313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:01:46.221: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Nov  4 13:01:46.224: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Nov  4 13:01:46.235: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b97a96b7-8c5d-43ca-9aea-f77286a0f32d",
      ResourceVersion: (string) (len=5) "26282",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov  4 13:01:46.240: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a18b898e-b4e5-4655-8653-a8c8ca2e0460",
      ResourceVersion: (string) (len=5) "26272",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b97a96b7-8c5d-43ca-9aea-f77286a0f32d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 39 37 61 39 36  62 37 2d 38 63 35 64 2d  |\"b97a96b7-8c5d-|
              00000120  34 33 63 61 2d 39 61 65  61 2d 66 37 37 32 38 36  |43ca-9aea-f77286|
              00000130  61 30 66 33 32 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a0f32d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:01:46.241: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Nov  4 13:01:46.241: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "563bc8e3-2d47-4b76-8839-ff36ff5113f6",
      ResourceVersion: (string) (len=5) "26281",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b97a96b7-8c5d-43ca-9aea-f77286a0f32d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 39 37 61 39 36 62  |"uid\":\"b97a96b|
              000000b0  37 2d 38 63 35 64 2d 34  33 63 61 2d 39 61 65 61  |7-8c5d-43ca-9aea|
              000000c0  2d 66 37 37 32 38 36 61  30 66 33 32 64 5c 22 7d  |-f77286a0f32d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:01:46.246: INFO: Pod "test-rolling-update-deployment-7f5c55c64-rjp4l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-rjp4l",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-9799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f19a2a3b-be16-4cd8-8f69-4af9b178e92d",
      ResourceVersion: (string) (len=5) "26271",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "a18b898e-b4e5-4655-8653-a8c8ca2e0460",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  38 62 38 39 38 65 2d 62  |d\":\"a18b898e-b|
              00000090  34 65 35 2d 34 36 35 35  2d 38 36 35 33 2d 61 38  |4e5-4655-8653-a8|
              000000a0  63 38 63 61 32 65 30 34  36 30 5c 22 7d 22 3a 7b  |c8ca2e0460\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 36 2e 38 38 5c 22 7d  |192.168.46.88\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q47bw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q47bw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.46.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.46.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834699704,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://06ea58c41a85538ef4a597e4cd1203341d9516d693daf50c58b0ee8cb2388039",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 13:01:46.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9799" for this suite. @ 11/04/23 13:01:46.252
• [7.109 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 11/04/23 13:01:46.259
  Nov  4 13:01:46.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:01:46.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:01:46.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:01:46.284
  STEP: validating api versions @ 11/04/23 13:01:46.289
  Nov  4 13:01:46.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3007 api-versions'
  Nov  4 13:01:46.341: INFO: stderr: ""
  Nov  4 13:01:46.341: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Nov  4 13:01:46.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3007" for this suite. @ 11/04/23 13:01:46.345
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/04/23 13:01:46.354
  Nov  4 13:01:46.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename subpath @ 11/04/23 13:01:46.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:01:46.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:01:46.373
  STEP: Setting up data @ 11/04/23 13:01:46.385
  STEP: Creating pod pod-subpath-test-downwardapi-rpd4 @ 11/04/23 13:01:46.395
  STEP: Creating a pod to test atomic-volume-subpath @ 11/04/23 13:01:46.395
  E1104 13:01:47.165368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:48.165997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:49.166075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:50.166675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:51.166773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:52.167566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:53.167858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:54.168114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:55.168195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:56.168304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:57.168868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:58.169096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:01:59.169603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:00.170672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:01.170775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:02.171792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:03.171885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:04.172920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:05.173208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:06.173291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:07.173317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:08.173392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:09.173606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:10.173692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:02:10.469
  Nov  4 13:02:10.472: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-subpath-test-downwardapi-rpd4 container test-container-subpath-downwardapi-rpd4: <nil>
  STEP: delete the pod @ 11/04/23 13:02:10.479
  STEP: Deleting pod pod-subpath-test-downwardapi-rpd4 @ 11/04/23 13:02:10.497
  Nov  4 13:02:10.497: INFO: Deleting pod "pod-subpath-test-downwardapi-rpd4" in namespace "subpath-8254"
  Nov  4 13:02:10.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8254" for this suite. @ 11/04/23 13:02:10.506
• [24.159 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 11/04/23 13:02:10.513
  Nov  4 13:02:10.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename runtimeclass @ 11/04/23 13:02:10.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:10.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:10.548
  STEP: Deleting RuntimeClass runtimeclass-6956-delete-me @ 11/04/23 13:02:10.562
  STEP: Waiting for the RuntimeClass to disappear @ 11/04/23 13:02:10.568
  Nov  4 13:02:10.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6956" for this suite. @ 11/04/23 13:02:10.581
• [0.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 11/04/23 13:02:10.588
  Nov  4 13:02:10.588: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:02:10.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:10.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:10.606
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/04/23 13:02:10.609
  E1104 13:02:11.173804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:12.173894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:02:12.626
  Nov  4 13:02:12.630: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-1d57d794-faf8-4356-b343-94e8b29b13ec container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:02:12.636
  Nov  4 13:02:12.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7391" for this suite. @ 11/04/23 13:02:12.654
• [2.073 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 11/04/23 13:02:12.661
  Nov  4 13:02:12.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:02:12.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:12.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:12.681
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:02:12.685
  E1104 13:02:13.174681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:14.174850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:15.174943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:16.175030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:02:16.708
  Nov  4 13:02:16.711: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-2e51022a-4f69-44cd-9e7d-6748fc3655bc container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:02:16.718
  Nov  4 13:02:16.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-95" for this suite. @ 11/04/23 13:02:16.738
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 11/04/23 13:02:16.747
  Nov  4 13:02:16.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:02:16.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:16.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:16.766
  STEP: Creating the pod @ 11/04/23 13:02:16.769
  E1104 13:02:17.175120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:18.175893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:19.176809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:19.309: INFO: Successfully updated pod "labelsupdate0b4254fa-291c-4877-a330-53b0c2969f9d"
  E1104 13:02:20.176939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:21.177031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:22.177087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:23.177355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:23.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4656" for this suite. @ 11/04/23 13:02:23.335
• [6.595 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 11/04/23 13:02:23.342
  Nov  4 13:02:23.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename namespaces @ 11/04/23 13:02:23.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:23.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:23.365
  STEP: Creating a test namespace @ 11/04/23 13:02:23.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:23.383
  STEP: Creating a pod in the namespace @ 11/04/23 13:02:23.387
  STEP: Waiting for the pod to have running status @ 11/04/23 13:02:23.405
  E1104 13:02:24.177454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:25.177635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 11/04/23 13:02:25.416
  STEP: Waiting for the namespace to be removed. @ 11/04/23 13:02:25.423
  E1104 13:02:26.178693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:27.179461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:28.179746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:29.179835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:30.180351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:31.180437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:32.180521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:33.180616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:34.180672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:35.181743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:36.182686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/04/23 13:02:36.427
  STEP: Verifying there are no pods in the namespace @ 11/04/23 13:02:36.442
  Nov  4 13:02:36.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3391" for this suite. @ 11/04/23 13:02:36.451
  STEP: Destroying namespace "nsdeletetest-9622" for this suite. @ 11/04/23 13:02:36.457
  Nov  4 13:02:36.460: INFO: Namespace nsdeletetest-9622 was already deleted
  STEP: Destroying namespace "nsdeletetest-2481" for this suite. @ 11/04/23 13:02:36.46
• [13.124 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 11/04/23 13:02:36.466
  Nov  4 13:02:36.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:02:36.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:36.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:36.483
  STEP: Creating configMap that has name configmap-test-emptyKey-3c673fcc-b79a-4d4d-83bd-4724e787e9b7 @ 11/04/23 13:02:36.487
  Nov  4 13:02:36.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2017" for this suite. @ 11/04/23 13:02:36.492
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 11/04/23 13:02:36.5
  Nov  4 13:02:36.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:02:36.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:36.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:36.517
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/04/23 13:02:36.521
  E1104 13:02:37.183534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:38.183608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:39.184624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:40.185071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:02:40.542
  Nov  4 13:02:40.546: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-4c084ca1-e03e-4505-afe0-2163fcbd0adb container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:02:40.556
  Nov  4 13:02:40.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2099" for this suite. @ 11/04/23 13:02:40.575
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 11/04/23 13:02:40.584
  Nov  4 13:02:40.584: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename runtimeclass @ 11/04/23 13:02:40.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:40.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:40.6
  E1104 13:02:41.185835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:42.185904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:42.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4368" for this suite. @ 11/04/23 13:02:42.634
• [2.057 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 11/04/23 13:02:42.641
  Nov  4 13:02:42.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:02:42.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:42.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:42.657
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:02:42.661
  E1104 13:02:43.186029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:44.186117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:45.186686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:46.187031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:02:46.683
  Nov  4 13:02:46.687: INFO: Trying to get logs from node ip-172-31-75-164 pod downwardapi-volume-5730b7cc-6e29-4730-8cb8-acc1bec7daf8 container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:02:46.696
  Nov  4 13:02:46.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4837" for this suite. @ 11/04/23 13:02:46.721
• [4.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/04/23 13:02:46.728
  Nov  4 13:02:46.728: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename containers @ 11/04/23 13:02:46.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:46.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:46.747
  E1104 13:02:47.187495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:48.187862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:48.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8846" for this suite. @ 11/04/23 13:02:48.78
• [2.059 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/04/23 13:02:48.787
  Nov  4 13:02:48.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 13:02:48.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:02:48.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:02:48.805
  Nov  4 13:02:48.816: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E1104 13:02:49.188382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:50.188454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:51.189059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:52.190133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:53.190450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:53.820: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/04/23 13:02:53.82
  Nov  4 13:02:53.820: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1104 13:02:54.190536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:55.190718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:55.824: INFO: Creating deployment "test-rollover-deployment"
  Nov  4 13:02:55.834: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E1104 13:02:56.191012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:57.191099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:57.842: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Nov  4 13:02:57.849: INFO: Ensure that both replica sets have 1 created replica
  Nov  4 13:02:57.856: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Nov  4 13:02:57.866: INFO: Updating deployment test-rollover-deployment
  Nov  4 13:02:57.866: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1104 13:02:58.191718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:02:59.191816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:02:59.878: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Nov  4 13:02:59.885: INFO: Make sure deployment "test-rollover-deployment" is complete
  Nov  4 13:02:59.892: INFO: all replica sets need to contain the pod-template-hash label
  Nov  4 13:02:59.892: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:03:00.192504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:01.192685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:01.899: INFO: all replica sets need to contain the pod-template-hash label
  Nov  4 13:03:01.899: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:03:02.193144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:03.193438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:03.901: INFO: all replica sets need to contain the pod-template-hash label
  Nov  4 13:03:03.901: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:03:04.194465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:05.194630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:05.899: INFO: all replica sets need to contain the pod-template-hash label
  Nov  4 13:03:05.899: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:03:06.194803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:07.194895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:07.900: INFO: all replica sets need to contain the pod-template-hash label
  Nov  4 13:03:07.900: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 2, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:03:08.195590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:09.195770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:09.899: INFO: 
  Nov  4 13:03:09.899: INFO: Ensure that both old replica sets have no replicas
  Nov  4 13:03:09.909: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4523",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38ce48a6-8019-4159-9e75-b1fb9bcfffb3",
      ResourceVersion: (string) (len=5) "26935",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov  4 13:03:09.913: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4523",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "595ab2d7-2dea-46e3-a348-4be1f3f3345a",
      ResourceVersion: (string) (len=5) "26925",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699777,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "38ce48a6-8019-4159-9e75-b1fb9bcfffb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 38 63 65 34 38  61 36 2d 38 30 31 39 2d  |\"38ce48a6-8019-|
              00000120  34 31 35 39 2d 39 65 37  35 2d 62 31 66 62 39 62  |4159-9e75-b1fb9b|
              00000130  63 66 66 66 62 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cfffb3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:03:09.915: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Nov  4 13:03:09.915: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4523",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e306b9aa-643e-493f-b9c7-eb24bc1ca65a",
      ResourceVersion: (string) (len=5) "26934",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "38ce48a6-8019-4159-9e75-b1fb9bcfffb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  33 38 63 65 34 38 61 36  2d 38 30 31 39 2d 34 31  |38ce48a6-8019-41|
              000000c0  35 39 2d 39 65 37 35 2d  62 31 66 62 39 62 63 66  |59-9e75-b1fb9bcf|
              000000d0  66 66 62 33 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |ffb3\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:03:09.917: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4523",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f232ce9-e780-406a-b2d2-52ba3dc1b043",
      ResourceVersion: (string) (len=5) "26880",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "38ce48a6-8019-4159-9e75-b1fb9bcfffb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 38 63 65 34 38  61 36 2d 38 30 31 39 2d  |\"38ce48a6-8019-|
              00000120  34 31 35 39 2d 39 65 37  35 2d 62 31 66 62 39 62  |4159-9e75-b1fb9b|
              00000130  63 66 66 66 62 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cfffb3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:03:09.922: INFO: Pod "test-rollover-deployment-5d484bf7f9-q599k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-q599k",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-4523",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d518cc94-0f8d-4c3d-a029-f0e8246c80e0",
      ResourceVersion: (string) (len=5) "26898",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699777,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "595ab2d7-2dea-46e3-a348-4be1f3f3345a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 39  35 61 62 32 64 37 2d 32  |d\":\"595ab2d7-2|
              00000090  64 65 61 2d 34 36 65 33  2d 61 33 34 38 2d 34 62  |dea-46e3-a348-4b|
              000000a0  65 31 66 33 66 33 33 34  35 61 5c 22 7d 22 3a 7b  |e1f3f3345a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699778,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 33 2e 31 30 33 5c  |192.168.193.103\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jj6xh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jj6xh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699778,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699778,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834699777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.193.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.193.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834699777,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834699778,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://38ed7c62e815e3a4c39e6410a0b799f4f6664d6b8dbb21efa7071c9e31554fe5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 13:03:09.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4523" for this suite. @ 11/04/23 13:03:09.927
• [21.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 11/04/23 13:03:09.937
  Nov  4 13:03:09.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename cronjob @ 11/04/23 13:03:09.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:03:09.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:03:09.956
  STEP: Creating a cronjob @ 11/04/23 13:03:09.959
  STEP: creating @ 11/04/23 13:03:09.959
  STEP: getting @ 11/04/23 13:03:09.964
  STEP: listing @ 11/04/23 13:03:09.967
  STEP: watching @ 11/04/23 13:03:09.97
  Nov  4 13:03:09.970: INFO: starting watch
  STEP: cluster-wide listing @ 11/04/23 13:03:09.972
  STEP: cluster-wide watching @ 11/04/23 13:03:09.975
  Nov  4 13:03:09.975: INFO: starting watch
  STEP: patching @ 11/04/23 13:03:09.976
  STEP: updating @ 11/04/23 13:03:09.983
  Nov  4 13:03:09.992: INFO: waiting for watch events with expected annotations
  Nov  4 13:03:09.992: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/04/23 13:03:09.992
  STEP: updating /status @ 11/04/23 13:03:09.997
  STEP: get /status @ 11/04/23 13:03:10.004
  STEP: deleting @ 11/04/23 13:03:10.007
  STEP: deleting a collection @ 11/04/23 13:03:10.022
  Nov  4 13:03:10.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8999" for this suite. @ 11/04/23 13:03:10.038
• [0.107 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 11/04/23 13:03:10.045
  Nov  4 13:03:10.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:03:10.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:03:10.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:03:10.064
  STEP: Setting up server cert @ 11/04/23 13:03:10.089
  E1104 13:03:10.195970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:03:10.555
  STEP: Deploying the webhook pod @ 11/04/23 13:03:10.565
  STEP: Wait for the deployment to be ready @ 11/04/23 13:03:10.581
  Nov  4 13:03:10.589: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:03:11.196653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:12.196741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:03:12.6
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:03:12.611
  E1104 13:03:13.196915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:13.611: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/04/23 13:03:13.68
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/04/23 13:03:13.721
  STEP: Deleting the collection of validation webhooks @ 11/04/23 13:03:13.765
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/04/23 13:03:13.815
  Nov  4 13:03:13.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1175" for this suite. @ 11/04/23 13:03:13.868
  STEP: Destroying namespace "webhook-markers-1493" for this suite. @ 11/04/23 13:03:13.882
• [3.844 seconds]
------------------------------
S
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 11/04/23 13:03:13.889
  Nov  4 13:03:13.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename controllerrevisions @ 11/04/23 13:03:13.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:03:13.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:03:13.905
  STEP: Creating DaemonSet "e2e-9b9ss-daemon-set" @ 11/04/23 13:03:13.927
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/04/23 13:03:13.935
  Nov  4 13:03:13.939: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:03:13.939: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:03:13.944: INFO: Number of nodes with available pods controlled by daemonset e2e-9b9ss-daemon-set: 0
  Nov  4 13:03:13.944: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  E1104 13:03:14.197287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:14.951: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:03:14.951: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:03:14.958: INFO: Number of nodes with available pods controlled by daemonset e2e-9b9ss-daemon-set: 0
  Nov  4 13:03:14.959: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  E1104 13:03:15.198069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:15.950: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:03:15.950: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:03:15.953: INFO: Number of nodes with available pods controlled by daemonset e2e-9b9ss-daemon-set: 3
  Nov  4 13:03:15.953: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-9b9ss-daemon-set
  STEP: Confirm DaemonSet "e2e-9b9ss-daemon-set" successfully created with "daemonset-name=e2e-9b9ss-daemon-set" label @ 11/04/23 13:03:15.957
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-9b9ss-daemon-set" @ 11/04/23 13:03:15.963
  Nov  4 13:03:15.966: INFO: Located ControllerRevision: "e2e-9b9ss-daemon-set-7745786575"
  STEP: Patching ControllerRevision "e2e-9b9ss-daemon-set-7745786575" @ 11/04/23 13:03:15.97
  Nov  4 13:03:15.977: INFO: e2e-9b9ss-daemon-set-7745786575 has been patched
  STEP: Create a new ControllerRevision @ 11/04/23 13:03:15.977
  Nov  4 13:03:15.983: INFO: Created ControllerRevision: e2e-9b9ss-daemon-set-77dc8dd575
  STEP: Confirm that there are two ControllerRevisions @ 11/04/23 13:03:15.983
  Nov  4 13:03:15.983: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov  4 13:03:15.986: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-9b9ss-daemon-set-7745786575" @ 11/04/23 13:03:15.986
  STEP: Confirm that there is only one ControllerRevision @ 11/04/23 13:03:15.992
  Nov  4 13:03:15.992: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov  4 13:03:15.996: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-9b9ss-daemon-set-77dc8dd575" @ 11/04/23 13:03:15.999
  Nov  4 13:03:16.007: INFO: e2e-9b9ss-daemon-set-77dc8dd575 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/04/23 13:03:16.007
  W1104 13:03:16.014665      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/04/23 13:03:16.014
  Nov  4 13:03:16.014: INFO: Requesting list of ControllerRevisions to confirm quantity
  E1104 13:03:16.199397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:17.019: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov  4 13:03:17.023: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-9b9ss-daemon-set-77dc8dd575=updated" @ 11/04/23 13:03:17.023
  STEP: Confirm that there is only one ControllerRevision @ 11/04/23 13:03:17.035
  Nov  4 13:03:17.035: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov  4 13:03:17.040: INFO: Found 1 ControllerRevisions
  Nov  4 13:03:17.047: INFO: ControllerRevision "e2e-9b9ss-daemon-set-64ff89986b" has revision 3
  STEP: Deleting DaemonSet "e2e-9b9ss-daemon-set" @ 11/04/23 13:03:17.052
  STEP: deleting DaemonSet.extensions e2e-9b9ss-daemon-set in namespace controllerrevisions-8664, will wait for the garbage collector to delete the pods @ 11/04/23 13:03:17.052
  Nov  4 13:03:17.113: INFO: Deleting DaemonSet.extensions e2e-9b9ss-daemon-set took: 6.310433ms
  E1104 13:03:17.199380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:17.213: INFO: Terminating DaemonSet.extensions e2e-9b9ss-daemon-set pods took: 100.308001ms
  E1104 13:03:18.200748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:03:19.118: INFO: Number of nodes with available pods controlled by daemonset e2e-9b9ss-daemon-set: 0
  Nov  4 13:03:19.118: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-9b9ss-daemon-set
  Nov  4 13:03:19.122: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27218"},"items":null}

  Nov  4 13:03:19.127: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27218"},"items":null}

  Nov  4 13:03:19.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8664" for this suite. @ 11/04/23 13:03:19.145
• [5.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/04/23 13:03:19.152
  Nov  4 13:03:19.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-pred @ 11/04/23 13:03:19.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:03:19.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:03:19.168
  Nov  4 13:03:19.171: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov  4 13:03:19.178: INFO: Waiting for terminating namespaces to be deleted...
  Nov  4 13:03:19.181: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-218 before test
  Nov  4 13:03:19.186: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-q5bhb from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.186: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov  4 13:03:19.186: INFO: nginx-ingress-controller-kubernetes-worker-45gdq from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.186: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:03:19.186: INFO: calico-node-ft4tq from kube-system started at 2023-11-04 11:55:46 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.186: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:03:19.186: INFO: coredns-59cfb5bf46-lztjc from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.186: INFO: 	Container coredns ready: true, restart count 0
  Nov  4 13:03:19.186: INFO: kube-state-metrics-78c475f58b-qrr4j from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.186: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov  4 13:03:19.187: INFO: metrics-server-v0.6.3-69d7fbfdf8-h454w from kube-system started at 2023-11-04 11:55:59 +0000 UTC (2 container statuses recorded)
  Nov  4 13:03:19.187: INFO: 	Container metrics-server ready: true, restart count 0
  Nov  4 13:03:19.187: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov  4 13:03:19.187: INFO: dashboard-metrics-scraper-5dd7cb5fc-sq444 from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.187: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov  4 13:03:19.187: INFO: kubernetes-dashboard-7b899cb9d9-s867z from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.187: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov  4 13:03:19.187: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-79s4x from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:03:19.187: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:03:19.187: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 13:03:19.187: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-44-230 before test
  Nov  4 13:03:19.192: INFO: nginx-ingress-controller-kubernetes-worker-7lhcf from ingress-nginx-kubernetes-worker started at 2023-11-04 12:17:30 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.192: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:03:19.192: INFO: calico-node-wsvp7 from kube-system started at 2023-11-04 11:55:50 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.192: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:03:19.192: INFO: sonobuoy from sonobuoy started at 2023-11-04 12:08:48 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.192: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov  4 13:03:19.192: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-t9qh4 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:03:19.192: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:03:19.192: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 13:03:19.192: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-75-164 before test
  Nov  4 13:03:19.197: INFO: nginx-ingress-controller-kubernetes-worker-sd86f from ingress-nginx-kubernetes-worker started at 2023-11-04 12:04:28 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.197: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:03:19.197: INFO: calico-node-pcwws from kube-system started at 2023-11-04 12:03:26 +0000 UTC (1 container statuses recorded)
  Nov  4 13:03:19.197: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:03:19.197: INFO: sonobuoy-e2e-job-62c1edfe32474614 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:03:19.197: INFO: 	Container e2e ready: true, restart count 0
  Nov  4 13:03:19.197: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:03:19.197: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-qzs89 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:03:19.197: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:03:19.197: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/04/23 13:03:19.197
  E1104 13:03:19.201424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:20.201622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:21.202710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/04/23 13:03:21.216
  STEP: Trying to apply a random label on the found node. @ 11/04/23 13:03:21.234
  STEP: verifying the node has the label kubernetes.io/e2e-52d48976-2912-4b98-9dc4-814b34bd70e5 95 @ 11/04/23 13:03:21.257
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/04/23 13:03:21.266
  E1104 13:03:22.202850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:23.202927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.44.230 on the node which pod4 resides and expect not scheduled @ 11/04/23 13:03:23.289
  E1104 13:03:24.203020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:25.203120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:26.203202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:27.204114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:28.204897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:29.204984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:30.205658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:31.205733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:32.206296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:33.206408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:34.206508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:35.206810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:36.206928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:37.207052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:38.207477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:39.207577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:40.207693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:41.207790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:42.207892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:43.207967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:44.208068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:45.208233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:46.208346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:47.208430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:48.208459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:49.208706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:50.208782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:51.208859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:52.208961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:53.209042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:54.209674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:55.210686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:56.210849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:57.210954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:58.211477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:03:59.211881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:00.212874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:01.213062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:02.213229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:03.213622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:04.213723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:05.214674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:06.214782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:07.214891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:08.214966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:09.215042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:10.215143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:11.215331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:12.215426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:13.215512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:14.216155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:15.216243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:16.216338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:17.217219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:18.217567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:19.217641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:20.217721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:21.218673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:22.219734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:23.219847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:24.220711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:25.220807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:26.220883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:27.221051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:28.221151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:29.221228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:30.222139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:31.223125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:32.223217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:33.223354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:34.223427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:35.223627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:36.223722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:37.224577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:38.224666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:39.225622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:40.225714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:41.225867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:42.226175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:43.226448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:44.226546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:45.226728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:46.227151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:47.227247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:48.227602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:49.227489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:50.227612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:51.227713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:52.228345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:53.228437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:54.228486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:55.228572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:56.228677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:57.228820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:58.229702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:04:59.229791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:00.229884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:01.230666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:02.231669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:03.231764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:04.231855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:05.231960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:06.232048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:07.232716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:08.232779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:09.232990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:10.233072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:11.233243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:12.234028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:13.234432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:14.234712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:15.235005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:16.236018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:17.236282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:18.236385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:19.236778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:20.236861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:21.237574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:22.238486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:23.238580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:24.238615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:25.238681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:26.238881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:27.238897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:28.238923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:29.239005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:30.239852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:31.239954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:32.240042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:33.240445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:34.240542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:35.240641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:36.240725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:37.240906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:38.241011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:39.241049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:40.241134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:41.241291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:42.242007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:43.242694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:44.242793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:45.242877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:46.242962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:47.243173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:48.243808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:49.243964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:50.244051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:51.244118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:52.244219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:53.244656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:54.245264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:55.245369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:56.245481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:57.245613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:58.245725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:05:59.246693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:00.247747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:01.247917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:02.248916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:03.249366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:04.249622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:05.249713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:06.249808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:07.249898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:08.250666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:09.251446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:10.251529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:11.251692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:12.252663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:13.252736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:14.252835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:15.253682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:16.253784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:17.253871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:18.254650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:19.254742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:20.254840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:21.255006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:22.255071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:23.255149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:24.256082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:25.256225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:26.256331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:27.257034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:28.258080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:29.258176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:30.258645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:31.258885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:32.258989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:33.259394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:34.259510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:35.260127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:36.260207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:37.260299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:38.261156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:39.262063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:40.262158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:41.262668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:42.263528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:43.263904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:44.264178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:45.264277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:46.264356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:47.265348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:48.265590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:49.265726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:50.266542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:51.266662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:52.267575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:53.267997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:54.268996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:55.269205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:56.269305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:57.269389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:58.270354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:06:59.270674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:00.270967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:01.271057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:02.272050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:03.272433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:04.272528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:05.272629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:06.272674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:07.272899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:08.273802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:09.274669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:10.275206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:11.275450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:12.275542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:13.276011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:14.276419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:15.276589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:16.277534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:17.277592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:18.277973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:19.278063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:20.278662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:21.278756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:22.279751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:23.279843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:24.280385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:25.280633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:26.280949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:27.281107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:28.281176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:29.281419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:30.282200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:31.282909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:32.283575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:33.283670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:34.284621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:35.284708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:36.285268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:37.285351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:38.285597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:39.285698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:40.286613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:41.286706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:42.287560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:43.287652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:44.288582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:45.288677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:46.288759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:47.289012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:48.290042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:49.290702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:50.291743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:51.291951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:52.292948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:53.293037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:54.293769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:55.293860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:56.294261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:57.294668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:58.294753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:07:59.295089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:00.295568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:01.295740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:02.296548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:03.296644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:04.297595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:05.297620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:06.297700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:07.298674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:08.299476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:09.299632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:10.300649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:11.300798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:12.301007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:13.301360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:14.301602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:15.301696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:16.301947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:17.302042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:18.302491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:19.302674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:20.303526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:21.303897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:22.303935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-52d48976-2912-4b98-9dc4-814b34bd70e5 off the node ip-172-31-44-230 @ 11/04/23 13:08:23.296
  E1104 13:08:23.304357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-52d48976-2912-4b98-9dc4-814b34bd70e5 @ 11/04/23 13:08:23.307
  Nov  4 13:08:23.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3360" for this suite. @ 11/04/23 13:08:23.315
• [304.170 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 11/04/23 13:08:23.322
  Nov  4 13:08:23.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/04/23 13:08:23.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:08:23.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:08:23.357
  STEP: create the container to handle the HTTPGet hook request. @ 11/04/23 13:08:23.365
  E1104 13:08:24.305184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:25.305400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/04/23 13:08:25.39
  E1104 13:08:26.305485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:27.305629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 11/04/23 13:08:27.41
  STEP: delete the pod with lifecycle hook @ 11/04/23 13:08:27.426
  E1104 13:08:28.306674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:29.307300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:08:29.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5642" for this suite. @ 11/04/23 13:08:29.446
• [6.132 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/04/23 13:08:29.455
  Nov  4 13:08:29.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-pred @ 11/04/23 13:08:29.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:08:29.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:08:29.474
  Nov  4 13:08:29.477: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov  4 13:08:29.484: INFO: Waiting for terminating namespaces to be deleted...
  Nov  4 13:08:29.487: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-218 before test
  Nov  4 13:08:29.493: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-q5bhb from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: nginx-ingress-controller-kubernetes-worker-45gdq from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: calico-node-ft4tq from kube-system started at 2023-11-04 11:55:46 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: coredns-59cfb5bf46-lztjc from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container coredns ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: kube-state-metrics-78c475f58b-qrr4j from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: metrics-server-v0.6.3-69d7fbfdf8-h454w from kube-system started at 2023-11-04 11:55:59 +0000 UTC (2 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container metrics-server ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: dashboard-metrics-scraper-5dd7cb5fc-sq444 from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: kubernetes-dashboard-7b899cb9d9-s867z from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-79s4x from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:08:29.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 13:08:29.493: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-44-230 before test
  Nov  4 13:08:29.498: INFO: pod-handle-http-request from container-lifecycle-hook-5642 started at 2023-11-04 13:08:23 +0000 UTC (2 container statuses recorded)
  Nov  4 13:08:29.498: INFO: 	Container container-handle-http-request ready: true, restart count 0
  Nov  4 13:08:29.498: INFO: 	Container container-handle-https-request ready: true, restart count 0
  Nov  4 13:08:29.498: INFO: nginx-ingress-controller-kubernetes-worker-7lhcf from ingress-nginx-kubernetes-worker started at 2023-11-04 12:17:30 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.498: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:08:29.498: INFO: calico-node-wsvp7 from kube-system started at 2023-11-04 11:55:50 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.498: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:08:29.498: INFO: sonobuoy from sonobuoy started at 2023-11-04 12:08:48 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.498: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov  4 13:08:29.498: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-t9qh4 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:08:29.499: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:08:29.499: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 13:08:29.499: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-75-164 before test
  Nov  4 13:08:29.504: INFO: nginx-ingress-controller-kubernetes-worker-sd86f from ingress-nginx-kubernetes-worker started at 2023-11-04 12:04:28 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.504: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:08:29.504: INFO: calico-node-pcwws from kube-system started at 2023-11-04 12:03:26 +0000 UTC (1 container statuses recorded)
  Nov  4 13:08:29.504: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:08:29.504: INFO: sonobuoy-e2e-job-62c1edfe32474614 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:08:29.504: INFO: 	Container e2e ready: true, restart count 0
  Nov  4 13:08:29.504: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:08:29.504: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-qzs89 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:08:29.504: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:08:29.504: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/04/23 13:08:29.504
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17946d7530dbb52e], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 11/04/23 13:08:29.53
  E1104 13:08:30.307748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:08:30.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5582" for this suite. @ 11/04/23 13:08:30.532
• [1.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/04/23 13:08:30.541
  Nov  4 13:08:30.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/04/23 13:08:30.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:08:30.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:08:30.558
  STEP: Setting up the test @ 11/04/23 13:08:30.562
  STEP: Creating hostNetwork=false pod @ 11/04/23 13:08:30.562
  E1104 13:08:31.308433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:32.308621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 11/04/23 13:08:32.589
  E1104 13:08:33.308710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:34.308802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 11/04/23 13:08:34.61
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/04/23 13:08:34.61
  Nov  4 13:08:34.610: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:34.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:34.610: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:34.611: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov  4 13:08:34.690: INFO: Exec stderr: ""
  Nov  4 13:08:34.691: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:34.691: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:34.691: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:34.691: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov  4 13:08:34.762: INFO: Exec stderr: ""
  Nov  4 13:08:34.762: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:34.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:34.763: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:34.763: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov  4 13:08:34.831: INFO: Exec stderr: ""
  Nov  4 13:08:34.831: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:34.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:34.831: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:34.832: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov  4 13:08:34.914: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/04/23 13:08:34.914
  Nov  4 13:08:34.914: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:34.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:34.915: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:34.915: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov  4 13:08:35.008: INFO: Exec stderr: ""
  Nov  4 13:08:35.008: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:35.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:35.009: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:35.009: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov  4 13:08:35.082: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/04/23 13:08:35.082
  Nov  4 13:08:35.082: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:35.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:35.083: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:35.083: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov  4 13:08:35.183: INFO: Exec stderr: ""
  Nov  4 13:08:35.183: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:35.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:35.184: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:35.184: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov  4 13:08:35.251: INFO: Exec stderr: ""
  Nov  4 13:08:35.251: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:35.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:35.252: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:35.252: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E1104 13:08:35.309566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:08:35.327: INFO: Exec stderr: ""
  Nov  4 13:08:35.327: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7169 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:08:35.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:08:35.328: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:08:35.328: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7169/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov  4 13:08:35.387: INFO: Exec stderr: ""
  Nov  4 13:08:35.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7169" for this suite. @ 11/04/23 13:08:35.391
• [4.859 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 11/04/23 13:08:35.402
  Nov  4 13:08:35.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 13:08:35.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:08:35.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:08:35.424
  E1104 13:08:36.309700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:37.309793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:08:37.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 13:08:37.451: INFO: Deleting pod "var-expansion-e0dd1089-603e-429b-9a37-33c45218fe02" in namespace "var-expansion-799"
  Nov  4 13:08:37.459: INFO: Wait up to 5m0s for pod "var-expansion-e0dd1089-603e-429b-9a37-33c45218fe02" to be fully deleted
  E1104 13:08:38.309894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:39.309977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-799" for this suite. @ 11/04/23 13:08:39.467
• [4.072 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/04/23 13:08:39.474
  Nov  4 13:08:39.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:08:39.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:08:39.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:08:39.492
  STEP: Creating projection with secret that has name projected-secret-test-22b10194-7e91-4163-b344-9f5a6aebff52 @ 11/04/23 13:08:39.495
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:08:39.501
  E1104 13:08:40.310699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:41.310796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:42.311165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:43.311502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:08:43.521
  Nov  4 13:08:43.525: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-secrets-163f5e30-cc36-4874-ac4b-f3c6da48378e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:08:43.531
  Nov  4 13:08:43.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1233" for this suite. @ 11/04/23 13:08:43.552
• [4.085 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 11/04/23 13:08:43.559
  Nov  4 13:08:43.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replication-controller @ 11/04/23 13:08:43.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:08:43.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:08:43.577
  STEP: Given a ReplicationController is created @ 11/04/23 13:08:43.581
  STEP: When the matched label of one of its pods change @ 11/04/23 13:08:43.586
  Nov  4 13:08:43.589: INFO: Pod name pod-release: Found 0 pods out of 1
  E1104 13:08:44.312551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:45.312766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:46.312865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:47.313023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:48.313756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:08:48.593: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/04/23 13:08:48.605
  E1104 13:08:49.313200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:08:49.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7795" for this suite. @ 11/04/23 13:08:49.618
• [6.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/04/23 13:08:49.625
  Nov  4 13:08:49.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-watch @ 11/04/23 13:08:49.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:08:49.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:08:49.648
  Nov  4 13:08:49.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:08:50.313581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:51.313630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 11/04/23 13:08:52.191
  Nov  4 13:08:52.195: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-04T13:08:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-04T13:08:52Z]] name:name1 resourceVersion:28240 uid:b88e0597-cbdb-487e-8b0a-0b35a59beb27] num:map[num1:9223372036854775807 num2:1000000]]}
  E1104 13:08:52.314172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:53.314246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:54.314690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:55.314774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:56.314889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:57.315788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:58.316859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:08:59.316998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:00.317088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:01.317182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 11/04/23 13:09:02.196
  Nov  4 13:09:02.202: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-04T13:09:02Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-04T13:09:02Z]] name:name2 resourceVersion:28288 uid:2085c7ea-b5f7-48a9-a88b-74d5ac5cf5eb] num:map[num1:9223372036854775807 num2:1000000]]}
  E1104 13:09:02.317744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:03.317839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:04.318676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:05.319386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:06.319764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:07.319961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:08.320051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:09.320239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:10.320802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:11.320894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 11/04/23 13:09:12.202
  Nov  4 13:09:12.209: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-04T13:08:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-04T13:09:12Z]] name:name1 resourceVersion:28308 uid:b88e0597-cbdb-487e-8b0a-0b35a59beb27] num:map[num1:9223372036854775807 num2:1000000]]}
  E1104 13:09:12.321689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:13.321785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:14.322669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:15.322840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:16.323050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:17.323238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:18.323498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:19.323717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:20.323803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:21.323960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 11/04/23 13:09:22.209
  Nov  4 13:09:22.216: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-04T13:09:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-04T13:09:22Z]] name:name2 resourceVersion:28328 uid:2085c7ea-b5f7-48a9-a88b-74d5ac5cf5eb] num:map[num1:9223372036854775807 num2:1000000]]}
  E1104 13:09:22.324046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:23.324152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:24.324322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:25.324477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:26.324712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:27.324806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:28.324900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:29.325040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:30.325139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:31.325225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 11/04/23 13:09:32.217
  Nov  4 13:09:32.225: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-04T13:08:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-04T13:09:12Z]] name:name1 resourceVersion:28348 uid:b88e0597-cbdb-487e-8b0a-0b35a59beb27] num:map[num1:9223372036854775807 num2:1000000]]}
  E1104 13:09:32.325599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:33.325679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:34.326684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:35.326782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:36.327447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:37.327640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:38.328091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:39.328161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:40.328258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:41.328434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 11/04/23 13:09:42.225
  Nov  4 13:09:42.233: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-04T13:09:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-04T13:09:22Z]] name:name2 resourceVersion:28368 uid:2085c7ea-b5f7-48a9-a88b-74d5ac5cf5eb] num:map[num1:9223372036854775807 num2:1000000]]}
  E1104 13:09:42.328932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:43.329257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:44.329350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:45.329537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:46.329621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:47.329703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:48.330668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:49.330847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:50.331572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:51.331789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:52.331979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:09:52.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9542" for this suite. @ 11/04/23 13:09:52.752
• [63.133 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 11/04/23 13:09:52.759
  Nov  4 13:09:52.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:09:52.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:09:52.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:09:52.778
  STEP: Creating configMap with name projected-configmap-test-volume-92afcaf5-6cbf-4010-8db1-b4ea822e4823 @ 11/04/23 13:09:52.782
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:09:52.786
  E1104 13:09:53.332043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:54.332132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:55.332926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:56.333028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:09:56.809
  Nov  4 13:09:56.812: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-configmaps-11df899f-cd68-4de2-9edf-dcd019fc1c41 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:09:56.818
  Nov  4 13:09:56.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4379" for this suite. @ 11/04/23 13:09:56.84
• [4.088 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 11/04/23 13:09:56.847
  Nov  4 13:09:56.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:09:56.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:09:56.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:09:56.864
  STEP: Setting up server cert @ 11/04/23 13:09:56.886
  E1104 13:09:57.334019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:09:57.411
  STEP: Deploying the webhook pod @ 11/04/23 13:09:57.42
  STEP: Wait for the deployment to be ready @ 11/04/23 13:09:57.433
  Nov  4 13:09:57.440: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:09:58.334412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:09:59.334488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:09:59.452
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:09:59.467
  E1104 13:10:00.334588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:10:00.467: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/04/23 13:10:00.475
  STEP: create a pod that should be denied by the webhook @ 11/04/23 13:10:00.488
  STEP: create a pod that causes the webhook to hang @ 11/04/23 13:10:00.496
  E1104 13:10:01.335585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:02.335625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:03.335963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:04.336550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:05.336712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:06.336802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:07.336975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:08.337069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:09.337991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:10.338670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 11/04/23 13:10:10.506
  STEP: create a configmap that should be admitted by the webhook @ 11/04/23 13:10:10.515
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/04/23 13:10:10.524
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/04/23 13:10:10.531
  STEP: create a namespace that bypass the webhook @ 11/04/23 13:10:10.536
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/04/23 13:10:10.55
  Nov  4 13:10:10.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8035" for this suite. @ 11/04/23 13:10:10.614
  STEP: Destroying namespace "webhook-markers-5466" for this suite. @ 11/04/23 13:10:10.623
  STEP: Destroying namespace "exempted-namespace-5403" for this suite. @ 11/04/23 13:10:10.629
• [13.790 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 11/04/23 13:10:10.637
  Nov  4 13:10:10.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:10:10.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:10:10.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:10:10.655
  STEP: creating the pod @ 11/04/23 13:10:10.658
  Nov  4 13:10:10.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 create -f -'
  Nov  4 13:10:11.032: INFO: stderr: ""
  Nov  4 13:10:11.032: INFO: stdout: "pod/pause created\n"
  E1104 13:10:11.339175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:12.339340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/04/23 13:10:13.042
  Nov  4 13:10:13.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 label pods pause testing-label=testing-label-value'
  Nov  4 13:10:13.099: INFO: stderr: ""
  Nov  4 13:10:13.099: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/04/23 13:10:13.099
  Nov  4 13:10:13.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 get pod pause -L testing-label'
  Nov  4 13:10:13.147: INFO: stderr: ""
  Nov  4 13:10:13.147: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/04/23 13:10:13.147
  Nov  4 13:10:13.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 label pods pause testing-label-'
  Nov  4 13:10:13.205: INFO: stderr: ""
  Nov  4 13:10:13.205: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/04/23 13:10:13.205
  Nov  4 13:10:13.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 get pod pause -L testing-label'
  Nov  4 13:10:13.252: INFO: stderr: ""
  Nov  4 13:10:13.252: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 11/04/23 13:10:13.252
  Nov  4 13:10:13.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 delete --grace-period=0 --force -f -'
  Nov  4 13:10:13.310: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:10:13.310: INFO: stdout: "pod \"pause\" force deleted\n"
  Nov  4 13:10:13.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 get rc,svc -l name=pause --no-headers'
  E1104 13:10:13.340359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:10:13.367: INFO: stderr: "No resources found in kubectl-6815 namespace.\n"
  Nov  4 13:10:13.367: INFO: stdout: ""
  Nov  4 13:10:13.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6815 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov  4 13:10:13.417: INFO: stderr: ""
  Nov  4 13:10:13.417: INFO: stdout: ""
  Nov  4 13:10:13.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6815" for this suite. @ 11/04/23 13:10:13.426
• [2.798 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 11/04/23 13:10:13.436
  Nov  4 13:10:13.436: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 13:10:13.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:10:13.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:10:13.455
  STEP: Creating a test externalName service @ 11/04/23 13:10:13.458
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7645.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7645.svc.cluster.local; sleep 1; done
   @ 11/04/23 13:10:13.464
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7645.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7645.svc.cluster.local; sleep 1; done
   @ 11/04/23 13:10:13.464
  STEP: creating a pod to probe DNS @ 11/04/23 13:10:13.464
  STEP: submitting the pod to kubernetes @ 11/04/23 13:10:13.464
  E1104 13:10:14.340406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:15.341304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/04/23 13:10:15.485
  STEP: looking for the results for each expected name from probers @ 11/04/23 13:10:15.489
  Nov  4 13:10:15.500: INFO: DNS probes using dns-test-6e7d7049-2411-4948-b38c-6d03e5ad1e76 succeeded

  STEP: changing the externalName to bar.example.com @ 11/04/23 13:10:15.5
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7645.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7645.svc.cluster.local; sleep 1; done
   @ 11/04/23 13:10:15.51
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7645.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7645.svc.cluster.local; sleep 1; done
   @ 11/04/23 13:10:15.51
  STEP: creating a second pod to probe DNS @ 11/04/23 13:10:15.51
  STEP: submitting the pod to kubernetes @ 11/04/23 13:10:15.51
  E1104 13:10:16.341787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:17.342791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:18.342844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:19.342959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:20.343029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:21.343205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/04/23 13:10:21.538
  STEP: looking for the results for each expected name from probers @ 11/04/23 13:10:21.542
  Nov  4 13:10:21.551: INFO: DNS probes using dns-test-e2f214ae-4e9b-4e24-9e31-53df43347063 succeeded

  STEP: changing the service to type=ClusterIP @ 11/04/23 13:10:21.551
  W1104 13:10:21.566156      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7645.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7645.svc.cluster.local; sleep 1; done
   @ 11/04/23 13:10:21.566
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7645.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7645.svc.cluster.local; sleep 1; done
   @ 11/04/23 13:10:21.566
  STEP: creating a third pod to probe DNS @ 11/04/23 13:10:21.566
  STEP: submitting the pod to kubernetes @ 11/04/23 13:10:21.57
  E1104 13:10:22.343335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:23.343402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/04/23 13:10:23.588
  STEP: looking for the results for each expected name from probers @ 11/04/23 13:10:23.591
  Nov  4 13:10:23.599: INFO: DNS probes using dns-test-5eb169fe-8b54-47c6-b9bc-127948b358e9 succeeded

  Nov  4 13:10:23.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:10:23.603
  STEP: deleting the pod @ 11/04/23 13:10:23.614
  STEP: deleting the pod @ 11/04/23 13:10:23.634
  STEP: deleting the test externalName service @ 11/04/23 13:10:23.646
  STEP: Destroying namespace "dns-7645" for this suite. @ 11/04/23 13:10:23.662
• [10.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 11/04/23 13:10:23.671
  Nov  4 13:10:23.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 13:10:23.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:10:23.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:10:23.692
  STEP: Creating projection with secret that has name secret-emptykey-test-69e960e2-ffba-4aef-b399-50da6778e728 @ 11/04/23 13:10:23.695
  Nov  4 13:10:23.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6901" for this suite. @ 11/04/23 13:10:23.701
• [0.037 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 11/04/23 13:10:23.708
  Nov  4 13:10:23.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:10:23.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:10:23.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:10:23.726
  STEP: Creating configMap with name cm-test-opt-del-cbe12a01-b70c-4cfc-903f-e7e186a6db83 @ 11/04/23 13:10:23.733
  STEP: Creating configMap with name cm-test-opt-upd-39634835-3259-4df1-a355-008b8e252e0b @ 11/04/23 13:10:23.739
  STEP: Creating the pod @ 11/04/23 13:10:23.744
  E1104 13:10:24.344073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:25.344169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-cbe12a01-b70c-4cfc-903f-e7e186a6db83 @ 11/04/23 13:10:25.797
  STEP: Updating configmap cm-test-opt-upd-39634835-3259-4df1-a355-008b8e252e0b @ 11/04/23 13:10:25.807
  STEP: Creating configMap with name cm-test-opt-create-3bea7c71-3c46-452b-9813-835b96097cdc @ 11/04/23 13:10:25.82
  STEP: waiting to observe update in volume @ 11/04/23 13:10:25.825
  E1104 13:10:26.345159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:27.345354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:28.345453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:29.345629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:30.345713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:31.346642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:32.346751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:33.347142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:34.347217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:35.347473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:36.348074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:37.348207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:38.348288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:39.348384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:40.349002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:41.349224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:42.349485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:43.349631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:44.350673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:45.350868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:46.350954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:47.351966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:48.352161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:49.352143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:50.353016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:51.353101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:52.353660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:53.354671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:54.354868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:55.355082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:56.355683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:57.355851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:58.356764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:10:59.357623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:00.358169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:01.358669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:02.359497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:03.359818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:04.360702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:05.360799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:06.361435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:07.361605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:08.361699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:09.361791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:10.362671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:11.362763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:12.362985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:13.363078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:14.363274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:15.363997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:16.364084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:17.364246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:18.364488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:19.364638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:20.365219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:21.365390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:22.366044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:23.366289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:24.367143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:25.367244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:26.367333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:27.367664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:28.367757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:29.368414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:30.369047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:31.369138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:32.370048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:33.370152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:34.370666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:35.370814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:36.371763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:37.371927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:38.372773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:39.372868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:40.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8022" for this suite. @ 11/04/23 13:11:40.14
• [76.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/04/23 13:11:40.148
  Nov  4 13:11:40.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubelet-test @ 11/04/23 13:11:40.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:11:40.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:11:40.167
  E1104 13:11:40.373777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:41.373857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:42.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6869" for this suite. @ 11/04/23 13:11:42.219
• [2.078 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 11/04/23 13:11:42.226
  Nov  4 13:11:42.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 13:11:42.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:11:42.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:11:42.251
  STEP: Creating a test headless service @ 11/04/23 13:11:42.254
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8451.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8451.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8451.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8451.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 82.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.82_udp@PTR;check="$$(dig +tcp +noall +answer +search 82.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.82_tcp@PTR;sleep 1; done
   @ 11/04/23 13:11:42.279
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8451.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8451.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8451.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8451.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8451.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 82.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.82_udp@PTR;check="$$(dig +tcp +noall +answer +search 82.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.82_tcp@PTR;sleep 1; done
   @ 11/04/23 13:11:42.279
  STEP: creating a pod to probe DNS @ 11/04/23 13:11:42.279
  STEP: submitting the pod to kubernetes @ 11/04/23 13:11:42.279
  E1104 13:11:42.374618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:43.375038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/04/23 13:11:44.319
  STEP: looking for the results for each expected name from probers @ 11/04/23 13:11:44.323
  Nov  4 13:11:44.329: INFO: Unable to read wheezy_udp@dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  Nov  4 13:11:44.333: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  Nov  4 13:11:44.338: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  Nov  4 13:11:44.342: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  Nov  4 13:11:44.364: INFO: Unable to read jessie_udp@dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  Nov  4 13:11:44.369: INFO: Unable to read jessie_tcp@dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  Nov  4 13:11:44.373: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  E1104 13:11:44.375837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:44.378: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local from pod dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6: the server could not find the requested resource (get pods dns-test-ac05469e-2acc-427f-8183-364d9a554ed6)
  Nov  4 13:11:44.395: INFO: Lookups using dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6 failed for: [wheezy_udp@dns-test-service.dns-8451.svc.cluster.local wheezy_tcp@dns-test-service.dns-8451.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local jessie_udp@dns-test-service.dns-8451.svc.cluster.local jessie_tcp@dns-test-service.dns-8451.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8451.svc.cluster.local]

  Nov  4 13:11:44.403: INFO: Pod client logs for webserver: 
  Nov  4 13:11:44.410: INFO: Pod client logs for querier: 
  Nov  4 13:11:44.417: INFO: Pod client logs for jessie-querier: 
  E1104 13:11:45.376534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:46.376690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:47.379208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:48.379248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:49.379338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:49.487: INFO: DNS probes using dns-8451/dns-test-ac05469e-2acc-427f-8183-364d9a554ed6 succeeded

  Nov  4 13:11:49.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:11:49.492
  STEP: deleting the test service @ 11/04/23 13:11:49.507
  STEP: deleting the test headless service @ 11/04/23 13:11:49.539
  STEP: Destroying namespace "dns-8451" for this suite. @ 11/04/23 13:11:49.56
• [7.347 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 11/04/23 13:11:49.574
  Nov  4 13:11:49.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:11:49.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:11:49.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:11:49.596
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/04/23 13:11:49.6
  Nov  4 13:11:49.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-8899 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov  4 13:11:49.659: INFO: stderr: ""
  Nov  4 13:11:49.659: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/04/23 13:11:49.659
  Nov  4 13:11:49.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-8899 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Nov  4 13:11:49.714: INFO: stderr: ""
  Nov  4 13:11:49.714: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/04/23 13:11:49.714
  Nov  4 13:11:49.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-8899 delete pods e2e-test-httpd-pod'
  E1104 13:11:50.379374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:51.379548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:51.489: INFO: stderr: ""
  Nov  4 13:11:51.489: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov  4 13:11:51.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8899" for this suite. @ 11/04/23 13:11:51.493
• [1.926 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 11/04/23 13:11:51.501
  Nov  4 13:11:51.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 13:11:51.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:11:51.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:11:51.52
  STEP: Creating pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075 @ 11/04/23 13:11:51.523
  E1104 13:11:52.379643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:53.380018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 13:11:53.542
  Nov  4 13:11:53.546: INFO: Initial restart count of pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 is 0
  Nov  4 13:11:53.549: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:11:54.380123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:55.380198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:55.553: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:11:56.380309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:57.381286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:57.557: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:11:58.381356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:11:59.382297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:11:59.562: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:00.382379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:01.382698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:01.566: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:02.383689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:03.384100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:03.572: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:04.384849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:05.384917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:05.575: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:06.385650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:07.386704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:07.579: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:08.387017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:09.387200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:09.583: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:10.387777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:11.387954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:11.588: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:12.388030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:13.388465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:13.592: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:14.389075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:15.389248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:15.597: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:16.389703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:17.389784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:17.601: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:18.389889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:19.390693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:19.605: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:20.391654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:21.391753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:21.609: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:22.392402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:23.392666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:23.613: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:24.393519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:25.393680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:25.617: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:26.394718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:27.394900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:27.622: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:28.395934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:29.396104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:29.625: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:30.396448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:31.397076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:31.630: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:32.397621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:33.397683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:33.634: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:34.398679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:35.398776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:35.639: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:36.399484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:37.399574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:37.643: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:38.399664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:39.399742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:39.647: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:40.400380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:41.401291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:41.652: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:42.401741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:43.402669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:43.658: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:44.402987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:45.403084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:45.662: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:46.403152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:47.403334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:47.666: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:48.403679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:49.403770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:49.671: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:50.403805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:51.404012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:51.675: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:52.404106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:53.404198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:53.680: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:54.404319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:55.405278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:55.684: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:56.406353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:57.407319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:57.688: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:12:58.407410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:12:59.407739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:12:59.693: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:13:00.407912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:01.408087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:13:01.697: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:13:02.408173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:03.408684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:13:03.702: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:13:04.408779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:05.408944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:13:05.707: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  E1104 13:13:06.408988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:07.409480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:13:07.711: INFO: Get pod test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 in namespace container-probe-9075
  Nov  4 13:13:07.711: INFO: Restart count of pod container-probe-9075/test-grpc-94b07017-8ae7-4ebb-8db5-4734ecc64145 is now 1 (1m14.165539635s elapsed)
  Nov  4 13:13:07.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:13:07.715
  STEP: Destroying namespace "container-probe-9075" for this suite. @ 11/04/23 13:13:07.727
• [76.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 11/04/23 13:13:07.735
  Nov  4 13:13:07.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 13:13:07.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:13:07.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:13:07.754
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/04/23 13:13:07.757
  Nov  4 13:13:07.767: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3023  59f1bd89-4a22-4024-a083-c9c6d1581b51 29299 0 2023-11-04 13:13:07 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-11-04 13:13:07 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8h7c2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8h7c2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1104 13:13:08.410368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:09.410463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/04/23 13:13:09.775
  Nov  4 13:13:09.775: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3023 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:13:09.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:13:09.776: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:13:09.776: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3023/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 11/04/23 13:13:09.853
  Nov  4 13:13:09.853: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3023 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:13:09.853: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:13:09.854: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:13:09.854: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3023/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov  4 13:13:09.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 13:13:09.937: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-3023" for this suite. @ 11/04/23 13:13:09.951
• [2.223 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 11/04/23 13:13:09.958
  Nov  4 13:13:09.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:13:09.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:13:09.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:13:09.976
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:13:09.979
  E1104 13:13:10.410545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:11.410725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:12.410838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:13.410910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:13:14
  Nov  4 13:13:14.004: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-c958877f-2938-492c-a34c-319c6afe894f container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:13:14.016
  Nov  4 13:13:14.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7550" for this suite. @ 11/04/23 13:13:14.039
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 11/04/23 13:13:14.045
  Nov  4 13:13:14.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 13:13:14.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:13:14.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:13:14.064
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/04/23 13:13:14.067
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/04/23 13:13:14.067
  STEP: creating a pod to probe DNS @ 11/04/23 13:13:14.067
  STEP: submitting the pod to kubernetes @ 11/04/23 13:13:14.067
  E1104 13:13:14.411894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:15.411996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/04/23 13:13:16.086
  STEP: looking for the results for each expected name from probers @ 11/04/23 13:13:16.09
  Nov  4 13:13:16.104: INFO: DNS probes using dns-7620/dns-test-4d4bf487-4724-4de7-b878-342b9a5c7478 succeeded

  Nov  4 13:13:16.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:13:16.108
  STEP: Destroying namespace "dns-7620" for this suite. @ 11/04/23 13:13:16.119
• [2.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 11/04/23 13:13:16.127
  Nov  4 13:13:16.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 13:13:16.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:13:16.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:13:16.146
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6177 @ 11/04/23 13:13:16.149
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/04/23 13:13:16.165
  STEP: creating service externalsvc in namespace services-6177 @ 11/04/23 13:13:16.165
  STEP: creating replication controller externalsvc in namespace services-6177 @ 11/04/23 13:13:16.181
  I1104 13:13:16.188040      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6177, replica count: 2
  E1104 13:13:16.412432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:17.413183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:18.414233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1104 13:13:19.239226      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/04/23 13:13:19.243
  Nov  4 13:13:19.259: INFO: Creating new exec pod
  E1104 13:13:19.414932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:20.415160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:13:21.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-6177 exec execpodtv8kx -- /bin/sh -x -c nslookup clusterip-service.services-6177.svc.cluster.local'
  E1104 13:13:21.415979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:13:21.423: INFO: stderr: "+ nslookup clusterip-service.services-6177.svc.cluster.local\n"
  Nov  4 13:13:21.423: INFO: stdout: "Server:\t\t10.152.183.121\nAddress:\t10.152.183.121#53\n\nclusterip-service.services-6177.svc.cluster.local\tcanonical name = externalsvc.services-6177.svc.cluster.local.\nName:\texternalsvc.services-6177.svc.cluster.local\nAddress: 10.152.183.181\n\n"
  Nov  4 13:13:21.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-6177, will wait for the garbage collector to delete the pods @ 11/04/23 13:13:21.427
  Nov  4 13:13:21.489: INFO: Deleting ReplicationController externalsvc took: 7.788042ms
  Nov  4 13:13:21.589: INFO: Terminating ReplicationController externalsvc pods took: 100.139532ms
  E1104 13:13:22.416410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:23.416807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:24.416961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:13:24.708: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-6177" for this suite. @ 11/04/23 13:13:24.721
• [8.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/04/23 13:13:24.732
  Nov  4 13:13:24.732: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 13:13:24.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:13:24.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:13:24.751
  STEP: creating the pod @ 11/04/23 13:13:24.755
  STEP: submitting the pod to kubernetes @ 11/04/23 13:13:24.755
  STEP: verifying QOS class is set on the pod @ 11/04/23 13:13:24.763
  Nov  4 13:13:24.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2769" for this suite. @ 11/04/23 13:13:24.774
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 11/04/23 13:13:24.784
  Nov  4 13:13:24.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 13:13:24.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:13:24.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:13:24.804
  STEP: creating the pod with failed condition @ 11/04/23 13:13:24.809
  E1104 13:13:25.417958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:26.418054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:27.418675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:28.419065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:29.419172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:30.419279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:31.419370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:32.419460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:33.419570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:34.419643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:35.419749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:36.420241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:37.420311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:38.421154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:39.421229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:40.421635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:41.422320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:42.423169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:43.423270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:44.424346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:45.424440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:46.424628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:47.425453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:48.425609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:49.425731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:50.425814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:51.426679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:52.426754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:53.426862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:54.427779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:55.428621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:56.428706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:57.429483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:58.429620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:13:59.430384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:00.430691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:01.430785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:02.430869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:03.430968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:04.431153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:05.431250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:06.431378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:07.431479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:08.431795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:09.432404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:10.432594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:11.433513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:12.433815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:13.433925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:14.434013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:15.434100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:16.434219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:17.434669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:18.434980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:19.435993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:20.436117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:21.437126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:22.437446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:23.437632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:24.437716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:25.438686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:26.439188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:27.439806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:28.440278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:29.440747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:30.441048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:31.441138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:32.442070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:33.442103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:34.442183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:35.442273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:36.442689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:37.443748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:38.443932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:39.444014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:40.444102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:41.444736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:42.445739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:43.445827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:44.446725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:45.447111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:46.447204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:47.447636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:48.447848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:49.448519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:50.449568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:51.449608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:52.449956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:53.450664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:54.450766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:55.451285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:56.451369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:57.452338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:58.452582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:14:59.453122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:00.453266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:01.454234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:02.454922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:03.455074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:04.455187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:05.455272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:06.455454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:07.455804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:08.455953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:09.456811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:10.456903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:11.457286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:12.457935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:13.458665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:14.459212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:15.460132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:16.460228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:17.461032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:18.461187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:19.462225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:20.462670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:21.463657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:22.463964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:23.464089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:24.464278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 11/04/23 13:15:24.82
  Nov  4 13:15:25.336: INFO: Successfully updated pod "var-expansion-2883a4ce-1fda-4c2d-869c-9d5cdd2d7dd6"
  STEP: waiting for pod running @ 11/04/23 13:15:25.336
  E1104 13:15:25.464818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:26.465003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/04/23 13:15:27.344
  Nov  4 13:15:27.344: INFO: Deleting pod "var-expansion-2883a4ce-1fda-4c2d-869c-9d5cdd2d7dd6" in namespace "var-expansion-4015"
  Nov  4 13:15:27.353: INFO: Wait up to 5m0s for pod "var-expansion-2883a4ce-1fda-4c2d-869c-9d5cdd2d7dd6" to be fully deleted
  E1104 13:15:27.465995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:28.466014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:29.466872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:30.466954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:31.467300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:32.467977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:33.468014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:34.468758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:35.469124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:36.469287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:37.470287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:38.470697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:39.471200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:40.471575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:41.471614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:42.471734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:43.471899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:44.472062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:45.472369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:46.473378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:47.473728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:48.473824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:49.474567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:50.474678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:51.475593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:52.475663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:53.475864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:54.475963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:55.476437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:56.476525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:57.476714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:15:58.477630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:15:59.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4015" for this suite. @ 11/04/23 13:15:59.433
• [154.655 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 11/04/23 13:15:59.439
  Nov  4 13:15:59.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename job @ 11/04/23 13:15:59.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:15:59.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:15:59.461
  STEP: Creating a job @ 11/04/23 13:15:59.464
  STEP: Ensuring active pods == parallelism @ 11/04/23 13:15:59.471
  E1104 13:15:59.478253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:00.478379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 11/04/23 13:16:01.475
  STEP: deleting Job.batch foo in namespace job-9579, will wait for the garbage collector to delete the pods @ 11/04/23 13:16:01.475
  E1104 13:16:01.478551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:16:01.535: INFO: Deleting Job.batch foo took: 6.643352ms
  Nov  4 13:16:01.636: INFO: Terminating Job.batch foo pods took: 100.592019ms
  E1104 13:16:02.479062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:03.480099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:04.481100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:05.482101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:06.482488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:07.482704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:08.483637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:09.484686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:10.485644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:11.486705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:12.486933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:13.486956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:14.487010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:15.487064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:16.487762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:17.487835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:18.488805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:19.489818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:20.490787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:21.491804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:22.492863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:23.492904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:24.493927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:25.495010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:26.495060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:27.495241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:28.496124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:29.496330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:30.497277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:31.498318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:32.498672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 11/04/23 13:16:33.036
  Nov  4 13:16:33.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9579" for this suite. @ 11/04/23 13:16:33.044
• [33.612 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 11/04/23 13:16:33.052
  Nov  4 13:16:33.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename daemonsets @ 11/04/23 13:16:33.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:16:33.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:16:33.075
  STEP: Creating simple DaemonSet "daemon-set" @ 11/04/23 13:16:33.099
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/04/23 13:16:33.105
  Nov  4 13:16:33.110: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:16:33.110: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:16:33.113: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 13:16:33.113: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  E1104 13:16:33.499033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:16:34.118: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:16:34.118: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:16:34.122: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov  4 13:16:34.122: INFO: Node ip-172-31-75-164 is running 0 daemon pod, expected 1
  E1104 13:16:34.499363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:16:35.118: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:16:35.118: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:16:35.121: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 13:16:35.121: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/04/23 13:16:35.125
  Nov  4 13:16:35.128: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/04/23 13:16:35.128
  Nov  4 13:16:35.141: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/04/23 13:16:35.141
  Nov  4 13:16:35.143: INFO: Observed &DaemonSet event: ADDED
  Nov  4 13:16:35.143: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.143: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.143: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.143: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.143: INFO: Found daemon set daemon-set in namespace daemonsets-1745 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov  4 13:16:35.143: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/04/23 13:16:35.143
  STEP: watching for the daemon set status to be patched @ 11/04/23 13:16:35.149
  Nov  4 13:16:35.151: INFO: Observed &DaemonSet event: ADDED
  Nov  4 13:16:35.151: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.151: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.151: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.151: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.151: INFO: Observed daemon set daemon-set in namespace daemonsets-1745 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov  4 13:16:35.151: INFO: Observed &DaemonSet event: MODIFIED
  Nov  4 13:16:35.151: INFO: Found daemon set daemon-set in namespace daemonsets-1745 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Nov  4 13:16:35.151: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/04/23 13:16:35.156
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1745, will wait for the garbage collector to delete the pods @ 11/04/23 13:16:35.156
  Nov  4 13:16:35.226: INFO: Deleting DaemonSet.extensions daemon-set took: 15.878641ms
  Nov  4 13:16:35.326: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.279462ms
  E1104 13:16:35.501728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:36.502483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:16:36.531: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 13:16:36.531: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov  4 13:16:36.534: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30152"},"items":null}

  Nov  4 13:16:36.537: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30152"},"items":null}

  Nov  4 13:16:36.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1745" for this suite. @ 11/04/23 13:16:36.553
• [3.508 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/04/23 13:16:36.561
  Nov  4 13:16:36.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-runtime @ 11/04/23 13:16:36.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:16:36.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:16:36.58
  STEP: create the container @ 11/04/23 13:16:36.583
  W1104 13:16:36.592079      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/04/23 13:16:36.592
  E1104 13:16:37.503066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:38.504068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:39.504167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/04/23 13:16:39.609
  STEP: the container should be terminated @ 11/04/23 13:16:39.612
  STEP: the termination message should be set @ 11/04/23 13:16:39.612
  Nov  4 13:16:39.612: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/04/23 13:16:39.612
  Nov  4 13:16:39.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8082" for this suite. @ 11/04/23 13:16:39.633
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/04/23 13:16:39.64
  Nov  4 13:16:39.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/04/23 13:16:39.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:16:39.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:16:39.662
  STEP: creating a target pod @ 11/04/23 13:16:39.665
  E1104 13:16:40.504196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:41.504305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/04/23 13:16:41.686
  E1104 13:16:42.504975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:43.505175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/04/23 13:16:43.706
  Nov  4 13:16:43.706: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7971 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:16:43.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:16:43.706: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:16:43.706: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7971/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Nov  4 13:16:43.791: INFO: Exec stderr: ""
  Nov  4 13:16:43.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7971" for this suite. @ 11/04/23 13:16:43.81
• [4.177 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/04/23 13:16:43.817
  Nov  4 13:16:43.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename init-container @ 11/04/23 13:16:43.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:16:43.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:16:43.839
  STEP: creating the pod @ 11/04/23 13:16:43.842
  Nov  4 13:16:43.842: INFO: PodSpec: initContainers in spec.initContainers
  E1104 13:16:44.505638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:45.506587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:46.507208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:47.507656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:48.507870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:49.507955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:50.508139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:51.508316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:52.508974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:53.509185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:54.509276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:55.509506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:56.509614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:57.509837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:58.510811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:16:59.511671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:00.511762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:01.511865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:02.512186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:03.512445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:04.512625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:05.512788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:06.512936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:07.513062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:08.513918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:09.514019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:10.514672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:11.514816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:12.514900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:13.515170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:14.515564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:15.516133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:16.516227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:17.516849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:18.516947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:19.517033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:20.517853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:21.517952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:22.517985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:23.518681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:24.518715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:25.519609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:25.563: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-2f5584ee-dee2-4b48-bb6c-05e74f9af512", GenerateName:"", Namespace:"init-container-559", SelfLink:"", UID:"279e43bc-73f1-43b0-8242-b84389d669a1", ResourceVersion:"30395", Generation:0, CreationTimestamp:time.Date(2023, time.November, 4, 13, 16, 43, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"842251739"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 4, 13, 16, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b25d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 4, 13, 17, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2618), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-s5xpl", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005083b00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s5xpl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s5xpl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s5xpl", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0040ed368), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-75-164", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0062d0150), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040ed400)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0040ed420)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0040ed428), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0040ed42c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00100a3e0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 4, 13, 16, 43, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 4, 13, 16, 43, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 4, 13, 16, 43, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 4, 13, 16, 43, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.75.164", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.193.97", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.193.97"}}, StartTime:time.Date(2023, time.November, 4, 13, 16, 43, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0062d0230)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0062d02a0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://d3fae562c871033ae8cb56d25b1ca82ded9dc0de6cd73123966b578a670fd6ce", Started:(*bool)(0xc0040ed4cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005083b80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0040ed4d5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005083b60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0040ed4a4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Nov  4 13:17:25.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-559" for this suite. @ 11/04/23 13:17:25.57
• [41.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 11/04/23 13:17:25.58
  Nov  4 13:17:25.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:17:25.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:25.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:25.606
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:17:25.609
  E1104 13:17:26.519716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:27.519805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:28.519894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:29.520003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:17:29.634
  Nov  4 13:17:29.637: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-801e59a3-b841-4a51-9af6-8f8ea81b0b7a container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:17:29.644
  Nov  4 13:17:29.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8726" for this suite. @ 11/04/23 13:17:29.666
• [4.093 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 11/04/23 13:17:29.673
  Nov  4 13:17:29.673: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 13:17:29.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:29.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:29.695
  STEP: Counting existing ResourceQuota @ 11/04/23 13:17:29.699
  E1104 13:17:30.520059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:31.520161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:32.521012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:33.521627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:34.522678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/04/23 13:17:34.703
  STEP: Ensuring resource quota status is calculated @ 11/04/23 13:17:34.708
  E1104 13:17:35.522781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:36.522977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 11/04/23 13:17:36.713
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/04/23 13:17:36.729
  E1104 13:17:37.523821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:38.523995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/04/23 13:17:38.734
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/04/23 13:17:38.736
  STEP: Ensuring a pod cannot update its resource requirements @ 11/04/23 13:17:38.738
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/04/23 13:17:38.742
  E1104 13:17:39.524668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:40.524733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/04/23 13:17:40.746
  STEP: Ensuring resource quota status released the pod usage @ 11/04/23 13:17:40.76
  E1104 13:17:41.525752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:42.526672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:42.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5346" for this suite. @ 11/04/23 13:17:42.77
• [13.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/04/23 13:17:42.778
  Nov  4 13:17:42.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubelet-test @ 11/04/23 13:17:42.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:42.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:42.796
  Nov  4 13:17:42.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-930" for this suite. @ 11/04/23 13:17:42.821
• [0.050 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 11/04/23 13:17:42.828
  Nov  4 13:17:42.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 13:17:42.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:42.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:42.846
  STEP: creating a Service @ 11/04/23 13:17:42.853
  STEP: watching for the Service to be added @ 11/04/23 13:17:42.863
  Nov  4 13:17:42.866: INFO: Found Service test-service-tr782 in namespace services-7872 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Nov  4 13:17:42.866: INFO: Service test-service-tr782 created
  STEP: Getting /status @ 11/04/23 13:17:42.866
  Nov  4 13:17:42.870: INFO: Service test-service-tr782 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/04/23 13:17:42.87
  STEP: watching for the Service to be patched @ 11/04/23 13:17:42.876
  Nov  4 13:17:42.878: INFO: observed Service test-service-tr782 in namespace services-7872 with annotations: map[] & LoadBalancer: {[]}
  Nov  4 13:17:42.878: INFO: Found Service test-service-tr782 in namespace services-7872 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Nov  4 13:17:42.878: INFO: Service test-service-tr782 has service status patched
  STEP: updating the ServiceStatus @ 11/04/23 13:17:42.878
  Nov  4 13:17:42.886: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/04/23 13:17:42.886
  Nov  4 13:17:42.889: INFO: Observed Service test-service-tr782 in namespace services-7872 with annotations: map[] & Conditions: {[]}
  Nov  4 13:17:42.889: INFO: Observed event: &Service{ObjectMeta:{test-service-tr782  services-7872  b53bd999-473b-4095-af78-e7e9507e493d 30525 0 2023-11-04 13:17:42 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-11-04 13:17:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-11-04 13:17:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.194,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.194],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Nov  4 13:17:42.889: INFO: Found Service test-service-tr782 in namespace services-7872 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov  4 13:17:42.889: INFO: Service test-service-tr782 has service status updated
  STEP: patching the service @ 11/04/23 13:17:42.889
  STEP: watching for the Service to be patched @ 11/04/23 13:17:42.901
  Nov  4 13:17:42.903: INFO: observed Service test-service-tr782 in namespace services-7872 with labels: map[test-service-static:true]
  Nov  4 13:17:42.903: INFO: observed Service test-service-tr782 in namespace services-7872 with labels: map[test-service-static:true]
  Nov  4 13:17:42.903: INFO: observed Service test-service-tr782 in namespace services-7872 with labels: map[test-service-static:true]
  Nov  4 13:17:42.903: INFO: Found Service test-service-tr782 in namespace services-7872 with labels: map[test-service:patched test-service-static:true]
  Nov  4 13:17:42.903: INFO: Service test-service-tr782 patched
  STEP: deleting the service @ 11/04/23 13:17:42.903
  STEP: watching for the Service to be deleted @ 11/04/23 13:17:42.916
  Nov  4 13:17:42.918: INFO: Observed event: ADDED
  Nov  4 13:17:42.918: INFO: Observed event: MODIFIED
  Nov  4 13:17:42.918: INFO: Observed event: MODIFIED
  Nov  4 13:17:42.918: INFO: Observed event: MODIFIED
  Nov  4 13:17:42.918: INFO: Found Service test-service-tr782 in namespace services-7872 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Nov  4 13:17:42.918: INFO: Service test-service-tr782 deleted
  Nov  4 13:17:42.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7872" for this suite. @ 11/04/23 13:17:42.922
• [0.099 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 11/04/23 13:17:42.928
  Nov  4 13:17:42.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/04/23 13:17:42.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:42.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:42.946
  Nov  4 13:17:42.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:17:43.527587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:44.527679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:45.528707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:46.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1267" for this suite. @ 11/04/23 13:17:46.055
• [3.136 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/04/23 13:17:46.064
  Nov  4 13:17:46.064: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename daemonsets @ 11/04/23 13:17:46.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:46.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:46.082
  Nov  4 13:17:46.107: INFO: Create a RollingUpdate DaemonSet
  Nov  4 13:17:46.112: INFO: Check that daemon pods launch on every node of the cluster
  Nov  4 13:17:46.117: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:46.117: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:46.122: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 13:17:46.122: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  E1104 13:17:46.529693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:47.126: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:47.126: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:47.129: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov  4 13:17:47.129: INFO: Node ip-172-31-75-164 is running 0 daemon pod, expected 1
  E1104 13:17:47.530392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:48.126: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:48.126: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:48.132: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 13:17:48.132: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Nov  4 13:17:48.132: INFO: Update the DaemonSet to trigger a rollout
  Nov  4 13:17:48.143: INFO: Updating DaemonSet daemon-set
  E1104 13:17:48.530487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:49.160: INFO: Roll back the DaemonSet before rollout is complete
  Nov  4 13:17:49.169: INFO: Updating DaemonSet daemon-set
  Nov  4 13:17:49.169: INFO: Make sure DaemonSet rollback is complete
  Nov  4 13:17:49.174: INFO: Wrong image for pod: daemon-set-js8tl. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Nov  4 13:17:49.174: INFO: Pod daemon-set-js8tl is not available
  Nov  4 13:17:49.178: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:49.178: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1104 13:17:49.530733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:50.187: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:50.187: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1104 13:17:50.531759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:51.192: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:51.192: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1104 13:17:51.532683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:52.183: INFO: Pod daemon-set-zm5ts is not available
  Nov  4 13:17:52.187: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:17:52.187: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 11/04/23 13:17:52.194
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8730, will wait for the garbage collector to delete the pods @ 11/04/23 13:17:52.194
  Nov  4 13:17:52.256: INFO: Deleting DaemonSet.extensions daemon-set took: 7.971063ms
  Nov  4 13:17:52.357: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.878963ms
  E1104 13:17:52.533389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:53.534464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:17:54.061: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 13:17:54.061: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov  4 13:17:54.065: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30723"},"items":null}

  Nov  4 13:17:54.068: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30723"},"items":null}

  Nov  4 13:17:54.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8730" for this suite. @ 11/04/23 13:17:54.085
• [8.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/04/23 13:17:54.092
  Nov  4 13:17:54.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 13:17:54.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:54.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:54.11
  STEP: Creating secret with name secret-test-78ff9ec4-97f6-47f3-af5f-0a47a40a62c7 @ 11/04/23 13:17:54.113
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:17:54.118
  E1104 13:17:54.534563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:55.534678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:56.535286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:57.536096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:17:58.139
  Nov  4 13:17:58.143: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-66e06eb3-df8b-4618-b5f7-7987c55ec1c8 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:17:58.149
  Nov  4 13:17:58.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6580" for this suite. @ 11/04/23 13:17:58.169
• [4.089 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 11/04/23 13:17:58.181
  Nov  4 13:17:58.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:17:58.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:17:58.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:17:58.201
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/04/23 13:17:58.205
  E1104 13:17:58.536620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:17:59.536713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:00.537461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:01.537629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:18:02.228
  Nov  4 13:18:02.232: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-97bac107-1699-412b-ae8f-3380c3319aa5 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:18:02.239
  Nov  4 13:18:02.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-653" for this suite. @ 11/04/23 13:18:02.255
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/04/23 13:18:02.264
  Nov  4 13:18:02.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename cronjob @ 11/04/23 13:18:02.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:18:02.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:18:02.282
  STEP: Creating a cronjob @ 11/04/23 13:18:02.285
  STEP: Ensuring more than one job is running at a time @ 11/04/23 13:18:02.292
  E1104 13:18:02.538516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:03.538610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:04.539678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:05.539958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:06.539982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:07.540876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:08.541274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:09.541394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:10.542137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:11.542228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:12.542623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:13.542723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:14.543571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:15.545443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:16.546348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:17.547113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:18.547353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:19.548209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:20.548520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:21.548698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:22.548725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:23.548817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:24.549684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:25.549730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:26.550505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:27.551091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:28.551954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:29.552288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:30.552635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:31.552814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:32.553258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:33.553421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:34.554220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:35.554430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:36.555097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:37.555211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:38.555976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:39.556185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:40.557050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:41.557148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:42.557420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:43.557683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:44.558683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:45.558785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:46.559627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:47.560324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:48.560688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:49.560546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:50.561384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:51.561565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:52.562447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:53.562604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:54.563538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:55.563844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:56.564400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:57.565125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:58.565178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:18:59.565274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:00.565775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:01.566686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:02.566755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:03.566841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:04.567844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:05.567927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:06.568674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:07.568821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:08.569383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:09.569485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:10.570215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:11.570305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:12.570679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:13.570775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:14.571516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:15.571700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:16.572473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:17.572698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:18.573263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:19.573343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:20.573828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:21.573920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:22.573977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:23.574057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:24.574679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:25.575564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:26.575655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:27.576266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:28.577272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:29.577897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:30.578343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:31.578689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:32.579657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:33.579841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:34.580757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:35.580854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:36.581654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:37.581921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:38.582982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:39.583217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:40.583261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:41.583352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:42.583383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:43.583455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:44.583917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:45.584965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:46.585064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:47.585083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:48.585185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:49.585288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:50.585352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:51.585556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:52.586593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:53.587376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:54.588226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:55.588323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:56.588422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:57.588916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:58.589947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:19:59.590031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/04/23 13:20:00.297
  STEP: Removing cronjob @ 11/04/23 13:20:00.301
  Nov  4 13:20:00.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1597" for this suite. @ 11/04/23 13:20:00.312
• [118.055 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 11/04/23 13:20:00.322
  Nov  4 13:20:00.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename podtemplate @ 11/04/23 13:20:00.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:00.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:00.391
  Nov  4 13:20:00.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6293" for this suite. @ 11/04/23 13:20:00.441
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 11/04/23 13:20:00.449
  Nov  4 13:20:00.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:20:00.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:00.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:00.467
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:20:00.471
  E1104 13:20:00.590099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:01.590200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:02.591048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:03.591530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:20:04.495
  Nov  4 13:20:04.499: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-207a81c1-c3f3-4470-9736-c59f0511aa7d container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:20:04.511
  Nov  4 13:20:04.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6718" for this suite. @ 11/04/23 13:20:04.529
• [4.087 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/04/23 13:20:04.536
  Nov  4 13:20:04.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubelet-test @ 11/04/23 13:20:04.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:04.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:04.555
  STEP: Waiting for pod completion @ 11/04/23 13:20:04.567
  E1104 13:20:04.592414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:05.592703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:06.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-589" for this suite. @ 11/04/23 13:20:06.588
  E1104 13:20:06.593145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 11/04/23 13:20:06.595
  Nov  4 13:20:06.595: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-webhook @ 11/04/23 13:20:06.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:06.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:06.612
  STEP: Setting up server cert @ 11/04/23 13:20:06.616
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/04/23 13:20:06.818
  STEP: Deploying the custom resource conversion webhook pod @ 11/04/23 13:20:06.826
  STEP: Wait for the deployment to be ready @ 11/04/23 13:20:06.84
  Nov  4 13:20:06.847: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1104 13:20:07.594206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:08.594707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:20:08.859
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:20:08.872
  E1104 13:20:09.594787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:09.873: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov  4 13:20:09.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:20:10.595118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:11.595292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/04/23 13:20:12.447
  STEP: v2 custom resource should be converted @ 11/04/23 13:20:12.452
  Nov  4 13:20:12.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1104 13:20:12.596056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-8953" for this suite. @ 11/04/23 13:20:13.015
• [6.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 11/04/23 13:20:13.03
  Nov  4 13:20:13.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:20:13.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:13.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:13.054
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:20:13.058
  E1104 13:20:13.596938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:14.597534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:15.597681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:16.597831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:20:17.083
  Nov  4 13:20:17.086: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-b8ba80e4-8e59-46ee-a2bb-f7b815c46db4 container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:20:17.093
  Nov  4 13:20:17.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5203" for this suite. @ 11/04/23 13:20:17.11
• [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 11/04/23 13:20:17.118
  Nov  4 13:20:17.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename runtimeclass @ 11/04/23 13:20:17.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:17.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:17.134
  Nov  4 13:20:17.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5055" for this suite. @ 11/04/23 13:20:17.176
• [0.065 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 11/04/23 13:20:17.182
  Nov  4 13:20:17.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:20:17.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:17.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:17.199
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/04/23 13:20:17.202
  E1104 13:20:17.597888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:18.598690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:19.598714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:20.598821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:20:21.222
  Nov  4 13:20:21.225: INFO: Trying to get logs from node ip-172-31-75-164 pod pod-94ba84f4-1248-439c-87f4-3af580d9f5c4 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:20:21.243
  Nov  4 13:20:21.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5649" for this suite. @ 11/04/23 13:20:21.261
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/04/23 13:20:21.271
  Nov  4 13:20:21.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-pred @ 11/04/23 13:20:21.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:21.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:21.288
  Nov  4 13:20:21.292: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov  4 13:20:21.299: INFO: Waiting for terminating namespaces to be deleted...
  Nov  4 13:20:21.302: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-218 before test
  Nov  4 13:20:21.307: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-q5bhb from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.307: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov  4 13:20:21.307: INFO: nginx-ingress-controller-kubernetes-worker-45gdq from ingress-nginx-kubernetes-worker started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.307: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:20:21.307: INFO: calico-node-ft4tq from kube-system started at 2023-11-04 11:55:46 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.307: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: coredns-59cfb5bf46-lztjc from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.308: INFO: 	Container coredns ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: kube-state-metrics-78c475f58b-qrr4j from kube-system started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.308: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: metrics-server-v0.6.3-69d7fbfdf8-h454w from kube-system started at 2023-11-04 11:55:59 +0000 UTC (2 container statuses recorded)
  Nov  4 13:20:21.308: INFO: 	Container metrics-server ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: dashboard-metrics-scraper-5dd7cb5fc-sq444 from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.308: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: kubernetes-dashboard-7b899cb9d9-s867z from kubernetes-dashboard started at 2023-11-04 11:55:59 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.308: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-79s4x from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:20:21.308: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 13:20:21.308: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-44-230 before test
  Nov  4 13:20:21.313: INFO: concurrent-28318399-2tm8b from cronjob-1597 started at 2023-11-04 13:19:00 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.313: INFO: 	Container c ready: true, restart count 0
  Nov  4 13:20:21.313: INFO: nginx-ingress-controller-kubernetes-worker-7lhcf from ingress-nginx-kubernetes-worker started at 2023-11-04 12:17:30 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.313: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:20:21.313: INFO: calico-node-wsvp7 from kube-system started at 2023-11-04 11:55:50 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.313: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:20:21.313: INFO: test-runtimeclass-runtimeclass-5055-preconfigured-handler-tq56h from runtimeclass-5055 started at 2023-11-04 13:20:17 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.313: INFO: 	Container test ready: false, restart count 0
  Nov  4 13:20:21.313: INFO: sonobuoy from sonobuoy started at 2023-11-04 12:08:48 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.313: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov  4 13:20:21.313: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-t9qh4 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:20:21.313: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:20:21.313: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov  4 13:20:21.313: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-75-164 before test
  Nov  4 13:20:21.318: INFO: nginx-ingress-controller-kubernetes-worker-sd86f from ingress-nginx-kubernetes-worker started at 2023-11-04 12:04:28 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.318: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov  4 13:20:21.318: INFO: calico-node-pcwws from kube-system started at 2023-11-04 12:03:26 +0000 UTC (1 container statuses recorded)
  Nov  4 13:20:21.318: INFO: 	Container calico-node ready: true, restart count 0
  Nov  4 13:20:21.319: INFO: sonobuoy-e2e-job-62c1edfe32474614 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:20:21.319: INFO: 	Container e2e ready: true, restart count 0
  Nov  4 13:20:21.319: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:20:21.319: INFO: sonobuoy-systemd-logs-daemon-set-5275133b46c64358-qzs89 from sonobuoy started at 2023-11-04 12:08:50 +0000 UTC (2 container statuses recorded)
  Nov  4 13:20:21.319: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov  4 13:20:21.319: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/04/23 13:20:21.319
  E1104 13:20:21.599102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:22.599859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/04/23 13:20:23.337
  STEP: Trying to apply a random label on the found node. @ 11/04/23 13:20:23.357
  STEP: verifying the node has the label kubernetes.io/e2e-719cd7fd-812f-42b3-9b5d-dd26a16c418a 42 @ 11/04/23 13:20:23.367
  STEP: Trying to relaunch the pod, now with labels. @ 11/04/23 13:20:23.371
  E1104 13:20:23.600090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:24.600289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-719cd7fd-812f-42b3-9b5d-dd26a16c418a off the node ip-172-31-75-164 @ 11/04/23 13:20:25.394
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-719cd7fd-812f-42b3-9b5d-dd26a16c418a @ 11/04/23 13:20:25.406
  Nov  4 13:20:25.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9046" for this suite. @ 11/04/23 13:20:25.415
• [4.156 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 11/04/23 13:20:25.428
  Nov  4 13:20:25.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename limitrange @ 11/04/23 13:20:25.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:25.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:25.467
  STEP: Creating LimitRange "e2e-limitrange-wrnbb" in namespace "limitrange-379" @ 11/04/23 13:20:25.471
  STEP: Creating another limitRange in another namespace @ 11/04/23 13:20:25.482
  Nov  4 13:20:25.501: INFO: Namespace "e2e-limitrange-wrnbb-7806" created
  Nov  4 13:20:25.501: INFO: Creating LimitRange "e2e-limitrange-wrnbb" in namespace "e2e-limitrange-wrnbb-7806"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-wrnbb" @ 11/04/23 13:20:25.508
  Nov  4 13:20:25.512: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-wrnbb" in "limitrange-379" namespace @ 11/04/23 13:20:25.512
  Nov  4 13:20:25.521: INFO: LimitRange "e2e-limitrange-wrnbb" has been patched
  STEP: Delete LimitRange "e2e-limitrange-wrnbb" by Collection with labelSelector: "e2e-limitrange-wrnbb=patched" @ 11/04/23 13:20:25.521
  STEP: Confirm that the limitRange "e2e-limitrange-wrnbb" has been deleted @ 11/04/23 13:20:25.529
  Nov  4 13:20:25.529: INFO: Requesting list of LimitRange to confirm quantity
  Nov  4 13:20:25.532: INFO: Found 0 LimitRange with label "e2e-limitrange-wrnbb=patched"
  Nov  4 13:20:25.532: INFO: LimitRange "e2e-limitrange-wrnbb" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-wrnbb" @ 11/04/23 13:20:25.532
  Nov  4 13:20:25.535: INFO: Found 1 limitRange
  Nov  4 13:20:25.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-379" for this suite. @ 11/04/23 13:20:25.539
  STEP: Destroying namespace "e2e-limitrange-wrnbb-7806" for this suite. @ 11/04/23 13:20:25.547
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 11/04/23 13:20:25.566
  Nov  4 13:20:25.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replication-controller @ 11/04/23 13:20:25.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:25.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:25.593
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/04/23 13:20:25.596
  E1104 13:20:25.600432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:26.600571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:27.600876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 11/04/23 13:20:27.618
  STEP: Then the orphan pod is adopted @ 11/04/23 13:20:27.624
  E1104 13:20:28.601631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:28.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5843" for this suite. @ 11/04/23 13:20:28.635
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 11/04/23 13:20:28.643
  Nov  4 13:20:28.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 13:20:28.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:28.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:28.661
  STEP: creating a collection of services @ 11/04/23 13:20:28.664
  Nov  4 13:20:28.664: INFO: Creating e2e-svc-a-d5ms9
  Nov  4 13:20:28.675: INFO: Creating e2e-svc-b-gnsv5
  Nov  4 13:20:28.685: INFO: Creating e2e-svc-c-xqx77
  STEP: deleting service collection @ 11/04/23 13:20:28.703
  Nov  4 13:20:28.732: INFO: Collection of services has been deleted
  Nov  4 13:20:28.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9887" for this suite. @ 11/04/23 13:20:28.736
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 11/04/23 13:20:28.743
  Nov  4 13:20:28.743: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 13:20:28.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:28.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:28.761
  Nov  4 13:20:28.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:20:29.601654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/04/23 13:20:30.019
  Nov  4 13:20:30.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 create -f -'
  Nov  4 13:20:30.376: INFO: stderr: ""
  Nov  4 13:20:30.376: INFO: stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov  4 13:20:30.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 delete e2e-test-crd-publish-openapi-2627-crds test-foo'
  Nov  4 13:20:30.450: INFO: stderr: ""
  Nov  4 13:20:30.450: INFO: stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Nov  4 13:20:30.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 apply -f -'
  E1104 13:20:30.602287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:30.932: INFO: stderr: ""
  Nov  4 13:20:30.932: INFO: stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov  4 13:20:30.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 delete e2e-test-crd-publish-openapi-2627-crds test-foo'
  Nov  4 13:20:30.991: INFO: stderr: ""
  Nov  4 13:20:30.991: INFO: stdout: "e2e-test-crd-publish-openapi-2627-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/04/23 13:20:30.991
  Nov  4 13:20:30.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 create -f -'
  Nov  4 13:20:31.103: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/04/23 13:20:31.103
  Nov  4 13:20:31.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 create -f -'
  Nov  4 13:20:31.212: INFO: rc: 1
  Nov  4 13:20:31.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 apply -f -'
  Nov  4 13:20:31.328: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/04/23 13:20:31.328
  Nov  4 13:20:31.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 create -f -'
  Nov  4 13:20:31.430: INFO: rc: 1
  Nov  4 13:20:31.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 --namespace=crd-publish-openapi-5441 apply -f -'
  Nov  4 13:20:31.545: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/04/23 13:20:31.545
  Nov  4 13:20:31.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 explain e2e-test-crd-publish-openapi-2627-crds'
  E1104 13:20:31.603252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:31.651: INFO: stderr: ""
  Nov  4 13:20:31.651: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/04/23 13:20:31.651
  Nov  4 13:20:31.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 explain e2e-test-crd-publish-openapi-2627-crds.metadata'
  Nov  4 13:20:31.754: INFO: stderr: ""
  Nov  4 13:20:31.754: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Nov  4 13:20:31.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 explain e2e-test-crd-publish-openapi-2627-crds.spec'
  Nov  4 13:20:31.866: INFO: stderr: ""
  Nov  4 13:20:31.866: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Nov  4 13:20:31.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 explain e2e-test-crd-publish-openapi-2627-crds.spec.bars'
  Nov  4 13:20:31.978: INFO: stderr: ""
  Nov  4 13:20:31.978: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2627-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/04/23 13:20:31.978
  Nov  4 13:20:31.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-5441 explain e2e-test-crd-publish-openapi-2627-crds.spec.bars2'
  Nov  4 13:20:32.083: INFO: rc: 1
  E1104 13:20:32.603641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:33.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5441" for this suite. @ 11/04/23 13:20:33.329
• [4.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/04/23 13:20:33.337
  Nov  4 13:20:33.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-runtime @ 11/04/23 13:20:33.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:33.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:33.354
  STEP: create the container @ 11/04/23 13:20:33.357
  W1104 13:20:33.367677      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/04/23 13:20:33.367
  E1104 13:20:33.604653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:34.605517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:35.605959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/04/23 13:20:36.384
  STEP: the container should be terminated @ 11/04/23 13:20:36.388
  STEP: the termination message should be set @ 11/04/23 13:20:36.388
  Nov  4 13:20:36.388: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/04/23 13:20:36.388
  Nov  4 13:20:36.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1692" for this suite. @ 11/04/23 13:20:36.41
• [3.081 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 11/04/23 13:20:36.418
  Nov  4 13:20:36.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 13:20:36.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:20:36.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:20:36.435
  STEP: Creating pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548 @ 11/04/23 13:20:36.438
  E1104 13:20:36.606482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:37.607170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 13:20:38.452
  Nov  4 13:20:38.456: INFO: Initial restart count of pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 is 0
  Nov  4 13:20:38.459: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:38.608110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:39.608256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:40.464: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:40.609257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:41.609353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:42.469: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:42.610246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:43.610325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:44.473: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:44.611249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:45.612117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:46.478: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:46.612578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:47.613422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:48.482: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:48.614022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:49.614088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:50.486: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:50.614113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:51.614682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:52.491: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:52.615687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:53.616547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:54.495: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:54.616643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:55.616890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:56.500: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:56.617371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:57.617552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:20:58.504: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:20:58.618638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:20:59.618730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:00.508: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:00.619661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:01.619756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:02.513: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:02.620242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:03.620338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:04.516: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:04.621212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:05.621297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:06.521: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:06.621631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:07.621862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:08.525: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:08.622940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:09.623113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:10.529: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:10.623825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:11.623914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:12.534: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:12.624958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:13.625138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:14.539: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:14.625318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:15.625410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:16.543: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:16.625611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:17.626705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:18.547: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:18.626743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:19.626862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:20.551: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:20.627547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:21.627637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:22.555: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:22.627871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:23.627979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:24.559: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:24.628125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:25.628232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:26.564: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:26.628560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:27.629189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:28.568: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:28.629744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:29.629846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:30.572: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:30.630786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:31.630861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:32.577: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:32.631381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:33.632328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:34.581: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:34.632993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:35.633057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:36.586: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:36.633584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:37.633942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:38.590: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:38.634085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:39.634672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:40.595: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:40.634998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:41.635096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:42.600: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:42.635231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:43.635457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:44.604: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:44.635507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:45.635599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:46.608: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:46.635978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:47.636138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:48.612: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:48.636888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:49.637016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:50.616: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:50.637022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:51.637108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:52.621: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:52.637539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:53.637682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:54.625: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:54.638604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:55.639221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:56.630: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:56.639377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:57.640232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:21:58.635: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:21:58.640506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:21:59.641117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:00.639: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:00.641621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:01.641747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:02.642173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:02.643: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:03.642829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:04.643818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:04.647: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:05.643978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:06.644067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:06.653: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:07.644162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:08.644264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:08.658: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:09.644362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:10.644420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:10.663: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:11.644842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:12.645893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:12.668: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:13.645990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:14.646079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:14.673: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:15.646446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:16.646533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:16.679: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:17.647200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:18.647305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:18.684: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:19.647398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:20.647575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:20.689: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:21.647690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:22.648678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:22.693: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:23.648821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:24.649002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:24.698: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:25.649528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:26.649640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:26.703: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:27.650208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:28.650313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:28.707: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:29.650693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:30.651063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:30.711: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:31.651738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:32.652121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:32.716: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:33.652213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:34.652381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:34.720: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:35.652470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:36.652681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:36.725: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:37.653220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:38.653307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:38.729: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:39.653355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:40.653540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:40.733: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:41.653623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:42.654711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:42.738: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:43.654975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:44.655131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:44.743: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:45.655212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:46.655375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:46.748: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:47.656220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:48.656994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:48.753: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:49.657371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:50.657458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:50.757: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:51.657599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:52.658659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:52.761: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:53.658750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:54.658816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:54.765: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:55.659276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:56.659371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:56.771: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:57.660226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:22:58.661116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:22:58.776: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:22:59.661781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:00.662671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:00.780: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:01.663701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:02.664064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:02.785: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:03.664325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:04.665212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:04.789: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:05.666071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:06.666673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:06.794: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:07.667005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:08.668023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:08.798: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:09.668322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:10.668480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:10.802: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:11.669134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:12.669891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:12.807: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:13.670668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:14.670759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:14.811: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:15.671217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:16.671414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:16.817: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:17.671897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:18.672000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:18.821: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:19.672252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:20.672468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:20.825: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:21.672548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:22.672898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:22.829: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:23.673907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:24.674666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:24.834: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:25.675626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:26.676556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:26.839: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:27.677005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:28.677115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:28.842: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:29.677610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:30.677703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:30.846: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:31.678666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:32.679673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:32.851: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:33.680022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:34.680118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:34.861: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:35.680215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:36.680385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:36.866: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:37.680996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:38.681085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:38.870: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:39.681122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:40.681209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:40.874: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:41.682245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:42.682650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:42.879: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:43.682856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:44.683138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:44.883: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:45.683614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:46.683710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:46.888: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:47.684155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:48.684322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:48.892: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:49.684415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:50.684512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:50.896: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:51.685507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:52.686544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:52.900: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:53.687522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:54.687620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:54.904: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:55.688355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:56.688585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:56.909: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:57.689019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:23:58.689177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:23:58.913: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:23:59.690174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:00.690265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:00.917: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:01.690667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:02.690755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:02.922: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:03.690795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:04.690983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:04.926: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:05.691744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:06.691900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:06.931: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:07.692257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:08.693037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:08.936: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:09.693319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:10.693412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:10.940: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:11.693528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:12.693807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:12.945: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:13.694727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:14.694824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:14.949: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:15.695769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:16.696289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:16.954: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:17.696373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:18.697304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:18.959: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:19.697510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:20.697628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:20.963: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:21.697718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:22.698109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:22.968: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:23.698236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:24.698290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:24.973: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:25.698692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:26.699157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:26.977: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:27.699804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:28.699909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:28.981: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:29.700793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:30.701196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:30.986: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:31.700969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:32.701893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:32.991: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:33.701975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:34.702670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:34.995: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:35.702750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:36.702842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:37.000: INFO: Get pod liveness-0978510b-7c4a-4d7e-b513-b8239bb8db25 in namespace container-probe-1548
  E1104 13:24:37.703503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:38.703681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:39.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:24:39.005
  STEP: Destroying namespace "container-probe-1548" for this suite. @ 11/04/23 13:24:39.02
• [242.609 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 11/04/23 13:24:39.028
  Nov  4 13:24:39.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:24:39.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:24:39.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:24:39.048
  STEP: creating all guestbook components @ 11/04/23 13:24:39.051
  Nov  4 13:24:39.051: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Nov  4 13:24:39.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 create -f -'
  Nov  4 13:24:39.380: INFO: stderr: ""
  Nov  4 13:24:39.380: INFO: stdout: "service/agnhost-replica created\n"
  Nov  4 13:24:39.380: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Nov  4 13:24:39.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 create -f -'
  Nov  4 13:24:39.682: INFO: stderr: ""
  Nov  4 13:24:39.682: INFO: stdout: "service/agnhost-primary created\n"
  Nov  4 13:24:39.682: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Nov  4 13:24:39.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 create -f -'
  E1104 13:24:39.704085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:39.845: INFO: stderr: ""
  Nov  4 13:24:39.845: INFO: stdout: "service/frontend created\n"
  Nov  4 13:24:39.845: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Nov  4 13:24:39.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 create -f -'
  Nov  4 13:24:39.980: INFO: stderr: ""
  Nov  4 13:24:39.980: INFO: stdout: "deployment.apps/frontend created\n"
  Nov  4 13:24:39.980: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov  4 13:24:39.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 create -f -'
  Nov  4 13:24:40.107: INFO: stderr: ""
  Nov  4 13:24:40.107: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Nov  4 13:24:40.107: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov  4 13:24:40.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 create -f -'
  Nov  4 13:24:40.238: INFO: stderr: ""
  Nov  4 13:24:40.238: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/04/23 13:24:40.238
  Nov  4 13:24:40.238: INFO: Waiting for all frontend pods to be Running.
  E1104 13:24:40.706398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:41.707230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:42.707723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:43.707810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:44.707888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:45.293: INFO: Waiting for frontend to serve content.
  Nov  4 13:24:45.305: INFO: Trying to add a new entry to the guestbook.
  Nov  4 13:24:45.316: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/04/23 13:24:45.325
  Nov  4 13:24:45.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 delete --grace-period=0 --force -f -'
  Nov  4 13:24:45.392: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:24:45.392: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/04/23 13:24:45.392
  Nov  4 13:24:45.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 delete --grace-period=0 --force -f -'
  Nov  4 13:24:45.457: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:24:45.458: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/04/23 13:24:45.458
  Nov  4 13:24:45.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 delete --grace-period=0 --force -f -'
  Nov  4 13:24:45.535: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:24:45.535: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/04/23 13:24:45.536
  Nov  4 13:24:45.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 delete --grace-period=0 --force -f -'
  Nov  4 13:24:45.617: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:24:45.618: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/04/23 13:24:45.618
  Nov  4 13:24:45.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 delete --grace-period=0 --force -f -'
  Nov  4 13:24:45.693: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:24:45.693: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/04/23 13:24:45.693
  Nov  4 13:24:45.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-5990 delete --grace-period=0 --force -f -'
  E1104 13:24:45.708456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:45.766: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:24:45.766: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Nov  4 13:24:45.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5990" for this suite. @ 11/04/23 13:24:45.77
• [6.751 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 11/04/23 13:24:45.779
  Nov  4 13:24:45.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename field-validation @ 11/04/23 13:24:45.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:24:45.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:24:45.811
  Nov  4 13:24:45.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:24:46.709105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:47.709967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1104 13:24:48.380407      19 warnings.go:70] unknown field "alpha"
  W1104 13:24:48.380426      19 warnings.go:70] unknown field "beta"
  W1104 13:24:48.380430      19 warnings.go:70] unknown field "delta"
  W1104 13:24:48.380434      19 warnings.go:70] unknown field "epsilon"
  W1104 13:24:48.380437      19 warnings.go:70] unknown field "gamma"
  E1104 13:24:48.710068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:48.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6129" for this suite. @ 11/04/23 13:24:48.926
• [3.157 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 11/04/23 13:24:48.936
  Nov  4 13:24:48.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replicaset @ 11/04/23 13:24:48.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:24:48.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:24:48.955
  STEP: Create a ReplicaSet @ 11/04/23 13:24:48.958
  STEP: Verify that the required pods have come up @ 11/04/23 13:24:48.963
  Nov  4 13:24:48.967: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1104 13:24:49.710185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:50.710373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:51.710452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:52.710535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:53.710773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:24:53.971: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/04/23 13:24:53.971
  Nov  4 13:24:53.976: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/04/23 13:24:53.976
  STEP: DeleteCollection of the ReplicaSets @ 11/04/23 13:24:53.979
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/04/23 13:24:53.988
  Nov  4 13:24:53.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2551" for this suite. @ 11/04/23 13:24:53.999
• [5.076 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 11/04/23 13:24:54.014
  Nov  4 13:24:54.014: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:24:54.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:24:54.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:24:54.036
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/04/23 13:24:54.039
  E1104 13:24:54.710868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:55.710952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:56.711692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:57.712151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:24:58.064
  Nov  4 13:24:58.067: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-154e3240-1e4b-41a1-b271-38900880cc05 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:24:58.084
  Nov  4 13:24:58.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6324" for this suite. @ 11/04/23 13:24:58.102
• [4.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 11/04/23 13:24:58.11
  Nov  4 13:24:58.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename job @ 11/04/23 13:24:58.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:24:58.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:24:58.128
  STEP: Creating a job @ 11/04/23 13:24:58.133
  STEP: Ensuring active pods == parallelism @ 11/04/23 13:24:58.138
  E1104 13:24:58.712303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:24:59.712323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 11/04/23 13:25:00.143
  Nov  4 13:25:00.659: INFO: Successfully updated pod "adopt-release-l5729"
  STEP: Checking that the Job readopts the Pod @ 11/04/23 13:25:00.659
  E1104 13:25:00.713233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:01.713397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 11/04/23 13:25:02.667
  E1104 13:25:02.713998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:25:03.182: INFO: Successfully updated pod "adopt-release-l5729"
  STEP: Checking that the Job releases the Pod @ 11/04/23 13:25:03.182
  E1104 13:25:03.714055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:04.715102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:25:05.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1578" for this suite. @ 11/04/23 13:25:05.194
• [7.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 11/04/23 13:25:05.203
  Nov  4 13:25:05.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:25:05.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:25:05.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:25:05.222
  STEP: Creating a pod to test downward api env vars @ 11/04/23 13:25:05.225
  E1104 13:25:05.715247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:06.715352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:07.715808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:08.716705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:25:09.252
  Nov  4 13:25:09.256: INFO: Trying to get logs from node ip-172-31-44-230 pod downward-api-a53c4a98-4bab-4f8b-bd88-2e50d8e4d20a container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 13:25:09.262
  Nov  4 13:25:09.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6090" for this suite. @ 11/04/23 13:25:09.283
• [4.087 seconds]
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 11/04/23 13:25:09.29
  Nov  4 13:25:09.290: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename discovery @ 11/04/23 13:25:09.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:25:09.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:25:09.307
  STEP: Setting up server cert @ 11/04/23 13:25:09.311
  Nov  4 13:25:09.545: INFO: Checking APIGroup: apiregistration.k8s.io
  Nov  4 13:25:09.546: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Nov  4 13:25:09.546: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Nov  4 13:25:09.546: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Nov  4 13:25:09.546: INFO: Checking APIGroup: apps
  Nov  4 13:25:09.547: INFO: PreferredVersion.GroupVersion: apps/v1
  Nov  4 13:25:09.547: INFO: Versions found [{apps/v1 v1}]
  Nov  4 13:25:09.547: INFO: apps/v1 matches apps/v1
  Nov  4 13:25:09.547: INFO: Checking APIGroup: events.k8s.io
  Nov  4 13:25:09.549: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Nov  4 13:25:09.549: INFO: Versions found [{events.k8s.io/v1 v1}]
  Nov  4 13:25:09.549: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Nov  4 13:25:09.549: INFO: Checking APIGroup: authentication.k8s.io
  Nov  4 13:25:09.550: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Nov  4 13:25:09.550: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Nov  4 13:25:09.550: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Nov  4 13:25:09.550: INFO: Checking APIGroup: authorization.k8s.io
  Nov  4 13:25:09.551: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Nov  4 13:25:09.551: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Nov  4 13:25:09.551: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Nov  4 13:25:09.551: INFO: Checking APIGroup: autoscaling
  Nov  4 13:25:09.553: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Nov  4 13:25:09.553: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Nov  4 13:25:09.553: INFO: autoscaling/v2 matches autoscaling/v2
  Nov  4 13:25:09.553: INFO: Checking APIGroup: batch
  Nov  4 13:25:09.554: INFO: PreferredVersion.GroupVersion: batch/v1
  Nov  4 13:25:09.554: INFO: Versions found [{batch/v1 v1}]
  Nov  4 13:25:09.554: INFO: batch/v1 matches batch/v1
  Nov  4 13:25:09.554: INFO: Checking APIGroup: certificates.k8s.io
  Nov  4 13:25:09.555: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Nov  4 13:25:09.555: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Nov  4 13:25:09.555: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Nov  4 13:25:09.555: INFO: Checking APIGroup: networking.k8s.io
  Nov  4 13:25:09.556: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Nov  4 13:25:09.556: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Nov  4 13:25:09.556: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Nov  4 13:25:09.556: INFO: Checking APIGroup: policy
  Nov  4 13:25:09.558: INFO: PreferredVersion.GroupVersion: policy/v1
  Nov  4 13:25:09.558: INFO: Versions found [{policy/v1 v1}]
  Nov  4 13:25:09.558: INFO: policy/v1 matches policy/v1
  Nov  4 13:25:09.558: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Nov  4 13:25:09.559: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Nov  4 13:25:09.559: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Nov  4 13:25:09.559: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Nov  4 13:25:09.559: INFO: Checking APIGroup: storage.k8s.io
  Nov  4 13:25:09.560: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Nov  4 13:25:09.560: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Nov  4 13:25:09.560: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Nov  4 13:25:09.560: INFO: Checking APIGroup: admissionregistration.k8s.io
  Nov  4 13:25:09.561: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Nov  4 13:25:09.561: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Nov  4 13:25:09.561: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Nov  4 13:25:09.561: INFO: Checking APIGroup: apiextensions.k8s.io
  Nov  4 13:25:09.563: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Nov  4 13:25:09.563: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Nov  4 13:25:09.563: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Nov  4 13:25:09.563: INFO: Checking APIGroup: scheduling.k8s.io
  Nov  4 13:25:09.564: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Nov  4 13:25:09.564: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Nov  4 13:25:09.564: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Nov  4 13:25:09.564: INFO: Checking APIGroup: coordination.k8s.io
  Nov  4 13:25:09.565: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Nov  4 13:25:09.565: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Nov  4 13:25:09.565: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Nov  4 13:25:09.565: INFO: Checking APIGroup: node.k8s.io
  Nov  4 13:25:09.566: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Nov  4 13:25:09.566: INFO: Versions found [{node.k8s.io/v1 v1}]
  Nov  4 13:25:09.566: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Nov  4 13:25:09.566: INFO: Checking APIGroup: discovery.k8s.io
  Nov  4 13:25:09.568: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Nov  4 13:25:09.568: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Nov  4 13:25:09.568: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Nov  4 13:25:09.568: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Nov  4 13:25:09.569: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Nov  4 13:25:09.569: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Nov  4 13:25:09.569: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Nov  4 13:25:09.569: INFO: Checking APIGroup: metrics.k8s.io
  Nov  4 13:25:09.570: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Nov  4 13:25:09.570: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Nov  4 13:25:09.570: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Nov  4 13:25:09.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1047" for this suite. @ 11/04/23 13:25:09.574
• [0.290 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 11/04/23 13:25:09.581
  Nov  4 13:25:09.581: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 13:25:09.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:25:09.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:25:09.598
  STEP: set up a multi version CRD @ 11/04/23 13:25:09.601
  Nov  4 13:25:09.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:25:09.717198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:10.717673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:11.718335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:12.718383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 11/04/23 13:25:12.911
  STEP: check the unserved version gets removed @ 11/04/23 13:25:12.931
  E1104 13:25:13.718909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/04/23 13:25:13.793
  E1104 13:25:14.719897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:15.720440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:25:16.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8099" for this suite. @ 11/04/23 13:25:16.452
• [6.879 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 11/04/23 13:25:16.46
  Nov  4 13:25:16.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 13:25:16.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:25:16.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:25:16.478
  E1104 13:25:16.720761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:17.720834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:18.720936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:19.721014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:20.721079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:21.721703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:22.722500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:23.722712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:24.723399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:25.724095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:26.724744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:27.724843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:28.725768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:29.725851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:30.725973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:31.726066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:32.726189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:33.726411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:34.727187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:35.728001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:36.728968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:37.729756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:25:38.547: INFO: Container started at 2023-11-04 13:25:17 +0000 UTC, pod became ready at 2023-11-04 13:25:36 +0000 UTC
  Nov  4 13:25:38.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8267" for this suite. @ 11/04/23 13:25:38.552
• [22.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 11/04/23 13:25:38.561
  Nov  4 13:25:38.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:25:38.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:25:38.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:25:38.58
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:25:38.583
  E1104 13:25:38.730059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:39.730140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:40.730682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:41.730766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:25:42.606
  Nov  4 13:25:42.610: INFO: Trying to get logs from node ip-172-31-75-164 pod downwardapi-volume-19dfde9f-b346-4f67-ae81-de852fb6a12a container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:25:42.627
  Nov  4 13:25:42.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3074" for this suite. @ 11/04/23 13:25:42.649
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 11/04/23 13:25:42.661
  Nov  4 13:25:42.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-preemption @ 11/04/23 13:25:42.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:25:42.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:25:42.679
  Nov  4 13:25:42.698: INFO: Waiting up to 1m0s for all nodes to be ready
  E1104 13:25:42.731197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:43.731419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:44.732142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:45.732279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:46.732839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:47.732960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:48.733007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:49.733082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:50.733596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:51.733629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:52.734407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:53.734622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:54.735132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:55.735279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:56.735997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:57.737069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:58.738169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:25:59.738253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:00.739201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:01.739406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:02.739763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:03.739952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:04.740949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:05.741591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:06.741750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:07.742016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:08.742384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:09.742483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:10.742640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:11.742915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:12.743832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:13.743924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:14.744215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:15.744320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:16.745093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:17.745254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:18.746247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:19.746675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:20.747138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:21.747190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:22.748123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:23.748229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:24.749064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:25.749242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:26.749662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:27.750246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:28.750932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:29.750987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:30.751136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:31.751140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:32.751714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:33.752131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:34.753064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:35.753924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:36.754380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:37.755104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:38.755129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:39.756162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:40.756304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:41.756457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:26:42.718: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/04/23 13:26:42.721
  Nov  4 13:26:42.742: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov  4 13:26:42.750: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  E1104 13:26:42.757025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:26:42.766: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov  4 13:26:42.774: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov  4 13:26:42.792: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov  4 13:26:42.799: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/04/23 13:26:42.799
  E1104 13:26:43.757634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:44.757722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/04/23 13:26:44.826
  E1104 13:26:45.758690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:46.758778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:47.758877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:48.758974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:26:48.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-480" for this suite. @ 11/04/23 13:26:48.905
• [66.251 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 11/04/23 13:26:48.913
  Nov  4 13:26:48.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:26:48.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:26:48.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:26:48.946
  STEP: Setting up server cert @ 11/04/23 13:26:48.968
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:26:49.694
  STEP: Deploying the webhook pod @ 11/04/23 13:26:49.701
  STEP: Wait for the deployment to be ready @ 11/04/23 13:26:49.713
  Nov  4 13:26:49.721: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:26:49.759845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:50.760123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:26:51.732
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:26:51.741
  E1104 13:26:51.761170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:26:52.742: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov  4 13:26:52.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:26:52.761368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3010-crds.webhook.example.com via the AdmissionRegistration API @ 11/04/23 13:26:53.259
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/04/23 13:26:53.273
  E1104 13:26:53.762387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:54.762667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:26:55.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1104 13:26:55.763272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-7110" for this suite. @ 11/04/23 13:26:55.875
  STEP: Destroying namespace "webhook-markers-9172" for this suite. @ 11/04/23 13:26:55.883
• [6.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/04/23 13:26:55.895
  Nov  4 13:26:55.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-runtime @ 11/04/23 13:26:55.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:26:55.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:26:55.918
  STEP: create the container @ 11/04/23 13:26:55.921
  W1104 13:26:55.929638      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/04/23 13:26:55.929
  E1104 13:26:56.763341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:57.764351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:26:58.764438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/04/23 13:26:58.949
  STEP: the container should be terminated @ 11/04/23 13:26:58.953
  STEP: the termination message should be set @ 11/04/23 13:26:58.953
  Nov  4 13:26:58.953: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/04/23 13:26:58.953
  Nov  4 13:26:58.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3818" for this suite. @ 11/04/23 13:26:58.975
• [3.089 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 11/04/23 13:26:58.983
  Nov  4 13:26:58.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename namespaces @ 11/04/23 13:26:58.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:26:58.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:26:59
  STEP: Updating Namespace "namespaces-1076" @ 11/04/23 13:26:59.003
  Nov  4 13:26:59.018: INFO: Namespace "namespaces-1076" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"7e6ea5aa-1a68-4b8d-88bd-9a5f09fd3b25", "kubernetes.io/metadata.name":"namespaces-1076", "namespaces-1076":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Nov  4 13:26:59.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1076" for this suite. @ 11/04/23 13:26:59.022
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 11/04/23 13:26:59.034
  Nov  4 13:26:59.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 13:26:59.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:26:59.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:26:59.05
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/04/23 13:26:59.054
  Nov  4 13:26:59.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:26:59.764514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:00.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:27:00.764641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:01.765231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:02.765411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:03.766025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:04.766164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:05.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6860" for this suite. @ 11/04/23 13:27:05.473
• [6.446 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/04/23 13:27:05.481
  Nov  4 13:27:05.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename init-container @ 11/04/23 13:27:05.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:05.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:05.5
  STEP: creating the pod @ 11/04/23 13:27:05.505
  Nov  4 13:27:05.505: INFO: PodSpec: initContainers in spec.initContainers
  E1104 13:27:05.766229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:06.767298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:07.767870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:08.767923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:09.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1894" for this suite. @ 11/04/23 13:27:09.258
• [3.783 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/04/23 13:27:09.266
  Nov  4 13:27:09.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-runtime @ 11/04/23 13:27:09.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:09.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:09.284
  STEP: create the container @ 11/04/23 13:27:09.287
  W1104 13:27:09.296303      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/04/23 13:27:09.296
  E1104 13:27:09.768023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:10.768900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/04/23 13:27:11.309
  STEP: the container should be terminated @ 11/04/23 13:27:11.312
  STEP: the termination message should be set @ 11/04/23 13:27:11.313
  Nov  4 13:27:11.313: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/04/23 13:27:11.313
  Nov  4 13:27:11.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6835" for this suite. @ 11/04/23 13:27:11.334
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/04/23 13:27:11.343
  Nov  4 13:27:11.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename prestop @ 11/04/23 13:27:11.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:11.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:11.362
  STEP: Creating server pod server in namespace prestop-3856 @ 11/04/23 13:27:11.365
  STEP: Waiting for pods to come up. @ 11/04/23 13:27:11.372
  E1104 13:27:11.769549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:12.770058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-3856 @ 11/04/23 13:27:13.386
  E1104 13:27:13.770145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:14.770712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 11/04/23 13:27:15.406
  E1104 13:27:15.771582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:16.771682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:17.771967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:18.772071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:19.772159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:20.420: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Nov  4 13:27:20.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 11/04/23 13:27:20.424
  STEP: Destroying namespace "prestop-3856" for this suite. @ 11/04/23 13:27:20.435
• [9.098 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 11/04/23 13:27:20.442
  Nov  4 13:27:20.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:27:20.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:20.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:20.459
  STEP: Creating the pod @ 11/04/23 13:27:20.462
  E1104 13:27:20.772631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:21.772772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:22.773549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:23.008: INFO: Successfully updated pod "labelsupdate6ffd209e-d30f-464a-b556-2af789c7b92b"
  E1104 13:27:23.773615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:24.773718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:25.774711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:26.774796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:27.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4024" for this suite. @ 11/04/23 13:27:27.033
• [6.598 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 11/04/23 13:27:27.04
  Nov  4 13:27:27.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename security-context-test @ 11/04/23 13:27:27.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:27.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:27.059
  E1104 13:27:27.775798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:28.775966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:29.776033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:30.776232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:31.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4295" for this suite. @ 11/04/23 13:27:31.088
• [4.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 11/04/23 13:27:31.098
  Nov  4 13:27:31.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replicaset @ 11/04/23 13:27:31.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:31.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:31.125
  STEP: Create a Replicaset @ 11/04/23 13:27:31.132
  STEP: Verify that the required pods have come up. @ 11/04/23 13:27:31.137
  Nov  4 13:27:31.141: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1104 13:27:31.776546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:32.776810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:33.777397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:34.777480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:35.777621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:36.145: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/04/23 13:27:36.145
  STEP: Getting /status @ 11/04/23 13:27:36.145
  Nov  4 13:27:36.149: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/04/23 13:27:36.149
  Nov  4 13:27:36.162: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/04/23 13:27:36.162
  Nov  4 13:27:36.164: INFO: Observed &ReplicaSet event: ADDED
  Nov  4 13:27:36.164: INFO: Observed &ReplicaSet event: MODIFIED
  Nov  4 13:27:36.164: INFO: Observed &ReplicaSet event: MODIFIED
  Nov  4 13:27:36.164: INFO: Observed &ReplicaSet event: MODIFIED
  Nov  4 13:27:36.164: INFO: Found replicaset test-rs in namespace replicaset-5414 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov  4 13:27:36.164: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/04/23 13:27:36.165
  Nov  4 13:27:36.165: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov  4 13:27:36.172: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/04/23 13:27:36.172
  Nov  4 13:27:36.173: INFO: Observed &ReplicaSet event: ADDED
  Nov  4 13:27:36.174: INFO: Observed &ReplicaSet event: MODIFIED
  Nov  4 13:27:36.174: INFO: Observed &ReplicaSet event: MODIFIED
  Nov  4 13:27:36.174: INFO: Observed &ReplicaSet event: MODIFIED
  Nov  4 13:27:36.174: INFO: Observed replicaset test-rs in namespace replicaset-5414 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov  4 13:27:36.174: INFO: Observed &ReplicaSet event: MODIFIED
  Nov  4 13:27:36.174: INFO: Found replicaset test-rs in namespace replicaset-5414 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Nov  4 13:27:36.174: INFO: Replicaset test-rs has a patched status
  Nov  4 13:27:36.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5414" for this suite. @ 11/04/23 13:27:36.178
• [5.086 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 11/04/23 13:27:36.185
  Nov  4 13:27:36.185: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:27:36.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:36.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:36.206
  STEP: Creating configMap configmap-8719/configmap-test-dc8eefdd-5694-4b77-9b48-c2c3fc8ea07e @ 11/04/23 13:27:36.209
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:27:36.214
  E1104 13:27:36.778407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:37.778672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:38.778774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:39.778950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:27:40.238
  Nov  4 13:27:40.241: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-95431097-22a3-4261-a0fb-d61d6716d8cc container env-test: <nil>
  STEP: delete the pod @ 11/04/23 13:27:40.248
  Nov  4 13:27:40.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8719" for this suite. @ 11/04/23 13:27:40.268
• [4.089 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/04/23 13:27:40.275
  Nov  4 13:27:40.275: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 13:27:40.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:40.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:40.292
  Nov  4 13:27:40.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8108" for this suite. @ 11/04/23 13:27:40.335
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 11/04/23 13:27:40.343
  Nov  4 13:27:40.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:27:40.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:40.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:40.36
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/04/23 13:27:40.37
  E1104 13:27:40.779893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:41.780066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:27:42.388
  Nov  4 13:27:42.391: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-050e0e4d-61a6-4d22-b793-1a45499d1de2 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:27:42.398
  Nov  4 13:27:42.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-342" for this suite. @ 11/04/23 13:27:42.418
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/04/23 13:27:42.426
  Nov  4 13:27:42.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename watch @ 11/04/23 13:27:42.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:42.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:42.445
  STEP: creating a watch on configmaps @ 11/04/23 13:27:42.448
  STEP: creating a new configmap @ 11/04/23 13:27:42.45
  STEP: modifying the configmap once @ 11/04/23 13:27:42.454
  STEP: closing the watch once it receives two notifications @ 11/04/23 13:27:42.462
  Nov  4 13:27:42.462: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1336  dab3e82e-8a3c-4336-b2c2-e384b740c023 33812 0 2023-11-04 13:27:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-04 13:27:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 13:27:42.462: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1336  dab3e82e-8a3c-4336-b2c2-e384b740c023 33813 0 2023-11-04 13:27:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-04 13:27:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/04/23 13:27:42.462
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/04/23 13:27:42.47
  STEP: deleting the configmap @ 11/04/23 13:27:42.471
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/04/23 13:27:42.477
  Nov  4 13:27:42.477: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1336  dab3e82e-8a3c-4336-b2c2-e384b740c023 33814 0 2023-11-04 13:27:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-04 13:27:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 13:27:42.477: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1336  dab3e82e-8a3c-4336-b2c2-e384b740c023 33815 0 2023-11-04 13:27:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-04 13:27:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 13:27:42.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1336" for this suite. @ 11/04/23 13:27:42.481
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/04/23 13:27:42.488
  Nov  4 13:27:42.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:27:42.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:42.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:42.504
  STEP: Creating secret with name projected-secret-test-1d781c89-add2-4072-a1d1-4499c7d7eca2 @ 11/04/23 13:27:42.507
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:27:42.512
  E1104 13:27:42.780858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:43.781062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:44.781752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:45.782788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:27:46.531
  Nov  4 13:27:46.534: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-secrets-fcecfb55-2fa1-4c32-bd58-91ac073b579c container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:27:46.541
  Nov  4 13:27:46.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1876" for this suite. @ 11/04/23 13:27:46.561
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/04/23 13:27:46.569
  Nov  4 13:27:46.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/04/23 13:27:46.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:46.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:46.586
  STEP: mirroring a new custom Endpoint @ 11/04/23 13:27:46.6
  Nov  4 13:27:46.610: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E1104 13:27:46.783533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:47.783780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 11/04/23 13:27:48.614
  Nov  4 13:27:48.622: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1104 13:27:48.784426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:49.784626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 11/04/23 13:27:50.625
  Nov  4 13:27:50.636: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E1104 13:27:50.784734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:51.784822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:27:52.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2680" for this suite. @ 11/04/23 13:27:52.645
• [6.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 11/04/23 13:27:52.655
  Nov  4 13:27:52.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:27:52.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:52.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:52.676
  STEP: Creating a pod to test downward api env vars @ 11/04/23 13:27:52.68
  E1104 13:27:52.785242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:53.785350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:54.785747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:55.786732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:27:56.701
  Nov  4 13:27:56.704: INFO: Trying to get logs from node ip-172-31-44-230 pod downward-api-e4892725-c585-4c13-887b-a6c1d2527179 container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 13:27:56.711
  Nov  4 13:27:56.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2115" for this suite. @ 11/04/23 13:27:56.733
• [4.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 11/04/23 13:27:56.74
  Nov  4 13:27:56.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pod-network-test @ 11/04/23 13:27:56.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:27:56.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:27:56.758
  STEP: Performing setup for networking test in namespace pod-network-test-2379 @ 11/04/23 13:27:56.761
  STEP: creating a selector @ 11/04/23 13:27:56.761
  STEP: Creating the service pods in kubernetes @ 11/04/23 13:27:56.761
  Nov  4 13:27:56.761: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1104 13:27:56.787013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:57.787716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:58.787934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:27:59.787996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:00.788191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:01.788293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:02.789256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:03.789677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:04.789771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:05.790327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:06.790440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:07.791120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:08.791213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/04/23 13:28:08.844
  E1104 13:28:09.792232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:10.792630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:10.964: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov  4 13:28:10.964: INFO: Going to poll 192.168.55.126 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov  4 13:28:10.967: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.55.126:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2379 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:28:10.967: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:28:10.968: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:28:10.968: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2379/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.55.126%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov  4 13:28:11.048: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov  4 13:28:11.048: INFO: Going to poll 192.168.46.103 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov  4 13:28:11.051: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.46.103:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2379 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:28:11.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:28:11.052: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:28:11.052: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2379/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.46.103%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov  4 13:28:11.126: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov  4 13:28:11.126: INFO: Going to poll 192.168.193.75 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov  4 13:28:11.130: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.193.75:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2379 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:28:11.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:28:11.130: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:28:11.130: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2379/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.193.75%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov  4 13:28:11.207: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov  4 13:28:11.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2379" for this suite. @ 11/04/23 13:28:11.211
• [14.478 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 11/04/23 13:28:11.219
  Nov  4 13:28:11.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:28:11.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:28:11.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:28:11.247
  STEP: Setting up server cert @ 11/04/23 13:28:11.277
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:28:11.526
  STEP: Deploying the webhook pod @ 11/04/23 13:28:11.534
  STEP: Wait for the deployment to be ready @ 11/04/23 13:28:11.547
  Nov  4 13:28:11.554: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:28:11.793163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:12.793678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:28:13.567
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:28:13.58
  E1104 13:28:13.794672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:14.581: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/04/23 13:28:14.588
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/04/23 13:28:14.604
  Nov  4 13:28:14.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:28:14.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4473" for this suite. @ 11/04/23 13:28:14.673
  STEP: Destroying namespace "webhook-markers-1610" for this suite. @ 11/04/23 13:28:14.68
• [3.467 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/04/23 13:28:14.687
  Nov  4 13:28:14.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 13:28:14.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:28:14.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:28:14.705
  STEP: creating the pod @ 11/04/23 13:28:14.708
  STEP: setting up watch @ 11/04/23 13:28:14.708
  E1104 13:28:14.794736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 11/04/23 13:28:14.812
  STEP: verifying the pod is in kubernetes @ 11/04/23 13:28:14.821
  STEP: verifying pod creation was observed @ 11/04/23 13:28:14.827
  E1104 13:28:15.795725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:16.796724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/04/23 13:28:16.839
  STEP: verifying pod deletion was observed @ 11/04/23 13:28:16.845
  Nov  4 13:28:17.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1454" for this suite. @ 11/04/23 13:28:17.739
• [3.060 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 11/04/23 13:28:17.748
  Nov  4 13:28:17.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 13:28:17.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:28:17.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:28:17.767
  STEP: Creating pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022 @ 11/04/23 13:28:17.77
  E1104 13:28:17.797691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:18.798692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 13:28:19.787
  Nov  4 13:28:19.790: INFO: Initial restart count of pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c is 0
  Nov  4 13:28:19.793: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:19.799513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:20.799701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:21.796: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:21.800008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:22.801022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:23.801: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:23.801251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:24.801686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:25.801839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:25.805: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:26.802682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:27.802975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:27.809: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:28.803643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:29.803728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:29.813: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:30.804361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:31.804459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:31.816: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:32.805135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:33.805209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:33.821: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:34.805324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:35.805557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:35.825: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:36.805632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:37.806332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:37.830: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:38.806775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:39.806857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:39.834: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  Nov  4 13:28:39.834: INFO: Restart count of pod container-probe-8022/liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c is now 1 (20.044564135s elapsed)
  E1104 13:28:40.807667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:41.808505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:41.839: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:42.809346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:43.809517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:43.844: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:44.809558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:45.809649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:45.848: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:46.810661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:47.810739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:47.852: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:48.810976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:49.811141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:49.857: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:50.811692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:51.811897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:51.861: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:52.811919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:53.812070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:53.866: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:54.812163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:55.812388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:55.872: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:56.812419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:57.812686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:57.876: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:28:58.812782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:28:59.812869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:28:59.881: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  Nov  4 13:28:59.881: INFO: Restart count of pod container-probe-8022/liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c is now 2 (40.090796684s elapsed)
  E1104 13:29:00.813315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:01.813391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:01.885: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:02.814308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:03.814908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:03.890: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:04.815160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:05.815321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:05.894: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:06.815523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:07.815725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:07.898: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:08.816767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:09.816969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:09.903: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:10.817031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:11.817448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:11.907: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:12.818173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:13.818617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:13.911: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:14.818681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:15.818753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:15.916: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:16.818854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:17.819095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:17.920: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:18.820126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:19.820219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:19.924: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  Nov  4 13:29:19.924: INFO: Restart count of pod container-probe-8022/liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c is now 3 (1m0.134187831s elapsed)
  E1104 13:29:20.820399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:21.820547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:21.928: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:22.821348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:23.822289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:23.933: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:24.822379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:25.822669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:25.937: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:26.822746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:27.823035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:27.941: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:28.823214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:29.823306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:29.946: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:30.824308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:31.824394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:31.950: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:32.825290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:33.825362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:33.954: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:34.825606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:35.826694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:35.959: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:36.826796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:37.827105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:37.964: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:38.827927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:39.828459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:39.968: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  Nov  4 13:29:39.968: INFO: Restart count of pod container-probe-8022/liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c is now 4 (1m20.178303678s elapsed)
  E1104 13:29:40.829540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:41.829622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:41.972: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:42.830673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:43.832383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:43.976: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:44.832672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:45.832778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:45.981: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:46.833167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:47.833344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:47.986: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:48.833613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:49.833711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:49.990: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:50.834670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:51.834816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:51.994: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:52.835048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:53.835201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:53.999: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:54.836099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:55.836214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:56.004: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:56.836469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:57.837401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:29:58.009: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:29:58.838206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:29:59.838670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:00.013: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:00.838763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:01.838938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:02.018: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:02.839016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:03.839221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:04.022: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:04.839322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:05.840144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:06.027: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:06.840237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:07.840350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:08.031: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:08.841421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:09.841604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:10.036: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:10.842667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:11.842908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:12.040: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:12.843733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:13.843999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:14.046: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:14.845056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:15.845217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:16.050: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:16.846241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:17.846790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:18.055: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:18.847047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:19.847466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:20.059: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:20.847985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:21.848072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:22.064: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:22.848158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:23.848386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:24.068: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:24.848589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:25.848757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:26.072: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:26.849712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:27.849799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:28.076: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:28.850679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:29.850773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:30.081: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:30.851043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:31.851205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:32.085: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:32.851260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:33.851422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:34.089: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:34.851682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:35.851856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:36.094: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:36.851950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:37.852133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:38.098: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:38.852236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:39.852327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:40.102: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  E1104 13:30:40.853349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:41.853451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:30:42.106: INFO: Get pod liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c in namespace container-probe-8022
  Nov  4 13:30:42.106: INFO: Restart count of pod container-probe-8022/liveness-3a8d4d21-905e-4601-9876-7ce3dd83d02c is now 5 (2m22.31665566s elapsed)
  Nov  4 13:30:42.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:30:42.111
  STEP: Destroying namespace "container-probe-8022" for this suite. @ 11/04/23 13:30:42.126
• [144.387 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 11/04/23 13:30:42.135
  Nov  4 13:30:42.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:30:42.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:30:42.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:30:42.163
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-0118abe5-35aa-4fec-9042-478837eb291b @ 11/04/23 13:30:42.173
  STEP: Creating the pod @ 11/04/23 13:30:42.178
  E1104 13:30:42.854328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:43.857305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-0118abe5-35aa-4fec-9042-478837eb291b @ 11/04/23 13:30:44.225
  STEP: waiting to observe update in volume @ 11/04/23 13:30:44.232
  E1104 13:30:44.857370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:45.857465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:46.858314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:47.858382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:48.858729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:49.858796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:50.858848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:51.858955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:52.858975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:53.859073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:54.859306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:55.859418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:56.859518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:57.860056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:58.860413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:30:59.860449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:00.860486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:01.860667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:02.861316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:03.861621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:04.861716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:05.861804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:06.862107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:07.862146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:08.862251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:09.862339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:10.862656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:11.863802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:12.864622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:13.864777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:14.865688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:15.866659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:16.867030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:17.867134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:18.867418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:19.867884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:20.868044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:21.868212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:22.868654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:23.868756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:24.868845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:25.869011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:26.869124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:27.869204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:28.869295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:29.869756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:30.870433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:31.870628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:32.871294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:33.871390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:34.871471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:35.871786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:36.872415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:37.873432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:38.873524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:39.873679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:40.874022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:41.874102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:42.875071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:43.875168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:44.875898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:45.875982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:46.876030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:47.876811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:48.877681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:49.877784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:50.877869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:51.878683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:52.878770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:53.879053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:54.879127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:55.879214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:56.879293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:57.879383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:58.880250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:31:59.880342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:00.881342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:01.881534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:02.882364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:03.882816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:32:04.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-693" for this suite. @ 11/04/23 13:32:04.563
• [82.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 11/04/23 13:32:04.571
  Nov  4 13:32:04.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 13:32:04.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:32:04.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:32:04.594
  Nov  4 13:32:04.598: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:32:04.883387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/04/23 13:32:05.826
  Nov  4 13:32:05.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-8405 --namespace=crd-publish-openapi-8405 create -f -'
  E1104 13:32:05.883559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:32:06.152: INFO: stderr: ""
  Nov  4 13:32:06.152: INFO: stdout: "e2e-test-crd-publish-openapi-4718-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov  4 13:32:06.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-8405 --namespace=crd-publish-openapi-8405 delete e2e-test-crd-publish-openapi-4718-crds test-cr'
  Nov  4 13:32:06.222: INFO: stderr: ""
  Nov  4 13:32:06.222: INFO: stdout: "e2e-test-crd-publish-openapi-4718-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Nov  4 13:32:06.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-8405 --namespace=crd-publish-openapi-8405 apply -f -'
  Nov  4 13:32:06.476: INFO: stderr: ""
  Nov  4 13:32:06.476: INFO: stdout: "e2e-test-crd-publish-openapi-4718-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov  4 13:32:06.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-8405 --namespace=crd-publish-openapi-8405 delete e2e-test-crd-publish-openapi-4718-crds test-cr'
  Nov  4 13:32:06.528: INFO: stderr: ""
  Nov  4 13:32:06.528: INFO: stdout: "e2e-test-crd-publish-openapi-4718-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/04/23 13:32:06.529
  Nov  4 13:32:06.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-8405 explain e2e-test-crd-publish-openapi-4718-crds'
  Nov  4 13:32:06.637: INFO: stderr: ""
  Nov  4 13:32:06.637: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4718-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1104 13:32:06.883875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:07.883901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:32:07.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8405" for this suite. @ 11/04/23 13:32:07.965
• [3.400 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 11/04/23 13:32:07.972
  Nov  4 13:32:07.972: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:32:07.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:32:07.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:32:07.99
  STEP: Creating configMap with name projected-configmap-test-volume-d7f2bb53-e0b5-4b71-8dbd-c342c5479cb2 @ 11/04/23 13:32:07.993
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:32:07.998
  E1104 13:32:08.884365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:09.885428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:10.886413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:11.886469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:32:12.039
  Nov  4 13:32:12.043: INFO: Trying to get logs from node ip-172-31-75-164 pod pod-projected-configmaps-ac96357a-f0cb-4c85-b6d2-0190d82a71c2 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:32:12.06
  Nov  4 13:32:12.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1766" for this suite. @ 11/04/23 13:32:12.083
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 11/04/23 13:32:12.093
  Nov  4 13:32:12.093: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 13:32:12.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:32:12.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:32:12.113
  STEP: Creating service test in namespace statefulset-5948 @ 11/04/23 13:32:12.116
  STEP: Creating a new StatefulSet @ 11/04/23 13:32:12.121
  Nov  4 13:32:12.134: INFO: Found 0 stateful pods, waiting for 3
  E1104 13:32:12.887491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:13.888486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:14.888612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:15.888689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:16.888850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:17.888948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:18.889109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:19.889752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:20.890678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:21.890958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:32:22.139: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 13:32:22.139: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 13:32:22.139: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 13:32:22.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-5948 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 13:32:22.288: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 13:32:22.288: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 13:32:22.288: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1104 13:32:22.891307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:23.891404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:24.891627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:25.891835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:26.891927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:27.892163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:28.892686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:29.892776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:30.892949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:31.893613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/04/23 13:32:32.304
  Nov  4 13:32:32.324: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/04/23 13:32:32.324
  E1104 13:32:32.894330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:33.894833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:34.895554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:35.896282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:36.896384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:37.897224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:38.897327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:39.898155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:40.898360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:41.898672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 11/04/23 13:32:42.34
  Nov  4 13:32:42.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-5948 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 13:32:42.460: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov  4 13:32:42.460: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 13:32:42.460: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1104 13:32:42.898948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:43.899024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:44.899187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:45.899405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:46.899485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:47.900473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:48.900574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:49.900805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:50.900979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:51.901830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 11/04/23 13:32:52.482
  Nov  4 13:32:52.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-5948 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov  4 13:32:52.606: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov  4 13:32:52.606: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov  4 13:32:52.606: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1104 13:32:52.902247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:53.902320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:54.902409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:55.902490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:56.902818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:57.903089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:58.903247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:32:59.903422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:00.903475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:01.903654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:33:02.642: INFO: Updating stateful set ss2
  E1104 13:33:02.904140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:03.904218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:04.904318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:05.904425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:06.904506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:07.905391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:08.905767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:09.906666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:10.907617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:11.907684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 11/04/23 13:33:12.663
  Nov  4 13:33:12.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=statefulset-5948 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov  4 13:33:12.787: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov  4 13:33:12.787: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov  4 13:33:12.787: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1104 13:33:12.907790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:13.907883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:14.908861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:15.909028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:16.909177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:17.909348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:18.909627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:19.909714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:20.910670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:21.910762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:33:22.809: INFO: Deleting all statefulset in ns statefulset-5948
  Nov  4 13:33:22.812: INFO: Scaling statefulset ss2 to 0
  E1104 13:33:22.911756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:23.911880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:24.912006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:25.912126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:26.912277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:27.913257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:28.913347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:29.913438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:30.913619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:31.914675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:33:32.830: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 13:33:32.834: INFO: Deleting statefulset ss2
  Nov  4 13:33:32.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5948" for this suite. @ 11/04/23 13:33:32.853
• [80.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/04/23 13:33:32.862
  Nov  4 13:33:32.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename init-container @ 11/04/23 13:33:32.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:32.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:32.879
  STEP: creating the pod @ 11/04/23 13:33:32.882
  Nov  4 13:33:32.882: INFO: PodSpec: initContainers in spec.initContainers
  E1104 13:33:32.915178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:33.916080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:34.916307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:33:35.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3825" for this suite. @ 11/04/23 13:33:35.831
• [2.976 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 11/04/23 13:33:35.842
  Nov  4 13:33:35.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/04/23 13:33:35.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:35.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:35.858
  Nov  4 13:33:35.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:33:35.916328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:36.916757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/04/23 13:33:37.142
  Nov  4 13:33:37.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-1915 --namespace=crd-publish-openapi-1915 create -f -'
  Nov  4 13:33:37.426: INFO: stderr: ""
  Nov  4 13:33:37.426: INFO: stdout: "e2e-test-crd-publish-openapi-4514-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov  4 13:33:37.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-1915 --namespace=crd-publish-openapi-1915 delete e2e-test-crd-publish-openapi-4514-crds test-cr'
  Nov  4 13:33:37.495: INFO: stderr: ""
  Nov  4 13:33:37.495: INFO: stdout: "e2e-test-crd-publish-openapi-4514-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Nov  4 13:33:37.495: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-1915 --namespace=crd-publish-openapi-1915 apply -f -'
  Nov  4 13:33:37.606: INFO: stderr: ""
  Nov  4 13:33:37.606: INFO: stdout: "e2e-test-crd-publish-openapi-4514-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov  4 13:33:37.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-1915 --namespace=crd-publish-openapi-1915 delete e2e-test-crd-publish-openapi-4514-crds test-cr'
  Nov  4 13:33:37.660: INFO: stderr: ""
  Nov  4 13:33:37.660: INFO: stdout: "e2e-test-crd-publish-openapi-4514-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/04/23 13:33:37.66
  Nov  4 13:33:37.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=crd-publish-openapi-1915 explain e2e-test-crd-publish-openapi-4514-crds'
  Nov  4 13:33:37.764: INFO: stderr: ""
  Nov  4 13:33:37.764: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4514-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1104 13:33:37.917147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:38.917169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:33:39.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1915" for this suite. @ 11/04/23 13:33:39.063
• [3.227 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 11/04/23 13:33:39.07
  Nov  4 13:33:39.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:33:39.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:39.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:39.087
  STEP: Creating Pod @ 11/04/23 13:33:39.089
  E1104 13:33:39.917640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:40.917719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 11/04/23 13:33:41.106
  Nov  4 13:33:41.106: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7588 PodName:pod-sharedvolume-256e9473-2c9f-4259-b3b1-ea9842fdb44d ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:33:41.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:33:41.107: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:33:41.107: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-7588/pods/pod-sharedvolume-256e9473-2c9f-4259-b3b1-ea9842fdb44d/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Nov  4 13:33:41.183: INFO: Exec stderr: ""
  Nov  4 13:33:41.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7588" for this suite. @ 11/04/23 13:33:41.186
• [2.123 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 11/04/23 13:33:41.193
  Nov  4 13:33:41.193: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svcaccounts @ 11/04/23 13:33:41.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:41.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:41.212
  Nov  4 13:33:41.218: INFO: Got root ca configmap in namespace "svcaccounts-1876"
  Nov  4 13:33:41.222: INFO: Deleted root ca configmap in namespace "svcaccounts-1876"
  STEP: waiting for a new root ca configmap created @ 11/04/23 13:33:41.723
  Nov  4 13:33:41.727: INFO: Recreated root ca configmap in namespace "svcaccounts-1876"
  Nov  4 13:33:41.731: INFO: Updated root ca configmap in namespace "svcaccounts-1876"
  E1104 13:33:41.918184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 11/04/23 13:33:42.232
  Nov  4 13:33:42.235: INFO: Reconciled root ca configmap in namespace "svcaccounts-1876"
  Nov  4 13:33:42.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1876" for this suite. @ 11/04/23 13:33:42.237
• [1.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 11/04/23 13:33:42.245
  Nov  4 13:33:42.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename namespaces @ 11/04/23 13:33:42.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:42.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:42.262
  STEP: Creating a test namespace @ 11/04/23 13:33:42.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:42.279
  STEP: Creating a service in the namespace @ 11/04/23 13:33:42.281
  STEP: Deleting the namespace @ 11/04/23 13:33:42.292
  STEP: Waiting for the namespace to be removed. @ 11/04/23 13:33:42.298
  E1104 13:33:42.918688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:43.918775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:44.918959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:45.919739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:46.920487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:47.921454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/04/23 13:33:48.301
  STEP: Verifying there is no service in the namespace @ 11/04/23 13:33:48.322
  Nov  4 13:33:48.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2314" for this suite. @ 11/04/23 13:33:48.332
  STEP: Destroying namespace "nsdeletetest-9581" for this suite. @ 11/04/23 13:33:48.337
  Nov  4 13:33:48.340: INFO: Namespace nsdeletetest-9581 was already deleted
  STEP: Destroying namespace "nsdeletetest-3721" for this suite. @ 11/04/23 13:33:48.34
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/04/23 13:33:48.348
  Nov  4 13:33:48.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename proxy @ 11/04/23 13:33:48.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:48.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:48.375
  Nov  4 13:33:48.378: INFO: Creating pod...
  E1104 13:33:48.922314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:49.922685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:33:50.394: INFO: Creating service...
  Nov  4 13:33:50.402: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/pods/agnhost/proxy?method=DELETE
  Nov  4 13:33:50.407: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov  4 13:33:50.407: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/pods/agnhost/proxy?method=OPTIONS
  Nov  4 13:33:50.412: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov  4 13:33:50.412: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/pods/agnhost/proxy?method=PATCH
  Nov  4 13:33:50.417: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov  4 13:33:50.417: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/pods/agnhost/proxy?method=POST
  Nov  4 13:33:50.419: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov  4 13:33:50.419: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/pods/agnhost/proxy?method=PUT
  Nov  4 13:33:50.422: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov  4 13:33:50.422: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/services/e2e-proxy-test-service/proxy?method=DELETE
  Nov  4 13:33:50.427: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov  4 13:33:50.427: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Nov  4 13:33:50.431: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov  4 13:33:50.431: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/services/e2e-proxy-test-service/proxy?method=PATCH
  Nov  4 13:33:50.436: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov  4 13:33:50.436: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/services/e2e-proxy-test-service/proxy?method=POST
  Nov  4 13:33:50.442: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov  4 13:33:50.442: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/services/e2e-proxy-test-service/proxy?method=PUT
  Nov  4 13:33:50.445: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov  4 13:33:50.445: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/pods/agnhost/proxy?method=GET
  Nov  4 13:33:50.447: INFO: http.Client request:GET StatusCode:301
  Nov  4 13:33:50.448: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/services/e2e-proxy-test-service/proxy?method=GET
  Nov  4 13:33:50.453: INFO: http.Client request:GET StatusCode:301
  Nov  4 13:33:50.453: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/pods/agnhost/proxy?method=HEAD
  Nov  4 13:33:50.455: INFO: http.Client request:HEAD StatusCode:301
  Nov  4 13:33:50.455: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2469/services/e2e-proxy-test-service/proxy?method=HEAD
  Nov  4 13:33:50.458: INFO: http.Client request:HEAD StatusCode:301
  Nov  4 13:33:50.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2469" for this suite. @ 11/04/23 13:33:50.461
• [2.120 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 11/04/23 13:33:50.469
  Nov  4 13:33:50.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 13:33:50.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:50.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:50.485
  STEP: Creating a ResourceQuota @ 11/04/23 13:33:50.488
  STEP: Getting a ResourceQuota @ 11/04/23 13:33:50.492
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/04/23 13:33:50.494
  STEP: Patching the ResourceQuota @ 11/04/23 13:33:50.497
  STEP: Deleting a Collection of ResourceQuotas @ 11/04/23 13:33:50.503
  STEP: Verifying the deleted ResourceQuota @ 11/04/23 13:33:50.511
  Nov  4 13:33:50.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8109" for this suite. @ 11/04/23 13:33:50.516
• [0.053 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 11/04/23 13:33:50.523
  Nov  4 13:33:50.523: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename job @ 11/04/23 13:33:50.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:50.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:50.54
  STEP: Creating a suspended job @ 11/04/23 13:33:50.546
  STEP: Patching the Job @ 11/04/23 13:33:50.551
  STEP: Watching for Job to be patched @ 11/04/23 13:33:50.566
  Nov  4 13:33:50.567: INFO: Event ADDED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k] and annotations: map[]
  Nov  4 13:33:50.567: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k] and annotations: map[]
  Nov  4 13:33:50.567: INFO: Event MODIFIED found for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[]
  STEP: Updating the job @ 11/04/23 13:33:50.567
  STEP: Watching for Job to be updated @ 11/04/23 13:33:50.576
  Nov  4 13:33:50.577: INFO: Event MODIFIED found for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:50.577: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/04/23 13:33:50.577
  Nov  4 13:33:50.581: INFO: Job: e2e-nd62k as labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched]
  STEP: Waiting for job to complete @ 11/04/23 13:33:50.581
  E1104 13:33:50.922809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:51.923486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:52.923956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:53.924036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:54.925477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:55.925663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:56.926106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:57.926898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 11/04/23 13:33:58.584
  STEP: Watching for Job to be deleted @ 11/04/23 13:33:58.591
  Nov  4 13:33:58.593: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:58.593: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:58.593: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:58.593: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:58.593: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:58.593: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:58.593: INFO: Event MODIFIED observed for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  Nov  4 13:33:58.593: INFO: Event DELETED found for Job e2e-nd62k in namespace job-8698 with labels: map[e2e-job-label:e2e-nd62k e2e-nd62k:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/04/23 13:33:58.593
  Nov  4 13:33:58.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8698" for this suite. @ 11/04/23 13:33:58.599
• [8.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 11/04/23 13:33:58.622
  Nov  4 13:33:58.622: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:33:58.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:33:58.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:33:58.647
  STEP: Creating the pod @ 11/04/23 13:33:58.649
  E1104 13:33:58.927656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:33:59.927730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:00.928699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:01.193: INFO: Successfully updated pod "annotationupdate7a40dd17-c812-4f93-9a04-6aa8a787da79"
  E1104 13:34:01.928739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:02.928763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:03.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3720" for this suite. @ 11/04/23 13:34:03.211
• [4.597 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 11/04/23 13:34:03.219
  Nov  4 13:34:03.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename field-validation @ 11/04/23 13:34:03.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:03.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:03.239
  STEP: apply creating a deployment @ 11/04/23 13:34:03.286
  Nov  4 13:34:03.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6746" for this suite. @ 11/04/23 13:34:03.301
• [0.088 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/04/23 13:34:03.307
  Nov  4 13:34:03.307: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/04/23 13:34:03.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:03.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:03.323
  STEP: creating a target pod @ 11/04/23 13:34:03.325
  E1104 13:34:03.929037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:04.929150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/04/23 13:34:05.343
  E1104 13:34:05.930140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:06.930218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/04/23 13:34:07.357
  Nov  4 13:34:07.357: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1026 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:34:07.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:34:07.357: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:34:07.357: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1026/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Nov  4 13:34:07.431: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/04/23 13:34:07.445
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/04/23 13:34:07.448
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/04/23 13:34:07.46
  Nov  4 13:34:07.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1026" for this suite. @ 11/04/23 13:34:07.467
• [4.168 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 11/04/23 13:34:07.476
  Nov  4 13:34:07.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/04/23 13:34:07.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:07.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:07.494
  Nov  4 13:34:07.496: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:34:07.930837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:08.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7878" for this suite. @ 11/04/23 13:34:08.034
• [0.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/04/23 13:34:08.042
  Nov  4 13:34:08.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:34:08.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:08.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:08.064
  STEP: Creating projection with secret that has name projected-secret-test-map-cfb5a690-2c75-433d-b5e1-26365f785b25 @ 11/04/23 13:34:08.067
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:34:08.072
  E1104 13:34:08.931618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:09.931868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:10.932845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:11.933320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:34:12.088
  Nov  4 13:34:12.093: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-secrets-81068bd2-05a2-4546-831f-1211b6a13e9e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:34:12.1
  Nov  4 13:34:12.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2442" for this suite. @ 11/04/23 13:34:12.118
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 11/04/23 13:34:12.127
  Nov  4 13:34:12.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename field-validation @ 11/04/23 13:34:12.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:12.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:12.146
  Nov  4 13:34:12.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:34:12.934006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:13.934087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1104 13:34:14.693678      19 warnings.go:70] unknown field "alpha"
  W1104 13:34:14.693698      19 warnings.go:70] unknown field "beta"
  W1104 13:34:14.693704      19 warnings.go:70] unknown field "delta"
  W1104 13:34:14.693708      19 warnings.go:70] unknown field "epsilon"
  W1104 13:34:14.693711      19 warnings.go:70] unknown field "gamma"
  E1104 13:34:14.934770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:15.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8504" for this suite. @ 11/04/23 13:34:15.24
• [3.125 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 11/04/23 13:34:15.253
  Nov  4 13:34:15.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename endpointslice @ 11/04/23 13:34:15.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:15.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:15.281
  STEP: getting /apis @ 11/04/23 13:34:15.284
  STEP: getting /apis/discovery.k8s.io @ 11/04/23 13:34:15.288
  STEP: getting /apis/discovery.k8s.iov1 @ 11/04/23 13:34:15.289
  STEP: creating @ 11/04/23 13:34:15.29
  STEP: getting @ 11/04/23 13:34:15.309
  STEP: listing @ 11/04/23 13:34:15.312
  STEP: watching @ 11/04/23 13:34:15.316
  Nov  4 13:34:15.316: INFO: starting watch
  STEP: cluster-wide listing @ 11/04/23 13:34:15.317
  STEP: cluster-wide watching @ 11/04/23 13:34:15.319
  Nov  4 13:34:15.319: INFO: starting watch
  STEP: patching @ 11/04/23 13:34:15.32
  STEP: updating @ 11/04/23 13:34:15.325
  Nov  4 13:34:15.331: INFO: waiting for watch events with expected annotations
  Nov  4 13:34:15.331: INFO: saw patched and updated annotations
  STEP: deleting @ 11/04/23 13:34:15.331
  STEP: deleting a collection @ 11/04/23 13:34:15.343
  Nov  4 13:34:15.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8966" for this suite. @ 11/04/23 13:34:15.36
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/04/23 13:34:15.367
  Nov  4 13:34:15.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubelet-test @ 11/04/23 13:34:15.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:15.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:15.387
  E1104 13:34:15.935748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:16.935789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:17.936076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:18.936161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:19.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-627" for this suite. @ 11/04/23 13:34:19.408
• [4.049 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/04/23 13:34:19.416
  Nov  4 13:34:19.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename daemonsets @ 11/04/23 13:34:19.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:19.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:19.436
  STEP: Creating simple DaemonSet "daemon-set" @ 11/04/23 13:34:19.455
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/04/23 13:34:19.459
  Nov  4 13:34:19.463: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:19.463: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:19.467: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 13:34:19.467: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  E1104 13:34:19.936622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:20.471: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:20.471: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:20.474: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov  4 13:34:20.474: INFO: Node ip-172-31-23-218 is running 0 daemon pod, expected 1
  E1104 13:34:20.937412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:21.471: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:21.471: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:21.473: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 13:34:21.473: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/04/23 13:34:21.477
  Nov  4 13:34:21.490: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:21.490: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:21.494: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov  4 13:34:21.494: INFO: Node ip-172-31-44-230 is running 0 daemon pod, expected 1
  E1104 13:34:21.937649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:22.498: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:22.498: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:22.501: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov  4 13:34:22.501: INFO: Node ip-172-31-44-230 is running 0 daemon pod, expected 1
  E1104 13:34:22.938684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:23.498: INFO: DaemonSet pods can't tolerate node ip-172-31-41-121 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:23.498: INFO: DaemonSet pods can't tolerate node ip-172-31-81-164 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov  4 13:34:23.500: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov  4 13:34:23.500: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/04/23 13:34:23.503
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2480, will wait for the garbage collector to delete the pods @ 11/04/23 13:34:23.503
  Nov  4 13:34:23.561: INFO: Deleting DaemonSet.extensions daemon-set took: 5.951794ms
  Nov  4 13:34:23.661: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.250819ms
  E1104 13:34:23.939498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:24.940344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:34:24.964: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov  4 13:34:24.964: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov  4 13:34:24.966: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36254"},"items":null}

  Nov  4 13:34:24.970: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36254"},"items":null}

  Nov  4 13:34:24.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2480" for this suite. @ 11/04/23 13:34:24.983
• [5.573 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/04/23 13:34:24.99
  Nov  4 13:34:24.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename subpath @ 11/04/23 13:34:24.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:25.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:25.01
  STEP: Setting up data @ 11/04/23 13:34:25.012
  STEP: Creating pod pod-subpath-test-secret-wx9g @ 11/04/23 13:34:25.02
  STEP: Creating a pod to test atomic-volume-subpath @ 11/04/23 13:34:25.02
  E1104 13:34:25.940427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:26.940498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:27.941541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:28.941709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:29.941793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:30.941878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:31.941986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:32.942403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:33.942495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:34.942708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:35.942782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:36.942881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:37.943644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:38.943746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:39.943832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:40.944027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:41.944104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:42.944235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:43.944329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:44.944654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:45.945465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:46.945673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:47.946692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:48.946805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:34:49.075
  Nov  4 13:34:49.079: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-subpath-test-secret-wx9g container test-container-subpath-secret-wx9g: <nil>
  STEP: delete the pod @ 11/04/23 13:34:49.085
  STEP: Deleting pod pod-subpath-test-secret-wx9g @ 11/04/23 13:34:49.097
  Nov  4 13:34:49.097: INFO: Deleting pod "pod-subpath-test-secret-wx9g" in namespace "subpath-2475"
  Nov  4 13:34:49.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2475" for this suite. @ 11/04/23 13:34:49.104
• [24.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 11/04/23 13:34:49.112
  Nov  4 13:34:49.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename gc @ 11/04/23 13:34:49.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:49.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:49.133
  STEP: create the deployment @ 11/04/23 13:34:49.136
  W1104 13:34:49.140239      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/04/23 13:34:49.14
  STEP: delete the deployment @ 11/04/23 13:34:49.649
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/04/23 13:34:49.658
  E1104 13:34:49.947247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/04/23 13:34:50.182
  W1104 13:34:50.188162      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov  4 13:34:50.188: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov  4 13:34:50.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9318" for this suite. @ 11/04/23 13:34:50.192
• [1.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 11/04/23 13:34:50.2
  Nov  4 13:34:50.200: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/04/23 13:34:50.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:50.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:50.22
  STEP: create the container to handle the HTTPGet hook request. @ 11/04/23 13:34:50.225
  E1104 13:34:50.947950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:51.948026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/04/23 13:34:52.243
  E1104 13:34:52.948874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:53.948921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/04/23 13:34:54.256
  E1104 13:34:54.949888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:55.949977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/04/23 13:34:56.27
  Nov  4 13:34:56.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4719" for this suite. @ 11/04/23 13:34:56.286
• [6.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 11/04/23 13:34:56.291
  Nov  4 13:34:56.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 13:34:56.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:34:56.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:34:56.311
  STEP: creating secret secrets-9270/secret-test-8603cad1-f3cf-4fac-a6c5-b8a7e66823b8 @ 11/04/23 13:34:56.313
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:34:56.318
  E1104 13:34:56.950066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:57.950149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:58.950251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:34:59.950695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:35:00.333
  Nov  4 13:35:00.337: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-1df20b90-6099-4001-8b6c-b9d9a9eea664 container env-test: <nil>
  STEP: delete the pod @ 11/04/23 13:35:00.344
  Nov  4 13:35:00.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9270" for this suite. @ 11/04/23 13:35:00.359
• [4.072 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/04/23 13:35:00.364
  Nov  4 13:35:00.364: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 13:35:00.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:35:00.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:35:00.385
  STEP: creating the pod @ 11/04/23 13:35:00.39
  STEP: submitting the pod to kubernetes @ 11/04/23 13:35:00.39
  E1104 13:35:00.950813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:01.950881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/04/23 13:35:02.407
  STEP: updating the pod @ 11/04/23 13:35:02.41
  Nov  4 13:35:02.920: INFO: Successfully updated pod "pod-update-2a15e646-6976-40e2-99a3-bae1cc77870b"
  STEP: verifying the updated pod is in kubernetes @ 11/04/23 13:35:02.923
  Nov  4 13:35:02.926: INFO: Pod update OK
  Nov  4 13:35:02.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1281" for this suite. @ 11/04/23 13:35:02.929
• [2.570 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 11/04/23 13:35:02.935
  Nov  4 13:35:02.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename endpointslice @ 11/04/23 13:35:02.935
  E1104 13:35:02.951682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:35:02.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:35:02.96
  E1104 13:35:03.951811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:04.952361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:05.953124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:06.953297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:35:07.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8175" for this suite. @ 11/04/23 13:35:07.004
• [4.075 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 11/04/23 13:35:07.01
  Nov  4 13:35:07.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename security-context-test @ 11/04/23 13:35:07.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:35:07.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:35:07.028
  E1104 13:35:07.953387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:08.953597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:09.953642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:10.954669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:35:11.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3909" for this suite. @ 11/04/23 13:35:11.056
• [4.051 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 11/04/23 13:35:11.062
  Nov  4 13:35:11.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:35:11.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:35:11.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:35:11.079
  STEP: Setting up server cert @ 11/04/23 13:35:11.1
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:35:11.303
  STEP: Deploying the webhook pod @ 11/04/23 13:35:11.31
  STEP: Wait for the deployment to be ready @ 11/04/23 13:35:11.326
  Nov  4 13:35:11.333: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:35:11.955130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:12.955279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:35:13.341
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:35:13.352
  E1104 13:35:13.955800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:35:14.353: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov  4 13:35:14.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1026-crds.webhook.example.com via the AdmissionRegistration API @ 11/04/23 13:35:14.87
  STEP: Creating a custom resource while v1 is storage version @ 11/04/23 13:35:14.885
  E1104 13:35:14.956749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:15.956897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/04/23 13:35:16.926
  STEP: Patching the custom resource while v2 is storage version @ 11/04/23 13:35:16.937
  E1104 13:35:16.957527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:35:16.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6354" for this suite. @ 11/04/23 13:35:17.532
  STEP: Destroying namespace "webhook-markers-7010" for this suite. @ 11/04/23 13:35:17.536
• [6.480 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/04/23 13:35:17.542
  Nov  4 13:35:17.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:35:17.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:35:17.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:35:17.564
  STEP: Creating secret with name s-test-opt-del-b892dae2-96ae-457c-bd1d-867f293ffd14 @ 11/04/23 13:35:17.57
  STEP: Creating secret with name s-test-opt-upd-15032645-4ca5-48a1-8a4d-fb719f2a2110 @ 11/04/23 13:35:17.573
  STEP: Creating the pod @ 11/04/23 13:35:17.578
  E1104 13:35:17.958513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:18.958783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b892dae2-96ae-457c-bd1d-867f293ffd14 @ 11/04/23 13:35:19.613
  STEP: Updating secret s-test-opt-upd-15032645-4ca5-48a1-8a4d-fb719f2a2110 @ 11/04/23 13:35:19.617
  STEP: Creating secret with name s-test-opt-create-5a07d391-100d-40dd-b96d-5909fda654d5 @ 11/04/23 13:35:19.623
  STEP: waiting to observe update in volume @ 11/04/23 13:35:19.627
  E1104 13:35:19.959661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:20.959776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:21.959843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:22.959943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:23.960941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:24.961033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:25.961697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:26.962696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:27.963332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:28.963428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:29.964171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:30.964652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:31.965677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:32.965998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:33.966098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:34.967133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:35.967588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:36.967684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:37.968084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:38.968182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:39.968978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:40.969075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:41.969803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:42.969876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:43.970841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:44.970931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:45.971015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:46.971106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:47.971940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:48.972801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:49.973868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:50.973938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:51.974688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:52.975756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:53.975950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:54.976040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:55.976146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:56.976224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:57.976983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:58.977218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:35:59.977887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:00.978008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:01.978668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:02.979042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:03.979603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:04.979783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:05.980097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:06.980200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:07.980284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:08.980397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:09.980466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:10.980660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:11.981428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:12.982430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:13.982915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:14.983026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:15.983394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:16.983488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:17.983878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:18.983991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:19.984694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:20.984841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:21.985752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:22.986099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:23.986318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:24.986411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:25.986660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:26.987203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:27.987448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:28.987563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:29.987839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:30.988139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:31.988924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:32.989187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:33.989605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:34.989711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:36:35.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1379" for this suite. @ 11/04/23 13:36:35.949
• [78.411 seconds]
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 11/04/23 13:36:35.953
  Nov  4 13:36:35.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename disruption @ 11/04/23 13:36:35.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:36:35.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:36:35.972
  STEP: Waiting for the pdb to be processed @ 11/04/23 13:36:35.979
  E1104 13:36:35.989956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:36.990090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:37.990786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/04/23 13:36:38.005
  Nov  4 13:36:38.007: INFO: running pods: 0 < 3
  E1104 13:36:38.991784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:39.991971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:36:40.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3724" for this suite. @ 11/04/23 13:36:40.017
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/04/23 13:36:40.024
  Nov  4 13:36:40.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename proxy @ 11/04/23 13:36:40.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:36:40.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:36:40.043
  Nov  4 13:36:40.045: INFO: Creating pod...
  E1104 13:36:40.992476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:41.992563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:36:42.064: INFO: Creating service...
  Nov  4 13:36:42.085: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/pods/agnhost/proxy/some/path/with/DELETE
  Nov  4 13:36:42.092: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov  4 13:36:42.092: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/pods/agnhost/proxy/some/path/with/GET
  Nov  4 13:36:42.095: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov  4 13:36:42.095: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/pods/agnhost/proxy/some/path/with/HEAD
  Nov  4 13:36:42.101: INFO: http.Client request:HEAD | StatusCode:200
  Nov  4 13:36:42.102: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/pods/agnhost/proxy/some/path/with/OPTIONS
  Nov  4 13:36:42.106: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov  4 13:36:42.106: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/pods/agnhost/proxy/some/path/with/PATCH
  Nov  4 13:36:42.109: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov  4 13:36:42.109: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/pods/agnhost/proxy/some/path/with/POST
  Nov  4 13:36:42.112: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov  4 13:36:42.112: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/pods/agnhost/proxy/some/path/with/PUT
  Nov  4 13:36:42.122: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov  4 13:36:42.123: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/services/test-service/proxy/some/path/with/DELETE
  Nov  4 13:36:42.129: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov  4 13:36:42.129: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/services/test-service/proxy/some/path/with/GET
  Nov  4 13:36:42.144: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov  4 13:36:42.144: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/services/test-service/proxy/some/path/with/HEAD
  Nov  4 13:36:42.151: INFO: http.Client request:HEAD | StatusCode:200
  Nov  4 13:36:42.151: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/services/test-service/proxy/some/path/with/OPTIONS
  Nov  4 13:36:42.155: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov  4 13:36:42.155: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/services/test-service/proxy/some/path/with/PATCH
  Nov  4 13:36:42.159: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov  4 13:36:42.159: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/services/test-service/proxy/some/path/with/POST
  Nov  4 13:36:42.166: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov  4 13:36:42.166: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5331/services/test-service/proxy/some/path/with/PUT
  Nov  4 13:36:42.170: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov  4 13:36:42.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5331" for this suite. @ 11/04/23 13:36:42.174
• [2.157 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 11/04/23 13:36:42.18
  Nov  4 13:36:42.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename job @ 11/04/23 13:36:42.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:36:42.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:36:42.199
  STEP: Creating a job @ 11/04/23 13:36:42.201
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/04/23 13:36:42.205
  E1104 13:36:42.993468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:43.993644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/04/23 13:36:44.208
  STEP: updating /status @ 11/04/23 13:36:44.219
  STEP: get /status @ 11/04/23 13:36:44.224
  Nov  4 13:36:44.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-596" for this suite. @ 11/04/23 13:36:44.231
• [2.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 11/04/23 13:36:44.24
  Nov  4 13:36:44.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 13:36:44.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:36:44.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:36:44.257
  STEP: Creating a pod to test substitution in container's command @ 11/04/23 13:36:44.26
  E1104 13:36:44.994640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:45.995280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:46.995358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:47.996330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:36:48.278
  Nov  4 13:36:48.281: INFO: Trying to get logs from node ip-172-31-44-230 pod var-expansion-944659bd-365c-4fca-a519-183aeb48d637 container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 13:36:48.286
  Nov  4 13:36:48.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4351" for this suite. @ 11/04/23 13:36:48.301
• [4.068 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 11/04/23 13:36:48.308
  Nov  4 13:36:48.308: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 13:36:48.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:36:48.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:36:48.326
  STEP: Creating service test in namespace statefulset-6785 @ 11/04/23 13:36:48.328
  STEP: Creating statefulset ss in namespace statefulset-6785 @ 11/04/23 13:36:48.337
  Nov  4 13:36:48.349: INFO: Found 0 stateful pods, waiting for 1
  E1104 13:36:48.996447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:49.996824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:50.996918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:51.996998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:52.997329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:53.997432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:54.997640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:55.998669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:56.998776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:36:57.999040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:36:58.355: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/04/23 13:36:58.36
  STEP: Getting /status @ 11/04/23 13:36:58.372
  Nov  4 13:36:58.377: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/04/23 13:36:58.377
  Nov  4 13:36:58.384: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/04/23 13:36:58.384
  Nov  4 13:36:58.386: INFO: Observed &StatefulSet event: ADDED
  Nov  4 13:36:58.386: INFO: Found Statefulset ss in namespace statefulset-6785 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov  4 13:36:58.386: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/04/23 13:36:58.386
  Nov  4 13:36:58.386: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov  4 13:36:58.394: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/04/23 13:36:58.395
  Nov  4 13:36:58.396: INFO: Observed &StatefulSet event: ADDED
  Nov  4 13:36:58.396: INFO: Observed Statefulset ss in namespace statefulset-6785 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov  4 13:36:58.396: INFO: Observed &StatefulSet event: MODIFIED
  Nov  4 13:36:58.396: INFO: Deleting all statefulset in ns statefulset-6785
  Nov  4 13:36:58.399: INFO: Scaling statefulset ss to 0
  E1104 13:36:59.000066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:00.000158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:01.000586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:02.000776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:03.001135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:04.001233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:05.001305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:06.001386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:07.001610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:08.002561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:37:08.417: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 13:37:08.419: INFO: Deleting statefulset ss
  Nov  4 13:37:08.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6785" for this suite. @ 11/04/23 13:37:08.438
• [20.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 11/04/23 13:37:08.446
  Nov  4 13:37:08.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename ingressclass @ 11/04/23 13:37:08.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:37:08.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:37:08.466
  STEP: getting /apis @ 11/04/23 13:37:08.468
  STEP: getting /apis/networking.k8s.io @ 11/04/23 13:37:08.471
  STEP: getting /apis/networking.k8s.iov1 @ 11/04/23 13:37:08.472
  STEP: creating @ 11/04/23 13:37:08.473
  STEP: getting @ 11/04/23 13:37:08.484
  STEP: listing @ 11/04/23 13:37:08.487
  STEP: watching @ 11/04/23 13:37:08.49
  Nov  4 13:37:08.490: INFO: starting watch
  STEP: patching @ 11/04/23 13:37:08.49
  STEP: updating @ 11/04/23 13:37:08.494
  Nov  4 13:37:08.500: INFO: waiting for watch events with expected annotations
  Nov  4 13:37:08.500: INFO: saw patched and updated annotations
  STEP: deleting @ 11/04/23 13:37:08.5
  STEP: deleting a collection @ 11/04/23 13:37:08.509
  Nov  4 13:37:08.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2202" for this suite. @ 11/04/23 13:37:08.525
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 11/04/23 13:37:08.532
  Nov  4 13:37:08.532: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:37:08.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:37:08.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:37:08.553
  STEP: Creating configMap with name configmap-test-volume-map-b92c0d7f-bb68-4c34-bca7-25d03472e7c7 @ 11/04/23 13:37:08.555
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:37:08.563
  E1104 13:37:09.002994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:10.003177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:11.004185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:12.004512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:37:12.58
  Nov  4 13:37:12.583: INFO: Trying to get logs from node ip-172-31-75-164 pod pod-configmaps-8e8cf4bf-1927-47b7-884b-142ce22e3a61 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:37:12.597
  Nov  4 13:37:12.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1167" for this suite. @ 11/04/23 13:37:12.616
• [4.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 11/04/23 13:37:12.622
  Nov  4 13:37:12.622: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replicaset @ 11/04/23 13:37:12.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:37:12.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:37:12.639
  Nov  4 13:37:12.652: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1104 13:37:13.004683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:14.005148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:15.005252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:16.005431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:17.005652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:37:17.655: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/04/23 13:37:17.655
  STEP: Scaling up "test-rs" replicaset  @ 11/04/23 13:37:17.655
  Nov  4 13:37:17.665: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/04/23 13:37:17.665
  Nov  4 13:37:17.674: INFO: observed ReplicaSet test-rs in namespace replicaset-4109 with ReadyReplicas 1, AvailableReplicas 1
  Nov  4 13:37:17.693: INFO: observed ReplicaSet test-rs in namespace replicaset-4109 with ReadyReplicas 1, AvailableReplicas 1
  Nov  4 13:37:17.708: INFO: observed ReplicaSet test-rs in namespace replicaset-4109 with ReadyReplicas 1, AvailableReplicas 1
  Nov  4 13:37:17.722: INFO: observed ReplicaSet test-rs in namespace replicaset-4109 with ReadyReplicas 1, AvailableReplicas 1
  E1104 13:37:18.005741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:19.005993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:37:19.046: INFO: observed ReplicaSet test-rs in namespace replicaset-4109 with ReadyReplicas 2, AvailableReplicas 2
  Nov  4 13:37:19.316: INFO: observed Replicaset test-rs in namespace replicaset-4109 with ReadyReplicas 3 found true
  Nov  4 13:37:19.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4109" for this suite. @ 11/04/23 13:37:19.32
• [6.702 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 11/04/23 13:37:19.325
  Nov  4 13:37:19.325: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/04/23 13:37:19.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:37:19.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:37:19.346
  Nov  4 13:37:19.348: INFO: Waiting up to 1m0s for all nodes to be ready
  E1104 13:37:20.006658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:21.006760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:22.006840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:23.007693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:24.007783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:25.007960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:26.008043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:27.008142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:28.008630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:29.008758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:30.009151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:31.009324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:32.009409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:33.010472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:34.010565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:35.011554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:36.011668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:37.011740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:38.011886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:39.011962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:40.012736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:41.013109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:42.013208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:43.013953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:44.014065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:45.014149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:46.014252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:47.014339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:48.015328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:49.015438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:50.015530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:51.015610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:52.015709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:53.015803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:54.015900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:55.016206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:56.016247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:57.016304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:58.016408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:37:59.016995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:00.017477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:01.017616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:02.018380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:03.018411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:04.019359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:05.020390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:06.021337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:07.021430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:08.022460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:09.022552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:10.022792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:11.023030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:12.023843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:13.023912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:14.024178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:15.024644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:16.024892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:17.025048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:18.025521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:19.025674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:38:19.362: INFO: Waiting for terminating namespaces to be deleted...
  Nov  4 13:38:19.366: INFO: Starting informer...
  STEP: Starting pods... @ 11/04/23 13:38:19.366
  Nov  4 13:38:19.580: INFO: Pod1 is running on ip-172-31-44-230. Tainting Node
  E1104 13:38:20.025770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:21.025864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:38:21.797: INFO: Pod2 is running on ip-172-31-44-230. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/04/23 13:38:21.797
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/04/23 13:38:21.806
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/04/23 13:38:21.808
  E1104 13:38:22.026680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:23.027058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:24.027248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:25.027429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:26.027542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:27.027590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:38:27.442: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E1104 13:38:28.028107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:29.028305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:30.028455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:31.028563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:32.028791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:33.029175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:34.029246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:35.029340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:36.029532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:37.029610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:38.030673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:39.030859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:40.030946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:41.031113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:42.031441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:43.032479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:44.032570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:45.032733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:46.032801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:47.033745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:38:47.481: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Nov  4 13:38:47.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/04/23 13:38:47.495
  STEP: Destroying namespace "taint-multiple-pods-4060" for this suite. @ 11/04/23 13:38:47.497
• [88.178 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/04/23 13:38:47.504
  Nov  4 13:38:47.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename containers @ 11/04/23 13:38:47.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:38:47.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:38:47.527
  STEP: Creating a pod to test override all @ 11/04/23 13:38:47.534
  E1104 13:38:48.033836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:49.034680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:50.034787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:51.034974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:38:51.553
  Nov  4 13:38:51.556: INFO: Trying to get logs from node ip-172-31-44-230 pod client-containers-071d60c6-dc0d-44fb-b283-75f285282fb5 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:38:51.568
  Nov  4 13:38:51.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1003" for this suite. @ 11/04/23 13:38:51.583
• [4.086 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 11/04/23 13:38:51.59
  Nov  4 13:38:51.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:38:51.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:38:51.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:38:51.607
  STEP: Creating configMap with name configmap-test-volume-map-0ed4d44b-534c-46db-bfc2-44a180e34b93 @ 11/04/23 13:38:51.61
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:38:51.615
  E1104 13:38:52.035532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:53.035919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:54.036539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:55.036572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:38:55.628
  Nov  4 13:38:55.632: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-9666ea91-6e01-48b3-96be-12bce855b213 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:38:55.639
  Nov  4 13:38:55.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5127" for this suite. @ 11/04/23 13:38:55.654
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 11/04/23 13:38:55.663
  Nov  4 13:38:55.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename replicaset @ 11/04/23 13:38:55.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:38:55.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:38:55.684
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/04/23 13:38:55.686
  E1104 13:38:56.036950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:38:57.037711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 11/04/23 13:38:57.703
  STEP: Then the orphan pod is adopted @ 11/04/23 13:38:57.707
  E1104 13:38:58.038317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 11/04/23 13:38:58.713
  Nov  4 13:38:58.717: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/04/23 13:38:58.726
  E1104 13:38:59.039247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:38:59.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6505" for this suite. @ 11/04/23 13:38:59.737
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 11/04/23 13:38:59.742
  Nov  4 13:38:59.742: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 13:38:59.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:38:59.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:38:59.764
  STEP: Creating a ResourceQuota @ 11/04/23 13:38:59.767
  STEP: Getting a ResourceQuota @ 11/04/23 13:38:59.771
  STEP: Updating a ResourceQuota @ 11/04/23 13:38:59.773
  STEP: Verifying a ResourceQuota was modified @ 11/04/23 13:38:59.782
  STEP: Deleting a ResourceQuota @ 11/04/23 13:38:59.785
  STEP: Verifying the deleted ResourceQuota @ 11/04/23 13:38:59.791
  Nov  4 13:38:59.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5845" for this suite. @ 11/04/23 13:38:59.798
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 11/04/23 13:38:59.805
  Nov  4 13:38:59.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 13:38:59.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:38:59.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:38:59.827
  STEP: Creating service test in namespace statefulset-1166 @ 11/04/23 13:38:59.829
  STEP: Creating statefulset ss in namespace statefulset-1166 @ 11/04/23 13:38:59.837
  Nov  4 13:38:59.847: INFO: Found 0 stateful pods, waiting for 1
  E1104 13:39:00.039346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:01.039433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:02.039611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:03.039992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:04.040143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:05.040229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:06.040313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:07.040402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:08.040538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:09.040786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:09.852: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/04/23 13:39:09.858
  STEP: updating a scale subresource @ 11/04/23 13:39:09.861
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/04/23 13:39:09.866
  STEP: Patch a scale subresource @ 11/04/23 13:39:09.869
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/04/23 13:39:09.876
  Nov  4 13:39:09.878: INFO: Deleting all statefulset in ns statefulset-1166
  Nov  4 13:39:09.883: INFO: Scaling statefulset ss to 0
  E1104 13:39:10.040831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:11.041085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:12.041184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:13.041202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:14.041295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:15.041404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:16.042463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:17.042617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:18.042735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:19.042916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:19.899: INFO: Waiting for statefulset status.replicas updated to 0
  Nov  4 13:39:19.903: INFO: Deleting statefulset ss
  Nov  4 13:39:19.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1166" for this suite. @ 11/04/23 13:39:19.914
• [20.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/04/23 13:39:19.921
  Nov  4 13:39:19.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename containers @ 11/04/23 13:39:19.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:19.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:19.941
  STEP: Creating a pod to test override command @ 11/04/23 13:39:19.943
  E1104 13:39:20.043763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:21.043859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:22.044505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:23.044938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:39:23.96
  Nov  4 13:39:23.963: INFO: Trying to get logs from node ip-172-31-44-230 pod client-containers-83794923-fc46-400f-8e28-1cc3d023993a container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:39:23.97
  Nov  4 13:39:23.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9302" for this suite. @ 11/04/23 13:39:23.985
• [4.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 11/04/23 13:39:23.992
  Nov  4 13:39:23.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 13:39:23.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:24.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:24.01
  STEP: fetching services @ 11/04/23 13:39:24.012
  Nov  4 13:39:24.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4625" for this suite. @ 11/04/23 13:39:24.017
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/04/23 13:39:24.024
  Nov  4 13:39:24.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 13:39:24.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:24.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:24.041
  E1104 13:39:24.045771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a Pod with a static label @ 11/04/23 13:39:24.048
  STEP: watching for Pod to be ready @ 11/04/23 13:39:24.056
  Nov  4 13:39:24.058: INFO: observed Pod pod-test in namespace pods-7251 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Nov  4 13:39:24.061: INFO: observed Pod pod-test in namespace pods-7251 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:24 +0000 UTC  }]
  Nov  4 13:39:24.076: INFO: observed Pod pod-test in namespace pods-7251 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:24 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:24 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:24 +0000 UTC  }]
  E1104 13:39:25.046339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:25.548: INFO: Found Pod pod-test in namespace pods-7251 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:25 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:25 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-04 13:39:24 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/04/23 13:39:25.551
  STEP: getting the Pod and ensuring that it's patched @ 11/04/23 13:39:25.558
  STEP: replacing the Pod's status Ready condition to False @ 11/04/23 13:39:25.562
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/04/23 13:39:25.57
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/04/23 13:39:25.57
  STEP: watching for the Pod to be deleted @ 11/04/23 13:39:25.579
  Nov  4 13:39:25.580: INFO: observed event type MODIFIED
  E1104 13:39:26.046963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:27.047282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:27.552: INFO: observed event type MODIFIED
  Nov  4 13:39:27.724: INFO: observed event type MODIFIED
  E1104 13:39:28.047340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:28.553: INFO: observed event type MODIFIED
  Nov  4 13:39:28.568: INFO: observed event type MODIFIED
  Nov  4 13:39:28.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7251" for this suite. @ 11/04/23 13:39:28.577
• [4.559 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 11/04/23 13:39:28.583
  Nov  4 13:39:28.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename disruption @ 11/04/23 13:39:28.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:28.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:28.601
  STEP: creating the pdb @ 11/04/23 13:39:28.603
  STEP: Waiting for the pdb to be processed @ 11/04/23 13:39:28.61
  E1104 13:39:29.047441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:30.048438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 11/04/23 13:39:30.616
  STEP: Waiting for the pdb to be processed @ 11/04/23 13:39:30.623
  E1104 13:39:31.049244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:32.049435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 11/04/23 13:39:32.63
  STEP: Waiting for the pdb to be processed @ 11/04/23 13:39:32.637
  E1104 13:39:33.050158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:34.050677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 11/04/23 13:39:34.65
  Nov  4 13:39:34.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8559" for this suite. @ 11/04/23 13:39:34.655
• [6.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 11/04/23 13:39:34.662
  Nov  4 13:39:34.662: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:39:34.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:34.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:34.681
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/04/23 13:39:34.683
  Nov  4 13:39:34.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6124 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov  4 13:39:34.733: INFO: stderr: ""
  Nov  4 13:39:34.733: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/04/23 13:39:34.733
  E1104 13:39:35.050826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:36.051732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:37.051822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:38.052104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:39.052196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/04/23 13:39:39.784
  Nov  4 13:39:39.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6124 get pod e2e-test-httpd-pod -o json'
  Nov  4 13:39:39.836: INFO: stderr: ""
  Nov  4 13:39:39.836: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-11-04T13:39:34Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6124\",\n        \"resourceVersion\": \"38282\",\n        \"uid\": \"4df2451d-6689-4b02-a184-d00411e70507\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-lc68c\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-44-230\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-lc68c\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-04T13:39:34Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-04T13:39:35Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-04T13:39:35Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-04T13:39:34Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://96d9598f5a8f961ce486d8a00b748af4608b3adceb1fddfe656089454a9c6de5\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-11-04T13:39:35Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.44.230\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.46.126\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.46.126\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-11-04T13:39:34Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/04/23 13:39:39.837
  Nov  4 13:39:39.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6124 replace -f -'
  E1104 13:39:40.052780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:40.150: INFO: stderr: ""
  Nov  4 13:39:40.150: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 11/04/23 13:39:40.15
  Nov  4 13:39:40.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-6124 delete pods e2e-test-httpd-pod'
  E1104 13:39:41.052847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:41.600: INFO: stderr: ""
  Nov  4 13:39:41.600: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov  4 13:39:41.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6124" for this suite. @ 11/04/23 13:39:41.604
• [6.947 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 11/04/23 13:39:41.61
  Nov  4 13:39:41.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename discovery @ 11/04/23 13:39:41.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:41.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:41.631
  STEP: Setting up server cert @ 11/04/23 13:39:41.633
  STEP: Requesting APIResourceList from "/api/v1" @ 11/04/23 13:39:41.89
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/04/23 13:39:41.891
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/04/23 13:39:41.892
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/04/23 13:39:41.893
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/04/23 13:39:41.894
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/04/23 13:39:41.895
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/04/23 13:39:41.896
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/04/23 13:39:41.897
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/04/23 13:39:41.897
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/04/23 13:39:41.898
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/04/23 13:39:41.899
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/04/23 13:39:41.9
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/04/23 13:39:41.9
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/04/23 13:39:41.901
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/04/23 13:39:41.902
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/04/23 13:39:41.903
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/04/23 13:39:41.904
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/04/23 13:39:41.904
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/04/23 13:39:41.905
  Nov  4 13:39:41.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5242" for this suite. @ 11/04/23 13:39:41.91
• [0.306 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/04/23 13:39:41.916
  Nov  4 13:39:41.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 13:39:41.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:41.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:41.935
  STEP: Creating secret with name secret-test-map-13de9c11-7070-4e64-8e39-03f36674921e @ 11/04/23 13:39:41.937
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:39:41.941
  E1104 13:39:42.053335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:43.053480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:44.054301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:45.055170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:39:45.96
  Nov  4 13:39:45.964: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-02dd5866-1823-4cbc-8945-98bbae60e578 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:39:45.97
  Nov  4 13:39:45.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9595" for this suite. @ 11/04/23 13:39:45.984
• [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 11/04/23 13:39:45.99
  Nov  4 13:39:45.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:39:45.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:46.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:46.007
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:39:46.009
  E1104 13:39:46.056161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:47.056391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:48.056419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:49.056506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:39:50.028
  Nov  4 13:39:50.032: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-34d69af3-4d60-44bd-8bdd-012176a9b8f4 container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:39:50.038
  Nov  4 13:39:50.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9872" for this suite. @ 11/04/23 13:39:50.053
  E1104 13:39:50.056526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 11/04/23 13:39:50.06
  Nov  4 13:39:50.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:39:50.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:50.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:50.078
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/04/23 13:39:50.081
  E1104 13:39:51.056925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:52.057024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:53.057100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:54.058148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:39:54.098
  Nov  4 13:39:54.100: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-95695c0e-cbbe-4e32-bae1-4c0c7cbe35cc container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:39:54.106
  Nov  4 13:39:54.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5922" for this suite. @ 11/04/23 13:39:54.122
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 11/04/23 13:39:54.13
  Nov  4 13:39:54.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename runtimeclass @ 11/04/23 13:39:54.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:54.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:54.147
  STEP: getting /apis @ 11/04/23 13:39:54.149
  STEP: getting /apis/node.k8s.io @ 11/04/23 13:39:54.152
  STEP: getting /apis/node.k8s.io/v1 @ 11/04/23 13:39:54.153
  STEP: creating @ 11/04/23 13:39:54.154
  STEP: watching @ 11/04/23 13:39:54.166
  Nov  4 13:39:54.166: INFO: starting watch
  STEP: getting @ 11/04/23 13:39:54.17
  STEP: listing @ 11/04/23 13:39:54.172
  STEP: patching @ 11/04/23 13:39:54.176
  STEP: updating @ 11/04/23 13:39:54.179
  Nov  4 13:39:54.183: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 11/04/23 13:39:54.183
  STEP: deleting a collection @ 11/04/23 13:39:54.195
  Nov  4 13:39:54.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-839" for this suite. @ 11/04/23 13:39:54.211
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 11/04/23 13:39:54.217
  Nov  4 13:39:54.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename container-probe @ 11/04/23 13:39:54.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:39:54.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:39:54.234
  STEP: Creating pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048 @ 11/04/23 13:39:54.236
  E1104 13:39:55.058228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:56.058494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/04/23 13:39:56.251
  Nov  4 13:39:56.253: INFO: Initial restart count of pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 is 0
  Nov  4 13:39:56.255: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:39:57.058894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:39:58.059164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:39:58.260: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:39:59.059532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:00.059560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:00.263: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:01.059614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:02.059883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:02.267: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:03.060384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:04.060473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:04.270: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:05.060662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:06.061333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:06.276: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:07.061905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:08.061995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:08.280: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:09.062086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:10.062666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:10.285: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:11.062979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:12.064047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:12.288: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:13.065028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:14.065106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:14.292: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  E1104 13:40:15.065163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:16.065371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:16.296: INFO: Get pod liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 in namespace container-probe-2048
  Nov  4 13:40:16.296: INFO: Restart count of pod container-probe-2048/liveness-c67684e6-9afb-4f97-8ec3-e1ed2ff9dd67 is now 1 (20.04281765s elapsed)
  Nov  4 13:40:16.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:40:16.299
  STEP: Destroying namespace "container-probe-2048" for this suite. @ 11/04/23 13:40:16.311
• [22.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 11/04/23 13:40:16.317
  Nov  4 13:40:16.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename disruption @ 11/04/23 13:40:16.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:16.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:16.338
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/04/23 13:40:16.34
  STEP: Waiting for the pdb to be processed @ 11/04/23 13:40:16.344
  E1104 13:40:17.066317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:18.066403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/04/23 13:40:18.354
  STEP: Waiting for all pods to be running @ 11/04/23 13:40:18.354
  Nov  4 13:40:18.357: INFO: pods: 0 < 3
  E1104 13:40:19.066665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:20.066714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/04/23 13:40:20.362
  STEP: Updating the pdb to allow a pod to be evicted @ 11/04/23 13:40:20.369
  STEP: Waiting for the pdb to be processed @ 11/04/23 13:40:20.376
  E1104 13:40:21.067327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:22.068176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/04/23 13:40:22.384
  STEP: Waiting for all pods to be running @ 11/04/23 13:40:22.384
  STEP: Waiting for the pdb to observed all healthy pods @ 11/04/23 13:40:22.387
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/04/23 13:40:22.409
  STEP: Waiting for the pdb to be processed @ 11/04/23 13:40:22.427
  E1104 13:40:23.069135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:24.069230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/04/23 13:40:24.436
  STEP: locating a running pod @ 11/04/23 13:40:24.439
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/04/23 13:40:24.448
  STEP: Waiting for the pdb to be deleted @ 11/04/23 13:40:24.453
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/04/23 13:40:24.456
  STEP: Waiting for all pods to be running @ 11/04/23 13:40:24.456
  Nov  4 13:40:24.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9383" for this suite. @ 11/04/23 13:40:24.477
• [8.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 11/04/23 13:40:24.485
  Nov  4 13:40:24.485: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename crd-webhook @ 11/04/23 13:40:24.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:24.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:24.51
  STEP: Setting up server cert @ 11/04/23 13:40:24.513
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/04/23 13:40:24.972
  STEP: Deploying the custom resource conversion webhook pod @ 11/04/23 13:40:24.981
  STEP: Wait for the deployment to be ready @ 11/04/23 13:40:24.991
  Nov  4 13:40:24.996: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E1104 13:40:25.069775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:26.069876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:40:27.005
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:40:27.013
  E1104 13:40:27.070245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:28.014: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov  4 13:40:28.020: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:40:28.070548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:29.070742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:30.070844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/04/23 13:40:30.581
  STEP: Create a v2 custom resource @ 11/04/23 13:40:30.595
  STEP: List CRs in v1 @ 11/04/23 13:40:30.635
  STEP: List CRs in v2 @ 11/04/23 13:40:30.639
  Nov  4 13:40:30.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1104 13:40:31.071796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-6546" for this suite. @ 11/04/23 13:40:31.208
• [6.730 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/04/23 13:40:31.215
  Nov  4 13:40:31.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/04/23 13:40:31.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:31.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:31.242
  E1104 13:40:32.072824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:33.073279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:33.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 11/04/23 13:40:33.281
  STEP: Cleaning up the configmap @ 11/04/23 13:40:33.288
  STEP: Cleaning up the pod @ 11/04/23 13:40:33.294
  STEP: Destroying namespace "emptydir-wrapper-3324" for this suite. @ 11/04/23 13:40:33.306
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/04/23 13:40:33.315
  Nov  4 13:40:33.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename tables @ 11/04/23 13:40:33.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:33.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:33.334
  Nov  4 13:40:33.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4263" for this suite. @ 11/04/23 13:40:33.345
• [0.037 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/04/23 13:40:33.353
  Nov  4 13:40:33.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubelet-test @ 11/04/23 13:40:33.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:33.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:33.374
  E1104 13:40:34.073365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:35.073461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:35.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3368" for this suite. @ 11/04/23 13:40:35.411
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 11/04/23 13:40:35.42
  Nov  4 13:40:35.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 13:40:35.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:35.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:35.44
  STEP: Creating a test headless service @ 11/04/23 13:40:35.452
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5825.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5825.svc.cluster.local;sleep 1; done
   @ 11/04/23 13:40:35.457
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5825.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5825.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5825.svc.cluster.local;sleep 1; done
   @ 11/04/23 13:40:35.458
  STEP: creating a pod to probe DNS @ 11/04/23 13:40:35.458
  STEP: submitting the pod to kubernetes @ 11/04/23 13:40:35.458
  E1104 13:40:36.074298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:37.074688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/04/23 13:40:37.482
  STEP: looking for the results for each expected name from probers @ 11/04/23 13:40:37.484
  Nov  4 13:40:37.488: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.492: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.494: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.497: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.500: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.503: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.505: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.509: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5825.svc.cluster.local from pod dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707: the server could not find the requested resource (get pods dns-test-1f397b99-2a28-4a19-889b-bc315f173707)
  Nov  4 13:40:37.509: INFO: Lookups using dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5825.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5825.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5825.svc.cluster.local jessie_udp@dns-test-service-2.dns-5825.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5825.svc.cluster.local]

  Nov  4 13:40:37.519: INFO: Pod client logs for webserver: 
  Nov  4 13:40:37.524: INFO: Pod client logs for querier: 
  Nov  4 13:40:37.531: INFO: Pod client logs for jessie-querier: 
  E1104 13:40:38.075757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:39.076622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:40.076712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:41.076800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:42.077290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:42.557: INFO: DNS probes using dns-5825/dns-test-1f397b99-2a28-4a19-889b-bc315f173707 succeeded

  Nov  4 13:40:42.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:40:42.56
  STEP: deleting the test headless service @ 11/04/23 13:40:42.571
  STEP: Destroying namespace "dns-5825" for this suite. @ 11/04/23 13:40:42.589
• [7.175 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/04/23 13:40:42.596
  Nov  4 13:40:42.596: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename certificates @ 11/04/23 13:40:42.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:42.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:42.618
  E1104 13:40:43.078213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 11/04/23 13:40:43.173
  STEP: getting /apis/certificates.k8s.io @ 11/04/23 13:40:43.176
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/04/23 13:40:43.177
  STEP: creating @ 11/04/23 13:40:43.178
  STEP: getting @ 11/04/23 13:40:43.194
  STEP: listing @ 11/04/23 13:40:43.197
  STEP: watching @ 11/04/23 13:40:43.2
  Nov  4 13:40:43.200: INFO: starting watch
  STEP: patching @ 11/04/23 13:40:43.201
  STEP: updating @ 11/04/23 13:40:43.207
  Nov  4 13:40:43.213: INFO: waiting for watch events with expected annotations
  Nov  4 13:40:43.213: INFO: saw patched and updated annotations
  STEP: getting /approval @ 11/04/23 13:40:43.213
  STEP: patching /approval @ 11/04/23 13:40:43.215
  STEP: updating /approval @ 11/04/23 13:40:43.221
  STEP: getting /status @ 11/04/23 13:40:43.228
  STEP: patching /status @ 11/04/23 13:40:43.231
  STEP: updating /status @ 11/04/23 13:40:43.238
  STEP: deleting @ 11/04/23 13:40:43.247
  STEP: deleting a collection @ 11/04/23 13:40:43.257
  Nov  4 13:40:43.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9166" for this suite. @ 11/04/23 13:40:43.277
• [0.688 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 11/04/23 13:40:43.284
  Nov  4 13:40:43.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename security-context-test @ 11/04/23 13:40:43.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:43.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:43.306
  E1104 13:40:44.078685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:45.078779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:46.079789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:47.079905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:40:47.341: INFO: Got logs for pod "busybox-privileged-false-9cc37e14-8467-4858-bbe7-781c605049df": "ip: RTNETLINK answers: Operation not permitted\n"
  Nov  4 13:40:47.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1230" for this suite. @ 11/04/23 13:40:47.344
• [4.067 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 11/04/23 13:40:47.351
  Nov  4 13:40:47.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename gc @ 11/04/23 13:40:47.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:40:47.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:40:47.371
  STEP: create the rc @ 11/04/23 13:40:47.377
  W1104 13:40:47.381339      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1104 13:40:48.080224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:49.082906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:50.081019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:51.081382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:52.081910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:53.082031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/04/23 13:40:53.405
  STEP: wait for the rc to be deleted @ 11/04/23 13:40:53.426
  E1104 13:40:54.082150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:55.082680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:56.082864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:57.082962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:40:58.083040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/04/23 13:40:58.43
  E1104 13:40:59.083147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:00.083349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:01.083524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:02.083627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:03.084031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:04.084197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:05.084388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:06.084480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:07.084653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:08.084876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:09.085670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:10.086675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:11.087475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:12.087550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:13.087932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:14.088015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:15.088691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:16.088780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:17.088945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:18.088977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:19.089619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:20.089619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:21.089717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:22.090718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:23.091193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:24.091292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:25.091458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:26.091654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:27.091744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:28.091850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/04/23 13:41:28.437
  W1104 13:41:28.444148      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov  4 13:41:28.444: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov  4 13:41:28.444: INFO: Deleting pod "simpletest.rc-2bpq6" in namespace "gc-3407"
  Nov  4 13:41:28.455: INFO: Deleting pod "simpletest.rc-2sklf" in namespace "gc-3407"
  Nov  4 13:41:28.466: INFO: Deleting pod "simpletest.rc-47wl9" in namespace "gc-3407"
  Nov  4 13:41:28.477: INFO: Deleting pod "simpletest.rc-4pkpq" in namespace "gc-3407"
  Nov  4 13:41:28.489: INFO: Deleting pod "simpletest.rc-4zlrc" in namespace "gc-3407"
  Nov  4 13:41:28.499: INFO: Deleting pod "simpletest.rc-57cs7" in namespace "gc-3407"
  Nov  4 13:41:28.508: INFO: Deleting pod "simpletest.rc-5d8nc" in namespace "gc-3407"
  Nov  4 13:41:28.517: INFO: Deleting pod "simpletest.rc-5jm7n" in namespace "gc-3407"
  Nov  4 13:41:28.530: INFO: Deleting pod "simpletest.rc-5shls" in namespace "gc-3407"
  Nov  4 13:41:28.541: INFO: Deleting pod "simpletest.rc-5tsth" in namespace "gc-3407"
  Nov  4 13:41:28.552: INFO: Deleting pod "simpletest.rc-5vhj5" in namespace "gc-3407"
  Nov  4 13:41:28.560: INFO: Deleting pod "simpletest.rc-5x42b" in namespace "gc-3407"
  Nov  4 13:41:28.570: INFO: Deleting pod "simpletest.rc-79hdf" in namespace "gc-3407"
  Nov  4 13:41:28.584: INFO: Deleting pod "simpletest.rc-7jsbd" in namespace "gc-3407"
  Nov  4 13:41:28.598: INFO: Deleting pod "simpletest.rc-7kvtw" in namespace "gc-3407"
  Nov  4 13:41:28.612: INFO: Deleting pod "simpletest.rc-7zp7w" in namespace "gc-3407"
  Nov  4 13:41:28.625: INFO: Deleting pod "simpletest.rc-826gn" in namespace "gc-3407"
  Nov  4 13:41:28.646: INFO: Deleting pod "simpletest.rc-8hfm2" in namespace "gc-3407"
  Nov  4 13:41:28.664: INFO: Deleting pod "simpletest.rc-8v2sj" in namespace "gc-3407"
  Nov  4 13:41:28.676: INFO: Deleting pod "simpletest.rc-8zdmt" in namespace "gc-3407"
  Nov  4 13:41:28.687: INFO: Deleting pod "simpletest.rc-9t75h" in namespace "gc-3407"
  Nov  4 13:41:28.698: INFO: Deleting pod "simpletest.rc-9v2jp" in namespace "gc-3407"
  Nov  4 13:41:28.709: INFO: Deleting pod "simpletest.rc-9vzj6" in namespace "gc-3407"
  Nov  4 13:41:28.722: INFO: Deleting pod "simpletest.rc-9w6m6" in namespace "gc-3407"
  Nov  4 13:41:28.734: INFO: Deleting pod "simpletest.rc-b5mf5" in namespace "gc-3407"
  Nov  4 13:41:28.751: INFO: Deleting pod "simpletest.rc-bksqm" in namespace "gc-3407"
  Nov  4 13:41:28.769: INFO: Deleting pod "simpletest.rc-c4btl" in namespace "gc-3407"
  Nov  4 13:41:28.788: INFO: Deleting pod "simpletest.rc-c5c95" in namespace "gc-3407"
  Nov  4 13:41:28.798: INFO: Deleting pod "simpletest.rc-cfxct" in namespace "gc-3407"
  Nov  4 13:41:28.823: INFO: Deleting pod "simpletest.rc-ck6vp" in namespace "gc-3407"
  Nov  4 13:41:28.837: INFO: Deleting pod "simpletest.rc-ctnx8" in namespace "gc-3407"
  Nov  4 13:41:28.847: INFO: Deleting pod "simpletest.rc-d9mqz" in namespace "gc-3407"
  Nov  4 13:41:28.859: INFO: Deleting pod "simpletest.rc-djzmm" in namespace "gc-3407"
  Nov  4 13:41:28.872: INFO: Deleting pod "simpletest.rc-dkfrm" in namespace "gc-3407"
  Nov  4 13:41:28.881: INFO: Deleting pod "simpletest.rc-dspcc" in namespace "gc-3407"
  Nov  4 13:41:28.895: INFO: Deleting pod "simpletest.rc-dvf7t" in namespace "gc-3407"
  Nov  4 13:41:28.909: INFO: Deleting pod "simpletest.rc-dx6sj" in namespace "gc-3407"
  Nov  4 13:41:28.926: INFO: Deleting pod "simpletest.rc-f5jh6" in namespace "gc-3407"
  Nov  4 13:41:28.945: INFO: Deleting pod "simpletest.rc-fgdgv" in namespace "gc-3407"
  Nov  4 13:41:28.969: INFO: Deleting pod "simpletest.rc-fkh5w" in namespace "gc-3407"
  Nov  4 13:41:28.986: INFO: Deleting pod "simpletest.rc-frqg9" in namespace "gc-3407"
  Nov  4 13:41:28.996: INFO: Deleting pod "simpletest.rc-fs8vd" in namespace "gc-3407"
  Nov  4 13:41:29.010: INFO: Deleting pod "simpletest.rc-g6j4m" in namespace "gc-3407"
  Nov  4 13:41:29.021: INFO: Deleting pod "simpletest.rc-g7f55" in namespace "gc-3407"
  Nov  4 13:41:29.035: INFO: Deleting pod "simpletest.rc-gn5dn" in namespace "gc-3407"
  Nov  4 13:41:29.048: INFO: Deleting pod "simpletest.rc-gxjt5" in namespace "gc-3407"
  Nov  4 13:41:29.058: INFO: Deleting pod "simpletest.rc-h8pqx" in namespace "gc-3407"
  Nov  4 13:41:29.069: INFO: Deleting pod "simpletest.rc-h9l8k" in namespace "gc-3407"
  Nov  4 13:41:29.081: INFO: Deleting pod "simpletest.rc-hb5bn" in namespace "gc-3407"
  E1104 13:41:29.091901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:29.092: INFO: Deleting pod "simpletest.rc-hpp2c" in namespace "gc-3407"
  Nov  4 13:41:29.102: INFO: Deleting pod "simpletest.rc-jcchv" in namespace "gc-3407"
  Nov  4 13:41:29.114: INFO: Deleting pod "simpletest.rc-jf2d8" in namespace "gc-3407"
  Nov  4 13:41:29.131: INFO: Deleting pod "simpletest.rc-kj24m" in namespace "gc-3407"
  Nov  4 13:41:29.147: INFO: Deleting pod "simpletest.rc-kkgwh" in namespace "gc-3407"
  Nov  4 13:41:29.158: INFO: Deleting pod "simpletest.rc-kmx9z" in namespace "gc-3407"
  Nov  4 13:41:29.173: INFO: Deleting pod "simpletest.rc-kn6hr" in namespace "gc-3407"
  Nov  4 13:41:29.182: INFO: Deleting pod "simpletest.rc-knwdn" in namespace "gc-3407"
  Nov  4 13:41:29.191: INFO: Deleting pod "simpletest.rc-kp9zc" in namespace "gc-3407"
  Nov  4 13:41:29.204: INFO: Deleting pod "simpletest.rc-kqkm4" in namespace "gc-3407"
  Nov  4 13:41:29.222: INFO: Deleting pod "simpletest.rc-lmgg6" in namespace "gc-3407"
  Nov  4 13:41:29.231: INFO: Deleting pod "simpletest.rc-ln48v" in namespace "gc-3407"
  Nov  4 13:41:29.241: INFO: Deleting pod "simpletest.rc-lqt74" in namespace "gc-3407"
  Nov  4 13:41:29.253: INFO: Deleting pod "simpletest.rc-lth6t" in namespace "gc-3407"
  Nov  4 13:41:29.267: INFO: Deleting pod "simpletest.rc-mbhpq" in namespace "gc-3407"
  Nov  4 13:41:29.278: INFO: Deleting pod "simpletest.rc-mpjjc" in namespace "gc-3407"
  Nov  4 13:41:29.292: INFO: Deleting pod "simpletest.rc-mskbq" in namespace "gc-3407"
  Nov  4 13:41:29.342: INFO: Deleting pod "simpletest.rc-mtldw" in namespace "gc-3407"
  Nov  4 13:41:29.390: INFO: Deleting pod "simpletest.rc-mtrjp" in namespace "gc-3407"
  Nov  4 13:41:29.443: INFO: Deleting pod "simpletest.rc-pq4gj" in namespace "gc-3407"
  Nov  4 13:41:29.494: INFO: Deleting pod "simpletest.rc-ps5mc" in namespace "gc-3407"
  Nov  4 13:41:29.553: INFO: Deleting pod "simpletest.rc-q6wd2" in namespace "gc-3407"
  Nov  4 13:41:29.596: INFO: Deleting pod "simpletest.rc-q8nqg" in namespace "gc-3407"
  Nov  4 13:41:29.657: INFO: Deleting pod "simpletest.rc-q96zb" in namespace "gc-3407"
  Nov  4 13:41:29.693: INFO: Deleting pod "simpletest.rc-qgc96" in namespace "gc-3407"
  Nov  4 13:41:29.746: INFO: Deleting pod "simpletest.rc-qgqfv" in namespace "gc-3407"
  Nov  4 13:41:29.790: INFO: Deleting pod "simpletest.rc-ql86j" in namespace "gc-3407"
  Nov  4 13:41:29.843: INFO: Deleting pod "simpletest.rc-qm7jd" in namespace "gc-3407"
  Nov  4 13:41:29.892: INFO: Deleting pod "simpletest.rc-s8s2z" in namespace "gc-3407"
  Nov  4 13:41:29.943: INFO: Deleting pod "simpletest.rc-sls5j" in namespace "gc-3407"
  Nov  4 13:41:29.991: INFO: Deleting pod "simpletest.rc-spvpw" in namespace "gc-3407"
  Nov  4 13:41:30.042: INFO: Deleting pod "simpletest.rc-ssnvb" in namespace "gc-3407"
  Nov  4 13:41:30.090: INFO: Deleting pod "simpletest.rc-tr77x" in namespace "gc-3407"
  E1104 13:41:30.092226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:30.142: INFO: Deleting pod "simpletest.rc-v5429" in namespace "gc-3407"
  Nov  4 13:41:30.190: INFO: Deleting pod "simpletest.rc-vhkxb" in namespace "gc-3407"
  Nov  4 13:41:30.240: INFO: Deleting pod "simpletest.rc-vmh6f" in namespace "gc-3407"
  Nov  4 13:41:30.299: INFO: Deleting pod "simpletest.rc-vrt48" in namespace "gc-3407"
  Nov  4 13:41:30.341: INFO: Deleting pod "simpletest.rc-w4hq9" in namespace "gc-3407"
  Nov  4 13:41:30.392: INFO: Deleting pod "simpletest.rc-w56gb" in namespace "gc-3407"
  Nov  4 13:41:30.444: INFO: Deleting pod "simpletest.rc-w6fz7" in namespace "gc-3407"
  Nov  4 13:41:30.494: INFO: Deleting pod "simpletest.rc-wqlbm" in namespace "gc-3407"
  Nov  4 13:41:30.542: INFO: Deleting pod "simpletest.rc-x5fbb" in namespace "gc-3407"
  Nov  4 13:41:30.592: INFO: Deleting pod "simpletest.rc-xtc76" in namespace "gc-3407"
  Nov  4 13:41:30.644: INFO: Deleting pod "simpletest.rc-xws68" in namespace "gc-3407"
  Nov  4 13:41:30.695: INFO: Deleting pod "simpletest.rc-zh8wc" in namespace "gc-3407"
  Nov  4 13:41:30.765: INFO: Deleting pod "simpletest.rc-zjrlv" in namespace "gc-3407"
  Nov  4 13:41:30.813: INFO: Deleting pod "simpletest.rc-zljqc" in namespace "gc-3407"
  Nov  4 13:41:30.842: INFO: Deleting pod "simpletest.rc-zr94n" in namespace "gc-3407"
  Nov  4 13:41:30.893: INFO: Deleting pod "simpletest.rc-zrhhq" in namespace "gc-3407"
  Nov  4 13:41:30.948: INFO: Deleting pod "simpletest.rc-zs9pn" in namespace "gc-3407"
  Nov  4 13:41:30.992: INFO: Deleting pod "simpletest.rc-zzvp8" in namespace "gc-3407"
  Nov  4 13:41:31.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3407" for this suite. @ 11/04/23 13:41:31.085
  E1104 13:41:31.092874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [43.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 11/04/23 13:41:31.139
  Nov  4 13:41:31.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sysctl @ 11/04/23 13:41:31.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:41:31.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:41:31.161
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/04/23 13:41:31.164
  Nov  4 13:41:31.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8573" for this suite. @ 11/04/23 13:41:31.172
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 11/04/23 13:41:31.18
  Nov  4 13:41:31.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/04/23 13:41:31.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:41:31.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:41:31.203
  Nov  4 13:41:31.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  E1104 13:41:32.093629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:33.096403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:34.097054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:35.097099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:36.097983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:36.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2210" for this suite. @ 11/04/23 13:41:36.508
• [5.334 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/04/23 13:41:36.516
  Nov  4 13:41:36.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 13:41:36.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:41:36.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:41:36.539
  Nov  4 13:41:36.541: INFO: Creating deployment "test-recreate-deployment"
  Nov  4 13:41:36.545: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Nov  4 13:41:36.555: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E1104 13:41:37.098863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:38.099132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:38.561: INFO: Waiting deployment "test-recreate-deployment" to complete
  Nov  4 13:41:38.564: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Nov  4 13:41:38.573: INFO: Updating deployment test-recreate-deployment
  Nov  4 13:41:38.573: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Nov  4 13:41:38.662: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "015e44e0-9585-4493-a8e6-071803ddb89f",
      ResourceVersion: (string) (len=5) "41518",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702096,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov  4 13:41:38.666: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e3488ac-19b9-4e6d-8444-923b45f5b9e5",
      ResourceVersion: (string) (len=5) "41517",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "015e44e0-9585-4493-a8e6-071803ddb89f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 31 35 65 34 34  65 30 2d 39 35 38 35 2d  |\"015e44e0-9585-|
              00000120  34 34 39 33 2d 61 38 65  36 2d 30 37 31 38 30 33  |4493-a8e6-071803|
              00000130  64 64 62 38 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ddb89f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:41:38.667: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Nov  4 13:41:38.668: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33233d60-c889-48db-b415-cc981026ebd4",
      ResourceVersion: (string) (len=5) "41504",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702096,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "015e44e0-9585-4493-a8e6-071803ddb89f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 31 35 65 34 34  65 30 2d 39 35 38 35 2d  |\"015e44e0-9585-|
              00000120  34 34 39 33 2d 61 38 65  36 2d 30 37 31 38 30 33  |4493-a8e6-071803|
              00000130  64 64 62 38 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ddb89f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov  4 13:41:38.671: INFO: Pod "test-recreate-deployment-76fb77d45-mnrng" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-mnrng",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-6292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35c4f2f1-6acd-4088-b232-011c615b69b7",
      ResourceVersion: (string) (len=5) "41520",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "7e3488ac-19b9-4e6d-8444-923b45f5b9e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  33 34 38 38 61 63 2d 31  |d\":\"7e3488ac-1|
              00000090  39 62 39 2d 34 65 36 64  2d 38 34 34 34 2d 39 32  |9b9-4e6d-8444-92|
              000000a0  33 62 34 35 66 35 62 39  65 35 5c 22 7d 22 3a 7b  |3b45f5b9e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4cxtp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4cxtp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov  4 13:41:38.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6292" for this suite. @ 11/04/23 13:41:38.676
• [2.167 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 11/04/23 13:41:38.683
  Nov  4 13:41:38.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename aggregator @ 11/04/23 13:41:38.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:41:38.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:41:38.701
  Nov  4 13:41:38.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Registering the sample API server. @ 11/04/23 13:41:38.704
  Nov  4 13:41:38.884: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Nov  4 13:41:38.929: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1104 13:41:39.099751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:40.100068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:40.974: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:41.100238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:42.100267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:42.980: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:43.100752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:44.100892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:44.982: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:45.101623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:46.101718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:46.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:47.102359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:48.102434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:48.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:49.103216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:50.103692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:50.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:51.104064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:52.104315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:52.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:53.104592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:54.104666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:54.977: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:55.105003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:56.105192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:56.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:57.105485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:41:58.105621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:41:58.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 4, 13, 41, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1104 13:41:59.105843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:00.105941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:42:01.095: INFO: Waited 110.053192ms for the sample-apiserver to be ready to handle requests.
  E1104 13:42:01.106557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/04/23 13:42:01.122
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/04/23 13:42:01.126
  STEP: List APIServices @ 11/04/23 13:42:01.132
  Nov  4 13:42:01.136: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/04/23 13:42:01.136
  Nov  4 13:42:01.149: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/04/23 13:42:01.149
  Nov  4 13:42:01.160: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.November, 4, 13, 42, 0, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/04/23 13:42:01.161
  Nov  4 13:42:01.163: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-11-04 13:42:00 +0000 UTC Passed all checks passed}
  Nov  4 13:42:01.163: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov  4 13:42:01.163: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/04/23 13:42:01.163
  Nov  4 13:42:01.174: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1433707897" @ 11/04/23 13:42:01.174
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/04/23 13:42:01.182
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/04/23 13:42:01.187
  STEP: Patch APIService Status @ 11/04/23 13:42:01.19
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/04/23 13:42:01.196
  Nov  4 13:42:01.202: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-11-04 13:42:00 +0000 UTC Passed all checks passed}
  Nov  4 13:42:01.202: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov  4 13:42:01.202: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Nov  4 13:42:01.202: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 11/04/23 13:42:01.203
  STEP: Confirm that the generated APIService has been deleted @ 11/04/23 13:42:01.206
  Nov  4 13:42:01.206: INFO: Requesting list of APIServices to confirm quantity
  Nov  4 13:42:01.209: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Nov  4 13:42:01.209: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Nov  4 13:42:01.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-8458" for this suite. @ 11/04/23 13:42:01.308
• [22.630 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 11/04/23 13:42:01.313
  Nov  4 13:42:01.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename ingress @ 11/04/23 13:42:01.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:01.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:01.332
  STEP: getting /apis @ 11/04/23 13:42:01.335
  STEP: getting /apis/networking.k8s.io @ 11/04/23 13:42:01.338
  STEP: getting /apis/networking.k8s.iov1 @ 11/04/23 13:42:01.339
  STEP: creating @ 11/04/23 13:42:01.34
  STEP: getting @ 11/04/23 13:42:01.355
  STEP: listing @ 11/04/23 13:42:01.361
  STEP: watching @ 11/04/23 13:42:01.363
  Nov  4 13:42:01.363: INFO: starting watch
  STEP: cluster-wide listing @ 11/04/23 13:42:01.364
  STEP: cluster-wide watching @ 11/04/23 13:42:01.371
  Nov  4 13:42:01.371: INFO: starting watch
  STEP: patching @ 11/04/23 13:42:01.372
  STEP: updating @ 11/04/23 13:42:01.377
  Nov  4 13:42:01.390: INFO: waiting for watch events with expected annotations
  Nov  4 13:42:01.391: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/04/23 13:42:01.391
  STEP: updating /status @ 11/04/23 13:42:01.401
  STEP: get /status @ 11/04/23 13:42:01.409
  STEP: deleting @ 11/04/23 13:42:01.413
  STEP: deleting a collection @ 11/04/23 13:42:01.425
  Nov  4 13:42:01.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5011" for this suite. @ 11/04/23 13:42:01.443
• [0.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 11/04/23 13:42:01.449
  Nov  4 13:42:01.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename server-version @ 11/04/23 13:42:01.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:01.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:01.467
  STEP: Request ServerVersion @ 11/04/23 13:42:01.469
  STEP: Confirm major version @ 11/04/23 13:42:01.47
  Nov  4 13:42:01.470: INFO: Major version: 1
  STEP: Confirm minor version @ 11/04/23 13:42:01.47
  Nov  4 13:42:01.470: INFO: cleanMinorVersion: 28
  Nov  4 13:42:01.470: INFO: Minor version: 28
  Nov  4 13:42:01.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1267" for this suite. @ 11/04/23 13:42:01.474
• [0.030 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/04/23 13:42:01.479
  Nov  4 13:42:01.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:42:01.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:01.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:01.497
  STEP: Creating projection with secret that has name projected-secret-test-map-70fa8df2-61f8-45cc-80c7-008160ebbf54 @ 11/04/23 13:42:01.502
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:42:01.508
  E1104 13:42:02.106653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:03.107138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:04.107182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:05.107640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:42:05.526
  Nov  4 13:42:05.530: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-secrets-950ada91-2c6d-4fc4-91e1-752da91bc36f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:42:05.535
  Nov  4 13:42:05.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2792" for this suite. @ 11/04/23 13:42:05.553
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/04/23 13:42:05.559
  Nov  4 13:42:05.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename secrets @ 11/04/23 13:42:05.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:05.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:05.578
  STEP: Creating secret with name secret-test-eaf324ab-f2ad-4719-bf31-c7289cf5a8ae @ 11/04/23 13:42:05.58
  STEP: Creating a pod to test consume secrets @ 11/04/23 13:42:05.584
  E1104 13:42:06.108004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:07.109015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:08.109083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:09.109346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:42:09.601
  Nov  4 13:42:09.604: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-secrets-d96d1897-2d09-445f-a622-f8fdafd68ab9 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:42:09.611
  Nov  4 13:42:09.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7310" for this suite. @ 11/04/23 13:42:09.625
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/04/23 13:42:09.631
  Nov  4 13:42:09.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 13:42:09.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:09.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:09.654
  STEP: creating pod @ 11/04/23 13:42:09.656
  E1104 13:42:10.109443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:11.110487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:42:11.674: INFO: Pod pod-hostip-2840b546-8a18-406a-880a-eb21abaeb029 has hostIP: 172.31.44.230
  Nov  4 13:42:11.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5325" for this suite. @ 11/04/23 13:42:11.678
• [2.054 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 11/04/23 13:42:11.686
  Nov  4 13:42:11.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:42:11.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:11.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:11.707
  STEP: Creating configMap with name projected-configmap-test-volume-961b4f49-e22f-4573-bb2a-b3bab34a02f6 @ 11/04/23 13:42:11.709
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:42:11.714
  E1104 13:42:12.111177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:13.111291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:14.111382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:15.111570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:42:15.734
  Nov  4 13:42:15.736: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-configmaps-d9a59bf7-0298-426f-9c7f-616086401b28 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/04/23 13:42:15.742
  Nov  4 13:42:15.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3494" for this suite. @ 11/04/23 13:42:15.757
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 11/04/23 13:42:15.765
  Nov  4 13:42:15.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename emptydir @ 11/04/23 13:42:15.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:15.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:15.785
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/04/23 13:42:15.788
  E1104 13:42:16.112033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:17.112221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:18.112685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:19.112764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:42:19.81
  Nov  4 13:42:19.813: INFO: Trying to get logs from node ip-172-31-75-164 pod pod-1cf24716-be5a-4503-9321-6856f38b111a container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:42:19.828
  Nov  4 13:42:19.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4658" for this suite. @ 11/04/23 13:42:19.846
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 11/04/23 13:42:19.855
  Nov  4 13:42:19.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:42:19.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:19.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:19.871
  STEP: Setting up server cert @ 11/04/23 13:42:19.897
  E1104 13:42:20.113507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:42:20.276
  STEP: Deploying the webhook pod @ 11/04/23 13:42:20.282
  STEP: Wait for the deployment to be ready @ 11/04/23 13:42:20.293
  Nov  4 13:42:20.299: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:42:21.113682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:22.113771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:42:22.308
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:42:22.315
  E1104 13:42:23.113856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:42:23.315: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/04/23 13:42:23.32
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/04/23 13:42:23.334
  STEP: Creating a dummy validating-webhook-configuration object @ 11/04/23 13:42:23.346
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/04/23 13:42:23.354
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/04/23 13:42:23.359
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/04/23 13:42:23.368
  Nov  4 13:42:23.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5099" for this suite. @ 11/04/23 13:42:23.432
  STEP: Destroying namespace "webhook-markers-871" for this suite. @ 11/04/23 13:42:23.441
• [3.591 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 11/04/23 13:42:23.447
  Nov  4 13:42:23.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:42:23.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:23.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:23.469
  STEP: Creating configMap with name projected-configmap-test-volume-map-c0573c88-ab38-4fb9-96f0-e96f9438ffb1 @ 11/04/23 13:42:23.471
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:42:23.475
  E1104 13:42:24.113892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:25.113981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:26.114688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:27.114791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:42:27.495
  Nov  4 13:42:27.498: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-projected-configmaps-d971dccc-e6b1-4500-a501-4fd9e75c4d95 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:42:27.504
  Nov  4 13:42:27.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8509" for this suite. @ 11/04/23 13:42:27.52
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 11/04/23 13:42:27.527
  Nov  4 13:42:27.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename dns @ 11/04/23 13:42:27.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:27.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:27.552
  STEP: Creating a test headless service @ 11/04/23 13:42:27.554
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8299.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8299.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/04/23 13:42:27.558
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8299.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8299.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/04/23 13:42:27.558
  STEP: creating a pod to probe DNS @ 11/04/23 13:42:27.558
  STEP: submitting the pod to kubernetes @ 11/04/23 13:42:27.558
  E1104 13:42:28.115776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:29.115904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/04/23 13:42:29.573
  STEP: looking for the results for each expected name from probers @ 11/04/23 13:42:29.577
  Nov  4 13:42:29.591: INFO: DNS probes using dns-8299/dns-test-4e8a9962-6ce1-4dce-8413-39e3bf4e0173 succeeded

  Nov  4 13:42:29.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/04/23 13:42:29.595
  STEP: deleting the test headless service @ 11/04/23 13:42:29.605
  STEP: Destroying namespace "dns-8299" for this suite. @ 11/04/23 13:42:29.623
• [2.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 11/04/23 13:42:29.631
  Nov  4 13:42:29.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 13:42:29.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:29.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:29.649
  STEP: creating service in namespace services-3448 @ 11/04/23 13:42:29.651
  STEP: creating service affinity-clusterip-transition in namespace services-3448 @ 11/04/23 13:42:29.651
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3448 @ 11/04/23 13:42:29.662
  I1104 13:42:29.669637      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3448, replica count: 3
  E1104 13:42:30.116678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:31.117621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:32.118687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1104 13:42:32.720684      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 13:42:32.727: INFO: Creating new exec pod
  E1104 13:42:33.119389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:34.119480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:35.120420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:42:35.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-3448 exec execpod-affinitylqxdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Nov  4 13:42:35.916: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Nov  4 13:42:35.916: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:42:35.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-3448 exec execpod-affinitylqxdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  Nov  4 13:42:36.075: INFO: stderr: "+ nc -v -t -w 2 10.152.183.165 80\n+ echo hostName\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  Nov  4 13:42:36.075: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:42:36.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-3448 exec execpod-affinitylqxdm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
  E1104 13:42:36.124540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:42:36.315: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
  Nov  4 13:42:36.315: INFO: stdout: "\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-mb2nk\naffinity-clusterip-transition-mb2nk\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-mb2nk\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-mb2nk\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-wxqz7\naffinity-clusterip-transition-mb2nk\naffinity-clusterip-transition-wxqz7"
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-mb2nk
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-mb2nk
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-mb2nk
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-mb2nk
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-mb2nk
  Nov  4 13:42:36.315: INFO: Received response from host: affinity-clusterip-transition-wxqz7
  Nov  4 13:42:36.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-3448 exec execpod-affinitylqxdm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
  Nov  4 13:42:36.564: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
  Nov  4 13:42:36.565: INFO: stdout: "\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b\naffinity-clusterip-transition-dxk2b"
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Received response from host: affinity-clusterip-transition-dxk2b
  Nov  4 13:42:36.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 13:42:36.568: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3448, will wait for the garbage collector to delete the pods @ 11/04/23 13:42:36.579
  Nov  4 13:42:36.639: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.261973ms
  Nov  4 13:42:36.740: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.165411ms
  E1104 13:42:37.125544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:38.126513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:39.127083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-3448" for this suite. @ 11/04/23 13:42:39.856
• [10.233 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 11/04/23 13:42:39.863
  Nov  4 13:42:39.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:42:39.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:39.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:39.885
  STEP: create deployment with httpd image @ 11/04/23 13:42:39.888
  Nov  4 13:42:39.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3448 create -f -'
  Nov  4 13:42:40.107: INFO: stderr: ""
  Nov  4 13:42:40.107: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/04/23 13:42:40.108
  Nov  4 13:42:40.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3448 diff -f -'
  E1104 13:42:40.127400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:42:40.281: INFO: rc: 1
  Nov  4 13:42:40.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3448 delete -f -'
  Nov  4 13:42:40.375: INFO: stderr: ""
  Nov  4 13:42:40.375: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Nov  4 13:42:40.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3448" for this suite. @ 11/04/23 13:42:40.38
• [0.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 11/04/23 13:42:40.387
  Nov  4 13:42:40.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename statefulset @ 11/04/23 13:42:40.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:42:40.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:42:40.419
  STEP: Creating service test in namespace statefulset-8204 @ 11/04/23 13:42:40.421
  Nov  4 13:42:40.437: INFO: Found 0 stateful pods, waiting for 1
  E1104 13:42:41.127522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:42.127589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:43.127686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:44.128289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:45.128580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:46.128968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:47.129056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:48.129313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:49.129412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:50.129603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:42:50.440: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/04/23 13:42:50.446
  W1104 13:42:50.452342      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Nov  4 13:42:50.459: INFO: Found 1 stateful pods, waiting for 2
  E1104 13:42:51.129652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:52.129730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:53.130672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:54.130741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:55.130830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:56.130933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:57.131139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:58.131225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:42:59.131344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:00.131427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:43:00.462: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov  4 13:43:00.462: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/04/23 13:43:00.467
  STEP: Delete all of the StatefulSets @ 11/04/23 13:43:00.47
  STEP: Verify that StatefulSets have been deleted @ 11/04/23 13:43:00.477
  Nov  4 13:43:00.479: INFO: Deleting all statefulset in ns statefulset-8204
  Nov  4 13:43:00.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8204" for this suite. @ 11/04/23 13:43:00.494
• [20.118 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 11/04/23 13:43:00.506
  Nov  4 13:43:00.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename projected @ 11/04/23 13:43:00.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:43:00.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:43:00.527
  STEP: Creating configMap with name cm-test-opt-del-eb9baead-bb5a-424a-97c6-b65a83237860 @ 11/04/23 13:43:00.532
  STEP: Creating configMap with name cm-test-opt-upd-97f3e6e1-4809-43fe-802f-82f98a9f2b92 @ 11/04/23 13:43:00.535
  STEP: Creating the pod @ 11/04/23 13:43:00.54
  E1104 13:43:01.132501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:02.132664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-eb9baead-bb5a-424a-97c6-b65a83237860 @ 11/04/23 13:43:02.578
  STEP: Updating configmap cm-test-opt-upd-97f3e6e1-4809-43fe-802f-82f98a9f2b92 @ 11/04/23 13:43:02.583
  STEP: Creating configMap with name cm-test-opt-create-e0a63ec0-d1df-4ef7-94bf-e19bd851b663 @ 11/04/23 13:43:02.588
  STEP: waiting to observe update in volume @ 11/04/23 13:43:02.592
  E1104 13:43:03.132680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:04.132785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:05.132862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:06.132970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:07.133856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:08.134669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:09.134783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:10.134861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:11.134955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:12.135162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:13.135259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:14.135451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:15.135516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:16.135687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:17.135762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:18.136035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:19.136834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:20.137368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:21.138133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:22.138338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:23.138426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:24.138687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:25.138773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:26.138961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:27.139041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:28.139136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:29.139682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:30.139775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:31.139885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:32.140150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:33.140831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:34.141018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:35.141569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:36.141638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:37.141720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:38.141803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:39.142649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:40.142891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:41.143683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:42.143775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:43.143852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:44.144024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:45.144566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:46.144668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:47.145061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:48.145263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:49.145511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:50.145607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:51.145942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:52.146679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:53.147686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:54.147828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:55.148714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:56.149023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:57.150008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:58.150089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:43:59.150461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:00.150407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:01.150678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:02.150837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:03.151848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:04.151945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:05.152624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:06.152717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:44:06.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2453" for this suite. @ 11/04/23 13:44:06.857
• [66.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 11/04/23 13:44:06.863
  Nov  4 13:44:06.863: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename svcaccounts @ 11/04/23 13:44:06.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:44:06.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:44:06.882
  STEP: creating a ServiceAccount @ 11/04/23 13:44:06.884
  STEP: watching for the ServiceAccount to be added @ 11/04/23 13:44:06.889
  STEP: patching the ServiceAccount @ 11/04/23 13:44:06.894
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/04/23 13:44:06.898
  STEP: deleting the ServiceAccount @ 11/04/23 13:44:06.9
  Nov  4 13:44:06.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2226" for this suite. @ 11/04/23 13:44:06.918
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 11/04/23 13:44:06.924
  Nov  4 13:44:06.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 13:44:06.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:44:06.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:44:06.948
  STEP: creating the pod @ 11/04/23 13:44:06.951
  STEP: waiting for pod running @ 11/04/23 13:44:06.96
  E1104 13:44:07.153163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:08.153678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 11/04/23 13:44:08.966
  Nov  4 13:44:08.970: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7264 PodName:var-expansion-57192e60-f2c5-431f-8b23-a72090cdb44b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:44:08.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:44:08.971: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:44:08.971: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7264/pods/var-expansion-57192e60-f2c5-431f-8b23-a72090cdb44b/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/04/23 13:44:09.051
  Nov  4 13:44:09.054: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7264 PodName:var-expansion-57192e60-f2c5-431f-8b23-a72090cdb44b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov  4 13:44:09.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  Nov  4 13:44:09.054: INFO: ExecWithOptions: Clientset creation
  Nov  4 13:44:09.054: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7264/pods/var-expansion-57192e60-f2c5-431f-8b23-a72090cdb44b/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/04/23 13:44:09.122
  E1104 13:44:09.154024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:44:09.634: INFO: Successfully updated pod "var-expansion-57192e60-f2c5-431f-8b23-a72090cdb44b"
  STEP: waiting for annotated pod running @ 11/04/23 13:44:09.634
  STEP: deleting the pod gracefully @ 11/04/23 13:44:09.636
  Nov  4 13:44:09.636: INFO: Deleting pod "var-expansion-57192e60-f2c5-431f-8b23-a72090cdb44b" in namespace "var-expansion-7264"
  Nov  4 13:44:09.644: INFO: Wait up to 5m0s for pod "var-expansion-57192e60-f2c5-431f-8b23-a72090cdb44b" to be fully deleted
  E1104 13:44:10.154892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:11.155072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:12.155558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:13.155972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:14.156978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:15.157066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:16.157148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:17.157389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:18.158307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:19.158675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:20.159654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:21.159849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:22.159939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:23.160289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:24.160401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:25.160479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:26.160564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:27.160747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:28.161630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:29.161716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:30.162696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:31.162769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:32.163541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:33.163787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:34.163885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:35.163979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:36.164062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:37.164252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:38.165237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:39.166031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:40.166183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:41.166702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:44:41.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7264" for this suite. @ 11/04/23 13:44:41.716
• [34.799 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 11/04/23 13:44:41.725
  Nov  4 13:44:41.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename var-expansion @ 11/04/23 13:44:41.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:44:41.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:44:41.746
  E1104 13:44:42.167437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:43.167885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:44:43.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 13:44:43.771: INFO: Deleting pod "var-expansion-1227783a-f849-4079-ac5b-a0984b9328cf" in namespace "var-expansion-3695"
  Nov  4 13:44:43.778: INFO: Wait up to 5m0s for pod "var-expansion-1227783a-f849-4079-ac5b-a0984b9328cf" to be fully deleted
  E1104 13:44:44.168284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:45.168356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-3695" for this suite. @ 11/04/23 13:44:45.783
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 11/04/23 13:44:45.792
  Nov  4 13:44:45.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:44:45.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:44:45.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:44:45.81
  STEP: Creating a pod to test downward API volume plugin @ 11/04/23 13:44:45.813
  E1104 13:44:46.168697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:47.168789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:48.168862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:49.168954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:44:49.836
  Nov  4 13:44:49.838: INFO: Trying to get logs from node ip-172-31-44-230 pod downwardapi-volume-33540ba5-7ea8-4383-8a6e-c01252bb6534 container client-container: <nil>
  STEP: delete the pod @ 11/04/23 13:44:49.843
  Nov  4 13:44:49.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5486" for this suite. @ 11/04/23 13:44:49.859
• [4.076 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 11/04/23 13:44:49.867
  Nov  4 13:44:49.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:44:49.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:44:49.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:44:49.888
  STEP: Creating configMap with name configmap-test-volume-ea6d34bb-9dae-40d0-bd33-038b5513191c @ 11/04/23 13:44:49.89
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:44:49.897
  E1104 13:44:50.169339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:51.169437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:52.169773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:53.170685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:44:53.913
  Nov  4 13:44:53.916: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-aba6b27d-39d6-47e5-888a-77b139052dcb container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:44:53.923
  Nov  4 13:44:53.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4799" for this suite. @ 11/04/23 13:44:53.937
• [4.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 11/04/23 13:44:53.943
  Nov  4 13:44:53.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:44:53.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:44:53.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:44:53.966
  STEP: creating Agnhost RC @ 11/04/23 13:44:53.968
  Nov  4 13:44:53.968: INFO: namespace kubectl-3176
  Nov  4 13:44:53.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3176 create -f -'
  Nov  4 13:44:54.137: INFO: stderr: ""
  Nov  4 13:44:54.137: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/04/23 13:44:54.137
  E1104 13:44:54.171026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:44:55.141: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 13:44:55.141: INFO: Found 1 / 1
  Nov  4 13:44:55.141: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov  4 13:44:55.144: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov  4 13:44:55.144: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov  4 13:44:55.144: INFO: wait on agnhost-primary startup in kubectl-3176 
  Nov  4 13:44:55.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3176 logs agnhost-primary-cp785 agnhost-primary'
  E1104 13:44:55.171796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:44:55.206: INFO: stderr: ""
  Nov  4 13:44:55.206: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 11/04/23 13:44:55.206
  Nov  4 13:44:55.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3176 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Nov  4 13:44:55.271: INFO: stderr: ""
  Nov  4 13:44:55.271: INFO: stdout: "service/rm2 exposed\n"
  Nov  4 13:44:55.276: INFO: Service rm2 in namespace kubectl-3176 found.
  E1104 13:44:56.172029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:57.172114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 11/04/23 13:44:57.28
  Nov  4 13:44:57.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-3176 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Nov  4 13:44:57.339: INFO: stderr: ""
  Nov  4 13:44:57.339: INFO: stdout: "service/rm3 exposed\n"
  Nov  4 13:44:57.344: INFO: Service rm3 in namespace kubectl-3176 found.
  E1104 13:44:58.172201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:44:59.172365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:44:59.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3176" for this suite. @ 11/04/23 13:44:59.354
• [5.417 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/04/23 13:44:59.36
  Nov  4 13:44:59.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename deployment @ 11/04/23 13:44:59.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:44:59.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:44:59.377
  STEP: creating a Deployment @ 11/04/23 13:44:59.384
  STEP: waiting for Deployment to be created @ 11/04/23 13:44:59.389
  STEP: waiting for all Replicas to be Ready @ 11/04/23 13:44:59.39
  Nov  4 13:44:59.391: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov  4 13:44:59.391: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov  4 13:44:59.405: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov  4 13:44:59.405: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov  4 13:44:59.420: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov  4 13:44:59.420: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov  4 13:44:59.450: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov  4 13:44:59.450: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1104 13:45:00.172514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:01.084: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov  4 13:45:01.084: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov  4 13:45:01.091: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/04/23 13:45:01.092
  Nov  4 13:45:01.099: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/04/23 13:45:01.099
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 0
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.111: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.111: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.131: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.131: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:01.156: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:01.156: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  E1104 13:45:01.172971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:02.097: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:02.097: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:02.118: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  STEP: listing Deployments @ 11/04/23 13:45:02.118
  Nov  4 13:45:02.124: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/04/23 13:45:02.124
  Nov  4 13:45:02.134: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/04/23 13:45:02.134
  Nov  4 13:45:02.140: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov  4 13:45:02.148: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov  4 13:45:02.167: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1104 13:45:02.174126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:02.188: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov  4 13:45:02.206: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov  4 13:45:03.106: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov  4 13:45:03.122: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Nov  4 13:45:03.161: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov  4 13:45:03.170: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1104 13:45:03.174477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:04.101: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/04/23 13:45:04.14
  STEP: fetching the DeploymentStatus @ 11/04/23 13:45:04.149
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 1
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 3
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 2
  Nov  4 13:45:04.155: INFO: observed Deployment test-deployment in namespace deployment-6281 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/04/23 13:45:04.155
  Nov  4 13:45:04.163: INFO: observed event type MODIFIED
  Nov  4 13:45:04.163: INFO: observed event type MODIFIED
  Nov  4 13:45:04.163: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.164: INFO: observed event type MODIFIED
  Nov  4 13:45:04.169: INFO: Log out all the ReplicaSets if there is no deployment created
  Nov  4 13:45:04.172: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6281",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "973575d0-cc47-4b42-9479-66394e2d2f12",
      ResourceVersion: (string) (len=5) "43349",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d029c653-1f87-4a58-b50c-3f8f08a7e526",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 30 32 39  63 36 35 33 2d 31 66 38  |":\"d029c653-1f8|
              00000130  37 2d 34 61 35 38 2d 62  35 30 63 2d 33 66 38 66  |7-4a58-b50c-3f8f|
              00000140  30 38 61 37 65 35 32 36  5c 22 7d 22 3a 7b 7d 7d  |08a7e526\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  E1104 13:45:04.174563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:04.176: INFO: pod: "test-deployment-64fd565c98-rbslq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-rbslq",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-6281",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db25e53c-a5aa-440e-921a-4bb02b589140",
      ResourceVersion: (string) (len=5) "43341",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702306,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "973575d0-cc47-4b42-9479-66394e2d2f12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 37 33 35 37 35 64 30  |uid\":\"973575d0|
              000000a0  2d 63 63 34 37 2d 34 62  34 32 2d 39 34 37 39 2d  |-cc47-4b42-9479-|
              000000b0  36 36 33 39 34 65 32 64  32 66 31 32 5c 22 7d 22  |66394e2d2f12\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 33 2e 39 39 5c 22  |192.168.193.99\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-795mf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-795mf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.193.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.193.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834702302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://7b13fbd90c3e6f71bf84f47093b87827a8e7b5fe7cc95c0676d11d9ba448951e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov  4 13:45:04.181: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6281",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9602297-ca27-40e5-bb48-b430e18c6ce4",
      ResourceVersion: (string) (len=5) "43246",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702299,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d029c653-1f87-4a58-b50c-3f8f08a7e526",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 30 32 39  63 36 35 33 2d 31 66 38  |":\"d029c653-1f8|
              00000130  37 2d 34 61 35 38 2d 62  35 30 63 2d 33 66 38 66  |7-4a58-b50c-3f8f|
              00000140  30 38 61 37 65 35 32 36  5c 22 7d 22 3a 7b 7d 7d  |08a7e526\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov  4 13:45:04.187: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6281",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e3f761f-cb4d-40f6-850d-68e67571ad52",
      ResourceVersion: (string) (len=5) "43333",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d029c653-1f87-4a58-b50c-3f8f08a7e526",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 30 32 39  63 36 35 33 2d 31 66 38  |":\"d029c653-1f8|
              00000130  37 2d 34 61 35 38 2d 62  35 30 63 2d 33 66 38 66  |7-4a58-b50c-3f8f|
              00000140  30 38 61 37 65 35 32 36  5c 22 7d 22 3a 7b 7d 7d  |08a7e526\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov  4 13:45:04.191: INFO: pod: "test-deployment-79ff746c4-2t4ds":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-2t4ds",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-6281",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24fb32f0-2612-4724-ab92-b248b88da48d",
      ResourceVersion: (string) (len=5) "43359",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "4e3f761f-cb4d-40f6-850d-68e67571ad52",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 65 33 66 37 36 31 66  |uid\":\"4e3f761f|
              000000a0  2d 63 62 34 64 2d 34 30  66 36 2d 38 35 30 64 2d  |-cb4d-40f6-850d-|
              000000b0  36 38 65 36 37 35 37 31  61 64 35 32 5c 22 7d 22  |68e67571ad52\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 33 2e 37 35 5c 22  |192.168.193.75\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-57vfb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-57vfb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-75-164",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.75.164",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.193.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.193.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834702303,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://516b145f495dcd1f6284a3cbf7ec0d886db8d9416cb144c4f9b41258e01810cf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov  4 13:45:04.197: INFO: pod: "test-deployment-79ff746c4-4sq2h":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-4sq2h",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-6281",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dce587f-5960-480d-8db9-83c3e85f9812",
      ResourceVersion: (string) (len=5) "43358",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "4e3f761f-cb4d-40f6-850d-68e67571ad52",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 65 33 66 37 36 31 66  |uid\":\"4e3f761f|
              000000a0  2d 63 62 34 64 2d 34 30  66 36 2d 38 35 30 64 2d  |-cb4d-40f6-850d-|
              000000b0  36 38 65 36 37 35 37 31  61 64 35 32 5c 22 7d 22  |68e67571ad52\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  34 36 2e 36 39 5c 22 7d  |192.168.46.69\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brr22",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brr22",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-44-230",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834702302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.44.230",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.46.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.46.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834702302,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834702302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d0638f16f724692ab0c93d7aaba8ca2e62bcdaec8800ac3cc893e927f45c4916",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov  4 13:45:04.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6281" for this suite. @ 11/04/23 13:45:04.202
• [4.848 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 11/04/23 13:45:04.21
  Nov  4 13:45:04.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename security-context @ 11/04/23 13:45:04.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:45:04.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:45:04.232
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/04/23 13:45:04.235
  E1104 13:45:05.174963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:06.175011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:07.175107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:08.175385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:45:08.255
  Nov  4 13:45:08.258: INFO: Trying to get logs from node ip-172-31-44-230 pod security-context-836496dd-15d5-40ac-8730-95a7eb0ea580 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:45:08.263
  Nov  4 13:45:08.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2408" for this suite. @ 11/04/23 13:45:08.28
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 11/04/23 13:45:08.286
  Nov  4 13:45:08.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename kubectl @ 11/04/23 13:45:08.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:45:08.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:45:08.304
  STEP: creating a replication controller @ 11/04/23 13:45:08.307
  Nov  4 13:45:08.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 create -f -'
  Nov  4 13:45:08.462: INFO: stderr: ""
  Nov  4 13:45:08.462: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/04/23 13:45:08.462
  Nov  4 13:45:08.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov  4 13:45:08.514: INFO: stderr: ""
  Nov  4 13:45:08.514: INFO: stdout: "update-demo-nautilus-pbhh7 update-demo-nautilus-pzw2p "
  Nov  4 13:45:08.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pbhh7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 13:45:08.560: INFO: stderr: ""
  Nov  4 13:45:08.560: INFO: stdout: ""
  Nov  4 13:45:08.560: INFO: update-demo-nautilus-pbhh7 is created but not running
  E1104 13:45:09.175741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:10.176718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:11.176795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:12.177526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:13.177728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:13.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov  4 13:45:13.610: INFO: stderr: ""
  Nov  4 13:45:13.610: INFO: stdout: "update-demo-nautilus-pbhh7 update-demo-nautilus-pzw2p "
  Nov  4 13:45:13.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pbhh7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 13:45:13.659: INFO: stderr: ""
  Nov  4 13:45:13.659: INFO: stdout: "true"
  Nov  4 13:45:13.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pbhh7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov  4 13:45:13.708: INFO: stderr: ""
  Nov  4 13:45:13.708: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov  4 13:45:13.708: INFO: validating pod update-demo-nautilus-pbhh7
  Nov  4 13:45:13.713: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov  4 13:45:13.713: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov  4 13:45:13.713: INFO: update-demo-nautilus-pbhh7 is verified up and running
  Nov  4 13:45:13.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pzw2p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 13:45:13.765: INFO: stderr: ""
  Nov  4 13:45:13.765: INFO: stdout: "true"
  Nov  4 13:45:13.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pzw2p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov  4 13:45:13.816: INFO: stderr: ""
  Nov  4 13:45:13.816: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov  4 13:45:13.816: INFO: validating pod update-demo-nautilus-pzw2p
  Nov  4 13:45:13.819: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov  4 13:45:13.819: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov  4 13:45:13.819: INFO: update-demo-nautilus-pzw2p is verified up and running
  STEP: scaling down the replication controller @ 11/04/23 13:45:13.819
  Nov  4 13:45:13.820: INFO: scanned /root for discovery docs: <nil>
  Nov  4 13:45:13.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1104 13:45:14.178595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:14.892: INFO: stderr: ""
  Nov  4 13:45:14.892: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/04/23 13:45:14.892
  Nov  4 13:45:14.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov  4 13:45:14.968: INFO: stderr: ""
  Nov  4 13:45:14.968: INFO: stdout: "update-demo-nautilus-pbhh7 update-demo-nautilus-pzw2p "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 11/04/23 13:45:14.968
  E1104 13:45:15.178917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:16.179082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:17.179175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:18.179452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:19.179552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:19.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov  4 13:45:20.018: INFO: stderr: ""
  Nov  4 13:45:20.018: INFO: stdout: "update-demo-nautilus-pbhh7 "
  Nov  4 13:45:20.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pbhh7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 13:45:20.066: INFO: stderr: ""
  Nov  4 13:45:20.066: INFO: stdout: "true"
  Nov  4 13:45:20.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pbhh7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov  4 13:45:20.114: INFO: stderr: ""
  Nov  4 13:45:20.114: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov  4 13:45:20.114: INFO: validating pod update-demo-nautilus-pbhh7
  Nov  4 13:45:20.119: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov  4 13:45:20.119: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov  4 13:45:20.119: INFO: update-demo-nautilus-pbhh7 is verified up and running
  STEP: scaling up the replication controller @ 11/04/23 13:45:20.119
  Nov  4 13:45:20.120: INFO: scanned /root for discovery docs: <nil>
  Nov  4 13:45:20.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1104 13:45:20.179854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:21.179932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:45:21.184: INFO: stderr: ""
  Nov  4 13:45:21.184: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/04/23 13:45:21.184
  Nov  4 13:45:21.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov  4 13:45:21.236: INFO: stderr: ""
  Nov  4 13:45:21.236: INFO: stdout: "update-demo-nautilus-hlc5l update-demo-nautilus-pbhh7 "
  Nov  4 13:45:21.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-hlc5l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 13:45:21.287: INFO: stderr: ""
  Nov  4 13:45:21.287: INFO: stdout: "true"
  Nov  4 13:45:21.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-hlc5l -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov  4 13:45:21.335: INFO: stderr: ""
  Nov  4 13:45:21.335: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov  4 13:45:21.335: INFO: validating pod update-demo-nautilus-hlc5l
  Nov  4 13:45:21.339: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov  4 13:45:21.339: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov  4 13:45:21.339: INFO: update-demo-nautilus-hlc5l is verified up and running
  Nov  4 13:45:21.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pbhh7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov  4 13:45:21.389: INFO: stderr: ""
  Nov  4 13:45:21.389: INFO: stdout: "true"
  Nov  4 13:45:21.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods update-demo-nautilus-pbhh7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov  4 13:45:21.438: INFO: stderr: ""
  Nov  4 13:45:21.438: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov  4 13:45:21.438: INFO: validating pod update-demo-nautilus-pbhh7
  Nov  4 13:45:21.441: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov  4 13:45:21.441: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov  4 13:45:21.441: INFO: update-demo-nautilus-pbhh7 is verified up and running
  STEP: using delete to clean up resources @ 11/04/23 13:45:21.441
  Nov  4 13:45:21.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 delete --grace-period=0 --force -f -'
  Nov  4 13:45:21.493: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov  4 13:45:21.493: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov  4 13:45:21.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get rc,svc -l name=update-demo --no-headers'
  Nov  4 13:45:21.545: INFO: stderr: "No resources found in kubectl-7616 namespace.\n"
  Nov  4 13:45:21.545: INFO: stdout: ""
  Nov  4 13:45:21.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=kubectl-7616 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov  4 13:45:21.595: INFO: stderr: ""
  Nov  4 13:45:21.595: INFO: stdout: ""
  Nov  4 13:45:21.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7616" for this suite. @ 11/04/23 13:45:21.599
• [13.320 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/04/23 13:45:21.607
  Nov  4 13:45:21.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename subjectreview @ 11/04/23 13:45:21.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:45:21.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:45:21.629
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8574" @ 11/04/23 13:45:21.63
  Nov  4 13:45:21.634: INFO: saUsername: "system:serviceaccount:subjectreview-8574:e2e"
  Nov  4 13:45:21.634: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8574"}
  Nov  4 13:45:21.634: INFO: saUID: "2850c6a8-676d-4789-899c-ed2c72c113b2"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8574:e2e" @ 11/04/23 13:45:21.634
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8574:e2e" @ 11/04/23 13:45:21.634
  Nov  4 13:45:21.635: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8574:e2e" api 'list' configmaps in "subjectreview-8574" namespace @ 11/04/23 13:45:21.635
  Nov  4 13:45:21.636: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8574:e2e" @ 11/04/23 13:45:21.636
  Nov  4 13:45:21.638: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Nov  4 13:45:21.638: INFO: LocalSubjectAccessReview has been verified
  Nov  4 13:45:21.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8574" for this suite. @ 11/04/23 13:45:21.64
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 11/04/23 13:45:21.648
  Nov  4 13:45:21.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename security-context @ 11/04/23 13:45:21.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:45:21.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:45:21.667
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/04/23 13:45:21.669
  E1104 13:45:22.180036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:23.180113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:24.180226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:25.180298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:45:25.687
  Nov  4 13:45:25.690: INFO: Trying to get logs from node ip-172-31-44-230 pod security-context-fa97ece2-1f40-443c-a091-1f7ed79bf242 container test-container: <nil>
  STEP: delete the pod @ 11/04/23 13:45:25.696
  Nov  4 13:45:25.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-689" for this suite. @ 11/04/23 13:45:25.728
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/04/23 13:45:25.745
  Nov  4 13:45:25.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename watch @ 11/04/23 13:45:25.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:45:25.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:45:25.763
  STEP: creating a new configmap @ 11/04/23 13:45:25.765
  STEP: modifying the configmap once @ 11/04/23 13:45:25.768
  STEP: modifying the configmap a second time @ 11/04/23 13:45:25.775
  STEP: deleting the configmap @ 11/04/23 13:45:25.783
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/04/23 13:45:25.788
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/04/23 13:45:25.789
  Nov  4 13:45:25.789: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1077  55f3837d-fbb7-49a9-8f69-ee0d76365dd9 43661 0 2023-11-04 13:45:25 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-04 13:45:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 13:45:25.789: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1077  55f3837d-fbb7-49a9-8f69-ee0d76365dd9 43662 0 2023-11-04 13:45:25 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-04 13:45:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov  4 13:45:25.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1077" for this suite. @ 11/04/23 13:45:25.792
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 11/04/23 13:45:25.802
  Nov  4 13:45:25.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename downward-api @ 11/04/23 13:45:25.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:45:25.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:45:25.822
  STEP: Creating a pod to test downward api env vars @ 11/04/23 13:45:25.825
  E1104 13:45:26.181242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:27.181319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:28.182312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:29.182705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:45:29.844
  Nov  4 13:45:29.846: INFO: Trying to get logs from node ip-172-31-44-230 pod downward-api-3b0713e8-a01b-4b03-8172-52b2749cf33e container dapi-container: <nil>
  STEP: delete the pod @ 11/04/23 13:45:29.854
  Nov  4 13:45:29.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9356" for this suite. @ 11/04/23 13:45:29.876
• [4.078 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 11/04/23 13:45:29.881
  Nov  4 13:45:29.881: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-preemption @ 11/04/23 13:45:29.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:45:29.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:45:29.903
  Nov  4 13:45:29.916: INFO: Waiting up to 1m0s for all nodes to be ready
  E1104 13:45:30.183091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:31.183183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:32.183715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:33.183981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:34.184081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:35.184275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:36.185052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:37.185311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:38.185675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:39.186684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:40.186796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:41.186880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:42.187904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:43.188336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:44.189122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:45.189220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:46.190035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:47.190129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:48.190665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:49.190877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:50.190965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:51.191134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:52.191594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:53.191679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:54.192394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:55.192506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:56.192930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:57.193084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:58.193815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:45:59.194359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:00.194763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:01.194841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:02.195341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:03.196162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:04.196902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:05.196997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:06.197039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:07.197106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:08.197275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:09.197641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:10.197711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:11.197785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:12.198221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:13.198597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:14.199468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:15.199648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:16.200018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:17.200170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:18.200899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:19.201073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:20.201735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:21.202676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:22.202760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:23.202852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:24.203682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:25.203842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:26.203929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:27.204018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:28.204559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:29.205316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:46:29.934: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/04/23 13:46:29.936
  Nov  4 13:46:29.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/04/23 13:46:29.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:46:29.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:46:29.958
  Nov  4 13:46:29.972: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Nov  4 13:46:29.975: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Nov  4 13:46:29.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 13:46:30.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6935" for this suite. @ 11/04/23 13:46:30.045
  STEP: Destroying namespace "sched-preemption-532" for this suite. @ 11/04/23 13:46:30.051
• [60.177 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 11/04/23 13:46:30.058
  Nov  4 13:46:30.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename configmap @ 11/04/23 13:46:30.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:46:30.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:46:30.077
  STEP: Creating configMap with name configmap-test-volume-map-5e39548d-b8b0-4609-a978-b9a37f48aa58 @ 11/04/23 13:46:30.079
  STEP: Creating a pod to test consume configMaps @ 11/04/23 13:46:30.082
  E1104 13:46:30.205930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:31.206012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:32.206272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:33.206405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/04/23 13:46:34.098
  Nov  4 13:46:34.104: INFO: Trying to get logs from node ip-172-31-44-230 pod pod-configmaps-30488fcd-6691-4a08-b8a3-d3b2289aba54 container agnhost-container: <nil>
  STEP: delete the pod @ 11/04/23 13:46:34.112
  Nov  4 13:46:34.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5908" for this suite. @ 11/04/23 13:46:34.128
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 11/04/23 13:46:34.137
  Nov  4 13:46:34.137: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:46:34.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:46:34.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:46:34.155
  STEP: Setting up server cert @ 11/04/23 13:46:34.179
  E1104 13:46:34.206674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:46:34.741
  STEP: Deploying the webhook pod @ 11/04/23 13:46:34.75
  STEP: Wait for the deployment to be ready @ 11/04/23 13:46:34.761
  Nov  4 13:46:34.769: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:46:35.207451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:36.207537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:46:36.776
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:46:36.784
  E1104 13:46:37.207619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:46:37.784: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/04/23 13:46:37.791
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/04/23 13:46:37.791
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/04/23 13:46:37.803
  E1104 13:46:38.208551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/04/23 13:46:38.812
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/04/23 13:46:38.812
  E1104 13:46:39.209256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 11/04/23 13:46:39.838
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/04/23 13:46:39.838
  E1104 13:46:40.209709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:41.210696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:42.211633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:43.211724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:44.211802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/04/23 13:46:44.868
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/04/23 13:46:44.868
  E1104 13:46:45.212817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:46.212919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:47.213124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:48.213546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:49.213718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:46:49.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2361" for this suite. @ 11/04/23 13:46:49.953
  STEP: Destroying namespace "webhook-markers-9526" for this suite. @ 11/04/23 13:46:49.959
• [15.827 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 11/04/23 13:46:49.965
  Nov  4 13:46:49.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename endpointslice @ 11/04/23 13:46:49.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:46:49.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:46:49.985
  E1104 13:46:50.214290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:51.214388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:52.214457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:53.214874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:54.214973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 11/04/23 13:46:55.046
  E1104 13:46:55.215657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:56.215757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:57.215838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:58.216193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:46:59.216366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 11/04/23 13:47:00.052
  E1104 13:47:00.217033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:01.217141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:02.217301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:03.218012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:04.218680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/04/23 13:47:05.061
  E1104 13:47:05.218981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:06.219218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:07.219420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:08.219640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:09.219711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 11/04/23 13:47:10.068
  Nov  4 13:47:10.086: INFO: EndpointSlice for Service endpointslice-7385/example-named-port not found
  E1104 13:47:10.220642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:11.220824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:12.221074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:13.221411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:14.221531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:15.222071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:16.222672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:17.222774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:18.223051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:19.223127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:47:20.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7385" for this suite. @ 11/04/23 13:47:20.099
• [30.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 11/04/23 13:47:20.106
  Nov  4 13:47:20.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename webhook @ 11/04/23 13:47:20.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:47:20.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:47:20.126
  STEP: Setting up server cert @ 11/04/23 13:47:20.15
  E1104 13:47:20.223836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/04/23 13:47:20.459
  STEP: Deploying the webhook pod @ 11/04/23 13:47:20.465
  STEP: Wait for the deployment to be ready @ 11/04/23 13:47:20.476
  Nov  4 13:47:20.484: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1104 13:47:21.223979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:22.224378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/04/23 13:47:22.493
  STEP: Verifying the service has paired with the endpoint @ 11/04/23 13:47:22.505
  E1104 13:47:23.225309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:47:23.505: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/04/23 13:47:23.511
  STEP: create a pod @ 11/04/23 13:47:23.523
  E1104 13:47:24.225629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:25.226707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/04/23 13:47:25.535
  Nov  4 13:47:25.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=webhook-4913 attach --namespace=webhook-4913 to-be-attached-pod -i -c=container1'
  Nov  4 13:47:25.620: INFO: rc: 1
  Nov  4 13:47:25.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4913" for this suite. @ 11/04/23 13:47:25.665
  STEP: Destroying namespace "webhook-markers-5599" for this suite. @ 11/04/23 13:47:25.671
• [5.571 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/04/23 13:47:25.677
  Nov  4 13:47:25.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename pods @ 11/04/23 13:47:25.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:47:25.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:47:25.696
  STEP: Create a pod @ 11/04/23 13:47:25.698
  E1104 13:47:26.226943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:27.227649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/04/23 13:47:27.712
  Nov  4 13:47:27.719: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Nov  4 13:47:27.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7032" for this suite. @ 11/04/23 13:47:27.722
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/04/23 13:47:27.733
  Nov  4 13:47:27.733: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/04/23 13:47:27.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:47:27.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:47:27.756
  STEP: Creating two CSIDrivers @ 11/04/23 13:47:27.758
  STEP: Getting "inline-driver-bdf2823d-97d0-4b06-9cf6-e3fd288ff529" & "inline-driver-590036de-edf7-4622-87ed-7b3e04c31612" @ 11/04/23 13:47:27.771
  STEP: Patching the CSIDriver "inline-driver-590036de-edf7-4622-87ed-7b3e04c31612" @ 11/04/23 13:47:27.777
  STEP: Updating the CSIDriver "inline-driver-590036de-edf7-4622-87ed-7b3e04c31612" @ 11/04/23 13:47:27.782
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4675" @ 11/04/23 13:47:27.789
  STEP: Deleting CSIDriver "inline-driver-bdf2823d-97d0-4b06-9cf6-e3fd288ff529" @ 11/04/23 13:47:27.791
  STEP: Confirm deletion of CSIDriver "inline-driver-bdf2823d-97d0-4b06-9cf6-e3fd288ff529" @ 11/04/23 13:47:27.797
  STEP: Deleting CSIDriver "inline-driver-590036de-edf7-4622-87ed-7b3e04c31612" via DeleteCollection @ 11/04/23 13:47:27.799
  STEP: Confirm deletion of CSIDriver "inline-driver-590036de-edf7-4622-87ed-7b3e04c31612" @ 11/04/23 13:47:27.806
  Nov  4 13:47:27.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4675" for this suite. @ 11/04/23 13:47:27.813
• [0.085 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 11/04/23 13:47:27.818
  Nov  4 13:47:27.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename resourcequota @ 11/04/23 13:47:27.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:47:27.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:47:27.836
  STEP: Counting existing ResourceQuota @ 11/04/23 13:47:27.838
  E1104 13:47:28.228336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:29.228923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:30.228988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:31.229446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:32.230223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/04/23 13:47:32.844
  STEP: Ensuring resource quota status is calculated @ 11/04/23 13:47:32.849
  E1104 13:47:33.231244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:34.231332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 11/04/23 13:47:34.852
  STEP: Ensuring resource quota status captures replicaset creation @ 11/04/23 13:47:34.862
  E1104 13:47:35.232023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:36.232122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 11/04/23 13:47:36.866
  STEP: Ensuring resource quota status released usage @ 11/04/23 13:47:36.872
  E1104 13:47:37.232891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:38.233168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:47:38.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5521" for this suite. @ 11/04/23 13:47:38.878
• [11.064 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 11/04/23 13:47:38.882
  Nov  4 13:47:38.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename services @ 11/04/23 13:47:38.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:47:38.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:47:38.905
  STEP: creating service in namespace services-6746 @ 11/04/23 13:47:38.907
  STEP: creating service affinity-clusterip in namespace services-6746 @ 11/04/23 13:47:38.907
  STEP: creating replication controller affinity-clusterip in namespace services-6746 @ 11/04/23 13:47:38.924
  I1104 13:47:38.931213      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-6746, replica count: 3
  E1104 13:47:39.233621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:40.234598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:41.235527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1104 13:47:41.982397      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov  4 13:47:41.987: INFO: Creating new exec pod
  E1104 13:47:42.235997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:43.236073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:44.236933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:47:45.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-6746 exec execpod-affinityx84w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Nov  4 13:47:45.124: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Nov  4 13:47:45.124: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:47:45.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-6746 exec execpod-affinityx84w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.100 80'
  E1104 13:47:45.237417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov  4 13:47:45.250: INFO: stderr: "+ nc -v -t -w 2 10.152.183.100 80\n+ echo hostName\nConnection to 10.152.183.100 80 port [tcp/http] succeeded!\n"
  Nov  4 13:47:45.250: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov  4 13:47:45.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3243188779 --namespace=services-6746 exec execpod-affinityx84w9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.100:80/ ; done'
  Nov  4 13:47:45.438: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.100:80/\n"
  Nov  4 13:47:45.438: INFO: stdout: "\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd\naffinity-clusterip-25qdd"
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Received response from host: affinity-clusterip-25qdd
  Nov  4 13:47:45.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov  4 13:47:45.441: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-6746, will wait for the garbage collector to delete the pods @ 11/04/23 13:47:45.456
  Nov  4 13:47:45.516: INFO: Deleting ReplicationController affinity-clusterip took: 7.513891ms
  Nov  4 13:47:45.617: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.991244ms
  E1104 13:47:46.238360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:47.239401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1104 13:47:48.239926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-6746" for this suite. @ 11/04/23 13:47:48.532
• [9.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 11/04/23 13:47:48.541
  Nov  4 13:47:48.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3243188779
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/04/23 13:47:48.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/04/23 13:47:48.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/04/23 13:47:48.56
  STEP: getting /apis @ 11/04/23 13:47:48.562
  STEP: getting /apis/storage.k8s.io @ 11/04/23 13:47:48.565
  STEP: getting /apis/storage.k8s.io/v1 @ 11/04/23 13:47:48.566
  STEP: creating @ 11/04/23 13:47:48.566
  STEP: watching @ 11/04/23 13:47:48.581
  Nov  4 13:47:48.581: INFO: starting watch
  STEP: getting @ 11/04/23 13:47:48.587
  STEP: listing in namespace @ 11/04/23 13:47:48.589
  STEP: listing across namespaces @ 11/04/23 13:47:48.592
  STEP: patching @ 11/04/23 13:47:48.594
  STEP: updating @ 11/04/23 13:47:48.598
  Nov  4 13:47:48.603: INFO: waiting for watch events with expected annotations in namespace
  Nov  4 13:47:48.603: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/04/23 13:47:48.603
  STEP: deleting a collection @ 11/04/23 13:47:48.613
  Nov  4 13:47:48.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2117" for this suite. @ 11/04/23 13:47:48.629
• [0.094 seconds]
------------------------------
SSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Nov  4 13:47:48.636: INFO: Running AfterSuite actions on node 1
  Nov  4 13:47:48.636: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.032 seconds]
------------------------------

Ran 380 of 7387 Specs in 5926.025 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h38m46.297692239s
Test Suite Passed
